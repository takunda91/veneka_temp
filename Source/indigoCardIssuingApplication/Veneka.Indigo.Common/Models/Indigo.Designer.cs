//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("indigo_databaseModel", "FK_issuer_interface_issuer", "issuer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Veneka.Indigo.Common.Models.issuer), "issuer_interface", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Veneka.Indigo.Common.Models.issuer_interface), true)]
[assembly: EdmRelationshipAttribute("indigo_databaseModel", "FK_Issuer_product_font_Issuer_product_font", "Issuer_product_font", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Veneka.Indigo.Common.Models.Issuer_product_font), "Issuer_product_font1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Veneka.Indigo.Common.Models.Issuer_product_font), true)]
[assembly: EdmRelationshipAttribute("indigo_databaseModel", "FK_issuer_interface_interface_type", "interface_type", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Veneka.Indigo.Common.Models.interface_type), "issuer_interface", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Veneka.Indigo.Common.Models.issuer_interface), true)]
[assembly: EdmRelationshipAttribute("indigo_databaseModel", "FK_user_group_issuer", "issuer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Veneka.Indigo.Common.Models.issuer), "user_group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Veneka.Indigo.Common.Models.user_group), true)]
[assembly: EdmRelationshipAttribute("indigo_databaseModel", "FK_issuer_has_languages", "language", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Veneka.Indigo.Common.Models.language), "issuer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Veneka.Indigo.Common.Models.issuer), true)]
[assembly: EdmRelationshipAttribute("indigo_databaseModel", "FK_file_history_issuer", "issuer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Veneka.Indigo.Common.Models.issuer), "file_history", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Veneka.Indigo.Common.Models.file_history), true)]
[assembly: EdmRelationshipAttribute("indigo_databaseModel", "FK_file_history_file_history", "file_types", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Veneka.Indigo.Common.Models.file_types), "file_history", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Veneka.Indigo.Common.Models.file_history), true)]
[assembly: EdmRelationshipAttribute("indigo_databaseModel", "FK_file_history_file_statuses", "file_statuses", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Veneka.Indigo.Common.Models.file_statuses), "file_history", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Veneka.Indigo.Common.Models.file_history), true)]
[assembly: EdmRelationshipAttribute("indigo_databaseModel", "FK_branch_issuer", "issuer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Veneka.Indigo.Common.Models.issuer), "branch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Veneka.Indigo.Common.Models.branch), true)]

#endregion

namespace Veneka.Indigo.Common.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class indigo_databaseEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new indigo_databaseEntities object using the connection string found in the 'indigo_databaseEntities' section of the application configuration file.
        /// </summary>
        public indigo_databaseEntities() : base("name=indigo_databaseEntities", "indigo_databaseEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new indigo_databaseEntities object.
        /// </summary>
        public indigo_databaseEntities(string connectionString) : base(connectionString, "indigo_databaseEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new indigo_databaseEntities object.
        /// </summary>
        public indigo_databaseEntities(EntityConnection connection) : base(connection, "indigo_databaseEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<issuer> issuers
        {
            get
            {
                if ((_issuers == null))
                {
                    _issuers = base.CreateObjectSet<issuer>("issuers");
                }
                return _issuers;
            }
        }
        private ObjectSet<issuer> _issuers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<issuer_interface> issuer_interface
        {
            get
            {
                if ((_issuer_interface == null))
                {
                    _issuer_interface = base.CreateObjectSet<issuer_interface>("issuer_interface");
                }
                return _issuer_interface;
            }
        }
        private ObjectSet<issuer_interface> _issuer_interface;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Issuer_product_font> Issuer_product_font
        {
            get
            {
                if ((_Issuer_product_font == null))
                {
                    _Issuer_product_font = base.CreateObjectSet<Issuer_product_font>("Issuer_product_font");
                }
                return _Issuer_product_font;
            }
        }
        private ObjectSet<Issuer_product_font> _Issuer_product_font;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<country> countries
        {
            get
            {
                if ((_countries == null))
                {
                    _countries = base.CreateObjectSet<country>("countries");
                }
                return _countries;
            }
        }
        private ObjectSet<country> _countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<branch_card_codes> branch_card_codes
        {
            get
            {
                if ((_branch_card_codes == null))
                {
                    _branch_card_codes = base.CreateObjectSet<branch_card_codes>("branch_card_codes");
                }
                return _branch_card_codes;
            }
        }
        private ObjectSet<branch_card_codes> _branch_card_codes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<card_priority> card_priority
        {
            get
            {
                if ((_card_priority == null))
                {
                    _card_priority = base.CreateObjectSet<card_priority>("card_priority");
                }
                return _card_priority;
            }
        }
        private ObjectSet<card_priority> _card_priority;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<interface_type> interface_type
        {
            get
            {
                if ((_interface_type == null))
                {
                    _interface_type = base.CreateObjectSet<interface_type>("interface_type");
                }
                return _interface_type;
            }
        }
        private ObjectSet<interface_type> _interface_type;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<user_group> user_group
        {
            get
            {
                if ((_user_group == null))
                {
                    _user_group = base.CreateObjectSet<user_group>("user_group");
                }
                return _user_group;
            }
        }
        private ObjectSet<user_group> _user_group;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<language> languages
        {
            get
            {
                if ((_languages == null))
                {
                    _languages = base.CreateObjectSet<language>("languages");
                }
                return _languages;
            }
        }
        private ObjectSet<language> _languages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<file_history> file_history
        {
            get
            {
                if ((_file_history == null))
                {
                    _file_history = base.CreateObjectSet<file_history>("file_history");
                }
                return _file_history;
            }
        }
        private ObjectSet<file_history> _file_history;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<file_statuses> file_statuses
        {
            get
            {
                if ((_file_statuses == null))
                {
                    _file_statuses = base.CreateObjectSet<file_statuses>("file_statuses");
                }
                return _file_statuses;
            }
        }
        private ObjectSet<file_statuses> _file_statuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<file_types> file_types
        {
            get
            {
                if ((_file_types == null))
                {
                    _file_types = base.CreateObjectSet<file_types>("file_types");
                }
                return _file_types;
            }
        }
        private ObjectSet<file_types> _file_types;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<branch> branches
        {
            get
            {
                if ((_branches == null))
                {
                    _branches = base.CreateObjectSet<branch>("branches");
                }
                return _branches;
            }
        }
        private ObjectSet<branch> _branches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<user> users
        {
            get
            {
                if ((_users == null))
                {
                    _users = base.CreateObjectSet<user>("users");
                }
                return _users;
            }
        }
        private ObjectSet<user> _users;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the issuers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToissuers(issuer issuer)
        {
            base.AddObject("issuers", issuer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the issuer_interface EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToissuer_interface(issuer_interface issuer_interface)
        {
            base.AddObject("issuer_interface", issuer_interface);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Issuer_product_font EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssuer_product_font(Issuer_product_font issuer_product_font)
        {
            base.AddObject("Issuer_product_font", issuer_product_font);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocountries(country country)
        {
            base.AddObject("countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the branch_card_codes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTobranch_card_codes(branch_card_codes branch_card_codes)
        {
            base.AddObject("branch_card_codes", branch_card_codes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the card_priority EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocard_priority(card_priority card_priority)
        {
            base.AddObject("card_priority", card_priority);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the interface_type EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTointerface_type(interface_type interface_type)
        {
            base.AddObject("interface_type", interface_type);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the user_group EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTouser_group(user_group user_group)
        {
            base.AddObject("user_group", user_group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the languages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolanguages(language language)
        {
            base.AddObject("languages", language);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the file_history EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTofile_history(file_history file_history)
        {
            base.AddObject("file_history", file_history);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the file_statuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTofile_statuses(file_statuses file_statuses)
        {
            base.AddObject("file_statuses", file_statuses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the file_types EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTofile_types(file_types file_types)
        {
            base.AddObject("file_types", file_types);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the branches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTobranches(branch branch)
        {
            base.AddObject("branches", branch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTousers(user user)
        {
            base.AddObject("users", user);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="first_name">No Metadata Documentation available.</param>
        /// <param name="last_name">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_code">No Metadata Documentation available.</param>
        /// <param name="user_group">No Metadata Documentation available.</param>
        /// <param name="user_status">No Metadata Documentation available.</param>
        public int search_user(global::System.String first_name, global::System.String last_name, Nullable<global::System.Int32> issuer_id, global::System.String branch_code, global::System.String user_group, global::System.String user_status)
        {
            ObjectParameter first_nameParameter;
            if (first_name != null)
            {
                first_nameParameter = new ObjectParameter("first_name", first_name);
            }
            else
            {
                first_nameParameter = new ObjectParameter("first_name", typeof(global::System.String));
            }
    
            ObjectParameter last_nameParameter;
            if (last_name != null)
            {
                last_nameParameter = new ObjectParameter("last_name", last_name);
            }
            else
            {
                last_nameParameter = new ObjectParameter("last_name", typeof(global::System.String));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_codeParameter;
            if (branch_code != null)
            {
                branch_codeParameter = new ObjectParameter("branch_code", branch_code);
            }
            else
            {
                branch_codeParameter = new ObjectParameter("branch_code", typeof(global::System.String));
            }
    
            ObjectParameter user_groupParameter;
            if (user_group != null)
            {
                user_groupParameter = new ObjectParameter("user_group", user_group);
            }
            else
            {
                user_groupParameter = new ObjectParameter("user_group", typeof(global::System.String));
            }
    
            ObjectParameter user_statusParameter;
            if (user_status != null)
            {
                user_statusParameter = new ObjectParameter("user_status", user_status);
            }
            else
            {
                user_statusParameter = new ObjectParameter("user_status", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("search_user", first_nameParameter, last_nameParameter, issuer_idParameter, branch_codeParameter, user_groupParameter, user_statusParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_group">No Metadata Documentation available.</param>
        /// <param name="issuerID">No Metadata Documentation available.</param>
        public int usp_get_user_role_forUseGroup(global::System.String user_group, Nullable<global::System.Int32> issuerID)
        {
            ObjectParameter user_groupParameter;
            if (user_group != null)
            {
                user_groupParameter = new ObjectParameter("user_group", user_group);
            }
            else
            {
                user_groupParameter = new ObjectParameter("user_group", typeof(global::System.String));
            }
    
            ObjectParameter issuerIDParameter;
            if (issuerID.HasValue)
            {
                issuerIDParameter = new ObjectParameter("issuerID", issuerID);
            }
            else
            {
                issuerIDParameter = new ObjectParameter("issuerID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("usp_get_user_role_forUseGroup", user_groupParameter, issuerIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="username">No Metadata Documentation available.</param>
        public int usp_get_user_role_forUser(global::System.String username)
        {
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("username", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_get_user_role_forUser", usernameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branchCode">No Metadata Documentation available.</param>
        /// <param name="issuerID">No Metadata Documentation available.</param>
        public int usp_get_users_by_institution(global::System.String branchCode, Nullable<global::System.Int32> issuerID)
        {
            ObjectParameter branchCodeParameter;
            if (branchCode != null)
            {
                branchCodeParameter = new ObjectParameter("branchCode", branchCode);
            }
            else
            {
                branchCodeParameter = new ObjectParameter("branchCode", typeof(global::System.String));
            }
    
            ObjectParameter issuerIDParameter;
            if (issuerID.HasValue)
            {
                issuerIDParameter = new ObjectParameter("issuerID", issuerID);
            }
            else
            {
                issuerIDParameter = new ObjectParameter("issuerID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("usp_get_users_by_institution", branchCodeParameter, issuerIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuerID">No Metadata Documentation available.</param>
        public int usp_GetALLUSerGroups(Nullable<global::System.Int32> issuerID)
        {
            ObjectParameter issuerIDParameter;
            if (issuerID.HasValue)
            {
                issuerIDParameter = new ObjectParameter("issuerID", issuerID);
            }
            else
            {
                issuerIDParameter = new ObjectParameter("issuerID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("usp_GetALLUSerGroups", issuerIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_name">No Metadata Documentation available.</param>
        /// <param name="first_name">No Metadata Documentation available.</param>
        /// <param name="last_name">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="user_role">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        public ObjectResult<user_list_result> usp_search_user(global::System.String user_name, global::System.String first_name, global::System.String last_name, Nullable<global::System.Int32> issuer_id, global::System.String branch_id, global::System.String user_role, Nullable<global::System.Int32> audit_user_id, global::System.String audit_workstation, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage)
        {
            ObjectParameter user_nameParameter;
            if (user_name != null)
            {
                user_nameParameter = new ObjectParameter("user_name", user_name);
            }
            else
            {
                user_nameParameter = new ObjectParameter("user_name", typeof(global::System.String));
            }
    
            ObjectParameter first_nameParameter;
            if (first_name != null)
            {
                first_nameParameter = new ObjectParameter("first_name", first_name);
            }
            else
            {
                first_nameParameter = new ObjectParameter("first_name", typeof(global::System.String));
            }
    
            ObjectParameter last_nameParameter;
            if (last_name != null)
            {
                last_nameParameter = new ObjectParameter("last_name", last_name);
            }
            else
            {
                last_nameParameter = new ObjectParameter("last_name", typeof(global::System.String));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id != null)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.String));
            }
    
            ObjectParameter user_roleParameter;
            if (user_role != null)
            {
                user_roleParameter = new ObjectParameter("user_role", user_role);
            }
            else
            {
                user_roleParameter = new ObjectParameter("user_role", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<user_list_result>("usp_search_user", user_nameParameter, first_nameParameter, last_nameParameter, issuer_idParameter, branch_idParameter, user_roleParameter, audit_user_idParameter, audit_workstationParameter, pageIndexParameter, rowsPerPageParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="filename">No Metadata Documentation available.</param>
        public ObjectResult<file_history> usp_find_file_info_by_filename(global::System.String filename)
        {
            ObjectParameter filenameParameter;
            if (filename != null)
            {
                filenameParameter = new ObjectParameter("filename", filename);
            }
            else
            {
                filenameParameter = new ObjectParameter("filename", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<file_history>("usp_find_file_info_by_filename", filenameParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="filename">No Metadata Documentation available.</param>
        public ObjectResult<file_history> usp_find_file_info_by_filename(global::System.String filename, MergeOption mergeOption)
        {
            ObjectParameter filenameParameter;
            if (filename != null)
            {
                filenameParameter = new ObjectParameter("filename", filename);
            }
            else
            {
                filenameParameter = new ObjectParameter("filename", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<file_history>("usp_find_file_info_by_filename", mergeOption, filenameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branchName">No Metadata Documentation available.</param>
        /// <param name="branchCode">No Metadata Documentation available.</param>
        /// <param name="issuerID">No Metadata Documentation available.</param>
        /// <param name="is_card_centre">No Metadata Documentation available.</param>
        public int usp_get_branch(global::System.String branchName, global::System.String branchCode, Nullable<global::System.Int32> issuerID, Nullable<global::System.Boolean> is_card_centre)
        {
            ObjectParameter branchNameParameter;
            if (branchName != null)
            {
                branchNameParameter = new ObjectParameter("branchName", branchName);
            }
            else
            {
                branchNameParameter = new ObjectParameter("branchName", typeof(global::System.String));
            }
    
            ObjectParameter branchCodeParameter;
            if (branchCode != null)
            {
                branchCodeParameter = new ObjectParameter("branchCode", branchCode);
            }
            else
            {
                branchCodeParameter = new ObjectParameter("branchCode", typeof(global::System.String));
            }
    
            ObjectParameter issuerIDParameter;
            if (issuerID.HasValue)
            {
                issuerIDParameter = new ObjectParameter("issuerID", issuerID);
            }
            else
            {
                issuerIDParameter = new ObjectParameter("issuerID", typeof(global::System.Int32));
            }
    
            ObjectParameter is_card_centreParameter;
            if (is_card_centre.HasValue)
            {
                is_card_centreParameter = new ObjectParameter("is_card_centre", is_card_centre);
            }
            else
            {
                is_card_centreParameter = new ObjectParameter("is_card_centre", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction("usp_get_branch", branchNameParameter, branchCodeParameter, issuerIDParameter, is_card_centreParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branch_name">No Metadata Documentation available.</param>
        /// <param name="branch_code">No Metadata Documentation available.</param>
        /// <param name="branch_status_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        public ObjectResult<branch> usp_search_branch(global::System.String branch_name, global::System.String branch_code, Nullable<global::System.Int32> branch_status_id, Nullable<global::System.Int32> issuer_id)
        {
            ObjectParameter branch_nameParameter;
            if (branch_name != null)
            {
                branch_nameParameter = new ObjectParameter("branch_name", branch_name);
            }
            else
            {
                branch_nameParameter = new ObjectParameter("branch_name", typeof(global::System.String));
            }
    
            ObjectParameter branch_codeParameter;
            if (branch_code != null)
            {
                branch_codeParameter = new ObjectParameter("branch_code", branch_code);
            }
            else
            {
                branch_codeParameter = new ObjectParameter("branch_code", typeof(global::System.String));
            }
    
            ObjectParameter branch_status_idParameter;
            if (branch_status_id.HasValue)
            {
                branch_status_idParameter = new ObjectParameter("branch_status_id", branch_status_id);
            }
            else
            {
                branch_status_idParameter = new ObjectParameter("branch_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<branch>("usp_search_branch", branch_nameParameter, branch_codeParameter, branch_status_idParameter, issuer_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="branch_name">No Metadata Documentation available.</param>
        /// <param name="branch_code">No Metadata Documentation available.</param>
        /// <param name="branch_status_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        public ObjectResult<branch> usp_search_branch(global::System.String branch_name, global::System.String branch_code, Nullable<global::System.Int32> branch_status_id, Nullable<global::System.Int32> issuer_id, MergeOption mergeOption)
        {
            ObjectParameter branch_nameParameter;
            if (branch_name != null)
            {
                branch_nameParameter = new ObjectParameter("branch_name", branch_name);
            }
            else
            {
                branch_nameParameter = new ObjectParameter("branch_name", typeof(global::System.String));
            }
    
            ObjectParameter branch_codeParameter;
            if (branch_code != null)
            {
                branch_codeParameter = new ObjectParameter("branch_code", branch_code);
            }
            else
            {
                branch_codeParameter = new ObjectParameter("branch_code", typeof(global::System.String));
            }
    
            ObjectParameter branch_status_idParameter;
            if (branch_status_id.HasValue)
            {
                branch_status_idParameter = new ObjectParameter("branch_status_id", branch_status_id);
            }
            else
            {
                branch_status_idParameter = new ObjectParameter("branch_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<branch>("usp_search_branch", mergeOption, branch_nameParameter, branch_codeParameter, branch_status_idParameter, issuer_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="username">No Metadata Documentation available.</param>
        /// <param name="user_status">No Metadata Documentation available.</param>
        public int usp_get_user(global::System.String username, global::System.String user_status)
        {
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("username", typeof(global::System.String));
            }
    
            ObjectParameter user_statusParameter;
            if (user_status != null)
            {
                user_statusParameter = new ObjectParameter("user_status", user_status);
            }
            else
            {
                user_statusParameter = new ObjectParameter("user_status", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_get_user", usernameParameter, user_statusParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="user_role_id">No Metadata Documentation available.</param>
        /// <param name="username">No Metadata Documentation available.</param>
        public int usp_get_all_branches_by_user(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> user_role_id, global::System.String username)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_role_idParameter;
            if (user_role_id.HasValue)
            {
                user_role_idParameter = new ObjectParameter("user_role_id", user_role_id);
            }
            else
            {
                user_role_idParameter = new ObjectParameter("user_role_id", typeof(global::System.Int32));
            }
    
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("username", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_get_all_branches_by_user", issuer_idParameter, user_role_idParameter, usernameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="username">No Metadata Documentation available.</param>
        public ObjectResult<decrypted_user> usp_get_user_by_username(global::System.String username)
        {
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("username", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<decrypted_user>("usp_get_user_by_username", usernameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        public ObjectResult<branch> usp_get_branch_by_id(Nullable<global::System.Int32> branch_id)
        {
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<branch>("usp_get_branch_by_id", branch_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        public ObjectResult<branch> usp_get_branch_by_id(Nullable<global::System.Int32> branch_id, MergeOption mergeOption)
        {
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<branch>("usp_get_branch_by_id", mergeOption, branch_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="username">No Metadata Documentation available.</param>
        public ObjectResult<login_user> usp_get_user_for_login(global::System.String username)
        {
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("username", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<login_user>("usp_get_user_for_login", usernameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_status_id">No Metadata Documentation available.</param>
        /// <param name="username">No Metadata Documentation available.</param>
        /// <param name="first_name">No Metadata Documentation available.</param>
        /// <param name="last_name">No Metadata Documentation available.</param>
        /// <param name="password">No Metadata Documentation available.</param>
        /// <param name="online">No Metadata Documentation available.</param>
        /// <param name="employee_id">No Metadata Documentation available.</param>
        /// <param name="last_login_date">No Metadata Documentation available.</param>
        /// <param name="last_login_attempt">No Metadata Documentation available.</param>
        /// <param name="number_of_incorrect_logins">No Metadata Documentation available.</param>
        /// <param name="last_password_changed_date">No Metadata Documentation available.</param>
        /// <param name="workstation">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> usp_insert_user(Nullable<global::System.Int32> user_status_id, global::System.String username, global::System.String first_name, global::System.String last_name, global::System.String password, Nullable<global::System.Boolean> online, global::System.String employee_id, Nullable<global::System.DateTime> last_login_date, Nullable<global::System.DateTime> last_login_attempt, Nullable<global::System.Int32> number_of_incorrect_logins, Nullable<global::System.DateTime> last_password_changed_date, global::System.String workstation, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter user_status_idParameter;
            if (user_status_id.HasValue)
            {
                user_status_idParameter = new ObjectParameter("user_status_id", user_status_id);
            }
            else
            {
                user_status_idParameter = new ObjectParameter("user_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("username", typeof(global::System.String));
            }
    
            ObjectParameter first_nameParameter;
            if (first_name != null)
            {
                first_nameParameter = new ObjectParameter("first_name", first_name);
            }
            else
            {
                first_nameParameter = new ObjectParameter("first_name", typeof(global::System.String));
            }
    
            ObjectParameter last_nameParameter;
            if (last_name != null)
            {
                last_nameParameter = new ObjectParameter("last_name", last_name);
            }
            else
            {
                last_nameParameter = new ObjectParameter("last_name", typeof(global::System.String));
            }
    
            ObjectParameter passwordParameter;
            if (password != null)
            {
                passwordParameter = new ObjectParameter("password", password);
            }
            else
            {
                passwordParameter = new ObjectParameter("password", typeof(global::System.String));
            }
    
            ObjectParameter onlineParameter;
            if (online.HasValue)
            {
                onlineParameter = new ObjectParameter("online", online);
            }
            else
            {
                onlineParameter = new ObjectParameter("online", typeof(global::System.Boolean));
            }
    
            ObjectParameter employee_idParameter;
            if (employee_id != null)
            {
                employee_idParameter = new ObjectParameter("employee_id", employee_id);
            }
            else
            {
                employee_idParameter = new ObjectParameter("employee_id", typeof(global::System.String));
            }
    
            ObjectParameter last_login_dateParameter;
            if (last_login_date.HasValue)
            {
                last_login_dateParameter = new ObjectParameter("last_login_date", last_login_date);
            }
            else
            {
                last_login_dateParameter = new ObjectParameter("last_login_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter last_login_attemptParameter;
            if (last_login_attempt.HasValue)
            {
                last_login_attemptParameter = new ObjectParameter("last_login_attempt", last_login_attempt);
            }
            else
            {
                last_login_attemptParameter = new ObjectParameter("last_login_attempt", typeof(global::System.DateTime));
            }
    
            ObjectParameter number_of_incorrect_loginsParameter;
            if (number_of_incorrect_logins.HasValue)
            {
                number_of_incorrect_loginsParameter = new ObjectParameter("number_of_incorrect_logins", number_of_incorrect_logins);
            }
            else
            {
                number_of_incorrect_loginsParameter = new ObjectParameter("number_of_incorrect_logins", typeof(global::System.Int32));
            }
    
            ObjectParameter last_password_changed_dateParameter;
            if (last_password_changed_date.HasValue)
            {
                last_password_changed_dateParameter = new ObjectParameter("last_password_changed_date", last_password_changed_date);
            }
            else
            {
                last_password_changed_dateParameter = new ObjectParameter("last_password_changed_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter workstationParameter;
            if (workstation != null)
            {
                workstationParameter = new ObjectParameter("workstation", workstation);
            }
            else
            {
                workstationParameter = new ObjectParameter("workstation", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("usp_insert_user", user_status_idParameter, usernameParameter, first_nameParameter, last_nameParameter, passwordParameter, onlineParameter, employee_idParameter, last_login_dateParameter, last_login_attemptParameter, number_of_incorrect_loginsParameter, last_password_changed_dateParameter, workstationParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="password">No Metadata Documentation available.</param>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_reset_user_password(global::System.String password, Nullable<global::System.Int64> user_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter passwordParameter;
            if (password != null)
            {
                passwordParameter = new ObjectParameter("password", password);
            }
            else
            {
                passwordParameter = new ObjectParameter("password", typeof(global::System.String));
            }
    
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_reset_user_password", passwordParameter, user_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="user_status_id">No Metadata Documentation available.</param>
        /// <param name="username">No Metadata Documentation available.</param>
        /// <param name="first_name">No Metadata Documentation available.</param>
        /// <param name="last_name">No Metadata Documentation available.</param>
        /// <param name="online">No Metadata Documentation available.</param>
        /// <param name="employee_id">No Metadata Documentation available.</param>
        /// <param name="last_login_date">No Metadata Documentation available.</param>
        /// <param name="last_login_attempt">No Metadata Documentation available.</param>
        /// <param name="number_of_incorrect_logins">No Metadata Documentation available.</param>
        /// <param name="last_password_changed_date">No Metadata Documentation available.</param>
        /// <param name="workstation">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_update_user(Nullable<global::System.Int64> user_id, Nullable<global::System.Int32> user_status_id, global::System.String username, global::System.String first_name, global::System.String last_name, Nullable<global::System.Boolean> online, global::System.String employee_id, Nullable<global::System.DateTime> last_login_date, Nullable<global::System.DateTime> last_login_attempt, Nullable<global::System.Int32> number_of_incorrect_logins, Nullable<global::System.DateTime> last_password_changed_date, global::System.String workstation, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter user_status_idParameter;
            if (user_status_id.HasValue)
            {
                user_status_idParameter = new ObjectParameter("user_status_id", user_status_id);
            }
            else
            {
                user_status_idParameter = new ObjectParameter("user_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("username", typeof(global::System.String));
            }
    
            ObjectParameter first_nameParameter;
            if (first_name != null)
            {
                first_nameParameter = new ObjectParameter("first_name", first_name);
            }
            else
            {
                first_nameParameter = new ObjectParameter("first_name", typeof(global::System.String));
            }
    
            ObjectParameter last_nameParameter;
            if (last_name != null)
            {
                last_nameParameter = new ObjectParameter("last_name", last_name);
            }
            else
            {
                last_nameParameter = new ObjectParameter("last_name", typeof(global::System.String));
            }
    
            ObjectParameter onlineParameter;
            if (online.HasValue)
            {
                onlineParameter = new ObjectParameter("online", online);
            }
            else
            {
                onlineParameter = new ObjectParameter("online", typeof(global::System.Boolean));
            }
    
            ObjectParameter employee_idParameter;
            if (employee_id != null)
            {
                employee_idParameter = new ObjectParameter("employee_id", employee_id);
            }
            else
            {
                employee_idParameter = new ObjectParameter("employee_id", typeof(global::System.String));
            }
    
            ObjectParameter last_login_dateParameter;
            if (last_login_date.HasValue)
            {
                last_login_dateParameter = new ObjectParameter("last_login_date", last_login_date);
            }
            else
            {
                last_login_dateParameter = new ObjectParameter("last_login_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter last_login_attemptParameter;
            if (last_login_attempt.HasValue)
            {
                last_login_attemptParameter = new ObjectParameter("last_login_attempt", last_login_attempt);
            }
            else
            {
                last_login_attemptParameter = new ObjectParameter("last_login_attempt", typeof(global::System.DateTime));
            }
    
            ObjectParameter number_of_incorrect_loginsParameter;
            if (number_of_incorrect_logins.HasValue)
            {
                number_of_incorrect_loginsParameter = new ObjectParameter("number_of_incorrect_logins", number_of_incorrect_logins);
            }
            else
            {
                number_of_incorrect_loginsParameter = new ObjectParameter("number_of_incorrect_logins", typeof(global::System.Int32));
            }
    
            ObjectParameter last_password_changed_dateParameter;
            if (last_password_changed_date.HasValue)
            {
                last_password_changed_dateParameter = new ObjectParameter("last_password_changed_date", last_password_changed_date);
            }
            else
            {
                last_password_changed_dateParameter = new ObjectParameter("last_password_changed_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter workstationParameter;
            if (workstation != null)
            {
                workstationParameter = new ObjectParameter("workstation", workstation);
            }
            else
            {
                workstationParameter = new ObjectParameter("workstation", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_user", user_idParameter, user_status_idParameter, usernameParameter, first_nameParameter, last_nameParameter, onlineParameter, employee_idParameter, last_login_dateParameter, last_login_attemptParameter, number_of_incorrect_loginsParameter, last_password_changed_dateParameter, workstationParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_id">No Metadata Documentation available.</param>
        public ObjectResult<user_passwords> usp_get_passwords_by_user_id(Nullable<global::System.Int64> user_id)
        {
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<user_passwords>("usp_get_passwords_by_user_id", user_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="interface_type_value">No Metadata Documentation available.</param>
        /// <param name="username">No Metadata Documentation available.</param>
        /// <param name="password">No Metadata Documentation available.</param>
        /// <param name="address">No Metadata Documentation available.</param>
        /// <param name="protocol">No Metadata Documentation available.</param>
        /// <param name="port">No Metadata Documentation available.</param>
        /// <param name="path">No Metadata Documentation available.</param>
        /// <param name="auth_type">No Metadata Documentation available.</param>
        /// <param name="return_value">No Metadata Documentation available.</param>
        public int usp_create_interface_detail(Nullable<global::System.Int32> issuer_id, global::System.String interface_type_value, global::System.String username, global::System.String password, global::System.String address, global::System.String protocol, Nullable<global::System.Int32> port, global::System.String path, global::System.String auth_type, ObjectParameter return_value)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter interface_type_valueParameter;
            if (interface_type_value != null)
            {
                interface_type_valueParameter = new ObjectParameter("interface_type_value", interface_type_value);
            }
            else
            {
                interface_type_valueParameter = new ObjectParameter("interface_type_value", typeof(global::System.String));
            }
    
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("username", typeof(global::System.String));
            }
    
            ObjectParameter passwordParameter;
            if (password != null)
            {
                passwordParameter = new ObjectParameter("password", password);
            }
            else
            {
                passwordParameter = new ObjectParameter("password", typeof(global::System.String));
            }
    
            ObjectParameter addressParameter;
            if (address != null)
            {
                addressParameter = new ObjectParameter("address", address);
            }
            else
            {
                addressParameter = new ObjectParameter("address", typeof(global::System.String));
            }
    
            ObjectParameter protocolParameter;
            if (protocol != null)
            {
                protocolParameter = new ObjectParameter("protocol", protocol);
            }
            else
            {
                protocolParameter = new ObjectParameter("protocol", typeof(global::System.String));
            }
    
            ObjectParameter portParameter;
            if (port.HasValue)
            {
                portParameter = new ObjectParameter("port", port);
            }
            else
            {
                portParameter = new ObjectParameter("port", typeof(global::System.Int32));
            }
    
            ObjectParameter pathParameter;
            if (path != null)
            {
                pathParameter = new ObjectParameter("path", path);
            }
            else
            {
                pathParameter = new ObjectParameter("path", typeof(global::System.String));
            }
    
            ObjectParameter auth_typeParameter;
            if (auth_type != null)
            {
                auth_typeParameter = new ObjectParameter("auth_type", auth_type);
            }
            else
            {
                auth_typeParameter = new ObjectParameter("auth_type", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_create_interface_detail", issuer_idParameter, interface_type_valueParameter, usernameParameter, passwordParameter, addressParameter, protocolParameter, portParameter, pathParameter, auth_typeParameter, return_value);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="interface_id">No Metadata Documentation available.</param>
        /// <param name="interface_type_value">No Metadata Documentation available.</param>
        /// <param name="username">No Metadata Documentation available.</param>
        /// <param name="password">No Metadata Documentation available.</param>
        /// <param name="address">No Metadata Documentation available.</param>
        /// <param name="protocol">No Metadata Documentation available.</param>
        /// <param name="port">No Metadata Documentation available.</param>
        /// <param name="path">No Metadata Documentation available.</param>
        /// <param name="auth_type">No Metadata Documentation available.</param>
        /// <param name="return_value">No Metadata Documentation available.</param>
        public int usp_edit_interface_details(Nullable<global::System.Int32> interface_id, global::System.String interface_type_value, global::System.String username, global::System.String password, global::System.String address, global::System.String protocol, Nullable<global::System.Int32> port, global::System.String path, global::System.String auth_type, ObjectParameter return_value)
        {
            ObjectParameter interface_idParameter;
            if (interface_id.HasValue)
            {
                interface_idParameter = new ObjectParameter("interface_id", interface_id);
            }
            else
            {
                interface_idParameter = new ObjectParameter("interface_id", typeof(global::System.Int32));
            }
    
            ObjectParameter interface_type_valueParameter;
            if (interface_type_value != null)
            {
                interface_type_valueParameter = new ObjectParameter("interface_type_value", interface_type_value);
            }
            else
            {
                interface_type_valueParameter = new ObjectParameter("interface_type_value", typeof(global::System.String));
            }
    
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("username", typeof(global::System.String));
            }
    
            ObjectParameter passwordParameter;
            if (password != null)
            {
                passwordParameter = new ObjectParameter("password", password);
            }
            else
            {
                passwordParameter = new ObjectParameter("password", typeof(global::System.String));
            }
    
            ObjectParameter addressParameter;
            if (address != null)
            {
                addressParameter = new ObjectParameter("address", address);
            }
            else
            {
                addressParameter = new ObjectParameter("address", typeof(global::System.String));
            }
    
            ObjectParameter protocolParameter;
            if (protocol != null)
            {
                protocolParameter = new ObjectParameter("protocol", protocol);
            }
            else
            {
                protocolParameter = new ObjectParameter("protocol", typeof(global::System.String));
            }
    
            ObjectParameter portParameter;
            if (port.HasValue)
            {
                portParameter = new ObjectParameter("port", port);
            }
            else
            {
                portParameter = new ObjectParameter("port", typeof(global::System.Int32));
            }
    
            ObjectParameter pathParameter;
            if (path != null)
            {
                pathParameter = new ObjectParameter("path", path);
            }
            else
            {
                pathParameter = new ObjectParameter("path", typeof(global::System.String));
            }
    
            ObjectParameter auth_typeParameter;
            if (auth_type != null)
            {
                auth_typeParameter = new ObjectParameter("auth_type", auth_type);
            }
            else
            {
                auth_typeParameter = new ObjectParameter("auth_type", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_edit_interface_details", interface_idParameter, interface_type_valueParameter, usernameParameter, passwordParameter, addressParameter, protocolParameter, portParameter, pathParameter, auth_typeParameter, return_value);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_group_id">No Metadata Documentation available.</param>
        public ObjectResult<BranchIdResult> usp_get_branches_for_user_group(Nullable<global::System.Int32> user_group_id)
        {
            ObjectParameter user_group_idParameter;
            if (user_group_id.HasValue)
            {
                user_group_idParameter = new ObjectParameter("user_group_id", user_group_id);
            }
            else
            {
                user_group_idParameter = new ObjectParameter("user_group_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<BranchIdResult>("usp_get_branches_for_user_group", user_group_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="languageId">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<user_list_result> usp_get_unassigned_users(Nullable<global::System.Int32> languageId, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter languageIdParameter;
            if (languageId.HasValue)
            {
                languageIdParameter = new ObjectParameter("languageId", languageId);
            }
            else
            {
                languageIdParameter = new ObjectParameter("languageId", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<user_list_result>("usp_get_unassigned_users", languageIdParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        public int usp_get_issuer_ldap_setting(Nullable<global::System.Int32> issuer_id)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("usp_get_issuer_ldap_setting", issuer_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_status_id">No Metadata Documentation available.</param>
        public ObjectResult<issuer> usp_find_issuer_by_status(Nullable<global::System.Int32> issuer_status_id)
        {
            ObjectParameter issuer_status_idParameter;
            if (issuer_status_id.HasValue)
            {
                issuer_status_idParameter = new ObjectParameter("issuer_status_id", issuer_status_id);
            }
            else
            {
                issuer_status_idParameter = new ObjectParameter("issuer_status_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<issuer>("usp_find_issuer_by_status", issuer_status_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="issuer_status_id">No Metadata Documentation available.</param>
        public ObjectResult<issuer> usp_find_issuer_by_status(Nullable<global::System.Int32> issuer_status_id, MergeOption mergeOption)
        {
            ObjectParameter issuer_status_idParameter;
            if (issuer_status_id.HasValue)
            {
                issuer_status_idParameter = new ObjectParameter("issuer_status_id", issuer_status_id);
            }
            else
            {
                issuer_status_idParameter = new ObjectParameter("issuer_status_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<issuer>("usp_find_issuer_by_status", mergeOption, issuer_status_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="branch_status_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_code">No Metadata Documentation available.</param>
        /// <param name="branch_name">No Metadata Documentation available.</param>
        /// <param name="location">No Metadata Documentation available.</param>
        /// <param name="contact_person">No Metadata Documentation available.</param>
        /// <param name="contact_email">No Metadata Documentation available.</param>
        /// <param name="card_centre">No Metadata Documentation available.</param>
        /// <param name="emp_branch_code">No Metadata Documentation available.</param>
        /// <param name="satellite_branch_id">No Metadata Documentation available.</param>
        /// <param name="branch_type_id">No Metadata Documentation available.</param>
        /// <param name="main_branch_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_update_branch(Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> branch_status_id, Nullable<global::System.Int32> issuer_id, global::System.String branch_code, global::System.String branch_name, global::System.String location, global::System.String contact_person, global::System.String contact_email, global::System.String card_centre, global::System.String emp_branch_code, global::System.String satellite_branch_id, Nullable<global::System.Int32> branch_type_id, Nullable<global::System.Int32> main_branch_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_status_idParameter;
            if (branch_status_id.HasValue)
            {
                branch_status_idParameter = new ObjectParameter("branch_status_id", branch_status_id);
            }
            else
            {
                branch_status_idParameter = new ObjectParameter("branch_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_codeParameter;
            if (branch_code != null)
            {
                branch_codeParameter = new ObjectParameter("branch_code", branch_code);
            }
            else
            {
                branch_codeParameter = new ObjectParameter("branch_code", typeof(global::System.String));
            }
    
            ObjectParameter branch_nameParameter;
            if (branch_name != null)
            {
                branch_nameParameter = new ObjectParameter("branch_name", branch_name);
            }
            else
            {
                branch_nameParameter = new ObjectParameter("branch_name", typeof(global::System.String));
            }
    
            ObjectParameter locationParameter;
            if (location != null)
            {
                locationParameter = new ObjectParameter("location", location);
            }
            else
            {
                locationParameter = new ObjectParameter("location", typeof(global::System.String));
            }
    
            ObjectParameter contact_personParameter;
            if (contact_person != null)
            {
                contact_personParameter = new ObjectParameter("contact_person", contact_person);
            }
            else
            {
                contact_personParameter = new ObjectParameter("contact_person", typeof(global::System.String));
            }
    
            ObjectParameter contact_emailParameter;
            if (contact_email != null)
            {
                contact_emailParameter = new ObjectParameter("contact_email", contact_email);
            }
            else
            {
                contact_emailParameter = new ObjectParameter("contact_email", typeof(global::System.String));
            }
    
            ObjectParameter card_centreParameter;
            if (card_centre != null)
            {
                card_centreParameter = new ObjectParameter("card_centre", card_centre);
            }
            else
            {
                card_centreParameter = new ObjectParameter("card_centre", typeof(global::System.String));
            }
    
            ObjectParameter emp_branch_codeParameter;
            if (emp_branch_code != null)
            {
                emp_branch_codeParameter = new ObjectParameter("emp_branch_code", emp_branch_code);
            }
            else
            {
                emp_branch_codeParameter = new ObjectParameter("emp_branch_code", typeof(global::System.String));
            }
    
            ObjectParameter satellite_branch_idParameter;
            if (satellite_branch_id != null)
            {
                satellite_branch_idParameter = new ObjectParameter("satellite_branch_id", satellite_branch_id);
            }
            else
            {
                satellite_branch_idParameter = new ObjectParameter("satellite_branch_id", typeof(global::System.String));
            }
    
            ObjectParameter branch_type_idParameter;
            if (branch_type_id.HasValue)
            {
                branch_type_idParameter = new ObjectParameter("branch_type_id", branch_type_id);
            }
            else
            {
                branch_type_idParameter = new ObjectParameter("branch_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter main_branch_idParameter;
            if (main_branch_id.HasValue)
            {
                main_branch_idParameter = new ObjectParameter("main_branch_id", main_branch_id);
            }
            else
            {
                main_branch_idParameter = new ObjectParameter("main_branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_branch", branch_idParameter, branch_status_idParameter, issuer_idParameter, branch_codeParameter, branch_nameParameter, locationParameter, contact_personParameter, contact_emailParameter, card_centreParameter, emp_branch_codeParameter, satellite_branch_idParameter, branch_type_idParameter, main_branch_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        public ObjectResult<issuer> usp_search_issuer_by_id(Nullable<global::System.Int32> issuer_id)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<issuer>("usp_search_issuer_by_id", issuer_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        public ObjectResult<issuer> usp_search_issuer_by_id(Nullable<global::System.Int32> issuer_id, MergeOption mergeOption)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<issuer>("usp_search_issuer_by_id", mergeOption, issuer_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="check_masking">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<CardDetailResult> usp_get_card(Nullable<global::System.Int64> card_id, Nullable<global::System.Boolean> check_masking, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter check_maskingParameter;
            if (check_masking.HasValue)
            {
                check_maskingParameter = new ObjectParameter("check_masking", check_masking);
            }
            else
            {
                check_maskingParameter = new ObjectParameter("check_masking", typeof(global::System.Boolean));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<CardDetailResult>("usp_get_card", card_idParameter, check_maskingParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_finalise_logout(Nullable<global::System.Int64> user_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_finalise_logout", user_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="user_role_id">No Metadata Documentation available.</param>
        /// <param name="languageId">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<UserGroupResult> usp_get_user_groups_by_issuer(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> user_role_id, Nullable<global::System.Int32> languageId, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_role_idParameter;
            if (user_role_id.HasValue)
            {
                user_role_idParameter = new ObjectParameter("user_role_id", user_role_id);
            }
            else
            {
                user_role_idParameter = new ObjectParameter("user_role_id", typeof(global::System.Int32));
            }
    
            ObjectParameter languageIdParameter;
            if (languageId.HasValue)
            {
                languageIdParameter = new ObjectParameter("languageId", languageId);
            }
            else
            {
                languageIdParameter = new ObjectParameter("languageId", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<UserGroupResult>("usp_get_user_groups_by_issuer", issuer_idParameter, user_role_idParameter, languageIdParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_group_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<user_group> usp_get_usergroup(Nullable<global::System.Int32> user_group_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter user_group_idParameter;
            if (user_group_id.HasValue)
            {
                user_group_idParameter = new ObjectParameter("user_group_id", user_group_id);
            }
            else
            {
                user_group_idParameter = new ObjectParameter("user_group_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<user_group>("usp_get_usergroup", user_group_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="user_group_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<user_group> usp_get_usergroup(Nullable<global::System.Int32> user_group_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, MergeOption mergeOption)
        {
            ObjectParameter user_group_idParameter;
            if (user_group_id.HasValue)
            {
                user_group_idParameter = new ObjectParameter("user_group_id", user_group_id);
            }
            else
            {
                user_group_idParameter = new ObjectParameter("user_group_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<user_group>("usp_get_usergroup", mergeOption, user_group_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="load_batch_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LoadCardResult> usp_get_load_batch_cards(Nullable<global::System.Int64> load_batch_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter load_batch_idParameter;
            if (load_batch_id.HasValue)
            {
                load_batch_idParameter = new ObjectParameter("load_batch_id", load_batch_id);
            }
            else
            {
                load_batch_idParameter = new ObjectParameter("load_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LoadCardResult>("usp_get_load_batch_cards", load_batch_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="load_batch_id">No Metadata Documentation available.</param>
        /// <param name="languageId">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LoadBatchHistoryResult> usp_get_load_batch_history(Nullable<global::System.Int64> load_batch_id, Nullable<global::System.Int32> languageId, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter load_batch_idParameter;
            if (load_batch_id.HasValue)
            {
                load_batch_idParameter = new ObjectParameter("load_batch_id", load_batch_id);
            }
            else
            {
                load_batch_idParameter = new ObjectParameter("load_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter languageIdParameter;
            if (languageId.HasValue)
            {
                languageIdParameter = new ObjectParameter("languageId", languageId);
            }
            else
            {
                languageIdParameter = new ObjectParameter("languageId", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LoadBatchHistoryResult>("usp_get_load_batch_history", load_batch_idParameter, languageIdParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="user_role_id">No Metadata Documentation available.</param>
        /// <param name="branch_type_id">No Metadata Documentation available.</param>
        /// <param name="languageId">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<BranchesResult> usp_get_branches_for_user(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int64> user_id, Nullable<global::System.Int32> user_role_id, Nullable<global::System.Int32> branch_type_id, Nullable<global::System.Int32> languageId, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter user_role_idParameter;
            if (user_role_id.HasValue)
            {
                user_role_idParameter = new ObjectParameter("user_role_id", user_role_id);
            }
            else
            {
                user_role_idParameter = new ObjectParameter("user_role_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_type_idParameter;
            if (branch_type_id.HasValue)
            {
                branch_type_idParameter = new ObjectParameter("branch_type_id", branch_type_id);
            }
            else
            {
                branch_type_idParameter = new ObjectParameter("branch_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter languageIdParameter;
            if (languageId.HasValue)
            {
                languageIdParameter = new ObjectParameter("languageId", languageId);
            }
            else
            {
                languageIdParameter = new ObjectParameter("languageId", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<BranchesResult>("usp_get_branches_for_user", issuer_idParameter, user_idParameter, user_role_idParameter, branch_type_idParameter, languageIdParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="user_role_id">No Metadata Documentation available.</param>
        /// <param name="load_card_status_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<BranchLoadCardCountResult> usp_get_branches_with_load_card_count(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int64> user_id, Nullable<global::System.Int32> user_role_id, Nullable<global::System.Int32> load_card_status_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter user_role_idParameter;
            if (user_role_id.HasValue)
            {
                user_role_idParameter = new ObjectParameter("user_role_id", user_role_id);
            }
            else
            {
                user_role_idParameter = new ObjectParameter("user_role_id", typeof(global::System.Int32));
            }
    
            ObjectParameter load_card_status_idParameter;
            if (load_card_status_id.HasValue)
            {
                load_card_status_idParameter = new ObjectParameter("load_card_status_id", load_card_status_id);
            }
            else
            {
                load_card_status_idParameter = new ObjectParameter("load_card_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<BranchLoadCardCountResult>("usp_get_branches_with_load_card_count", issuer_idParameter, user_idParameter, user_role_idParameter, load_card_status_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="to_branch_id">No Metadata Documentation available.</param>
        /// <param name="card_issue_method_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="batch_card_size">No Metadata Documentation available.</param>
        /// <param name="create_batch_option">No Metadata Documentation available.</param>
        /// <param name="start_ref">No Metadata Documentation available.</param>
        /// <param name="end_ref">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="existing_dist_batch_id">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        /// <param name="dist_batchid">No Metadata Documentation available.</param>
        /// <param name="dist_batch_refnumber">No Metadata Documentation available.</param>
        public int usp_create_dist_batch(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> to_branch_id, Nullable<global::System.Int32> card_issue_method_id, Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> batch_card_size, Nullable<global::System.Int32> create_batch_option, global::System.String start_ref, global::System.String end_ref, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, Nullable<global::System.Int64> existing_dist_batch_id, ObjectParameter resultCode, ObjectParameter dist_batchid, ObjectParameter dist_batch_refnumber)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter to_branch_idParameter;
            if (to_branch_id.HasValue)
            {
                to_branch_idParameter = new ObjectParameter("to_branch_id", to_branch_id);
            }
            else
            {
                to_branch_idParameter = new ObjectParameter("to_branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_issue_method_idParameter;
            if (card_issue_method_id.HasValue)
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", card_issue_method_id);
            }
            else
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter batch_card_sizeParameter;
            if (batch_card_size.HasValue)
            {
                batch_card_sizeParameter = new ObjectParameter("batch_card_size", batch_card_size);
            }
            else
            {
                batch_card_sizeParameter = new ObjectParameter("batch_card_size", typeof(global::System.Int32));
            }
    
            ObjectParameter create_batch_optionParameter;
            if (create_batch_option.HasValue)
            {
                create_batch_optionParameter = new ObjectParameter("create_batch_option", create_batch_option);
            }
            else
            {
                create_batch_optionParameter = new ObjectParameter("create_batch_option", typeof(global::System.Int32));
            }
    
            ObjectParameter start_refParameter;
            if (start_ref != null)
            {
                start_refParameter = new ObjectParameter("start_ref", start_ref);
            }
            else
            {
                start_refParameter = new ObjectParameter("start_ref", typeof(global::System.String));
            }
    
            ObjectParameter end_refParameter;
            if (end_ref != null)
            {
                end_refParameter = new ObjectParameter("end_ref", end_ref);
            }
            else
            {
                end_refParameter = new ObjectParameter("end_ref", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            ObjectParameter existing_dist_batch_idParameter;
            if (existing_dist_batch_id.HasValue)
            {
                existing_dist_batch_idParameter = new ObjectParameter("existing_dist_batch_id", existing_dist_batch_id);
            }
            else
            {
                existing_dist_batch_idParameter = new ObjectParameter("existing_dist_batch_id", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction("usp_create_dist_batch", issuer_idParameter, branch_idParameter, to_branch_idParameter, card_issue_method_idParameter, product_idParameter, batch_card_sizeParameter, create_batch_optionParameter, start_refParameter, end_refParameter, audit_user_idParameter, audit_workstationParameter, existing_dist_batch_idParameter, resultCode, dist_batchid, dist_batch_refnumber);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="load_card_status_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> usp_get_branch_card_count(Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> load_card_status_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter load_card_status_idParameter;
            if (load_card_status_id.HasValue)
            {
                load_card_status_idParameter = new ObjectParameter("load_card_status_id", load_card_status_id);
            }
            else
            {
                load_card_status_idParameter = new ObjectParameter("load_card_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("usp_get_branch_card_count", branch_idParameter, load_card_status_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="result_code">No Metadata Documentation available.</param>
        public int usp_update_user_language(Nullable<global::System.Int64> user_id, Nullable<global::System.Int32> language_id, ObjectParameter result_code)
        {
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("usp_update_user_language", user_idParameter, language_idParameter, result_code);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="dist_batch_id">No Metadata Documentation available.</param>
        /// <param name="languageId">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<DistBatchHistoryResult> usp_get_dist_batch_history(Nullable<global::System.Int64> dist_batch_id, Nullable<global::System.Int32> languageId, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter dist_batch_idParameter;
            if (dist_batch_id.HasValue)
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", dist_batch_id);
            }
            else
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter languageIdParameter;
            if (languageId.HasValue)
            {
                languageIdParameter = new ObjectParameter("languageId", languageId);
            }
            else
            {
                languageIdParameter = new ObjectParameter("languageId", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<DistBatchHistoryResult>("usp_get_dist_batch_history", dist_batch_idParameter, languageIdParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="dist_batch_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<DistCardResult> usp_get_dist_batch_cards(Nullable<global::System.Int64> dist_batch_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter dist_batch_idParameter;
            if (dist_batch_id.HasValue)
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", dist_batch_id);
            }
            else
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<DistCardResult>("usp_get_dist_batch_cards", dist_batch_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_name">No Metadata Documentation available.</param>
        /// <param name="issuer_code">No Metadata Documentation available.</param>
        /// <param name="license_key">No Metadata Documentation available.</param>
        /// <param name="xml_license_file">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_load_issuer_license(global::System.String issuer_name, global::System.String issuer_code, global::System.String license_key, global::System.Byte[] xml_license_file, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter issuer_nameParameter;
            if (issuer_name != null)
            {
                issuer_nameParameter = new ObjectParameter("issuer_name", issuer_name);
            }
            else
            {
                issuer_nameParameter = new ObjectParameter("issuer_name", typeof(global::System.String));
            }
    
            ObjectParameter issuer_codeParameter;
            if (issuer_code != null)
            {
                issuer_codeParameter = new ObjectParameter("issuer_code", issuer_code);
            }
            else
            {
                issuer_codeParameter = new ObjectParameter("issuer_code", typeof(global::System.String));
            }
    
            ObjectParameter license_keyParameter;
            if (license_key != null)
            {
                license_keyParameter = new ObjectParameter("license_key", license_key);
            }
            else
            {
                license_keyParameter = new ObjectParameter("license_key", typeof(global::System.String));
            }
    
            ObjectParameter xml_license_fileParameter;
            if (xml_license_file != null)
            {
                xml_license_fileParameter = new ObjectParameter("xml_license_file", xml_license_file);
            }
            else
            {
                xml_license_fileParameter = new ObjectParameter("xml_license_file", typeof(global::System.Byte[]));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_load_issuer_license", issuer_nameParameter, issuer_codeParameter, license_keyParameter, xml_license_fileParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuerID">No Metadata Documentation available.</param>
        /// <param name="interfaceid">No Metadata Documentation available.</param>
        public int usp_getConnectionParameters(Nullable<global::System.Int32> issuerID, Nullable<global::System.Int32> interfaceid)
        {
            ObjectParameter issuerIDParameter;
            if (issuerID.HasValue)
            {
                issuerIDParameter = new ObjectParameter("issuerID", issuerID);
            }
            else
            {
                issuerIDParameter = new ObjectParameter("issuerID", typeof(global::System.Int32));
            }
    
            ObjectParameter interfaceidParameter;
            if (interfaceid.HasValue)
            {
                interfaceidParameter = new ObjectParameter("interfaceid", interfaceid);
            }
            else
            {
                interfaceidParameter = new ObjectParameter("interfaceid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("usp_getConnectionParameters", issuerIDParameter, interfaceidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuerid">No Metadata Documentation available.</param>
        public int usp_get_issuerdetails(global::System.String issuerid)
        {
            ObjectParameter issueridParameter;
            if (issuerid != null)
            {
                issueridParameter = new ObjectParameter("issuerid", issuerid);
            }
            else
            {
                issueridParameter = new ObjectParameter("issuerid", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_get_issuerdetails", issueridParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="audit_description">No Metadata Documentation available.</param>
        public int usp_insert_FlexcubeAudit(Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, global::System.String audit_description)
        {
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            ObjectParameter audit_descriptionParameter;
            if (audit_description != null)
            {
                audit_descriptionParameter = new ObjectParameter("audit_description", audit_description);
            }
            else
            {
                audit_descriptionParameter = new ObjectParameter("audit_description", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_insert_FlexcubeAudit", audit_user_idParameter, audit_workstationParameter, audit_descriptionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuerid">No Metadata Documentation available.</param>
        /// <param name="bincode">No Metadata Documentation available.</param>
        public int usp_getproductcode(Nullable<global::System.Int32> issuerid, global::System.String bincode)
        {
            ObjectParameter issueridParameter;
            if (issuerid.HasValue)
            {
                issueridParameter = new ObjectParameter("issuerid", issuerid);
            }
            else
            {
                issueridParameter = new ObjectParameter("issuerid", typeof(global::System.Int32));
            }
    
            ObjectParameter bincodeParameter;
            if (bincode != null)
            {
                bincodeParameter = new ObjectParameter("bincode", bincode);
            }
            else
            {
                bincodeParameter = new ObjectParameter("bincode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_getproductcode", issueridParameter, bincodeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="bankCode">No Metadata Documentation available.</param>
        /// <param name="productCode">No Metadata Documentation available.</param>
        public int usp_get_interfaceCondset(global::System.String bankCode, global::System.String productCode)
        {
            ObjectParameter bankCodeParameter;
            if (bankCode != null)
            {
                bankCodeParameter = new ObjectParameter("BankCode", bankCode);
            }
            else
            {
                bankCodeParameter = new ObjectParameter("BankCode", typeof(global::System.String));
            }
    
            ObjectParameter productCodeParameter;
            if (productCode != null)
            {
                productCodeParameter = new ObjectParameter("ProductCode", productCode);
            }
            else
            {
                productCodeParameter = new ObjectParameter("ProductCode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_get_interfaceCondset", bankCodeParameter, productCodeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="bankcode">No Metadata Documentation available.</param>
        public int usp_get_interface_Rowaccountbaseinfo(global::System.String bankcode)
        {
            ObjectParameter bankcodeParameter;
            if (bankcode != null)
            {
                bankcodeParameter = new ObjectParameter("Bankcode", bankcode);
            }
            else
            {
                bankcodeParameter = new ObjectParameter("Bankcode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_get_interface_Rowaccountbaseinfo", bankcodeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_id">No Metadata Documentation available.</param>
        public ObjectResult<RolesIssuerResult> usp_get_user_roles_for_user(Nullable<global::System.Int64> user_id)
        {
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<RolesIssuerResult>("usp_get_user_roles_for_user", user_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_issue_card_complete(Nullable<global::System.Int64> card_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_issue_card_complete", card_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_issue_card_printed(Nullable<global::System.Int64> card_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_issue_card_printed", card_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="isuerid">No Metadata Documentation available.</param>
        /// <param name="fromdate">No Metadata Documentation available.</param>
        /// <param name="todate">No Metadata Documentation available.</param>
        /// <param name="userid">No Metadata Documentation available.</param>
        /// <param name="branchid">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="life_cycle">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_get_issuedcardsreport(Nullable<global::System.Int32> isuerid, Nullable<global::System.DateTimeOffset> fromdate, Nullable<global::System.DateTimeOffset> todate, Nullable<global::System.Int32> userid, Nullable<global::System.Int32> branchid, Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> life_cycle, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter isueridParameter;
            if (isuerid.HasValue)
            {
                isueridParameter = new ObjectParameter("isuerid", isuerid);
            }
            else
            {
                isueridParameter = new ObjectParameter("isuerid", typeof(global::System.Int32));
            }
    
            ObjectParameter fromdateParameter;
            if (fromdate.HasValue)
            {
                fromdateParameter = new ObjectParameter("fromdate", fromdate);
            }
            else
            {
                fromdateParameter = new ObjectParameter("fromdate", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter todateParameter;
            if (todate.HasValue)
            {
                todateParameter = new ObjectParameter("todate", todate);
            }
            else
            {
                todateParameter = new ObjectParameter("todate", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter useridParameter;
            if (userid.HasValue)
            {
                useridParameter = new ObjectParameter("userid", userid);
            }
            else
            {
                useridParameter = new ObjectParameter("userid", typeof(global::System.Int32));
            }
    
            ObjectParameter branchidParameter;
            if (branchid.HasValue)
            {
                branchidParameter = new ObjectParameter("branchid", branchid);
            }
            else
            {
                branchidParameter = new ObjectParameter("branchid", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter life_cycleParameter;
            if (life_cycle.HasValue)
            {
                life_cycleParameter = new ObjectParameter("life_cycle", life_cycle);
            }
            else
            {
                life_cycleParameter = new ObjectParameter("life_cycle", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_get_issuedcardsreport", isueridParameter, fromdateParameter, todateParameter, useridParameter, branchidParameter, product_idParameter, life_cycleParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="workstation">No Metadata Documentation available.</param>
        public int usp_finalise_login(Nullable<global::System.Int64> user_id, global::System.String workstation)
        {
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter workstationParameter;
            if (workstation != null)
            {
                workstationParameter = new ObjectParameter("workstation", workstation);
            }
            else
            {
                workstationParameter = new ObjectParameter("workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_finalise_login", user_idParameter, workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_finalise_login_failed(Nullable<global::System.Int64> user_id, global::System.String audit_workstation)
        {
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_finalise_login_failed", user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_get_invetorysummaryreport(Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> language_id, Nullable<global::System.Int32> product_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_get_invetorysummaryreport", branch_idParameter, issuer_idParameter, language_idParameter, product_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_name">No Metadata Documentation available.</param>
        /// <param name="issuer_status">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        public ObjectResult<issuer> usp_search_issuer(global::System.String issuer_name, global::System.String issuer_status, Nullable<global::System.Int32> issuer_id)
        {
            ObjectParameter issuer_nameParameter;
            if (issuer_name != null)
            {
                issuer_nameParameter = new ObjectParameter("issuer_name", issuer_name);
            }
            else
            {
                issuer_nameParameter = new ObjectParameter("issuer_name", typeof(global::System.String));
            }
    
            ObjectParameter issuer_statusParameter;
            if (issuer_status != null)
            {
                issuer_statusParameter = new ObjectParameter("issuer_status", issuer_status);
            }
            else
            {
                issuer_statusParameter = new ObjectParameter("issuer_status", typeof(global::System.String));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<issuer>("usp_search_issuer", issuer_nameParameter, issuer_statusParameter, issuer_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="issuer_name">No Metadata Documentation available.</param>
        /// <param name="issuer_status">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        public ObjectResult<issuer> usp_search_issuer(global::System.String issuer_name, global::System.String issuer_status, Nullable<global::System.Int32> issuer_id, MergeOption mergeOption)
        {
            ObjectParameter issuer_nameParameter;
            if (issuer_name != null)
            {
                issuer_nameParameter = new ObjectParameter("issuer_name", issuer_name);
            }
            else
            {
                issuer_nameParameter = new ObjectParameter("issuer_name", typeof(global::System.String));
            }
    
            ObjectParameter issuer_statusParameter;
            if (issuer_status != null)
            {
                issuer_statusParameter = new ObjectParameter("issuer_status", issuer_status);
            }
            else
            {
                issuer_statusParameter = new ObjectParameter("issuer_status", typeof(global::System.String));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<issuer>("usp_search_issuer", mergeOption, issuer_nameParameter, issuer_statusParameter, issuer_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="connection_name">No Metadata Documentation available.</param>
        /// <param name="connection_parameter_type_id">No Metadata Documentation available.</param>
        /// <param name="address">No Metadata Documentation available.</param>
        /// <param name="port">No Metadata Documentation available.</param>
        /// <param name="path">No Metadata Documentation available.</param>
        /// <param name="name_of_file">No Metadata Documentation available.</param>
        /// <param name="file_delete_YN">No Metadata Documentation available.</param>
        /// <param name="file_encryption_type_id">No Metadata Documentation available.</param>
        /// <param name="duplicate_file_check_YN">No Metadata Documentation available.</param>
        /// <param name="protocol">No Metadata Documentation available.</param>
        /// <param name="auth_type">No Metadata Documentation available.</param>
        /// <param name="header_length">No Metadata Documentation available.</param>
        /// <param name="identification">No Metadata Documentation available.</param>
        /// <param name="timeout_milli">No Metadata Documentation available.</param>
        /// <param name="buffer_size">No Metadata Documentation available.</param>
        /// <param name="doc_type">No Metadata Documentation available.</param>
        /// <param name="auth_username">No Metadata Documentation available.</param>
        /// <param name="auth_password">No Metadata Documentation available.</param>
        /// <param name="auth_nonce">No Metadata Documentation available.</param>
        /// <param name="private_key">No Metadata Documentation available.</param>
        /// <param name="public_key">No Metadata Documentation available.</param>
        /// <param name="domain_name">No Metadata Documentation available.</param>
        /// <param name="is_external_auth">No Metadata Documentation available.</param>
        /// <param name="remote_port">No Metadata Documentation available.</param>
        /// <param name="remote_username">No Metadata Documentation available.</param>
        /// <param name="remote_password">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="connection_parameter_id">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> usp_connection_parameter_create(global::System.String connection_name, Nullable<global::System.Int32> connection_parameter_type_id, global::System.String address, Nullable<global::System.Int32> port, global::System.String path, global::System.String name_of_file, Nullable<global::System.Boolean> file_delete_YN, Nullable<global::System.Int32> file_encryption_type_id, Nullable<global::System.Boolean> duplicate_file_check_YN, Nullable<global::System.Int32> protocol, Nullable<global::System.Int32> auth_type, Nullable<global::System.Int32> header_length, global::System.String identification, Nullable<global::System.Int32> timeout_milli, Nullable<global::System.Int32> buffer_size, global::System.String doc_type, global::System.String auth_username, global::System.String auth_password, global::System.String auth_nonce, global::System.String private_key, global::System.String public_key, global::System.String domain_name, Nullable<global::System.Boolean> is_external_auth, Nullable<global::System.Int32> remote_port, global::System.String remote_username, global::System.String remote_password, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter connection_parameter_id, ObjectParameter resultCode)
        {
            ObjectParameter connection_nameParameter;
            if (connection_name != null)
            {
                connection_nameParameter = new ObjectParameter("connection_name", connection_name);
            }
            else
            {
                connection_nameParameter = new ObjectParameter("connection_name", typeof(global::System.String));
            }
    
            ObjectParameter connection_parameter_type_idParameter;
            if (connection_parameter_type_id.HasValue)
            {
                connection_parameter_type_idParameter = new ObjectParameter("connection_parameter_type_id", connection_parameter_type_id);
            }
            else
            {
                connection_parameter_type_idParameter = new ObjectParameter("connection_parameter_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter addressParameter;
            if (address != null)
            {
                addressParameter = new ObjectParameter("address", address);
            }
            else
            {
                addressParameter = new ObjectParameter("address", typeof(global::System.String));
            }
    
            ObjectParameter portParameter;
            if (port.HasValue)
            {
                portParameter = new ObjectParameter("port", port);
            }
            else
            {
                portParameter = new ObjectParameter("port", typeof(global::System.Int32));
            }
    
            ObjectParameter pathParameter;
            if (path != null)
            {
                pathParameter = new ObjectParameter("path", path);
            }
            else
            {
                pathParameter = new ObjectParameter("path", typeof(global::System.String));
            }
    
            ObjectParameter name_of_fileParameter;
            if (name_of_file != null)
            {
                name_of_fileParameter = new ObjectParameter("name_of_file", name_of_file);
            }
            else
            {
                name_of_fileParameter = new ObjectParameter("name_of_file", typeof(global::System.String));
            }
    
            ObjectParameter file_delete_YNParameter;
            if (file_delete_YN.HasValue)
            {
                file_delete_YNParameter = new ObjectParameter("file_delete_YN", file_delete_YN);
            }
            else
            {
                file_delete_YNParameter = new ObjectParameter("file_delete_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter file_encryption_type_idParameter;
            if (file_encryption_type_id.HasValue)
            {
                file_encryption_type_idParameter = new ObjectParameter("file_encryption_type_id", file_encryption_type_id);
            }
            else
            {
                file_encryption_type_idParameter = new ObjectParameter("file_encryption_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter duplicate_file_check_YNParameter;
            if (duplicate_file_check_YN.HasValue)
            {
                duplicate_file_check_YNParameter = new ObjectParameter("duplicate_file_check_YN", duplicate_file_check_YN);
            }
            else
            {
                duplicate_file_check_YNParameter = new ObjectParameter("duplicate_file_check_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter protocolParameter;
            if (protocol.HasValue)
            {
                protocolParameter = new ObjectParameter("protocol", protocol);
            }
            else
            {
                protocolParameter = new ObjectParameter("protocol", typeof(global::System.Int32));
            }
    
            ObjectParameter auth_typeParameter;
            if (auth_type.HasValue)
            {
                auth_typeParameter = new ObjectParameter("auth_type", auth_type);
            }
            else
            {
                auth_typeParameter = new ObjectParameter("auth_type", typeof(global::System.Int32));
            }
    
            ObjectParameter header_lengthParameter;
            if (header_length.HasValue)
            {
                header_lengthParameter = new ObjectParameter("header_length", header_length);
            }
            else
            {
                header_lengthParameter = new ObjectParameter("header_length", typeof(global::System.Int32));
            }
    
            ObjectParameter identificationParameter;
            if (identification != null)
            {
                identificationParameter = new ObjectParameter("identification", identification);
            }
            else
            {
                identificationParameter = new ObjectParameter("identification", typeof(global::System.String));
            }
    
            ObjectParameter timeout_milliParameter;
            if (timeout_milli.HasValue)
            {
                timeout_milliParameter = new ObjectParameter("timeout_milli", timeout_milli);
            }
            else
            {
                timeout_milliParameter = new ObjectParameter("timeout_milli", typeof(global::System.Int32));
            }
    
            ObjectParameter buffer_sizeParameter;
            if (buffer_size.HasValue)
            {
                buffer_sizeParameter = new ObjectParameter("buffer_size", buffer_size);
            }
            else
            {
                buffer_sizeParameter = new ObjectParameter("buffer_size", typeof(global::System.Int32));
            }
    
            ObjectParameter doc_typeParameter;
            if (doc_type != null)
            {
                doc_typeParameter = new ObjectParameter("doc_type", doc_type);
            }
            else
            {
                doc_typeParameter = new ObjectParameter("doc_type", typeof(global::System.String));
            }
    
            ObjectParameter auth_usernameParameter;
            if (auth_username != null)
            {
                auth_usernameParameter = new ObjectParameter("auth_username", auth_username);
            }
            else
            {
                auth_usernameParameter = new ObjectParameter("auth_username", typeof(global::System.String));
            }
    
            ObjectParameter auth_passwordParameter;
            if (auth_password != null)
            {
                auth_passwordParameter = new ObjectParameter("auth_password", auth_password);
            }
            else
            {
                auth_passwordParameter = new ObjectParameter("auth_password", typeof(global::System.String));
            }
    
            ObjectParameter auth_nonceParameter;
            if (auth_nonce != null)
            {
                auth_nonceParameter = new ObjectParameter("auth_nonce", auth_nonce);
            }
            else
            {
                auth_nonceParameter = new ObjectParameter("auth_nonce", typeof(global::System.String));
            }
    
            ObjectParameter private_keyParameter;
            if (private_key != null)
            {
                private_keyParameter = new ObjectParameter("private_key", private_key);
            }
            else
            {
                private_keyParameter = new ObjectParameter("private_key", typeof(global::System.String));
            }
    
            ObjectParameter public_keyParameter;
            if (public_key != null)
            {
                public_keyParameter = new ObjectParameter("public_key", public_key);
            }
            else
            {
                public_keyParameter = new ObjectParameter("public_key", typeof(global::System.String));
            }
    
            ObjectParameter domain_nameParameter;
            if (domain_name != null)
            {
                domain_nameParameter = new ObjectParameter("domain_name", domain_name);
            }
            else
            {
                domain_nameParameter = new ObjectParameter("domain_name", typeof(global::System.String));
            }
    
            ObjectParameter is_external_authParameter;
            if (is_external_auth.HasValue)
            {
                is_external_authParameter = new ObjectParameter("is_external_auth", is_external_auth);
            }
            else
            {
                is_external_authParameter = new ObjectParameter("is_external_auth", typeof(global::System.Boolean));
            }
    
            ObjectParameter remote_portParameter;
            if (remote_port.HasValue)
            {
                remote_portParameter = new ObjectParameter("remote_port", remote_port);
            }
            else
            {
                remote_portParameter = new ObjectParameter("remote_port", typeof(global::System.Int32));
            }
    
            ObjectParameter remote_usernameParameter;
            if (remote_username != null)
            {
                remote_usernameParameter = new ObjectParameter("remote_username", remote_username);
            }
            else
            {
                remote_usernameParameter = new ObjectParameter("remote_username", typeof(global::System.String));
            }
    
            ObjectParameter remote_passwordParameter;
            if (remote_password != null)
            {
                remote_passwordParameter = new ObjectParameter("remote_password", remote_password);
            }
            else
            {
                remote_passwordParameter = new ObjectParameter("remote_password", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("usp_connection_parameter_create", connection_nameParameter, connection_parameter_type_idParameter, addressParameter, portParameter, pathParameter, name_of_fileParameter, file_delete_YNParameter, file_encryption_type_idParameter, duplicate_file_check_YNParameter, protocolParameter, auth_typeParameter, header_lengthParameter, identificationParameter, timeout_milliParameter, buffer_sizeParameter, doc_typeParameter, auth_usernameParameter, auth_passwordParameter, auth_nonceParameter, private_keyParameter, public_keyParameter, domain_nameParameter, is_external_authParameter, remote_portParameter, remote_usernameParameter, remote_passwordParameter, audit_user_idParameter, audit_workstationParameter, connection_parameter_id, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="connection_parameter_id">No Metadata Documentation available.</param>
        /// <param name="connection_name">No Metadata Documentation available.</param>
        /// <param name="connection_parameter_type_id">No Metadata Documentation available.</param>
        /// <param name="address">No Metadata Documentation available.</param>
        /// <param name="port">No Metadata Documentation available.</param>
        /// <param name="name_of_file">No Metadata Documentation available.</param>
        /// <param name="file_delete_YN">No Metadata Documentation available.</param>
        /// <param name="file_encryption_type_id">No Metadata Documentation available.</param>
        /// <param name="duplicate_file_check_YN">No Metadata Documentation available.</param>
        /// <param name="path">No Metadata Documentation available.</param>
        /// <param name="protocol">No Metadata Documentation available.</param>
        /// <param name="auth_type">No Metadata Documentation available.</param>
        /// <param name="header_length">No Metadata Documentation available.</param>
        /// <param name="identification">No Metadata Documentation available.</param>
        /// <param name="timeout_milli">No Metadata Documentation available.</param>
        /// <param name="buffer_size">No Metadata Documentation available.</param>
        /// <param name="doc_type">No Metadata Documentation available.</param>
        /// <param name="auth_username">No Metadata Documentation available.</param>
        /// <param name="auth_password">No Metadata Documentation available.</param>
        /// <param name="auth_nonce">No Metadata Documentation available.</param>
        /// <param name="private_key">No Metadata Documentation available.</param>
        /// <param name="public_key">No Metadata Documentation available.</param>
        /// <param name="domain_name">No Metadata Documentation available.</param>
        /// <param name="is_external_auth">No Metadata Documentation available.</param>
        /// <param name="remote_port">No Metadata Documentation available.</param>
        /// <param name="remote_username">No Metadata Documentation available.</param>
        /// <param name="remote_password">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_connection_parameter_update(Nullable<global::System.Int32> connection_parameter_id, global::System.String connection_name, Nullable<global::System.Int32> connection_parameter_type_id, global::System.String address, Nullable<global::System.Int32> port, global::System.String name_of_file, Nullable<global::System.Boolean> file_delete_YN, Nullable<global::System.Int32> file_encryption_type_id, Nullable<global::System.Boolean> duplicate_file_check_YN, global::System.String path, Nullable<global::System.Int32> protocol, Nullable<global::System.Int32> auth_type, Nullable<global::System.Int32> header_length, global::System.String identification, Nullable<global::System.Int32> timeout_milli, Nullable<global::System.Int32> buffer_size, global::System.String doc_type, global::System.String auth_username, global::System.String auth_password, global::System.String auth_nonce, global::System.String private_key, global::System.String public_key, global::System.String domain_name, Nullable<global::System.Boolean> is_external_auth, Nullable<global::System.Int32> remote_port, global::System.String remote_username, global::System.String remote_password, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter connection_parameter_idParameter;
            if (connection_parameter_id.HasValue)
            {
                connection_parameter_idParameter = new ObjectParameter("connection_parameter_id", connection_parameter_id);
            }
            else
            {
                connection_parameter_idParameter = new ObjectParameter("connection_parameter_id", typeof(global::System.Int32));
            }
    
            ObjectParameter connection_nameParameter;
            if (connection_name != null)
            {
                connection_nameParameter = new ObjectParameter("connection_name", connection_name);
            }
            else
            {
                connection_nameParameter = new ObjectParameter("connection_name", typeof(global::System.String));
            }
    
            ObjectParameter connection_parameter_type_idParameter;
            if (connection_parameter_type_id.HasValue)
            {
                connection_parameter_type_idParameter = new ObjectParameter("connection_parameter_type_id", connection_parameter_type_id);
            }
            else
            {
                connection_parameter_type_idParameter = new ObjectParameter("connection_parameter_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter addressParameter;
            if (address != null)
            {
                addressParameter = new ObjectParameter("address", address);
            }
            else
            {
                addressParameter = new ObjectParameter("address", typeof(global::System.String));
            }
    
            ObjectParameter portParameter;
            if (port.HasValue)
            {
                portParameter = new ObjectParameter("port", port);
            }
            else
            {
                portParameter = new ObjectParameter("port", typeof(global::System.Int32));
            }
    
            ObjectParameter name_of_fileParameter;
            if (name_of_file != null)
            {
                name_of_fileParameter = new ObjectParameter("name_of_file", name_of_file);
            }
            else
            {
                name_of_fileParameter = new ObjectParameter("name_of_file", typeof(global::System.String));
            }
    
            ObjectParameter file_delete_YNParameter;
            if (file_delete_YN.HasValue)
            {
                file_delete_YNParameter = new ObjectParameter("file_delete_YN", file_delete_YN);
            }
            else
            {
                file_delete_YNParameter = new ObjectParameter("file_delete_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter file_encryption_type_idParameter;
            if (file_encryption_type_id.HasValue)
            {
                file_encryption_type_idParameter = new ObjectParameter("file_encryption_type_id", file_encryption_type_id);
            }
            else
            {
                file_encryption_type_idParameter = new ObjectParameter("file_encryption_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter duplicate_file_check_YNParameter;
            if (duplicate_file_check_YN.HasValue)
            {
                duplicate_file_check_YNParameter = new ObjectParameter("duplicate_file_check_YN", duplicate_file_check_YN);
            }
            else
            {
                duplicate_file_check_YNParameter = new ObjectParameter("duplicate_file_check_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter pathParameter;
            if (path != null)
            {
                pathParameter = new ObjectParameter("path", path);
            }
            else
            {
                pathParameter = new ObjectParameter("path", typeof(global::System.String));
            }
    
            ObjectParameter protocolParameter;
            if (protocol.HasValue)
            {
                protocolParameter = new ObjectParameter("protocol", protocol);
            }
            else
            {
                protocolParameter = new ObjectParameter("protocol", typeof(global::System.Int32));
            }
    
            ObjectParameter auth_typeParameter;
            if (auth_type.HasValue)
            {
                auth_typeParameter = new ObjectParameter("auth_type", auth_type);
            }
            else
            {
                auth_typeParameter = new ObjectParameter("auth_type", typeof(global::System.Int32));
            }
    
            ObjectParameter header_lengthParameter;
            if (header_length.HasValue)
            {
                header_lengthParameter = new ObjectParameter("header_length", header_length);
            }
            else
            {
                header_lengthParameter = new ObjectParameter("header_length", typeof(global::System.Int32));
            }
    
            ObjectParameter identificationParameter;
            if (identification != null)
            {
                identificationParameter = new ObjectParameter("identification", identification);
            }
            else
            {
                identificationParameter = new ObjectParameter("identification", typeof(global::System.String));
            }
    
            ObjectParameter timeout_milliParameter;
            if (timeout_milli.HasValue)
            {
                timeout_milliParameter = new ObjectParameter("timeout_milli", timeout_milli);
            }
            else
            {
                timeout_milliParameter = new ObjectParameter("timeout_milli", typeof(global::System.Int32));
            }
    
            ObjectParameter buffer_sizeParameter;
            if (buffer_size.HasValue)
            {
                buffer_sizeParameter = new ObjectParameter("buffer_size", buffer_size);
            }
            else
            {
                buffer_sizeParameter = new ObjectParameter("buffer_size", typeof(global::System.Int32));
            }
    
            ObjectParameter doc_typeParameter;
            if (doc_type != null)
            {
                doc_typeParameter = new ObjectParameter("doc_type", doc_type);
            }
            else
            {
                doc_typeParameter = new ObjectParameter("doc_type", typeof(global::System.String));
            }
    
            ObjectParameter auth_usernameParameter;
            if (auth_username != null)
            {
                auth_usernameParameter = new ObjectParameter("auth_username", auth_username);
            }
            else
            {
                auth_usernameParameter = new ObjectParameter("auth_username", typeof(global::System.String));
            }
    
            ObjectParameter auth_passwordParameter;
            if (auth_password != null)
            {
                auth_passwordParameter = new ObjectParameter("auth_password", auth_password);
            }
            else
            {
                auth_passwordParameter = new ObjectParameter("auth_password", typeof(global::System.String));
            }
    
            ObjectParameter auth_nonceParameter;
            if (auth_nonce != null)
            {
                auth_nonceParameter = new ObjectParameter("auth_nonce", auth_nonce);
            }
            else
            {
                auth_nonceParameter = new ObjectParameter("auth_nonce", typeof(global::System.String));
            }
    
            ObjectParameter private_keyParameter;
            if (private_key != null)
            {
                private_keyParameter = new ObjectParameter("private_key", private_key);
            }
            else
            {
                private_keyParameter = new ObjectParameter("private_key", typeof(global::System.String));
            }
    
            ObjectParameter public_keyParameter;
            if (public_key != null)
            {
                public_keyParameter = new ObjectParameter("public_key", public_key);
            }
            else
            {
                public_keyParameter = new ObjectParameter("public_key", typeof(global::System.String));
            }
    
            ObjectParameter domain_nameParameter;
            if (domain_name != null)
            {
                domain_nameParameter = new ObjectParameter("domain_name", domain_name);
            }
            else
            {
                domain_nameParameter = new ObjectParameter("domain_name", typeof(global::System.String));
            }
    
            ObjectParameter is_external_authParameter;
            if (is_external_auth.HasValue)
            {
                is_external_authParameter = new ObjectParameter("is_external_auth", is_external_auth);
            }
            else
            {
                is_external_authParameter = new ObjectParameter("is_external_auth", typeof(global::System.Boolean));
            }
    
            ObjectParameter remote_portParameter;
            if (remote_port.HasValue)
            {
                remote_portParameter = new ObjectParameter("remote_port", remote_port);
            }
            else
            {
                remote_portParameter = new ObjectParameter("remote_port", typeof(global::System.Int32));
            }
    
            ObjectParameter remote_usernameParameter;
            if (remote_username != null)
            {
                remote_usernameParameter = new ObjectParameter("remote_username", remote_username);
            }
            else
            {
                remote_usernameParameter = new ObjectParameter("remote_username", typeof(global::System.String));
            }
    
            ObjectParameter remote_passwordParameter;
            if (remote_password != null)
            {
                remote_passwordParameter = new ObjectParameter("remote_password", remote_password);
            }
            else
            {
                remote_passwordParameter = new ObjectParameter("remote_password", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_connection_parameter_update", connection_parameter_idParameter, connection_nameParameter, connection_parameter_type_idParameter, addressParameter, portParameter, name_of_fileParameter, file_delete_YNParameter, file_encryption_type_idParameter, duplicate_file_check_YNParameter, pathParameter, protocolParameter, auth_typeParameter, header_lengthParameter, identificationParameter, timeout_milliParameter, buffer_sizeParameter, doc_typeParameter, auth_usernameParameter, auth_passwordParameter, auth_nonceParameter, private_keyParameter, public_keyParameter, domain_nameParameter, is_external_authParameter, remote_portParameter, remote_usernameParameter, remote_passwordParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<ConnectionParamsResult> usp_get_connection_params(Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ConnectionParamsResult>("usp_get_connection_params", audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<issuer> usp_get_issuer(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<issuer>("usp_get_issuer", issuer_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<issuer> usp_get_issuer(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, MergeOption mergeOption)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<issuer>("usp_get_issuer", mergeOption, issuer_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="interface_type_id">No Metadata Documentation available.</param>
        /// <param name="interface_area">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<issuer_interface> usp_get_issuer_interfaces(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> interface_type_id, Nullable<global::System.Int32> interface_area, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter interface_type_idParameter;
            if (interface_type_id.HasValue)
            {
                interface_type_idParameter = new ObjectParameter("interface_type_id", interface_type_id);
            }
            else
            {
                interface_type_idParameter = new ObjectParameter("interface_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter interface_areaParameter;
            if (interface_area.HasValue)
            {
                interface_areaParameter = new ObjectParameter("interface_area", interface_area);
            }
            else
            {
                interface_areaParameter = new ObjectParameter("interface_area", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<issuer_interface>("usp_get_issuer_interfaces", issuer_idParameter, interface_type_idParameter, interface_areaParameter, audit_user_idParameter, audit_workstationParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="interface_type_id">No Metadata Documentation available.</param>
        /// <param name="interface_area">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<issuer_interface> usp_get_issuer_interfaces(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> interface_type_id, Nullable<global::System.Int32> interface_area, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, MergeOption mergeOption)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter interface_type_idParameter;
            if (interface_type_id.HasValue)
            {
                interface_type_idParameter = new ObjectParameter("interface_type_id", interface_type_id);
            }
            else
            {
                interface_type_idParameter = new ObjectParameter("interface_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter interface_areaParameter;
            if (interface_area.HasValue)
            {
                interface_areaParameter = new ObjectParameter("interface_area", interface_area);
            }
            else
            {
                interface_areaParameter = new ObjectParameter("interface_area", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<issuer_interface>("usp_get_issuer_interfaces", mergeOption, issuer_idParameter, interface_type_idParameter, interface_areaParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LdapSettingsResult> usp_get_ldap_settings(Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LdapSettingsResult>("usp_get_ldap_settings", audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_card_branch_spoil(Nullable<global::System.Int64> card_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_card_branch_spoil", card_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="approve">No Metadata Documentation available.</param>
        /// <param name="notes">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="card_issue_method_id">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_card_MakerChecker(Nullable<global::System.Int64> card_id, Nullable<global::System.Boolean> approve, global::System.String notes, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter card_issue_method_id, ObjectParameter resultCode)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter approveParameter;
            if (approve.HasValue)
            {
                approveParameter = new ObjectParameter("approve", approve);
            }
            else
            {
                approveParameter = new ObjectParameter("approve", typeof(global::System.Boolean));
            }
    
            ObjectParameter notesParameter;
            if (notes != null)
            {
                notesParameter = new ObjectParameter("notes", notes);
            }
            else
            {
                notesParameter = new ObjectParameter("notes", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_card_MakerChecker", card_idParameter, approveParameter, notesParameter, audit_user_idParameter, audit_workstationParameter, card_issue_method_id, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<IssuersForRoleResult> usp_get_all_issuers_for_role(Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<IssuersForRoleResult>("usp_get_all_issuers_for_role", audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="interface_type_id">No Metadata Documentation available.</param>
        /// <param name="interface_area">No Metadata Documentation available.</param>
        /// <param name="auditUserId">No Metadata Documentation available.</param>
        /// <param name="auditWorkstation">No Metadata Documentation available.</param>
        public ObjectResult<ConnectionParamsResult> usp_get_issuer_interface_conn(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> interface_type_id, Nullable<global::System.Int32> interface_area, Nullable<global::System.Int64> auditUserId, global::System.String auditWorkstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter interface_type_idParameter;
            if (interface_type_id.HasValue)
            {
                interface_type_idParameter = new ObjectParameter("interface_type_id", interface_type_id);
            }
            else
            {
                interface_type_idParameter = new ObjectParameter("interface_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter interface_areaParameter;
            if (interface_area.HasValue)
            {
                interface_areaParameter = new ObjectParameter("interface_area", interface_area);
            }
            else
            {
                interface_areaParameter = new ObjectParameter("interface_area", typeof(global::System.Int32));
            }
    
            ObjectParameter auditUserIdParameter;
            if (auditUserId.HasValue)
            {
                auditUserIdParameter = new ObjectParameter("auditUserId", auditUserId);
            }
            else
            {
                auditUserIdParameter = new ObjectParameter("auditUserId", typeof(global::System.Int64));
            }
    
            ObjectParameter auditWorkstationParameter;
            if (auditWorkstation != null)
            {
                auditWorkstationParameter = new ObjectParameter("auditWorkstation", auditWorkstation);
            }
            else
            {
                auditWorkstationParameter = new ObjectParameter("auditWorkstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ConnectionParamsResult>("usp_get_issuer_interface_conn", issuer_idParameter, interface_type_idParameter, interface_areaParameter, auditUserIdParameter, auditWorkstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="bin_code">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="only_active_records">No Metadata Documentation available.</param>
        public int usp_get_products_by_bincode(global::System.String bin_code, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Boolean> only_active_records)
        {
            ObjectParameter bin_codeParameter;
            if (bin_code != null)
            {
                bin_codeParameter = new ObjectParameter("bin_code", bin_code);
            }
            else
            {
                bin_codeParameter = new ObjectParameter("bin_code", typeof(global::System.String));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter only_active_recordsParameter;
            if (only_active_records.HasValue)
            {
                only_active_recordsParameter = new ObjectParameter("only_active_records", only_active_records);
            }
            else
            {
                only_active_recordsParameter = new ObjectParameter("only_active_records", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction("usp_get_products_by_bincode", bin_codeParameter, issuer_idParameter, only_active_recordsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="bin_code">No Metadata Documentation available.</param>
        /// <param name="branch_code">No Metadata Documentation available.</param>
        public ObjectResult<issuer> usp_get_issuer_by_product_and_branchcode(global::System.String bin_code, global::System.String branch_code)
        {
            ObjectParameter bin_codeParameter;
            if (bin_code != null)
            {
                bin_codeParameter = new ObjectParameter("bin_code", bin_code);
            }
            else
            {
                bin_codeParameter = new ObjectParameter("bin_code", typeof(global::System.String));
            }
    
            ObjectParameter branch_codeParameter;
            if (branch_code != null)
            {
                branch_codeParameter = new ObjectParameter("branch_code", branch_code);
            }
            else
            {
                branch_codeParameter = new ObjectParameter("branch_code", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<issuer>("usp_get_issuer_by_product_and_branchcode", bin_codeParameter, branch_codeParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="bin_code">No Metadata Documentation available.</param>
        /// <param name="branch_code">No Metadata Documentation available.</param>
        public ObjectResult<issuer> usp_get_issuer_by_product_and_branchcode(global::System.String bin_code, global::System.String branch_code, MergeOption mergeOption)
        {
            ObjectParameter bin_codeParameter;
            if (bin_code != null)
            {
                bin_codeParameter = new ObjectParameter("bin_code", bin_code);
            }
            else
            {
                bin_codeParameter = new ObjectParameter("bin_code", typeof(global::System.String));
            }
    
            ObjectParameter branch_codeParameter;
            if (branch_code != null)
            {
                branch_codeParameter = new ObjectParameter("branch_code", branch_code);
            }
            else
            {
                branch_codeParameter = new ObjectParameter("branch_code", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<issuer>("usp_get_issuer_by_product_and_branchcode", mergeOption, bin_codeParameter, branch_codeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="cCY">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<CmsParametersResult> usp_get_cms_parameters(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int64> card_id, global::System.String cCY, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter cCYParameter;
            if (cCY != null)
            {
                cCYParameter = new ObjectParameter("CCY", cCY);
            }
            else
            {
                cCYParameter = new ObjectParameter("CCY", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<CmsParametersResult>("usp_get_cms_parameters", issuer_idParameter, branch_idParameter, card_idParameter, cCYParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<country> usp_get_all_countries(Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<country>("usp_get_all_countries", audit_user_idParameter, audit_workstationParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<country> usp_get_all_countries(Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, MergeOption mergeOption)
        {
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<country>("usp_get_all_countries", mergeOption, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_get_ldap_issuers(Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_get_ldap_issuers", audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="product_name">No Metadata Documentation available.</param>
        /// <param name="product_code">No Metadata Documentation available.</param>
        /// <param name="product_bin_code">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="name_on_card_top">No Metadata Documentation available.</param>
        /// <param name="name_on_card_left">No Metadata Documentation available.</param>
        /// <param name="name_on_card_font_size">No Metadata Documentation available.</param>
        /// <param name="font_name">No Metadata Documentation available.</param>
        /// <param name="resource_path">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_update_product(Nullable<global::System.Int32> product_id, global::System.String product_name, global::System.String product_code, global::System.String product_bin_code, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Decimal> name_on_card_top, Nullable<global::System.Decimal> name_on_card_left, Nullable<global::System.Int32> name_on_card_font_size, global::System.String font_name, global::System.String resource_path, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_nameParameter;
            if (product_name != null)
            {
                product_nameParameter = new ObjectParameter("product_name", product_name);
            }
            else
            {
                product_nameParameter = new ObjectParameter("product_name", typeof(global::System.String));
            }
    
            ObjectParameter product_codeParameter;
            if (product_code != null)
            {
                product_codeParameter = new ObjectParameter("product_code", product_code);
            }
            else
            {
                product_codeParameter = new ObjectParameter("product_code", typeof(global::System.String));
            }
    
            ObjectParameter product_bin_codeParameter;
            if (product_bin_code != null)
            {
                product_bin_codeParameter = new ObjectParameter("product_bin_code", product_bin_code);
            }
            else
            {
                product_bin_codeParameter = new ObjectParameter("product_bin_code", typeof(global::System.String));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("Issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("Issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter name_on_card_topParameter;
            if (name_on_card_top.HasValue)
            {
                name_on_card_topParameter = new ObjectParameter("name_on_card_top", name_on_card_top);
            }
            else
            {
                name_on_card_topParameter = new ObjectParameter("name_on_card_top", typeof(global::System.Decimal));
            }
    
            ObjectParameter name_on_card_leftParameter;
            if (name_on_card_left.HasValue)
            {
                name_on_card_leftParameter = new ObjectParameter("name_on_card_left", name_on_card_left);
            }
            else
            {
                name_on_card_leftParameter = new ObjectParameter("name_on_card_left", typeof(global::System.Decimal));
            }
    
            ObjectParameter name_on_card_font_sizeParameter;
            if (name_on_card_font_size.HasValue)
            {
                name_on_card_font_sizeParameter = new ObjectParameter("Name_on_card_font_size", name_on_card_font_size);
            }
            else
            {
                name_on_card_font_sizeParameter = new ObjectParameter("Name_on_card_font_size", typeof(global::System.Int32));
            }
    
            ObjectParameter font_nameParameter;
            if (font_name != null)
            {
                font_nameParameter = new ObjectParameter("font_name", font_name);
            }
            else
            {
                font_nameParameter = new ObjectParameter("font_name", typeof(global::System.String));
            }
    
            ObjectParameter resource_pathParameter;
            if (resource_path != null)
            {
                resource_pathParameter = new ObjectParameter("resource_path", resource_path);
            }
            else
            {
                resource_pathParameter = new ObjectParameter("resource_path", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_product", product_idParameter, product_nameParameter, product_codeParameter, product_bin_codeParameter, issuer_idParameter, name_on_card_topParameter, name_on_card_leftParameter, name_on_card_font_sizeParameter, font_nameParameter, resource_pathParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="productid">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="result_code">No Metadata Documentation available.</param>
        public int usp_delete_product(Nullable<global::System.Int32> productid, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter result_code)
        {
            ObjectParameter productidParameter;
            if (productid.HasValue)
            {
                productidParameter = new ObjectParameter("productid", productid);
            }
            else
            {
                productidParameter = new ObjectParameter("productid", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_delete_product", productidParameter, audit_user_idParameter, audit_workstationParameter, result_code);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branch_status_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_code">No Metadata Documentation available.</param>
        /// <param name="branch_name">No Metadata Documentation available.</param>
        /// <param name="location">No Metadata Documentation available.</param>
        /// <param name="contact_person">No Metadata Documentation available.</param>
        /// <param name="contact_email">No Metadata Documentation available.</param>
        /// <param name="card_centre">No Metadata Documentation available.</param>
        /// <param name="emp_branch_code">No Metadata Documentation available.</param>
        /// <param name="satellite_branch_id">No Metadata Documentation available.</param>
        /// <param name="branch_type_id">No Metadata Documentation available.</param>
        /// <param name="main_branch_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="new_branch_id">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_insert_branch(Nullable<global::System.Int32> branch_status_id, Nullable<global::System.Int32> issuer_id, global::System.String branch_code, global::System.String branch_name, global::System.String location, global::System.String contact_person, global::System.String contact_email, global::System.String card_centre, global::System.String emp_branch_code, global::System.String satellite_branch_id, Nullable<global::System.Int32> branch_type_id, Nullable<global::System.Int32> main_branch_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter new_branch_id, ObjectParameter resultCode)
        {
            ObjectParameter branch_status_idParameter;
            if (branch_status_id.HasValue)
            {
                branch_status_idParameter = new ObjectParameter("branch_status_id", branch_status_id);
            }
            else
            {
                branch_status_idParameter = new ObjectParameter("branch_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_codeParameter;
            if (branch_code != null)
            {
                branch_codeParameter = new ObjectParameter("branch_code", branch_code);
            }
            else
            {
                branch_codeParameter = new ObjectParameter("branch_code", typeof(global::System.String));
            }
    
            ObjectParameter branch_nameParameter;
            if (branch_name != null)
            {
                branch_nameParameter = new ObjectParameter("branch_name", branch_name);
            }
            else
            {
                branch_nameParameter = new ObjectParameter("branch_name", typeof(global::System.String));
            }
    
            ObjectParameter locationParameter;
            if (location != null)
            {
                locationParameter = new ObjectParameter("location", location);
            }
            else
            {
                locationParameter = new ObjectParameter("location", typeof(global::System.String));
            }
    
            ObjectParameter contact_personParameter;
            if (contact_person != null)
            {
                contact_personParameter = new ObjectParameter("contact_person", contact_person);
            }
            else
            {
                contact_personParameter = new ObjectParameter("contact_person", typeof(global::System.String));
            }
    
            ObjectParameter contact_emailParameter;
            if (contact_email != null)
            {
                contact_emailParameter = new ObjectParameter("contact_email", contact_email);
            }
            else
            {
                contact_emailParameter = new ObjectParameter("contact_email", typeof(global::System.String));
            }
    
            ObjectParameter card_centreParameter;
            if (card_centre != null)
            {
                card_centreParameter = new ObjectParameter("card_centre", card_centre);
            }
            else
            {
                card_centreParameter = new ObjectParameter("card_centre", typeof(global::System.String));
            }
    
            ObjectParameter emp_branch_codeParameter;
            if (emp_branch_code != null)
            {
                emp_branch_codeParameter = new ObjectParameter("emp_branch_code", emp_branch_code);
            }
            else
            {
                emp_branch_codeParameter = new ObjectParameter("emp_branch_code", typeof(global::System.String));
            }
    
            ObjectParameter satellite_branch_idParameter;
            if (satellite_branch_id != null)
            {
                satellite_branch_idParameter = new ObjectParameter("satellite_branch_id", satellite_branch_id);
            }
            else
            {
                satellite_branch_idParameter = new ObjectParameter("satellite_branch_id", typeof(global::System.String));
            }
    
            ObjectParameter branch_type_idParameter;
            if (branch_type_id.HasValue)
            {
                branch_type_idParameter = new ObjectParameter("branch_type_id", branch_type_id);
            }
            else
            {
                branch_type_idParameter = new ObjectParameter("branch_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter main_branch_idParameter;
            if (main_branch_id.HasValue)
            {
                main_branch_idParameter = new ObjectParameter("main_branch_id", main_branch_id);
            }
            else
            {
                main_branch_idParameter = new ObjectParameter("main_branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_insert_branch", branch_status_idParameter, issuer_idParameter, branch_codeParameter, branch_nameParameter, locationParameter, contact_personParameter, contact_emailParameter, card_centreParameter, emp_branch_codeParameter, satellite_branch_idParameter, branch_type_idParameter, main_branch_idParameter, audit_user_idParameter, audit_workstationParameter, new_branch_id, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="user_role_id">No Metadata Documentation available.</param>
        public ObjectResult<UserGroupAdminResult> usp_get_user_groups_admin(Nullable<global::System.Int64> user_id, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> user_role_id)
        {
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_role_idParameter;
            if (user_role_id.HasValue)
            {
                user_role_idParameter = new ObjectParameter("user_role_id", user_role_id);
            }
            else
            {
                user_role_idParameter = new ObjectParameter("user_role_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<UserGroupAdminResult>("usp_get_user_groups_admin", user_idParameter, issuer_idParameter, branch_idParameter, user_role_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Issuer_product_font> usp_getFontsList()
        {
            return base.ExecuteFunction<Issuer_product_font>("usp_getFontsList");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Issuer_product_font> usp_getFontsList(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Issuer_product_font>("usp_getFontsList", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_issue_card_print_error(Nullable<global::System.Int64> card_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_issue_card_print_error", card_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="system_response_code">No Metadata Documentation available.</param>
        /// <param name="system_area">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<ResponseMessageResult> usp_lookup_response_message(Nullable<global::System.Int32> system_response_code, Nullable<global::System.Int32> system_area, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter system_response_codeParameter;
            if (system_response_code.HasValue)
            {
                system_response_codeParameter = new ObjectParameter("system_response_code", system_response_code);
            }
            else
            {
                system_response_codeParameter = new ObjectParameter("system_response_code", typeof(global::System.Int32));
            }
    
            ObjectParameter system_areaParameter;
            if (system_area.HasValue)
            {
                system_areaParameter = new ObjectParameter("system_area", system_area);
            }
            else
            {
                system_areaParameter = new ObjectParameter("system_area", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ResponseMessageResult>("usp_lookup_response_message", system_response_codeParameter, system_areaParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        public ObjectResult<FontResult> usp_get_fonts_list(Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage)
        {
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<FontResult>("usp_get_fonts_list", pageIndexParameter, rowsPerPageParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="font_name">No Metadata Documentation available.</param>
        /// <param name="resource_path">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        /// <param name="new_font_id">No Metadata Documentation available.</param>
        public int usp_insert_font(global::System.String font_name, global::System.String resource_path, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode, ObjectParameter new_font_id)
        {
            ObjectParameter font_nameParameter;
            if (font_name != null)
            {
                font_nameParameter = new ObjectParameter("font_name", font_name);
            }
            else
            {
                font_nameParameter = new ObjectParameter("font_name", typeof(global::System.String));
            }
    
            ObjectParameter resource_pathParameter;
            if (resource_path != null)
            {
                resource_pathParameter = new ObjectParameter("resource_path", resource_path);
            }
            else
            {
                resource_pathParameter = new ObjectParameter("resource_path", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_insert_font", font_nameParameter, resource_pathParameter, audit_user_idParameter, audit_workstationParameter, resultCode, new_font_id);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="font_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="result_code">No Metadata Documentation available.</param>
        public int usp_delete_font(Nullable<global::System.Int32> font_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter result_code)
        {
            ObjectParameter font_idParameter;
            if (font_id.HasValue)
            {
                font_idParameter = new ObjectParameter("font_id", font_id);
            }
            else
            {
                font_idParameter = new ObjectParameter("font_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_delete_font", font_idParameter, audit_user_idParameter, audit_workstationParameter, result_code);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="font_id">No Metadata Documentation available.</param>
        /// <param name="font_name">No Metadata Documentation available.</param>
        /// <param name="resource_path">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_update_font(Nullable<global::System.Int32> font_id, global::System.String font_name, global::System.String resource_path, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter font_idParameter;
            if (font_id.HasValue)
            {
                font_idParameter = new ObjectParameter("font_id", font_id);
            }
            else
            {
                font_idParameter = new ObjectParameter("font_id", typeof(global::System.Int32));
            }
    
            ObjectParameter font_nameParameter;
            if (font_name != null)
            {
                font_nameParameter = new ObjectParameter("font_name", font_name);
            }
            else
            {
                font_nameParameter = new ObjectParameter("font_name", typeof(global::System.String));
            }
    
            ObjectParameter resource_pathParameter;
            if (resource_path != null)
            {
                resource_pathParameter = new ObjectParameter("resource_path", resource_path);
            }
            else
            {
                resource_pathParameter = new ObjectParameter("resource_path", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_font", font_idParameter, font_nameParameter, resource_pathParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fontid">No Metadata Documentation available.</param>
        public ObjectResult<FontResult> usp_getFont_by_fontid(Nullable<global::System.Int32> fontid)
        {
            ObjectParameter fontidParameter;
            if (fontid.HasValue)
            {
                fontidParameter = new ObjectParameter("fontid", fontid);
            }
            else
            {
                fontidParameter = new ObjectParameter("fontid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<FontResult>("usp_getFont_by_fontid", fontidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="languageId">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<GroupsRolesResult> usp_get_groups_roles_for_user(Nullable<global::System.Int64> user_id, Nullable<global::System.Int32> languageId, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter languageIdParameter;
            if (languageId.HasValue)
            {
                languageIdParameter = new ObjectParameter("languageId", languageId);
            }
            else
            {
                languageIdParameter = new ObjectParameter("languageId", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GroupsRolesResult>("usp_get_groups_roles_for_user", user_idParameter, languageIdParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="connection_parameter_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_delete_connenction_params(Nullable<global::System.Int32> connection_parameter_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter connection_parameter_idParameter;
            if (connection_parameter_id.HasValue)
            {
                connection_parameter_idParameter = new ObjectParameter("connection_parameter_id", connection_parameter_id);
            }
            else
            {
                connection_parameter_idParameter = new ObjectParameter("connection_parameter_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_delete_connenction_params", connection_parameter_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="ldap_setting_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_delete_ldap(Nullable<global::System.Int32> ldap_setting_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter ldap_setting_idParameter;
            if (ldap_setting_id.HasValue)
            {
                ldap_setting_idParameter = new ObjectParameter("ldap_setting_id", ldap_setting_id);
            }
            else
            {
                ldap_setting_idParameter = new ObjectParameter("ldap_setting_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_delete_ldap", ldap_setting_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="product_name">No Metadata Documentation available.</param>
        /// <param name="product_code">No Metadata Documentation available.</param>
        /// <param name="product_bin_code">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="name_on_card_top">No Metadata Documentation available.</param>
        /// <param name="name_on_card_left">No Metadata Documentation available.</param>
        /// <param name="name_on_card_font_size">No Metadata Documentation available.</param>
        /// <param name="font_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        /// <param name="new_product_id">No Metadata Documentation available.</param>
        public int usp_insert_product(global::System.String product_name, global::System.String product_code, global::System.String product_bin_code, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Decimal> name_on_card_top, Nullable<global::System.Decimal> name_on_card_left, Nullable<global::System.Int32> name_on_card_font_size, Nullable<global::System.Int32> font_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode, ObjectParameter new_product_id)
        {
            ObjectParameter product_nameParameter;
            if (product_name != null)
            {
                product_nameParameter = new ObjectParameter("product_name", product_name);
            }
            else
            {
                product_nameParameter = new ObjectParameter("product_name", typeof(global::System.String));
            }
    
            ObjectParameter product_codeParameter;
            if (product_code != null)
            {
                product_codeParameter = new ObjectParameter("product_code", product_code);
            }
            else
            {
                product_codeParameter = new ObjectParameter("product_code", typeof(global::System.String));
            }
    
            ObjectParameter product_bin_codeParameter;
            if (product_bin_code != null)
            {
                product_bin_codeParameter = new ObjectParameter("product_bin_code", product_bin_code);
            }
            else
            {
                product_bin_codeParameter = new ObjectParameter("product_bin_code", typeof(global::System.String));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter name_on_card_topParameter;
            if (name_on_card_top.HasValue)
            {
                name_on_card_topParameter = new ObjectParameter("name_on_card_top", name_on_card_top);
            }
            else
            {
                name_on_card_topParameter = new ObjectParameter("name_on_card_top", typeof(global::System.Decimal));
            }
    
            ObjectParameter name_on_card_leftParameter;
            if (name_on_card_left.HasValue)
            {
                name_on_card_leftParameter = new ObjectParameter("name_on_card_left", name_on_card_left);
            }
            else
            {
                name_on_card_leftParameter = new ObjectParameter("name_on_card_left", typeof(global::System.Decimal));
            }
    
            ObjectParameter name_on_card_font_sizeParameter;
            if (name_on_card_font_size.HasValue)
            {
                name_on_card_font_sizeParameter = new ObjectParameter("Name_on_card_font_size", name_on_card_font_size);
            }
            else
            {
                name_on_card_font_sizeParameter = new ObjectParameter("Name_on_card_font_size", typeof(global::System.Int32));
            }
    
            ObjectParameter font_idParameter;
            if (font_id.HasValue)
            {
                font_idParameter = new ObjectParameter("font_id", font_id);
            }
            else
            {
                font_idParameter = new ObjectParameter("font_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_insert_product", product_nameParameter, product_codeParameter, product_bin_codeParameter, issuer_idParameter, name_on_card_topParameter, name_on_card_leftParameter, name_on_card_font_sizeParameter, font_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode, new_product_id);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branch_card_code_type_id">No Metadata Documentation available.</param>
        /// <param name="is_exception">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<branch_card_codes> usp_list_branch_card_codes(Nullable<global::System.Int32> branch_card_code_type_id, Nullable<global::System.Boolean> is_exception, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter branch_card_code_type_idParameter;
            if (branch_card_code_type_id.HasValue)
            {
                branch_card_code_type_idParameter = new ObjectParameter("branch_card_code_type_id", branch_card_code_type_id);
            }
            else
            {
                branch_card_code_type_idParameter = new ObjectParameter("branch_card_code_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter is_exceptionParameter;
            if (is_exception.HasValue)
            {
                is_exceptionParameter = new ObjectParameter("is_exception", is_exception);
            }
            else
            {
                is_exceptionParameter = new ObjectParameter("is_exception", typeof(global::System.Boolean));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<branch_card_codes>("usp_list_branch_card_codes", branch_card_code_type_idParameter, is_exceptionParameter, audit_user_idParameter, audit_workstationParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="branch_card_code_type_id">No Metadata Documentation available.</param>
        /// <param name="is_exception">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<branch_card_codes> usp_list_branch_card_codes(Nullable<global::System.Int32> branch_card_code_type_id, Nullable<global::System.Boolean> is_exception, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, MergeOption mergeOption)
        {
            ObjectParameter branch_card_code_type_idParameter;
            if (branch_card_code_type_id.HasValue)
            {
                branch_card_code_type_idParameter = new ObjectParameter("branch_card_code_type_id", branch_card_code_type_id);
            }
            else
            {
                branch_card_code_type_idParameter = new ObjectParameter("branch_card_code_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter is_exceptionParameter;
            if (is_exception.HasValue)
            {
                is_exceptionParameter = new ObjectParameter("is_exception", is_exception);
            }
            else
            {
                is_exceptionParameter = new ObjectParameter("is_exception", typeof(global::System.Boolean));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<branch_card_codes>("usp_list_branch_card_codes", mergeOption, branch_card_code_type_idParameter, is_exceptionParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="pin_auth_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_issue_card_PIN_captured(Nullable<global::System.Int64> card_id, Nullable<global::System.Int64> pin_auth_user_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter pin_auth_user_idParameter;
            if (pin_auth_user_id.HasValue)
            {
                pin_auth_user_idParameter = new ObjectParameter("pin_auth_user_id", pin_auth_user_id);
            }
            else
            {
                pin_auth_user_idParameter = new ObjectParameter("pin_auth_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_issue_card_PIN_captured", card_idParameter, pin_auth_user_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<CardSearchResult> usp_find_reissue_cards(Nullable<global::System.Int64> user_id, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<CardSearchResult>("usp_find_reissue_cards", user_idParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="ldap_setting_name">No Metadata Documentation available.</param>
        /// <param name="hostname_or_ip">No Metadata Documentation available.</param>
        /// <param name="path">No Metadata Documentation available.</param>
        /// <param name="domain_name">No Metadata Documentation available.</param>
        /// <param name="auth_username">No Metadata Documentation available.</param>
        /// <param name="auth_password">No Metadata Documentation available.</param>
        /// <param name="auth_type_id">No Metadata Documentation available.</param>
        /// <param name="external_inteface_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="new_ldap_id">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_create_ldap(global::System.String ldap_setting_name, global::System.String hostname_or_ip, global::System.String path, global::System.String domain_name, global::System.String auth_username, global::System.String auth_password, Nullable<global::System.Int32> auth_type_id, global::System.String external_inteface_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter new_ldap_id, ObjectParameter resultCode)
        {
            ObjectParameter ldap_setting_nameParameter;
            if (ldap_setting_name != null)
            {
                ldap_setting_nameParameter = new ObjectParameter("ldap_setting_name", ldap_setting_name);
            }
            else
            {
                ldap_setting_nameParameter = new ObjectParameter("ldap_setting_name", typeof(global::System.String));
            }
    
            ObjectParameter hostname_or_ipParameter;
            if (hostname_or_ip != null)
            {
                hostname_or_ipParameter = new ObjectParameter("hostname_or_ip", hostname_or_ip);
            }
            else
            {
                hostname_or_ipParameter = new ObjectParameter("hostname_or_ip", typeof(global::System.String));
            }
    
            ObjectParameter pathParameter;
            if (path != null)
            {
                pathParameter = new ObjectParameter("path", path);
            }
            else
            {
                pathParameter = new ObjectParameter("path", typeof(global::System.String));
            }
    
            ObjectParameter domain_nameParameter;
            if (domain_name != null)
            {
                domain_nameParameter = new ObjectParameter("domain_name", domain_name);
            }
            else
            {
                domain_nameParameter = new ObjectParameter("domain_name", typeof(global::System.String));
            }
    
            ObjectParameter auth_usernameParameter;
            if (auth_username != null)
            {
                auth_usernameParameter = new ObjectParameter("auth_username", auth_username);
            }
            else
            {
                auth_usernameParameter = new ObjectParameter("auth_username", typeof(global::System.String));
            }
    
            ObjectParameter auth_passwordParameter;
            if (auth_password != null)
            {
                auth_passwordParameter = new ObjectParameter("auth_password", auth_password);
            }
            else
            {
                auth_passwordParameter = new ObjectParameter("auth_password", typeof(global::System.String));
            }
    
            ObjectParameter auth_type_idParameter;
            if (auth_type_id.HasValue)
            {
                auth_type_idParameter = new ObjectParameter("auth_type_id", auth_type_id);
            }
            else
            {
                auth_type_idParameter = new ObjectParameter("auth_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter external_inteface_idParameter;
            if (external_inteface_id != null)
            {
                external_inteface_idParameter = new ObjectParameter("external_inteface_id", external_inteface_id);
            }
            else
            {
                external_inteface_idParameter = new ObjectParameter("external_inteface_id", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_create_ldap", ldap_setting_nameParameter, hostname_or_ipParameter, pathParameter, domain_nameParameter, auth_usernameParameter, auth_passwordParameter, auth_type_idParameter, external_inteface_idParameter, audit_user_idParameter, audit_workstationParameter, new_ldap_id, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="ldap_setting_id">No Metadata Documentation available.</param>
        /// <param name="ldap_setting_name">No Metadata Documentation available.</param>
        /// <param name="hostname_or_ip">No Metadata Documentation available.</param>
        /// <param name="path">No Metadata Documentation available.</param>
        /// <param name="domain_name">No Metadata Documentation available.</param>
        /// <param name="auth_username">No Metadata Documentation available.</param>
        /// <param name="auth_password">No Metadata Documentation available.</param>
        /// <param name="auth_type_id">No Metadata Documentation available.</param>
        /// <param name="external_inteface_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_update_ldap(Nullable<global::System.Int32> ldap_setting_id, global::System.String ldap_setting_name, global::System.String hostname_or_ip, global::System.String path, global::System.String domain_name, global::System.String auth_username, global::System.String auth_password, Nullable<global::System.Int32> auth_type_id, global::System.String external_inteface_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter ldap_setting_idParameter;
            if (ldap_setting_id.HasValue)
            {
                ldap_setting_idParameter = new ObjectParameter("ldap_setting_id", ldap_setting_id);
            }
            else
            {
                ldap_setting_idParameter = new ObjectParameter("ldap_setting_id", typeof(global::System.Int32));
            }
    
            ObjectParameter ldap_setting_nameParameter;
            if (ldap_setting_name != null)
            {
                ldap_setting_nameParameter = new ObjectParameter("ldap_setting_name", ldap_setting_name);
            }
            else
            {
                ldap_setting_nameParameter = new ObjectParameter("ldap_setting_name", typeof(global::System.String));
            }
    
            ObjectParameter hostname_or_ipParameter;
            if (hostname_or_ip != null)
            {
                hostname_or_ipParameter = new ObjectParameter("hostname_or_ip", hostname_or_ip);
            }
            else
            {
                hostname_or_ipParameter = new ObjectParameter("hostname_or_ip", typeof(global::System.String));
            }
    
            ObjectParameter pathParameter;
            if (path != null)
            {
                pathParameter = new ObjectParameter("path", path);
            }
            else
            {
                pathParameter = new ObjectParameter("path", typeof(global::System.String));
            }
    
            ObjectParameter domain_nameParameter;
            if (domain_name != null)
            {
                domain_nameParameter = new ObjectParameter("domain_name", domain_name);
            }
            else
            {
                domain_nameParameter = new ObjectParameter("domain_name", typeof(global::System.String));
            }
    
            ObjectParameter auth_usernameParameter;
            if (auth_username != null)
            {
                auth_usernameParameter = new ObjectParameter("auth_username", auth_username);
            }
            else
            {
                auth_usernameParameter = new ObjectParameter("auth_username", typeof(global::System.String));
            }
    
            ObjectParameter auth_passwordParameter;
            if (auth_password != null)
            {
                auth_passwordParameter = new ObjectParameter("auth_password", auth_password);
            }
            else
            {
                auth_passwordParameter = new ObjectParameter("auth_password", typeof(global::System.String));
            }
    
            ObjectParameter auth_type_idParameter;
            if (auth_type_id.HasValue)
            {
                auth_type_idParameter = new ObjectParameter("auth_type_id", auth_type_id);
            }
            else
            {
                auth_type_idParameter = new ObjectParameter("auth_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter external_inteface_idParameter;
            if (external_inteface_id != null)
            {
                external_inteface_idParameter = new ObjectParameter("external_inteface_id", external_inteface_id);
            }
            else
            {
                external_inteface_idParameter = new ObjectParameter("external_inteface_id", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_ldap", ldap_setting_idParameter, ldap_setting_nameParameter, hostname_or_ipParameter, pathParameter, domain_nameParameter, auth_usernameParameter, auth_passwordParameter, auth_type_idParameter, external_inteface_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="branch_status_id">No Metadata Documentation available.</param>
        /// <param name="user_status_id">No Metadata Documentation available.</param>
        /// <param name="user_role_id">No Metadata Documentation available.</param>
        /// <param name="username">No Metadata Documentation available.</param>
        /// <param name="first_name">No Metadata Documentation available.</param>
        /// <param name="last_name">No Metadata Documentation available.</param>
        /// <param name="languageId">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<user_list_result> usp_get_users_by_branch(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> branch_status_id, Nullable<global::System.Int32> user_status_id, Nullable<global::System.Int32> user_role_id, global::System.String username, global::System.String first_name, global::System.String last_name, Nullable<global::System.Int32> languageId, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_status_idParameter;
            if (branch_status_id.HasValue)
            {
                branch_status_idParameter = new ObjectParameter("branch_status_id", branch_status_id);
            }
            else
            {
                branch_status_idParameter = new ObjectParameter("branch_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_status_idParameter;
            if (user_status_id.HasValue)
            {
                user_status_idParameter = new ObjectParameter("user_status_id", user_status_id);
            }
            else
            {
                user_status_idParameter = new ObjectParameter("user_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_role_idParameter;
            if (user_role_id.HasValue)
            {
                user_role_idParameter = new ObjectParameter("user_role_id", user_role_id);
            }
            else
            {
                user_role_idParameter = new ObjectParameter("user_role_id", typeof(global::System.Int32));
            }
    
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("username", typeof(global::System.String));
            }
    
            ObjectParameter first_nameParameter;
            if (first_name != null)
            {
                first_nameParameter = new ObjectParameter("first_name", first_name);
            }
            else
            {
                first_nameParameter = new ObjectParameter("first_name", typeof(global::System.String));
            }
    
            ObjectParameter last_nameParameter;
            if (last_name != null)
            {
                last_nameParameter = new ObjectParameter("last_name", last_name);
            }
            else
            {
                last_nameParameter = new ObjectParameter("last_name", typeof(global::System.String));
            }
    
            ObjectParameter languageIdParameter;
            if (languageId.HasValue)
            {
                languageIdParameter = new ObjectParameter("languageId", languageId);
            }
            else
            {
                languageIdParameter = new ObjectParameter("languageId", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<user_list_result>("usp_get_users_by_branch", issuer_idParameter, branch_idParameter, branch_status_idParameter, user_status_idParameter, user_role_idParameter, usernameParameter, first_nameParameter, last_nameParameter, languageIdParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="error">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_issue_card_cms_fail(Nullable<global::System.Int64> card_id, global::System.String error, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter errorParameter;
            if (error != null)
            {
                errorParameter = new ObjectParameter("error", error);
            }
            else
            {
                errorParameter = new ObjectParameter("error", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_issue_card_cms_fail", card_idParameter, errorParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_issue_card_cms_success(Nullable<global::System.Int64> card_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_issue_card_cms_success", card_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<issuer> usp_get_issuer_by_branch(Nullable<global::System.Int32> branch_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<issuer>("usp_get_issuer_by_branch", branch_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<issuer> usp_get_issuer_by_branch(Nullable<global::System.Int32> branch_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, MergeOption mergeOption)
        {
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<issuer>("usp_get_issuer_by_branch", mergeOption, branch_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="branch_card_code_id">No Metadata Documentation available.</param>
        /// <param name="spoil_comments">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_issue_card_spoil(Nullable<global::System.Int64> card_id, Nullable<global::System.Int32> branch_card_code_id, global::System.String spoil_comments, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter branch_card_code_idParameter;
            if (branch_card_code_id.HasValue)
            {
                branch_card_code_idParameter = new ObjectParameter("branch_card_code_id", branch_card_code_id);
            }
            else
            {
                branch_card_code_idParameter = new ObjectParameter("branch_card_code_id", typeof(global::System.Int32));
            }
    
            ObjectParameter spoil_commentsParameter;
            if (spoil_comments != null)
            {
                spoil_commentsParameter = new ObjectParameter("spoil_comments", spoil_comments);
            }
            else
            {
                spoil_commentsParameter = new ObjectParameter("spoil_comments", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_issue_card_spoil", card_idParameter, branch_card_code_idParameter, spoil_commentsParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="date_from">No Metadata Documentation available.</param>
        /// <param name="date_to">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<FileHistoryResult> usp_get_file_historys(Nullable<global::System.Int32> issuer_id, Nullable<global::System.DateTimeOffset> date_from, Nullable<global::System.DateTimeOffset> date_to, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter date_fromParameter;
            if (date_from.HasValue)
            {
                date_fromParameter = new ObjectParameter("date_from", date_from);
            }
            else
            {
                date_fromParameter = new ObjectParameter("date_from", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter date_toParameter;
            if (date_to.HasValue)
            {
                date_toParameter = new ObjectParameter("date_to", date_to);
            }
            else
            {
                date_toParameter = new ObjectParameter("date_to", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<FileHistoryResult>("usp_get_file_historys", issuer_idParameter, date_fromParameter, date_toParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="file_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<FileHistoryResult> usp_get_file_history(Nullable<global::System.Int64> file_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter file_idParameter;
            if (file_id.HasValue)
            {
                file_idParameter = new ObjectParameter("file_id", file_id);
            }
            else
            {
                file_idParameter = new ObjectParameter("file_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<FileHistoryResult>("usp_get_file_history", file_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="audit_action_id">No Metadata Documentation available.</param>
        /// <param name="user_role_id">No Metadata Documentation available.</param>
        /// <param name="username">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="date_from">No Metadata Documentation available.</param>
        /// <param name="date_to">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="aduti_workstation">No Metadata Documentation available.</param>
        public ObjectResult<GetAuditData_Result> usp_GetAuditData(Nullable<global::System.Int32> audit_action_id, Nullable<global::System.Int32> user_role_id, global::System.String username, Nullable<global::System.Int32> issuer_id, Nullable<global::System.DateTime> date_from, Nullable<global::System.DateTime> date_to, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String aduti_workstation)
        {
            ObjectParameter audit_action_idParameter;
            if (audit_action_id.HasValue)
            {
                audit_action_idParameter = new ObjectParameter("audit_action_id", audit_action_id);
            }
            else
            {
                audit_action_idParameter = new ObjectParameter("audit_action_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_role_idParameter;
            if (user_role_id.HasValue)
            {
                user_role_idParameter = new ObjectParameter("user_role_id", user_role_id);
            }
            else
            {
                user_role_idParameter = new ObjectParameter("user_role_id", typeof(global::System.Int32));
            }
    
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("username", typeof(global::System.String));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter date_fromParameter;
            if (date_from.HasValue)
            {
                date_fromParameter = new ObjectParameter("date_from", date_from);
            }
            else
            {
                date_fromParameter = new ObjectParameter("date_from", typeof(global::System.DateTime));
            }
    
            ObjectParameter date_toParameter;
            if (date_to.HasValue)
            {
                date_toParameter = new ObjectParameter("date_to", date_to);
            }
            else
            {
                date_toParameter = new ObjectParameter("date_to", typeof(global::System.DateTime));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter aduti_workstationParameter;
            if (aduti_workstation != null)
            {
                aduti_workstationParameter = new ObjectParameter("aduti_workstation", aduti_workstation);
            }
            else
            {
                aduti_workstationParameter = new ObjectParameter("aduti_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GetAuditData_Result>("usp_GetAuditData", audit_action_idParameter, user_role_idParameter, usernameParameter, issuer_idParameter, date_fromParameter, date_toParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, aduti_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="error">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_issue_card_cms_edit_fail(Nullable<global::System.Int64> card_id, global::System.String error, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter errorParameter;
            if (error != null)
            {
                errorParameter = new ObjectParameter("error", error);
            }
            else
            {
                errorParameter = new ObjectParameter("error", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_issue_card_cms_edit_fail", card_idParameter, errorParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="error">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_issue_card_cms_relink_fail(Nullable<global::System.Int64> card_id, global::System.String error, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter errorParameter;
            if (error != null)
            {
                errorParameter = new ObjectParameter("error", error);
            }
            else
            {
                errorParameter = new ObjectParameter("error", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_issue_card_cms_relink_fail", card_idParameter, errorParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_group_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_delete_user_group(Nullable<global::System.Int32> user_group_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter user_group_idParameter;
            if (user_group_id.HasValue)
            {
                user_group_idParameter = new ObjectParameter("user_group_id", user_group_id);
            }
            else
            {
                user_group_idParameter = new ObjectParameter("user_group_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_delete_user_group", user_group_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_status_id">No Metadata Documentation available.</param>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="languageId">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<BranchesResult> usp_get_branches_for_user_admin(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_status_id, Nullable<global::System.Int64> user_id, Nullable<global::System.Int32> languageId, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_status_idParameter;
            if (branch_status_id.HasValue)
            {
                branch_status_idParameter = new ObjectParameter("branch_status_id", branch_status_id);
            }
            else
            {
                branch_status_idParameter = new ObjectParameter("branch_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter languageIdParameter;
            if (languageId.HasValue)
            {
                languageIdParameter = new ObjectParameter("languageId", languageId);
            }
            else
            {
                languageIdParameter = new ObjectParameter("languageId", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<BranchesResult>("usp_get_branches_for_user_admin", issuer_idParameter, branch_status_idParameter, user_idParameter, languageIdParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="load_batch_id">No Metadata Documentation available.</param>
        /// <param name="status_notes">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_load_batch_approve(Nullable<global::System.Int64> load_batch_id, global::System.String status_notes, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter load_batch_idParameter;
            if (load_batch_id.HasValue)
            {
                load_batch_idParameter = new ObjectParameter("load_batch_id", load_batch_id);
            }
            else
            {
                load_batch_idParameter = new ObjectParameter("load_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter status_notesParameter;
            if (status_notes != null)
            {
                status_notesParameter = new ObjectParameter("status_notes", status_notes);
            }
            else
            {
                status_notesParameter = new ObjectParameter("status_notes", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_load_batch_approve", load_batch_idParameter, status_notesParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="load_batch_id">No Metadata Documentation available.</param>
        /// <param name="status_notes">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_load_batch_reject(Nullable<global::System.Int64> load_batch_id, global::System.String status_notes, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter load_batch_idParameter;
            if (load_batch_id.HasValue)
            {
                load_batch_idParameter = new ObjectParameter("load_batch_id", load_batch_id);
            }
            else
            {
                load_batch_idParameter = new ObjectParameter("load_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter status_notesParameter;
            if (status_notes != null)
            {
                status_notesParameter = new ObjectParameter("status_notes", status_notes);
            }
            else
            {
                status_notesParameter = new ObjectParameter("status_notes", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_load_batch_reject", load_batch_idParameter, status_notesParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_user_roles(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_user_roles", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_user_status(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_user_status", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_audit_actions(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_audit_actions", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_branch_card_statuses(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_branch_card_statuses", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_branch_statuses(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_branch_statuses", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_card_issue_reasons(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_card_issue_reasons", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_customer_account_types(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_customer_account_types", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_dist_batch_statuses(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_dist_batch_statuses", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_dist_card_statuses(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_dist_card_statuses", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_file_statuses(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_file_statuses", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_interface_types(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_interface_types", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_issuer_statuses(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_issuer_statuses", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_load_batch_statuses(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_load_batch_statuses", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_load_card_statuses(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_load_card_statuses", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<language> usp_get_languages(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<language>("usp_get_languages", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<language> usp_get_languages(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, MergeOption mergeOption)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<language>("usp_get_languages", mergeOption, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_licensed">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<IssuerLicenseResult> usp_get_license_issuers(Nullable<global::System.Boolean> issuer_licensed, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_licensedParameter;
            if (issuer_licensed.HasValue)
            {
                issuer_licensedParameter = new ObjectParameter("issuer_licensed", issuer_licensed);
            }
            else
            {
                issuer_licensedParameter = new ObjectParameter("issuer_licensed", typeof(global::System.Boolean));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<IssuerLicenseResult>("usp_get_license_issuers", issuer_licensedParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_id">No Metadata Documentation available.</param>
        public ObjectResult<decrypted_user> usp_get_user_by_user_id(Nullable<global::System.Int64> user_id)
        {
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<decrypted_user>("usp_get_user_by_user_id", user_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="ldap_setting_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LdapSettingResult> usp_get_ldap_setting(Nullable<global::System.Int32> ldap_setting_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter ldap_setting_idParameter;
            if (ldap_setting_id.HasValue)
            {
                ldap_setting_idParameter = new ObjectParameter("ldap_setting_id", ldap_setting_id);
            }
            else
            {
                ldap_setting_idParameter = new ObjectParameter("ldap_setting_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LdapSettingResult>("usp_get_ldap_setting", ldap_setting_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="isuerid">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="userid">No Metadata Documentation available.</param>
        /// <param name="branchid">No Metadata Documentation available.</param>
        /// <param name="fromdate">No Metadata Documentation available.</param>
        /// <param name="todate">No Metadata Documentation available.</param>
        /// <param name="life_cycle">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_get_spoilcardsreport(Nullable<global::System.Int32> isuerid, Nullable<global::System.Int32> language_id, Nullable<global::System.Int32> userid, Nullable<global::System.Int32> branchid, Nullable<global::System.DateTimeOffset> fromdate, Nullable<global::System.DateTimeOffset> todate, Nullable<global::System.Int32> life_cycle, Nullable<global::System.Int32> product_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter isueridParameter;
            if (isuerid.HasValue)
            {
                isueridParameter = new ObjectParameter("isuerid", isuerid);
            }
            else
            {
                isueridParameter = new ObjectParameter("isuerid", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter useridParameter;
            if (userid.HasValue)
            {
                useridParameter = new ObjectParameter("userid", userid);
            }
            else
            {
                useridParameter = new ObjectParameter("userid", typeof(global::System.Int32));
            }
    
            ObjectParameter branchidParameter;
            if (branchid.HasValue)
            {
                branchidParameter = new ObjectParameter("branchid", branchid);
            }
            else
            {
                branchidParameter = new ObjectParameter("branchid", typeof(global::System.Int32));
            }
    
            ObjectParameter fromdateParameter;
            if (fromdate.HasValue)
            {
                fromdateParameter = new ObjectParameter("fromdate", fromdate);
            }
            else
            {
                fromdateParameter = new ObjectParameter("fromdate", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter todateParameter;
            if (todate.HasValue)
            {
                todateParameter = new ObjectParameter("todate", todate);
            }
            else
            {
                todateParameter = new ObjectParameter("todate", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter life_cycleParameter;
            if (life_cycle.HasValue)
            {
                life_cycleParameter = new ObjectParameter("life_cycle", life_cycle);
            }
            else
            {
                life_cycleParameter = new ObjectParameter("life_cycle", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_get_spoilcardsreport", isueridParameter, language_idParameter, useridParameter, branchidParameter, fromdateParameter, todateParameter, life_cycleParameter, product_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="life_cycle">No Metadata Documentation available.</param>
        /// <param name="fromdate">No Metadata Documentation available.</param>
        /// <param name="todate">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_get_issuecardsummaryreport(Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> language_id, Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> life_cycle, Nullable<global::System.DateTimeOffset> fromdate, Nullable<global::System.DateTimeOffset> todate, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter life_cycleParameter;
            if (life_cycle.HasValue)
            {
                life_cycleParameter = new ObjectParameter("life_cycle", life_cycle);
            }
            else
            {
                life_cycleParameter = new ObjectParameter("life_cycle", typeof(global::System.Int32));
            }
    
            ObjectParameter fromdateParameter;
            if (fromdate.HasValue)
            {
                fromdateParameter = new ObjectParameter("fromdate", fromdate);
            }
            else
            {
                fromdateParameter = new ObjectParameter("fromdate", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter todateParameter;
            if (todate.HasValue)
            {
                todateParameter = new ObjectParameter("todate", todate);
            }
            else
            {
                todateParameter = new ObjectParameter("todate", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_get_issuecardsummaryreport", branch_idParameter, issuer_idParameter, language_idParameter, product_idParameter, life_cycleParameter, fromdateParameter, todateParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="fromdate">No Metadata Documentation available.</param>
        /// <param name="todate">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="life_cycle">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_get_Spoilcardsummaryreport(Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> language_id, Nullable<global::System.DateTimeOffset> fromdate, Nullable<global::System.DateTimeOffset> todate, Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> life_cycle, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter fromdateParameter;
            if (fromdate.HasValue)
            {
                fromdateParameter = new ObjectParameter("fromdate", fromdate);
            }
            else
            {
                fromdateParameter = new ObjectParameter("fromdate", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter todateParameter;
            if (todate.HasValue)
            {
                todateParameter = new ObjectParameter("todate", todate);
            }
            else
            {
                todateParameter = new ObjectParameter("todate", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter life_cycleParameter;
            if (life_cycle.HasValue)
            {
                life_cycleParameter = new ObjectParameter("life_cycle", life_cycle);
            }
            else
            {
                life_cycleParameter = new ObjectParameter("life_cycle", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_get_Spoilcardsummaryreport", branch_idParameter, issuer_idParameter, language_idParameter, fromdateParameter, todateParameter, product_idParameter, life_cycleParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="branch_status_id">No Metadata Documentation available.</param>
        /// <param name="user_status_id">No Metadata Documentation available.</param>
        /// <param name="user_role_id">No Metadata Documentation available.</param>
        /// <param name="username">No Metadata Documentation available.</param>
        /// <param name="first_name">No Metadata Documentation available.</param>
        /// <param name="last_name">No Metadata Documentation available.</param>
        /// <param name="languageId">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<user_list_result> usp_get_users_by_branch_admin(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> branch_status_id, Nullable<global::System.Int32> user_status_id, Nullable<global::System.Int32> user_role_id, global::System.String username, global::System.String first_name, global::System.String last_name, Nullable<global::System.Int32> languageId, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_status_idParameter;
            if (branch_status_id.HasValue)
            {
                branch_status_idParameter = new ObjectParameter("branch_status_id", branch_status_id);
            }
            else
            {
                branch_status_idParameter = new ObjectParameter("branch_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_status_idParameter;
            if (user_status_id.HasValue)
            {
                user_status_idParameter = new ObjectParameter("user_status_id", user_status_id);
            }
            else
            {
                user_status_idParameter = new ObjectParameter("user_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_role_idParameter;
            if (user_role_id.HasValue)
            {
                user_role_idParameter = new ObjectParameter("user_role_id", user_role_id);
            }
            else
            {
                user_role_idParameter = new ObjectParameter("user_role_id", typeof(global::System.Int32));
            }
    
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("username", typeof(global::System.String));
            }
    
            ObjectParameter first_nameParameter;
            if (first_name != null)
            {
                first_nameParameter = new ObjectParameter("first_name", first_name);
            }
            else
            {
                first_nameParameter = new ObjectParameter("first_name", typeof(global::System.String));
            }
    
            ObjectParameter last_nameParameter;
            if (last_name != null)
            {
                last_nameParameter = new ObjectParameter("last_name", last_name);
            }
            else
            {
                last_nameParameter = new ObjectParameter("last_name", typeof(global::System.String));
            }
    
            ObjectParameter languageIdParameter;
            if (languageId.HasValue)
            {
                languageIdParameter = new ObjectParameter("languageId", languageId);
            }
            else
            {
                languageIdParameter = new ObjectParameter("languageId", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<user_list_result>("usp_get_users_by_branch_admin", issuer_idParameter, branch_idParameter, branch_status_idParameter, user_status_idParameter, user_role_idParameter, usernameParameter, first_nameParameter, last_nameParameter, languageIdParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="languageId">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        public ObjectResult<issuers_Result> usp_get_all_issuers(Nullable<global::System.Int32> languageId, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage)
        {
            ObjectParameter languageIdParameter;
            if (languageId.HasValue)
            {
                languageIdParameter = new ObjectParameter("languageId", languageId);
            }
            else
            {
                languageIdParameter = new ObjectParameter("languageId", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<issuers_Result>("usp_get_all_issuers", languageIdParameter, pageIndexParameter, rowsPerPageParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_get_cms_bank_parameters(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_get_cms_bank_parameters", issuer_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_get_issuer_base_currency(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_get_issuer_base_currency", issuer_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<product_currency1> usp_get_product_base_currency(Nullable<global::System.Int32> product_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<product_currency1>("usp_get_product_base_currency", product_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="productid">No Metadata Documentation available.</param>
        public ObjectResult<product_currency1> usp_get_currenies_product(Nullable<global::System.Int32> productid)
        {
            ObjectParameter productidParameter;
            if (productid.HasValue)
            {
                productidParameter = new ObjectParameter("Productid", productid);
            }
            else
            {
                productidParameter = new ObjectParameter("Productid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<product_currency1>("usp_get_currenies_product", productidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<CardSearchResult> usp_get_cards_in_error(Nullable<global::System.Int64> user_id, Nullable<global::System.Int32> language_id, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<CardSearchResult>("usp_get_cards_in_error", user_idParameter, language_idParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="dist_batch_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<DistBatchResult> usp_get_dist_batch(Nullable<global::System.Int64> dist_batch_id, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter dist_batch_idParameter;
            if (dist_batch_id.HasValue)
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", dist_batch_id);
            }
            else
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<DistBatchResult>("usp_get_dist_batch", dist_batch_idParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="issuerId">No Metadata Documentation available.</param>
        /// <param name="dist_batch_reference">No Metadata Documentation available.</param>
        /// <param name="dist_batch_statuses_id">No Metadata Documentation available.</param>
        /// <param name="flow_dist_batch_statuses_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="card_issue_method_id">No Metadata Documentation available.</param>
        /// <param name="distBatchTypeId">No Metadata Documentation available.</param>
        /// <param name="date_start">No Metadata Documentation available.</param>
        /// <param name="date_end">No Metadata Documentation available.</param>
        /// <param name="include_origin_branch">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<DistBatchResult> usp_get_dist_batches_for_user(Nullable<global::System.Int64> user_id, Nullable<global::System.Int32> issuerId, global::System.String dist_batch_reference, Nullable<global::System.Int32> dist_batch_statuses_id, Nullable<global::System.Int32> flow_dist_batch_statuses_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> card_issue_method_id, Nullable<global::System.Int32> distBatchTypeId, Nullable<global::System.DateTimeOffset> date_start, Nullable<global::System.DateTimeOffset> date_end, Nullable<global::System.Boolean> include_origin_branch, Nullable<global::System.Int32> language_id, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter issuerIdParameter;
            if (issuerId.HasValue)
            {
                issuerIdParameter = new ObjectParameter("issuerId", issuerId);
            }
            else
            {
                issuerIdParameter = new ObjectParameter("issuerId", typeof(global::System.Int32));
            }
    
            ObjectParameter dist_batch_referenceParameter;
            if (dist_batch_reference != null)
            {
                dist_batch_referenceParameter = new ObjectParameter("dist_batch_reference", dist_batch_reference);
            }
            else
            {
                dist_batch_referenceParameter = new ObjectParameter("dist_batch_reference", typeof(global::System.String));
            }
    
            ObjectParameter dist_batch_statuses_idParameter;
            if (dist_batch_statuses_id.HasValue)
            {
                dist_batch_statuses_idParameter = new ObjectParameter("dist_batch_statuses_id", dist_batch_statuses_id);
            }
            else
            {
                dist_batch_statuses_idParameter = new ObjectParameter("dist_batch_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter flow_dist_batch_statuses_idParameter;
            if (flow_dist_batch_statuses_id.HasValue)
            {
                flow_dist_batch_statuses_idParameter = new ObjectParameter("flow_dist_batch_statuses_id", flow_dist_batch_statuses_id);
            }
            else
            {
                flow_dist_batch_statuses_idParameter = new ObjectParameter("flow_dist_batch_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_issue_method_idParameter;
            if (card_issue_method_id.HasValue)
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", card_issue_method_id);
            }
            else
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", typeof(global::System.Int32));
            }
    
            ObjectParameter distBatchTypeIdParameter;
            if (distBatchTypeId.HasValue)
            {
                distBatchTypeIdParameter = new ObjectParameter("distBatchTypeId", distBatchTypeId);
            }
            else
            {
                distBatchTypeIdParameter = new ObjectParameter("distBatchTypeId", typeof(global::System.Int32));
            }
    
            ObjectParameter date_startParameter;
            if (date_start.HasValue)
            {
                date_startParameter = new ObjectParameter("date_start", date_start);
            }
            else
            {
                date_startParameter = new ObjectParameter("date_start", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter date_endParameter;
            if (date_end.HasValue)
            {
                date_endParameter = new ObjectParameter("date_end", date_end);
            }
            else
            {
                date_endParameter = new ObjectParameter("date_end", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter include_origin_branchParameter;
            if (include_origin_branch.HasValue)
            {
                include_origin_branchParameter = new ObjectParameter("include_origin_branch", include_origin_branch);
            }
            else
            {
                include_origin_branchParameter = new ObjectParameter("include_origin_branch", typeof(global::System.Boolean));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<DistBatchResult>("usp_get_dist_batches_for_user", user_idParameter, issuerIdParameter, dist_batch_referenceParameter, dist_batch_statuses_idParameter, flow_dist_batch_statuses_idParameter, branch_idParameter, card_issue_method_idParameter, distBatchTypeIdParameter, date_startParameter, date_endParameter, include_origin_branchParameter, language_idParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="load_batch_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LoadBatchResult> usp_get_load_batch(Nullable<global::System.Int64> load_batch_id, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter load_batch_idParameter;
            if (load_batch_id.HasValue)
            {
                load_batch_idParameter = new ObjectParameter("load_batch_id", load_batch_id);
            }
            else
            {
                load_batch_idParameter = new ObjectParameter("load_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LoadBatchResult>("usp_get_load_batch", load_batch_idParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="load_batch_reference">No Metadata Documentation available.</param>
        /// <param name="issuerId">No Metadata Documentation available.</param>
        /// <param name="load_batch_statuses_id">No Metadata Documentation available.</param>
        /// <param name="date_start">No Metadata Documentation available.</param>
        /// <param name="date_end">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LoadBatchResult> usp_get_load_batches(Nullable<global::System.Int64> user_id, global::System.String load_batch_reference, Nullable<global::System.Int32> issuerId, Nullable<global::System.Int32> load_batch_statuses_id, Nullable<global::System.DateTimeOffset> date_start, Nullable<global::System.DateTimeOffset> date_end, Nullable<global::System.Int32> language_id, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter load_batch_referenceParameter;
            if (load_batch_reference != null)
            {
                load_batch_referenceParameter = new ObjectParameter("load_batch_reference", load_batch_reference);
            }
            else
            {
                load_batch_referenceParameter = new ObjectParameter("load_batch_reference", typeof(global::System.String));
            }
    
            ObjectParameter issuerIdParameter;
            if (issuerId.HasValue)
            {
                issuerIdParameter = new ObjectParameter("issuerId", issuerId);
            }
            else
            {
                issuerIdParameter = new ObjectParameter("issuerId", typeof(global::System.Int32));
            }
    
            ObjectParameter load_batch_statuses_idParameter;
            if (load_batch_statuses_id.HasValue)
            {
                load_batch_statuses_idParameter = new ObjectParameter("load_batch_statuses_id", load_batch_statuses_id);
            }
            else
            {
                load_batch_statuses_idParameter = new ObjectParameter("load_batch_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter date_startParameter;
            if (date_start.HasValue)
            {
                date_startParameter = new ObjectParameter("date_start", date_start);
            }
            else
            {
                date_startParameter = new ObjectParameter("date_start", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter date_endParameter;
            if (date_end.HasValue)
            {
                date_endParameter = new ObjectParameter("date_end", date_end);
            }
            else
            {
                date_endParameter = new ObjectParameter("date_end", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LoadBatchResult>("usp_get_load_batches", user_idParameter, load_batch_referenceParameter, issuerIdParameter, load_batch_statuses_idParameter, date_startParameter, date_endParameter, language_idParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<CardSearchResult> usp_get_operator_cards_inprogress(Nullable<global::System.Int64> user_id, Nullable<global::System.Int32> language_id, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<CardSearchResult>("usp_get_operator_cards_inprogress", user_idParameter, language_idParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_customer_residency(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_customer_residency", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_customer_title(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_customer_title", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_customer_type(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_customer_type", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="reportid">No Metadata Documentation available.</param>
        /// <param name="languageid">No Metadata Documentation available.</param>
        public ObjectResult<report_fields_Result> usp_get_report_fields(Nullable<global::System.Int32> reportid, Nullable<global::System.Int32> languageid)
        {
            ObjectParameter reportidParameter;
            if (reportid.HasValue)
            {
                reportidParameter = new ObjectParameter("reportid", reportid);
            }
            else
            {
                reportidParameter = new ObjectParameter("reportid", typeof(global::System.Int32));
            }
    
            ObjectParameter languageidParameter;
            if (languageid.HasValue)
            {
                languageidParameter = new ObjectParameter("languageid", languageid);
            }
            else
            {
                languageidParameter = new ObjectParameter("languageid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<report_fields_Result>("usp_get_report_fields", reportidParameter, languageidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="file_load_start">No Metadata Documentation available.</param>
        /// <param name="file_load_end">No Metadata Documentation available.</param>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="files_to_process">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="file_load_id">No Metadata Documentation available.</param>
        public int usp_file_load_create(Nullable<global::System.DateTimeOffset> file_load_start, Nullable<global::System.DateTimeOffset> file_load_end, Nullable<global::System.Int64> user_id, Nullable<global::System.Int32> files_to_process, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter file_load_id)
        {
            ObjectParameter file_load_startParameter;
            if (file_load_start.HasValue)
            {
                file_load_startParameter = new ObjectParameter("file_load_start", file_load_start);
            }
            else
            {
                file_load_startParameter = new ObjectParameter("file_load_start", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter file_load_endParameter;
            if (file_load_end.HasValue)
            {
                file_load_endParameter = new ObjectParameter("file_load_end", file_load_end);
            }
            else
            {
                file_load_endParameter = new ObjectParameter("file_load_end", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter files_to_processParameter;
            if (files_to_process.HasValue)
            {
                files_to_processParameter = new ObjectParameter("files_to_process", files_to_process);
            }
            else
            {
                files_to_processParameter = new ObjectParameter("files_to_process", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_file_load_create", file_load_startParameter, file_load_endParameter, user_idParameter, files_to_processParameter, audit_user_idParameter, audit_workstationParameter, file_load_id);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="file_load_id">No Metadata Documentation available.</param>
        /// <param name="file_load_end">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_file_load_update(Nullable<global::System.Int32> file_load_id, Nullable<global::System.DateTimeOffset> file_load_end, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter file_load_idParameter;
            if (file_load_id.HasValue)
            {
                file_load_idParameter = new ObjectParameter("file_load_id", file_load_id);
            }
            else
            {
                file_load_idParameter = new ObjectParameter("file_load_id", typeof(global::System.Int32));
            }
    
            ObjectParameter file_load_endParameter;
            if (file_load_end.HasValue)
            {
                file_load_endParameter = new ObjectParameter("file_load_end", file_load_end);
            }
            else
            {
                file_load_endParameter = new ObjectParameter("file_load_end", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_file_load_update", file_load_idParameter, file_load_endParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="file_load_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="name_of_file">No Metadata Documentation available.</param>
        /// <param name="file_created_date">No Metadata Documentation available.</param>
        /// <param name="file_size">No Metadata Documentation available.</param>
        /// <param name="load_date">No Metadata Documentation available.</param>
        /// <param name="file_status_id">No Metadata Documentation available.</param>
        /// <param name="file_directory">No Metadata Documentation available.</param>
        /// <param name="number_successful_records">No Metadata Documentation available.</param>
        /// <param name="number_failed_records">No Metadata Documentation available.</param>
        /// <param name="file_load_comments">No Metadata Documentation available.</param>
        /// <param name="file_type_id">No Metadata Documentation available.</param>
        /// <param name="file_id">No Metadata Documentation available.</param>
        public int usp_insert_file_history(Nullable<global::System.Int32> file_load_id, Nullable<global::System.Int32> issuer_id, global::System.String name_of_file, Nullable<global::System.DateTimeOffset> file_created_date, Nullable<global::System.Int32> file_size, Nullable<global::System.DateTimeOffset> load_date, Nullable<global::System.Int32> file_status_id, global::System.String file_directory, Nullable<global::System.Int32> number_successful_records, Nullable<global::System.Int32> number_failed_records, global::System.String file_load_comments, Nullable<global::System.Int32> file_type_id, ObjectParameter file_id)
        {
            ObjectParameter file_load_idParameter;
            if (file_load_id.HasValue)
            {
                file_load_idParameter = new ObjectParameter("file_load_id", file_load_id);
            }
            else
            {
                file_load_idParameter = new ObjectParameter("file_load_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter name_of_fileParameter;
            if (name_of_file != null)
            {
                name_of_fileParameter = new ObjectParameter("name_of_file", name_of_file);
            }
            else
            {
                name_of_fileParameter = new ObjectParameter("name_of_file", typeof(global::System.String));
            }
    
            ObjectParameter file_created_dateParameter;
            if (file_created_date.HasValue)
            {
                file_created_dateParameter = new ObjectParameter("file_created_date", file_created_date);
            }
            else
            {
                file_created_dateParameter = new ObjectParameter("file_created_date", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter file_sizeParameter;
            if (file_size.HasValue)
            {
                file_sizeParameter = new ObjectParameter("file_size", file_size);
            }
            else
            {
                file_sizeParameter = new ObjectParameter("file_size", typeof(global::System.Int32));
            }
    
            ObjectParameter load_dateParameter;
            if (load_date.HasValue)
            {
                load_dateParameter = new ObjectParameter("load_date", load_date);
            }
            else
            {
                load_dateParameter = new ObjectParameter("load_date", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter file_status_idParameter;
            if (file_status_id.HasValue)
            {
                file_status_idParameter = new ObjectParameter("file_status_id", file_status_id);
            }
            else
            {
                file_status_idParameter = new ObjectParameter("file_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter file_directoryParameter;
            if (file_directory != null)
            {
                file_directoryParameter = new ObjectParameter("file_directory", file_directory);
            }
            else
            {
                file_directoryParameter = new ObjectParameter("file_directory", typeof(global::System.String));
            }
    
            ObjectParameter number_successful_recordsParameter;
            if (number_successful_records.HasValue)
            {
                number_successful_recordsParameter = new ObjectParameter("number_successful_records", number_successful_records);
            }
            else
            {
                number_successful_recordsParameter = new ObjectParameter("number_successful_records", typeof(global::System.Int32));
            }
    
            ObjectParameter number_failed_recordsParameter;
            if (number_failed_records.HasValue)
            {
                number_failed_recordsParameter = new ObjectParameter("number_failed_records", number_failed_records);
            }
            else
            {
                number_failed_recordsParameter = new ObjectParameter("number_failed_records", typeof(global::System.Int32));
            }
    
            ObjectParameter file_load_commentsParameter;
            if (file_load_comments != null)
            {
                file_load_commentsParameter = new ObjectParameter("file_load_comments", file_load_comments);
            }
            else
            {
                file_load_commentsParameter = new ObjectParameter("file_load_comments", typeof(global::System.String));
            }
    
            ObjectParameter file_type_idParameter;
            if (file_type_id.HasValue)
            {
                file_type_idParameter = new ObjectParameter("file_type_id", file_type_id);
            }
            else
            {
                file_type_idParameter = new ObjectParameter("file_type_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("usp_insert_file_history", file_load_idParameter, issuer_idParameter, name_of_fileParameter, file_created_dateParameter, file_sizeParameter, load_dateParameter, file_status_idParameter, file_directoryParameter, number_successful_recordsParameter, number_failed_recordsParameter, file_load_commentsParameter, file_type_idParameter, file_id);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="enterprise_only">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_get_userroles_enterprise(Nullable<global::System.Int32> language_id, Nullable<global::System.Int32> enterprise_only)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter enterprise_onlyParameter;
            if (enterprise_only.HasValue)
            {
                enterprise_onlyParameter = new ObjectParameter("enterprise_only", enterprise_only);
            }
            else
            {
                enterprise_onlyParameter = new ObjectParameter("enterprise_only", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_get_userroles_enterprise", language_idParameter, enterprise_onlyParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="date_start">No Metadata Documentation available.</param>
        /// <param name="date_end">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<FileLoadResult> usp_get_file_load_list(Nullable<global::System.DateTimeOffset> date_start, Nullable<global::System.DateTimeOffset> date_end, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter date_startParameter;
            if (date_start.HasValue)
            {
                date_startParameter = new ObjectParameter("date_start", date_start);
            }
            else
            {
                date_startParameter = new ObjectParameter("date_start", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter date_endParameter;
            if (date_end.HasValue)
            {
                date_endParameter = new ObjectParameter("date_end", date_end);
            }
            else
            {
                date_endParameter = new ObjectParameter("date_end", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<FileLoadResult>("usp_get_file_load_list", date_startParameter, date_endParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="file_load_id">No Metadata Documentation available.</param>
        /// <param name="file_status_id">No Metadata Documentation available.</param>
        /// <param name="name_of_file">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="date_from">No Metadata Documentation available.</param>
        /// <param name="date_to">No Metadata Documentation available.</param>
        /// <param name="languageId">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<GetFileLoderLog_Result> usp_GetFileLoderLog(Nullable<global::System.Int32> file_load_id, Nullable<global::System.Int32> file_status_id, global::System.String name_of_file, Nullable<global::System.Int32> issuer_id, Nullable<global::System.DateTime> date_from, Nullable<global::System.DateTime> date_to, Nullable<global::System.Int32> languageId, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter file_load_idParameter;
            if (file_load_id.HasValue)
            {
                file_load_idParameter = new ObjectParameter("file_load_id", file_load_id);
            }
            else
            {
                file_load_idParameter = new ObjectParameter("file_load_id", typeof(global::System.Int32));
            }
    
            ObjectParameter file_status_idParameter;
            if (file_status_id.HasValue)
            {
                file_status_idParameter = new ObjectParameter("file_status_id", file_status_id);
            }
            else
            {
                file_status_idParameter = new ObjectParameter("file_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter name_of_fileParameter;
            if (name_of_file != null)
            {
                name_of_fileParameter = new ObjectParameter("name_of_file", name_of_file);
            }
            else
            {
                name_of_fileParameter = new ObjectParameter("name_of_file", typeof(global::System.String));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter date_fromParameter;
            if (date_from.HasValue)
            {
                date_fromParameter = new ObjectParameter("date_from", date_from);
            }
            else
            {
                date_fromParameter = new ObjectParameter("date_from", typeof(global::System.DateTime));
            }
    
            ObjectParameter date_toParameter;
            if (date_to.HasValue)
            {
                date_toParameter = new ObjectParameter("date_to", date_to);
            }
            else
            {
                date_toParameter = new ObjectParameter("date_to", typeof(global::System.DateTime));
            }
    
            ObjectParameter languageIdParameter;
            if (languageId.HasValue)
            {
                languageIdParameter = new ObjectParameter("languageId", languageId);
            }
            else
            {
                languageIdParameter = new ObjectParameter("languageId", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GetFileLoderLog_Result>("usp_GetFileLoderLog", file_load_idParameter, file_status_idParameter, name_of_fileParameter, issuer_idParameter, date_fromParameter, date_toParameter, languageIdParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="user_role_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="priority_id">No Metadata Documentation available.</param>
        /// <param name="card_issue_method_id">No Metadata Documentation available.</param>
        /// <param name="card_number">No Metadata Documentation available.</param>
        /// <param name="branch_card_statuses_id">No Metadata Documentation available.</param>
        /// <param name="operator_user_id">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<CardSearchResult> usp_search_branch_cards(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> user_role_id, Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> priority_id, Nullable<global::System.Int32> card_issue_method_id, global::System.String card_number, Nullable<global::System.Int32> branch_card_statuses_id, Nullable<global::System.Int64> operator_user_id, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_role_idParameter;
            if (user_role_id.HasValue)
            {
                user_role_idParameter = new ObjectParameter("user_role_id", user_role_id);
            }
            else
            {
                user_role_idParameter = new ObjectParameter("user_role_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter priority_idParameter;
            if (priority_id.HasValue)
            {
                priority_idParameter = new ObjectParameter("priority_id", priority_id);
            }
            else
            {
                priority_idParameter = new ObjectParameter("priority_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_issue_method_idParameter;
            if (card_issue_method_id.HasValue)
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", card_issue_method_id);
            }
            else
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_numberParameter;
            if (card_number != null)
            {
                card_numberParameter = new ObjectParameter("card_number", card_number);
            }
            else
            {
                card_numberParameter = new ObjectParameter("card_number", typeof(global::System.String));
            }
    
            ObjectParameter branch_card_statuses_idParameter;
            if (branch_card_statuses_id.HasValue)
            {
                branch_card_statuses_idParameter = new ObjectParameter("branch_card_statuses_id", branch_card_statuses_id);
            }
            else
            {
                branch_card_statuses_idParameter = new ObjectParameter("branch_card_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter operator_user_idParameter;
            if (operator_user_id.HasValue)
            {
                operator_user_idParameter = new ObjectParameter("operator_user_id", operator_user_id);
            }
            else
            {
                operator_user_idParameter = new ObjectParameter("operator_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<CardSearchResult>("usp_search_branch_cards", issuer_idParameter, branch_idParameter, user_role_idParameter, product_idParameter, priority_idParameter, card_issue_method_idParameter, card_numberParameter, branch_card_statuses_idParameter, operator_user_idParameter, pageIndexParameter, rowsPerPageParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<card_priority> usp_get_card_priority_list(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<card_priority>("usp_get_card_priority_list", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<card_priority> usp_get_card_priority_list(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, MergeOption mergeOption)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<card_priority>("usp_get_card_priority_list", mergeOption, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_issue_method_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="card_priority_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="cards_in_batch">No Metadata Documentation available.</param>
        /// <param name="dist_batch_id">No Metadata Documentation available.</param>
        /// <param name="dist_batch_ref">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_request_create_dist_batch(Nullable<global::System.Int32> card_issue_method_id, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> card_priority_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter cards_in_batch, ObjectParameter dist_batch_id, ObjectParameter dist_batch_ref, ObjectParameter resultCode)
        {
            ObjectParameter card_issue_method_idParameter;
            if (card_issue_method_id.HasValue)
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", card_issue_method_id);
            }
            else
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_priority_idParameter;
            if (card_priority_id.HasValue)
            {
                card_priority_idParameter = new ObjectParameter("card_priority_id", card_priority_id);
            }
            else
            {
                card_priority_idParameter = new ObjectParameter("card_priority_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_request_create_dist_batch", card_issue_method_idParameter, issuer_idParameter, branch_idParameter, product_idParameter, card_priority_idParameter, audit_user_idParameter, audit_workstationParameter, cards_in_batch, dist_batch_id, dist_batch_ref, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<CustomerDetailsResult> usp_get_customer_details(Nullable<global::System.Int64> card_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<CustomerDetailsResult>("usp_get_customer_details", card_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="cardrefno">No Metadata Documentation available.</param>
        /// <param name="customeraccountno">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="card_Priority">No Metadata Documentation available.</param>
        /// <param name="card_issuemethod">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<CustomercardsearchResult> usp_get_customercardsearch_list(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, global::System.String cardrefno, global::System.String customeraccountno, Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> card_Priority, Nullable<global::System.Int32> card_issuemethod, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter cardrefnoParameter;
            if (cardrefno != null)
            {
                cardrefnoParameter = new ObjectParameter("cardrefno", cardrefno);
            }
            else
            {
                cardrefnoParameter = new ObjectParameter("cardrefno", typeof(global::System.String));
            }
    
            ObjectParameter customeraccountnoParameter;
            if (customeraccountno != null)
            {
                customeraccountnoParameter = new ObjectParameter("customeraccountno", customeraccountno);
            }
            else
            {
                customeraccountnoParameter = new ObjectParameter("customeraccountno", typeof(global::System.String));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_PriorityParameter;
            if (card_Priority.HasValue)
            {
                card_PriorityParameter = new ObjectParameter("card_Priority", card_Priority);
            }
            else
            {
                card_PriorityParameter = new ObjectParameter("card_Priority", typeof(global::System.Int32));
            }
    
            ObjectParameter card_issuemethodParameter;
            if (card_issuemethod.HasValue)
            {
                card_issuemethodParameter = new ObjectParameter("card_issuemethod", card_issuemethod);
            }
            else
            {
                card_issuemethodParameter = new ObjectParameter("card_issuemethod", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<CustomercardsearchResult>("usp_get_customercardsearch_list", issuer_idParameter, branch_idParameter, cardrefnoParameter, customeraccountnoParameter, product_idParameter, card_PriorityParameter, card_issuemethodParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="languageId">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<card_request_result> usp_get_cardrequests(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> languageId, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter languageIdParameter;
            if (languageId.HasValue)
            {
                languageIdParameter = new ObjectParameter("languageId", languageId);
            }
            else
            {
                languageIdParameter = new ObjectParameter("languageId", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<card_request_result>("usp_get_cardrequests", issuer_idParameter, branch_idParameter, languageIdParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_connection_parameter_type(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_connection_parameter_type", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="card_priority_id">No Metadata Documentation available.</param>
        /// <param name="card_issue_method_id">No Metadata Documentation available.</param>
        /// <param name="cards_in_batch">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="dist_batch_id">No Metadata Documentation available.</param>
        /// <param name="dist_batch_ref">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_request_card_stock(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> card_priority_id, Nullable<global::System.Int32> card_issue_method_id, Nullable<global::System.Int32> cards_in_batch, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter dist_batch_id, ObjectParameter dist_batch_ref, ObjectParameter resultCode)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_priority_idParameter;
            if (card_priority_id.HasValue)
            {
                card_priority_idParameter = new ObjectParameter("card_priority_id", card_priority_id);
            }
            else
            {
                card_priority_idParameter = new ObjectParameter("card_priority_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_issue_method_idParameter;
            if (card_issue_method_id.HasValue)
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", card_issue_method_id);
            }
            else
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", typeof(global::System.Int32));
            }
    
            ObjectParameter cards_in_batchParameter;
            if (cards_in_batch.HasValue)
            {
                cards_in_batchParameter = new ObjectParameter("cards_in_batch", cards_in_batch);
            }
            else
            {
                cards_in_batchParameter = new ObjectParameter("cards_in_batch", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_request_card_stock", issuer_idParameter, branch_idParameter, product_idParameter, card_priority_idParameter, card_issue_method_idParameter, cards_in_batchParameter, audit_user_idParameter, audit_workstationParameter, dist_batch_id, dist_batch_ref, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_card_issue_method(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_card_issue_method", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="dist_batch_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<DistBatchCardDetail> usp_get_dist_batch_card_details(Nullable<global::System.Int64> dist_batch_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter dist_batch_idParameter;
            if (dist_batch_id.HasValue)
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", dist_batch_id);
            }
            else
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<DistBatchCardDetail>("usp_get_dist_batch_card_details", dist_batch_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="customer_account_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="delivery_branch_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="card_priority_id">No Metadata Documentation available.</param>
        /// <param name="customer_account_number">No Metadata Documentation available.</param>
        /// <param name="domicile_branch_id">No Metadata Documentation available.</param>
        /// <param name="account_type_id">No Metadata Documentation available.</param>
        /// <param name="card_issue_reason_id">No Metadata Documentation available.</param>
        /// <param name="customer_first_name">No Metadata Documentation available.</param>
        /// <param name="customer_middle_name">No Metadata Documentation available.</param>
        /// <param name="customer_last_name">No Metadata Documentation available.</param>
        /// <param name="name_on_card">No Metadata Documentation available.</param>
        /// <param name="customer_title_id">No Metadata Documentation available.</param>
        /// <param name="currency_id">No Metadata Documentation available.</param>
        /// <param name="resident_id">No Metadata Documentation available.</param>
        /// <param name="customer_type_id">No Metadata Documentation available.</param>
        /// <param name="cms_id">No Metadata Documentation available.</param>
        /// <param name="contract_number">No Metadata Documentation available.</param>
        /// <param name="customer_idnumber">No Metadata Documentation available.</param>
        /// <param name="contact_number">No Metadata Documentation available.</param>
        /// <param name="customer_email">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_update_customer_details(Nullable<global::System.Int64> card_id, Nullable<global::System.Int64> customer_account_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> delivery_branch_id, Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> card_priority_id, global::System.String customer_account_number, Nullable<global::System.Int32> domicile_branch_id, Nullable<global::System.Int32> account_type_id, Nullable<global::System.Int32> card_issue_reason_id, global::System.String customer_first_name, global::System.String customer_middle_name, global::System.String customer_last_name, global::System.String name_on_card, Nullable<global::System.Int32> customer_title_id, Nullable<global::System.Int32> currency_id, Nullable<global::System.Int32> resident_id, Nullable<global::System.Int32> customer_type_id, global::System.String cms_id, global::System.String contract_number, global::System.String customer_idnumber, global::System.String contact_number, global::System.String customer_email, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter customer_account_idParameter;
            if (customer_account_id.HasValue)
            {
                customer_account_idParameter = new ObjectParameter("customer_account_id", customer_account_id);
            }
            else
            {
                customer_account_idParameter = new ObjectParameter("customer_account_id", typeof(global::System.Int64));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter delivery_branch_idParameter;
            if (delivery_branch_id.HasValue)
            {
                delivery_branch_idParameter = new ObjectParameter("delivery_branch_id", delivery_branch_id);
            }
            else
            {
                delivery_branch_idParameter = new ObjectParameter("delivery_branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_priority_idParameter;
            if (card_priority_id.HasValue)
            {
                card_priority_idParameter = new ObjectParameter("card_priority_id", card_priority_id);
            }
            else
            {
                card_priority_idParameter = new ObjectParameter("card_priority_id", typeof(global::System.Int32));
            }
    
            ObjectParameter customer_account_numberParameter;
            if (customer_account_number != null)
            {
                customer_account_numberParameter = new ObjectParameter("customer_account_number", customer_account_number);
            }
            else
            {
                customer_account_numberParameter = new ObjectParameter("customer_account_number", typeof(global::System.String));
            }
    
            ObjectParameter domicile_branch_idParameter;
            if (domicile_branch_id.HasValue)
            {
                domicile_branch_idParameter = new ObjectParameter("domicile_branch_id", domicile_branch_id);
            }
            else
            {
                domicile_branch_idParameter = new ObjectParameter("domicile_branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter account_type_idParameter;
            if (account_type_id.HasValue)
            {
                account_type_idParameter = new ObjectParameter("account_type_id", account_type_id);
            }
            else
            {
                account_type_idParameter = new ObjectParameter("account_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_issue_reason_idParameter;
            if (card_issue_reason_id.HasValue)
            {
                card_issue_reason_idParameter = new ObjectParameter("card_issue_reason_id", card_issue_reason_id);
            }
            else
            {
                card_issue_reason_idParameter = new ObjectParameter("card_issue_reason_id", typeof(global::System.Int32));
            }
    
            ObjectParameter customer_first_nameParameter;
            if (customer_first_name != null)
            {
                customer_first_nameParameter = new ObjectParameter("customer_first_name", customer_first_name);
            }
            else
            {
                customer_first_nameParameter = new ObjectParameter("customer_first_name", typeof(global::System.String));
            }
    
            ObjectParameter customer_middle_nameParameter;
            if (customer_middle_name != null)
            {
                customer_middle_nameParameter = new ObjectParameter("customer_middle_name", customer_middle_name);
            }
            else
            {
                customer_middle_nameParameter = new ObjectParameter("customer_middle_name", typeof(global::System.String));
            }
    
            ObjectParameter customer_last_nameParameter;
            if (customer_last_name != null)
            {
                customer_last_nameParameter = new ObjectParameter("customer_last_name", customer_last_name);
            }
            else
            {
                customer_last_nameParameter = new ObjectParameter("customer_last_name", typeof(global::System.String));
            }
    
            ObjectParameter name_on_cardParameter;
            if (name_on_card != null)
            {
                name_on_cardParameter = new ObjectParameter("name_on_card", name_on_card);
            }
            else
            {
                name_on_cardParameter = new ObjectParameter("name_on_card", typeof(global::System.String));
            }
    
            ObjectParameter customer_title_idParameter;
            if (customer_title_id.HasValue)
            {
                customer_title_idParameter = new ObjectParameter("customer_title_id", customer_title_id);
            }
            else
            {
                customer_title_idParameter = new ObjectParameter("customer_title_id", typeof(global::System.Int32));
            }
    
            ObjectParameter currency_idParameter;
            if (currency_id.HasValue)
            {
                currency_idParameter = new ObjectParameter("currency_id", currency_id);
            }
            else
            {
                currency_idParameter = new ObjectParameter("currency_id", typeof(global::System.Int32));
            }
    
            ObjectParameter resident_idParameter;
            if (resident_id.HasValue)
            {
                resident_idParameter = new ObjectParameter("resident_id", resident_id);
            }
            else
            {
                resident_idParameter = new ObjectParameter("resident_id", typeof(global::System.Int32));
            }
    
            ObjectParameter customer_type_idParameter;
            if (customer_type_id.HasValue)
            {
                customer_type_idParameter = new ObjectParameter("customer_type_id", customer_type_id);
            }
            else
            {
                customer_type_idParameter = new ObjectParameter("customer_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter cms_idParameter;
            if (cms_id != null)
            {
                cms_idParameter = new ObjectParameter("cms_id", cms_id);
            }
            else
            {
                cms_idParameter = new ObjectParameter("cms_id", typeof(global::System.String));
            }
    
            ObjectParameter contract_numberParameter;
            if (contract_number != null)
            {
                contract_numberParameter = new ObjectParameter("contract_number", contract_number);
            }
            else
            {
                contract_numberParameter = new ObjectParameter("contract_number", typeof(global::System.String));
            }
    
            ObjectParameter customer_idnumberParameter;
            if (customer_idnumber != null)
            {
                customer_idnumberParameter = new ObjectParameter("customer_idnumber", customer_idnumber);
            }
            else
            {
                customer_idnumberParameter = new ObjectParameter("customer_idnumber", typeof(global::System.String));
            }
    
            ObjectParameter contact_numberParameter;
            if (contact_number != null)
            {
                contact_numberParameter = new ObjectParameter("contact_number", contact_number);
            }
            else
            {
                contact_numberParameter = new ObjectParameter("contact_number", typeof(global::System.String));
            }
    
            ObjectParameter customer_emailParameter;
            if (customer_email != null)
            {
                customer_emailParameter = new ObjectParameter("customer_email", customer_email);
            }
            else
            {
                customer_emailParameter = new ObjectParameter("customer_email", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_customer_details", card_idParameter, customer_account_idParameter, branch_idParameter, delivery_branch_idParameter, product_idParameter, card_priority_idParameter, customer_account_numberParameter, domicile_branch_idParameter, account_type_idParameter, card_issue_reason_idParameter, customer_first_nameParameter, customer_middle_nameParameter, customer_last_nameParameter, name_on_cardParameter, customer_title_idParameter, currency_idParameter, resident_idParameter, customer_type_idParameter, cms_idParameter, contract_numberParameter, customer_idnumberParameter, contact_numberParameter, customer_emailParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ServiceRequestCode> usp_get_product_service_request_code1()
        {
            return base.ExecuteFunction<ServiceRequestCode>("usp_get_product_service_request_code1");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ServiceRequestCode1> usp_get_product_service_request_code2()
        {
            return base.ExecuteFunction<ServiceRequestCode1>("usp_get_product_service_request_code2");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ServiceRequestCode2> usp_get_product_service_request_code3()
        {
            return base.ExecuteFunction<ServiceRequestCode2>("usp_get_product_service_request_code3");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuerId">No Metadata Documentation available.</param>
        /// <param name="pin_batch_reference">No Metadata Documentation available.</param>
        /// <param name="pin_batch_statuses_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="card_issue_method_id">No Metadata Documentation available.</param>
        /// <param name="pin_batch_type_id">No Metadata Documentation available.</param>
        /// <param name="date_start">No Metadata Documentation available.</param>
        /// <param name="date_end">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<PinBatchResult> usp_get_pin_batches_for_user(Nullable<global::System.Int32> issuerId, global::System.String pin_batch_reference, Nullable<global::System.Int32> pin_batch_statuses_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> card_issue_method_id, Nullable<global::System.Int32> pin_batch_type_id, Nullable<global::System.DateTimeOffset> date_start, Nullable<global::System.DateTimeOffset> date_end, Nullable<global::System.Int32> language_id, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuerIdParameter;
            if (issuerId.HasValue)
            {
                issuerIdParameter = new ObjectParameter("issuerId", issuerId);
            }
            else
            {
                issuerIdParameter = new ObjectParameter("issuerId", typeof(global::System.Int32));
            }
    
            ObjectParameter pin_batch_referenceParameter;
            if (pin_batch_reference != null)
            {
                pin_batch_referenceParameter = new ObjectParameter("pin_batch_reference", pin_batch_reference);
            }
            else
            {
                pin_batch_referenceParameter = new ObjectParameter("pin_batch_reference", typeof(global::System.String));
            }
    
            ObjectParameter pin_batch_statuses_idParameter;
            if (pin_batch_statuses_id.HasValue)
            {
                pin_batch_statuses_idParameter = new ObjectParameter("pin_batch_statuses_id", pin_batch_statuses_id);
            }
            else
            {
                pin_batch_statuses_idParameter = new ObjectParameter("pin_batch_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_issue_method_idParameter;
            if (card_issue_method_id.HasValue)
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", card_issue_method_id);
            }
            else
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", typeof(global::System.Int32));
            }
    
            ObjectParameter pin_batch_type_idParameter;
            if (pin_batch_type_id.HasValue)
            {
                pin_batch_type_idParameter = new ObjectParameter("pin_batch_type_id", pin_batch_type_id);
            }
            else
            {
                pin_batch_type_idParameter = new ObjectParameter("pin_batch_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter date_startParameter;
            if (date_start.HasValue)
            {
                date_startParameter = new ObjectParameter("date_start", date_start);
            }
            else
            {
                date_startParameter = new ObjectParameter("date_start", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter date_endParameter;
            if (date_end.HasValue)
            {
                date_endParameter = new ObjectParameter("date_end", date_end);
            }
            else
            {
                date_endParameter = new ObjectParameter("date_end", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PinBatchResult>("usp_get_pin_batches_for_user", issuerIdParameter, pin_batch_referenceParameter, pin_batch_statuses_idParameter, branch_idParameter, card_issue_method_idParameter, pin_batch_type_idParameter, date_startParameter, date_endParameter, language_idParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pin_batch_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<PinBatchResult> usp_get_pin_batch(Nullable<global::System.Int64> pin_batch_id, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter pin_batch_idParameter;
            if (pin_batch_id.HasValue)
            {
                pin_batch_idParameter = new ObjectParameter("pin_batch_id", pin_batch_id);
            }
            else
            {
                pin_batch_idParameter = new ObjectParameter("pin_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PinBatchResult>("usp_get_pin_batch", pin_batch_idParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pin_batch_id">No Metadata Documentation available.</param>
        /// <param name="status_notes">No Metadata Documentation available.</param>
        /// <param name="pin_batch_status_id">No Metadata Documentation available.</param>
        /// <param name="new_pin_batch_status_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public ObjectResult<PinBatchResult> usp_pin_batch_status_change(Nullable<global::System.Int64> pin_batch_id, global::System.String status_notes, Nullable<global::System.Int32> pin_batch_status_id, Nullable<global::System.Int32> new_pin_batch_status_id, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter pin_batch_idParameter;
            if (pin_batch_id.HasValue)
            {
                pin_batch_idParameter = new ObjectParameter("pin_batch_id", pin_batch_id);
            }
            else
            {
                pin_batch_idParameter = new ObjectParameter("pin_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter status_notesParameter;
            if (status_notes != null)
            {
                status_notesParameter = new ObjectParameter("status_notes", status_notes);
            }
            else
            {
                status_notesParameter = new ObjectParameter("status_notes", typeof(global::System.String));
            }
    
            ObjectParameter pin_batch_status_idParameter;
            if (pin_batch_status_id.HasValue)
            {
                pin_batch_status_idParameter = new ObjectParameter("pin_batch_status_id", pin_batch_status_id);
            }
            else
            {
                pin_batch_status_idParameter = new ObjectParameter("pin_batch_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter new_pin_batch_status_idParameter;
            if (new_pin_batch_status_id.HasValue)
            {
                new_pin_batch_status_idParameter = new ObjectParameter("new_pin_batch_status_id", new_pin_batch_status_id);
            }
            else
            {
                new_pin_batch_status_idParameter = new ObjectParameter("new_pin_batch_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PinBatchResult>("usp_pin_batch_status_change", pin_batch_idParameter, status_notesParameter, pin_batch_status_idParameter, new_pin_batch_status_idParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="sub_product_id">No Metadata Documentation available.</param>
        public ObjectResult<SubProduct_Result> usp_get_subproduct(Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> sub_product_id)
        {
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter sub_product_idParameter;
            if (sub_product_id.HasValue)
            {
                sub_product_idParameter = new ObjectParameter("sub_product_id", sub_product_id);
            }
            else
            {
                sub_product_idParameter = new ObjectParameter("sub_product_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<SubProduct_Result>("usp_get_subproduct", product_idParameter, sub_product_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="card_issue_method_id">No Metadata Documentation available.</param>
        /// <param name="deletedYN">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        public ObjectResult<SubProduct_Result> usp_get_subproduct_list(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> card_issue_method_id, Nullable<global::System.Boolean> deletedYN, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_issue_method_idParameter;
            if (card_issue_method_id.HasValue)
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", card_issue_method_id);
            }
            else
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", typeof(global::System.Int32));
            }
    
            ObjectParameter deletedYNParameter;
            if (deletedYN.HasValue)
            {
                deletedYNParameter = new ObjectParameter("deletedYN", deletedYN);
            }
            else
            {
                deletedYNParameter = new ObjectParameter("deletedYN", typeof(global::System.Boolean));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<SubProduct_Result>("usp_get_subproduct_list", issuer_idParameter, product_idParameter, card_issue_method_idParameter, deletedYNParameter, pageIndexParameter, rowsPerPageParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="sub_product_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_delete_subproduct(Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> sub_product_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter sub_product_idParameter;
            if (sub_product_id.HasValue)
            {
                sub_product_idParameter = new ObjectParameter("sub_product_id", sub_product_id);
            }
            else
            {
                sub_product_idParameter = new ObjectParameter("sub_product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_delete_subproduct", product_idParameter, sub_product_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="card_issue_method_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> usp_get_card_centre_card_count(Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> card_issue_method_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_issue_method_idParameter;
            if (card_issue_method_id.HasValue)
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", card_issue_method_id);
            }
            else
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("usp_get_card_centre_card_count", branch_idParameter, product_idParameter, card_issue_method_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="dist_batch_id">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<BatchCardDetailsPagedResult> usp_get_dist_batch_card_details_paged(Nullable<global::System.Int64> dist_batch_id, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter dist_batch_idParameter;
            if (dist_batch_id.HasValue)
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", dist_batch_id);
            }
            else
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<BatchCardDetailsPagedResult>("usp_get_dist_batch_card_details_paged", dist_batch_idParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="dist_batch_id">No Metadata Documentation available.</param>
        /// <param name="new_dist_batch_status_id">No Metadata Documentation available.</param>
        /// <param name="status_notes">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public ObjectResult<DistBatchResult> usp_dist_batch_status_reject(Nullable<global::System.Int64> dist_batch_id, Nullable<global::System.Int32> new_dist_batch_status_id, global::System.String status_notes, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter dist_batch_idParameter;
            if (dist_batch_id.HasValue)
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", dist_batch_id);
            }
            else
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter new_dist_batch_status_idParameter;
            if (new_dist_batch_status_id.HasValue)
            {
                new_dist_batch_status_idParameter = new ObjectParameter("new_dist_batch_status_id", new_dist_batch_status_id);
            }
            else
            {
                new_dist_batch_status_idParameter = new ObjectParameter("new_dist_batch_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter status_notesParameter;
            if (status_notes != null)
            {
                status_notesParameter = new ObjectParameter("status_notes", status_notes);
            }
            else
            {
                status_notesParameter = new ObjectParameter("status_notes", typeof(global::System.String));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<DistBatchResult>("usp_dist_batch_status_reject", dist_batch_idParameter, new_dist_batch_status_idParameter, status_notesParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="dist_batch_id">No Metadata Documentation available.</param>
        /// <param name="dist_batch_statuses_id">No Metadata Documentation available.</param>
        /// <param name="new_dist_batch_statuses_id">No Metadata Documentation available.</param>
        /// <param name="status_notes">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="autogenerate_dist_batch_id">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public ObjectResult<DistBatchResult> usp_dist_batch_status_change(Nullable<global::System.Int64> dist_batch_id, Nullable<global::System.Int32> dist_batch_statuses_id, Nullable<global::System.Int32> new_dist_batch_statuses_id, global::System.String status_notes, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, Nullable<global::System.Boolean> autogenerate_dist_batch_id, ObjectParameter resultCode)
        {
            ObjectParameter dist_batch_idParameter;
            if (dist_batch_id.HasValue)
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", dist_batch_id);
            }
            else
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter dist_batch_statuses_idParameter;
            if (dist_batch_statuses_id.HasValue)
            {
                dist_batch_statuses_idParameter = new ObjectParameter("dist_batch_statuses_id", dist_batch_statuses_id);
            }
            else
            {
                dist_batch_statuses_idParameter = new ObjectParameter("dist_batch_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter new_dist_batch_statuses_idParameter;
            if (new_dist_batch_statuses_id.HasValue)
            {
                new_dist_batch_statuses_idParameter = new ObjectParameter("new_dist_batch_statuses_id", new_dist_batch_statuses_id);
            }
            else
            {
                new_dist_batch_statuses_idParameter = new ObjectParameter("new_dist_batch_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter status_notesParameter;
            if (status_notes != null)
            {
                status_notesParameter = new ObjectParameter("status_notes", status_notes);
            }
            else
            {
                status_notesParameter = new ObjectParameter("status_notes", typeof(global::System.String));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            ObjectParameter autogenerate_dist_batch_idParameter;
            if (autogenerate_dist_batch_id.HasValue)
            {
                autogenerate_dist_batch_idParameter = new ObjectParameter("autogenerate_dist_batch_id", autogenerate_dist_batch_id);
            }
            else
            {
                autogenerate_dist_batch_idParameter = new ObjectParameter("autogenerate_dist_batch_id", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<DistBatchResult>("usp_dist_batch_status_change", dist_batch_idParameter, dist_batch_statuses_idParameter, new_dist_batch_statuses_idParameter, status_notesParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter, autogenerate_dist_batch_idParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_type_id">No Metadata Documentation available.</param>
        public ObjectResult<branch> usp_get_branches_for_issuer(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_type_id)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_type_idParameter;
            if (branch_type_id.HasValue)
            {
                branch_type_idParameter = new ObjectParameter("branch_type_id", branch_type_id);
            }
            else
            {
                branch_type_idParameter = new ObjectParameter("branch_type_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<branch>("usp_get_branches_for_issuer", issuer_idParameter, branch_type_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_type_id">No Metadata Documentation available.</param>
        public ObjectResult<branch> usp_get_branches_for_issuer(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_type_id, MergeOption mergeOption)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_type_idParameter;
            if (branch_type_id.HasValue)
            {
                branch_type_idParameter = new ObjectParameter("branch_type_id", branch_type_id);
            }
            else
            {
                branch_type_idParameter = new ObjectParameter("branch_type_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<branch>("usp_get_branches_for_issuer", mergeOption, issuer_idParameter, branch_type_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pin_batch_id">No Metadata Documentation available.</param>
        /// <param name="new_pin_batch_status_id">No Metadata Documentation available.</param>
        /// <param name="status_notes">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public ObjectResult<PinBatchResult> usp_pin_batch_status_reject(Nullable<global::System.Int64> pin_batch_id, Nullable<global::System.Int32> new_pin_batch_status_id, global::System.String status_notes, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter pin_batch_idParameter;
            if (pin_batch_id.HasValue)
            {
                pin_batch_idParameter = new ObjectParameter("pin_batch_id", pin_batch_id);
            }
            else
            {
                pin_batch_idParameter = new ObjectParameter("pin_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter new_pin_batch_status_idParameter;
            if (new_pin_batch_status_id.HasValue)
            {
                new_pin_batch_status_idParameter = new ObjectParameter("new_pin_batch_status_id", new_pin_batch_status_id);
            }
            else
            {
                new_pin_batch_status_idParameter = new ObjectParameter("new_pin_batch_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter status_notesParameter;
            if (status_notes != null)
            {
                status_notesParameter = new ObjectParameter("status_notes", status_notes);
            }
            else
            {
                status_notesParameter = new ObjectParameter("status_notes", typeof(global::System.String));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PinBatchResult>("usp_pin_batch_status_reject", pin_batch_idParameter, new_pin_batch_status_idParameter, status_notesParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="user_role_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="card_number">No Metadata Documentation available.</param>
        /// <param name="card_last_four_digits">No Metadata Documentation available.</param>
        /// <param name="card_refnumber">No Metadata Documentation available.</param>
        /// <param name="batch_reference">No Metadata Documentation available.</param>
        /// <param name="load_card_status_id">No Metadata Documentation available.</param>
        /// <param name="dist_card_status_id">No Metadata Documentation available.</param>
        /// <param name="branch_card_statuses_id">No Metadata Documentation available.</param>
        /// <param name="dist_batch_id">No Metadata Documentation available.</param>
        /// <param name="pin_batch_id">No Metadata Documentation available.</param>
        /// <param name="account_number">No Metadata Documentation available.</param>
        /// <param name="first_name">No Metadata Documentation available.</param>
        /// <param name="last_name">No Metadata Documentation available.</param>
        /// <param name="cms_id">No Metadata Documentation available.</param>
        /// <param name="date_from">No Metadata Documentation available.</param>
        /// <param name="date_to">No Metadata Documentation available.</param>
        /// <param name="threed_batch_id">No Metadata Documentation available.</param>
        /// <param name="card_issue_method_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="priority_id">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<CardSearchResult> usp_search_cards(Nullable<global::System.Int64> user_id, Nullable<global::System.Int32> user_role_id, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, global::System.String card_number, global::System.String card_last_four_digits, global::System.String card_refnumber, global::System.String batch_reference, Nullable<global::System.Int32> load_card_status_id, Nullable<global::System.Int32> dist_card_status_id, Nullable<global::System.Int32> branch_card_statuses_id, Nullable<global::System.Int64> dist_batch_id, Nullable<global::System.Int64> pin_batch_id, global::System.String account_number, global::System.String first_name, global::System.String last_name, global::System.String cms_id, Nullable<global::System.DateTimeOffset> date_from, Nullable<global::System.DateTimeOffset> date_to, Nullable<global::System.Int64> threed_batch_id, Nullable<global::System.Int32> card_issue_method_id, Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> priority_id, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter user_role_idParameter;
            if (user_role_id.HasValue)
            {
                user_role_idParameter = new ObjectParameter("user_role_id", user_role_id);
            }
            else
            {
                user_role_idParameter = new ObjectParameter("user_role_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_numberParameter;
            if (card_number != null)
            {
                card_numberParameter = new ObjectParameter("card_number", card_number);
            }
            else
            {
                card_numberParameter = new ObjectParameter("card_number", typeof(global::System.String));
            }
    
            ObjectParameter card_last_four_digitsParameter;
            if (card_last_four_digits != null)
            {
                card_last_four_digitsParameter = new ObjectParameter("card_last_four_digits", card_last_four_digits);
            }
            else
            {
                card_last_four_digitsParameter = new ObjectParameter("card_last_four_digits", typeof(global::System.String));
            }
    
            ObjectParameter card_refnumberParameter;
            if (card_refnumber != null)
            {
                card_refnumberParameter = new ObjectParameter("card_refnumber", card_refnumber);
            }
            else
            {
                card_refnumberParameter = new ObjectParameter("card_refnumber", typeof(global::System.String));
            }
    
            ObjectParameter batch_referenceParameter;
            if (batch_reference != null)
            {
                batch_referenceParameter = new ObjectParameter("batch_reference", batch_reference);
            }
            else
            {
                batch_referenceParameter = new ObjectParameter("batch_reference", typeof(global::System.String));
            }
    
            ObjectParameter load_card_status_idParameter;
            if (load_card_status_id.HasValue)
            {
                load_card_status_idParameter = new ObjectParameter("load_card_status_id", load_card_status_id);
            }
            else
            {
                load_card_status_idParameter = new ObjectParameter("load_card_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter dist_card_status_idParameter;
            if (dist_card_status_id.HasValue)
            {
                dist_card_status_idParameter = new ObjectParameter("dist_card_status_id", dist_card_status_id);
            }
            else
            {
                dist_card_status_idParameter = new ObjectParameter("dist_card_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_card_statuses_idParameter;
            if (branch_card_statuses_id.HasValue)
            {
                branch_card_statuses_idParameter = new ObjectParameter("branch_card_statuses_id", branch_card_statuses_id);
            }
            else
            {
                branch_card_statuses_idParameter = new ObjectParameter("branch_card_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter dist_batch_idParameter;
            if (dist_batch_id.HasValue)
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", dist_batch_id);
            }
            else
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter pin_batch_idParameter;
            if (pin_batch_id.HasValue)
            {
                pin_batch_idParameter = new ObjectParameter("pin_batch_id", pin_batch_id);
            }
            else
            {
                pin_batch_idParameter = new ObjectParameter("pin_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter account_numberParameter;
            if (account_number != null)
            {
                account_numberParameter = new ObjectParameter("account_number", account_number);
            }
            else
            {
                account_numberParameter = new ObjectParameter("account_number", typeof(global::System.String));
            }
    
            ObjectParameter first_nameParameter;
            if (first_name != null)
            {
                first_nameParameter = new ObjectParameter("first_name", first_name);
            }
            else
            {
                first_nameParameter = new ObjectParameter("first_name", typeof(global::System.String));
            }
    
            ObjectParameter last_nameParameter;
            if (last_name != null)
            {
                last_nameParameter = new ObjectParameter("last_name", last_name);
            }
            else
            {
                last_nameParameter = new ObjectParameter("last_name", typeof(global::System.String));
            }
    
            ObjectParameter cms_idParameter;
            if (cms_id != null)
            {
                cms_idParameter = new ObjectParameter("cms_id", cms_id);
            }
            else
            {
                cms_idParameter = new ObjectParameter("cms_id", typeof(global::System.String));
            }
    
            ObjectParameter date_fromParameter;
            if (date_from.HasValue)
            {
                date_fromParameter = new ObjectParameter("date_from", date_from);
            }
            else
            {
                date_fromParameter = new ObjectParameter("date_from", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter date_toParameter;
            if (date_to.HasValue)
            {
                date_toParameter = new ObjectParameter("date_to", date_to);
            }
            else
            {
                date_toParameter = new ObjectParameter("date_to", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter threed_batch_idParameter;
            if (threed_batch_id.HasValue)
            {
                threed_batch_idParameter = new ObjectParameter("threed_batch_id", threed_batch_id);
            }
            else
            {
                threed_batch_idParameter = new ObjectParameter("threed_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter card_issue_method_idParameter;
            if (card_issue_method_id.HasValue)
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", card_issue_method_id);
            }
            else
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter priority_idParameter;
            if (priority_id.HasValue)
            {
                priority_idParameter = new ObjectParameter("priority_id", priority_id);
            }
            else
            {
                priority_idParameter = new ObjectParameter("priority_id", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<CardSearchResult>("usp_search_cards", user_idParameter, user_role_idParameter, issuer_idParameter, branch_idParameter, card_numberParameter, card_last_four_digitsParameter, card_refnumberParameter, batch_referenceParameter, load_card_status_idParameter, dist_card_status_idParameter, branch_card_statuses_idParameter, dist_batch_idParameter, pin_batch_idParameter, account_numberParameter, first_nameParameter, last_nameParameter, cms_idParameter, date_fromParameter, date_toParameter, threed_batch_idParameter, card_issue_method_idParameter, product_idParameter, priority_idParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="date_from">No Metadata Documentation available.</param>
        /// <param name="date_to">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_branch_order_report(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.DateTimeOffset> date_from, Nullable<global::System.DateTimeOffset> date_to, Nullable<global::System.Int32> product_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter date_fromParameter;
            if (date_from.HasValue)
            {
                date_fromParameter = new ObjectParameter("date_from", date_from);
            }
            else
            {
                date_fromParameter = new ObjectParameter("date_from", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter date_toParameter;
            if (date_to.HasValue)
            {
                date_toParameter = new ObjectParameter("date_to", date_to);
            }
            else
            {
                date_toParameter = new ObjectParameter("date_to", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_branch_order_report", issuer_idParameter, branch_idParameter, date_fromParameter, date_toParameter, product_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="date_from">No Metadata Documentation available.</param>
        /// <param name="date_to">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_card_dispatch_report(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.DateTimeOffset> date_from, Nullable<global::System.DateTimeOffset> date_to, Nullable<global::System.Int32> product_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter date_fromParameter;
            if (date_from.HasValue)
            {
                date_fromParameter = new ObjectParameter("date_from", date_from);
            }
            else
            {
                date_fromParameter = new ObjectParameter("date_from", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter date_toParameter;
            if (date_to.HasValue)
            {
                date_toParameter = new ObjectParameter("date_to", date_to);
            }
            else
            {
                date_toParameter = new ObjectParameter("date_to", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_card_dispatch_report", issuer_idParameter, branch_idParameter, date_fromParameter, date_toParameter, product_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="date_from">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_card_expiry_report(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> product_id, Nullable<global::System.DateTimeOffset> date_from, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter date_fromParameter;
            if (date_from.HasValue)
            {
                date_fromParameter = new ObjectParameter("date_from", date_from);
            }
            else
            {
                date_fromParameter = new ObjectParameter("date_from", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_card_expiry_report", issuer_idParameter, branch_idParameter, product_idParameter, date_fromParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="date_from">No Metadata Documentation available.</param>
        /// <param name="date_to">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_card_production_report(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> product_id, Nullable<global::System.DateTimeOffset> date_from, Nullable<global::System.DateTimeOffset> date_to, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter date_fromParameter;
            if (date_from.HasValue)
            {
                date_fromParameter = new ObjectParameter("date_from", date_from);
            }
            else
            {
                date_fromParameter = new ObjectParameter("date_from", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter date_toParameter;
            if (date_to.HasValue)
            {
                date_toParameter = new ObjectParameter("date_to", date_to);
            }
            else
            {
                date_toParameter = new ObjectParameter("date_to", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_card_production_report", issuer_idParameter, branch_idParameter, product_idParameter, date_fromParameter, date_toParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="date_from">No Metadata Documentation available.</param>
        /// <param name="date_to">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_pin_mailer_report(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.DateTimeOffset> date_from, Nullable<global::System.DateTimeOffset> date_to, Nullable<global::System.Int32> product_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter date_fromParameter;
            if (date_from.HasValue)
            {
                date_fromParameter = new ObjectParameter("date_from", date_from);
            }
            else
            {
                date_fromParameter = new ObjectParameter("date_from", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter date_toParameter;
            if (date_to.HasValue)
            {
                date_toParameter = new ObjectParameter("date_to", date_to);
            }
            else
            {
                date_toParameter = new ObjectParameter("date_to", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_pin_mailer_report", issuer_idParameter, branch_idParameter, date_fromParameter, date_toParameter, product_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<FeeSchemeResult> usp_get_product_fee_scheme_list(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<FeeSchemeResult>("usp_get_product_fee_scheme_list", issuer_idParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fee_scheme_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<FeeSchemeResult> usp_get_product_fee_scheme(Nullable<global::System.Int32> fee_scheme_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter fee_scheme_idParameter;
            if (fee_scheme_id.HasValue)
            {
                fee_scheme_idParameter = new ObjectParameter("fee_scheme_id", fee_scheme_id);
            }
            else
            {
                fee_scheme_idParameter = new ObjectParameter("fee_scheme_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<FeeSchemeResult>("usp_get_product_fee_scheme", fee_scheme_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fee_scheme_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<FeeDetailResult> usp_get_product_fee_details(Nullable<global::System.Int32> fee_scheme_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter fee_scheme_idParameter;
            if (fee_scheme_id.HasValue)
            {
                fee_scheme_idParameter = new ObjectParameter("fee_scheme_id", fee_scheme_id);
            }
            else
            {
                fee_scheme_idParameter = new ObjectParameter("fee_scheme_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<FeeDetailResult>("usp_get_product_fee_details", fee_scheme_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fee_detail_id">No Metadata Documentation available.</param>
        public ObjectResult<FeeChargeResult> usp_get_product_fee_charges(Nullable<global::System.Int32> fee_detail_id)
        {
            ObjectParameter fee_detail_idParameter;
            if (fee_detail_id.HasValue)
            {
                fee_detail_idParameter = new ObjectParameter("fee_detail_id", fee_detail_id);
            }
            else
            {
                fee_detail_idParameter = new ObjectParameter("fee_detail_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<FeeChargeResult>("usp_get_product_fee_charges", fee_detail_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="product_id">No Metadata Documentation available.</param>
        public ObjectResult<ProductFeeDetailsResult> usp_get_product_details_by_product(Nullable<global::System.Int32> product_id)
        {
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<ProductFeeDetailsResult>("usp_get_product_details_by_product", product_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fee_detail_id">No Metadata Documentation available.</param>
        /// <param name="currency_id">No Metadata Documentation available.</param>
        /// <param name="card_issue_reason_id">No Metadata Documentation available.</param>
        /// <param name="cbs_account_type">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<ProductChargeResult> usp_get_current_product_fee(Nullable<global::System.Int32> fee_detail_id, Nullable<global::System.Int32> currency_id, Nullable<global::System.Int32> card_issue_reason_id, global::System.String cbs_account_type, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter fee_detail_idParameter;
            if (fee_detail_id.HasValue)
            {
                fee_detail_idParameter = new ObjectParameter("fee_detail_id", fee_detail_id);
            }
            else
            {
                fee_detail_idParameter = new ObjectParameter("fee_detail_id", typeof(global::System.Int32));
            }
    
            ObjectParameter currency_idParameter;
            if (currency_id.HasValue)
            {
                currency_idParameter = new ObjectParameter("currency_id", currency_id);
            }
            else
            {
                currency_idParameter = new ObjectParameter("currency_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_issue_reason_idParameter;
            if (card_issue_reason_id.HasValue)
            {
                card_issue_reason_idParameter = new ObjectParameter("card_issue_reason_id", card_issue_reason_id);
            }
            else
            {
                card_issue_reason_idParameter = new ObjectParameter("card_issue_reason_id", typeof(global::System.Int32));
            }
    
            ObjectParameter cbs_account_typeParameter;
            if (cbs_account_type != null)
            {
                cbs_account_typeParameter = new ObjectParameter("cbs_account_type", cbs_account_type);
            }
            else
            {
                cbs_account_typeParameter = new ObjectParameter("cbs_account_type", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ProductChargeResult>("usp_get_current_product_fee", fee_detail_idParameter, currency_idParameter, card_issue_reason_idParameter, cbs_account_typeParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="table_id">No Metadata Documentation available.</param>
        public int AddMacForTable(Nullable<global::System.Int32> table_id)
        {
            ObjectParameter table_idParameter;
            if (table_id.HasValue)
            {
                table_idParameter = new ObjectParameter("Table_id", table_id);
            }
            else
            {
                table_idParameter = new ObjectParameter("Table_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("AddMacForTable", table_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="operator_user_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_cards_checkInOut(Nullable<global::System.Int64> operator_user_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter operator_user_idParameter;
            if (operator_user_id.HasValue)
            {
                operator_user_idParameter = new ObjectParameter("operator_user_id", operator_user_id);
            }
            else
            {
                operator_user_idParameter = new ObjectParameter("operator_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_cards_checkInOut", operator_user_idParameter, branch_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int usp_count_distinct_load_cards()
        {
            return base.ExecuteFunction("usp_count_distinct_load_cards");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_issue_method_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="card_priority_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="cards_in_batch">No Metadata Documentation available.</param>
        /// <param name="dist_batch_id">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_create_cms_upload_batch(Nullable<global::System.Int32> card_issue_method_id, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> card_priority_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter cards_in_batch, ObjectParameter dist_batch_id, ObjectParameter resultCode)
        {
            ObjectParameter card_issue_method_idParameter;
            if (card_issue_method_id.HasValue)
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", card_issue_method_id);
            }
            else
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_priority_idParameter;
            if (card_priority_id.HasValue)
            {
                card_priority_idParameter = new ObjectParameter("card_priority_id", card_priority_id);
            }
            else
            {
                card_priority_idParameter = new ObjectParameter("card_priority_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_create_cms_upload_batch", card_issue_method_idParameter, issuer_idParameter, branch_idParameter, product_idParameter, card_priority_idParameter, audit_user_idParameter, audit_workstationParameter, cards_in_batch, dist_batch_id, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="fee_scheme_name">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="new_fee_scheme_id">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_create_fee_scheme(Nullable<global::System.Int32> issuer_id, global::System.String fee_scheme_name, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter new_fee_scheme_id, ObjectParameter resultCode)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter fee_scheme_nameParameter;
            if (fee_scheme_name != null)
            {
                fee_scheme_nameParameter = new ObjectParameter("fee_scheme_name", fee_scheme_name);
            }
            else
            {
                fee_scheme_nameParameter = new ObjectParameter("fee_scheme_name", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_create_fee_scheme", issuer_idParameter, fee_scheme_nameParameter, audit_user_idParameter, audit_workstationParameter, new_fee_scheme_id, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_status_id">No Metadata Documentation available.</param>
        /// <param name="country_id">No Metadata Documentation available.</param>
        /// <param name="issuer_name">No Metadata Documentation available.</param>
        /// <param name="issuer_code">No Metadata Documentation available.</param>
        /// <param name="auto_create_dist_batch">No Metadata Documentation available.</param>
        /// <param name="instant_card_issue_YN">No Metadata Documentation available.</param>
        /// <param name="pin_mailer_printing_YN">No Metadata Documentation available.</param>
        /// <param name="delete_pin_file_YN">No Metadata Documentation available.</param>
        /// <param name="delete_card_file_YN">No Metadata Documentation available.</param>
        /// <param name="account_validation_YN">No Metadata Documentation available.</param>
        /// <param name="maker_checker_YN">No Metadata Documentation available.</param>
        /// <param name="enable_instant_pin_YN">No Metadata Documentation available.</param>
        /// <param name="authorise_pin_issue_YN">No Metadata Documentation available.</param>
        /// <param name="authorise_pin_reissue_YN">No Metadata Documentation available.</param>
        /// <param name="license_file">No Metadata Documentation available.</param>
        /// <param name="license_key">No Metadata Documentation available.</param>
        /// <param name="cards_file_location">No Metadata Documentation available.</param>
        /// <param name="card_file_type">No Metadata Documentation available.</param>
        /// <param name="pin_file_location">No Metadata Documentation available.</param>
        /// <param name="pin_encrypted_ZPK">No Metadata Documentation available.</param>
        /// <param name="pin_mailer_file_type">No Metadata Documentation available.</param>
        /// <param name="pin_printer_name">No Metadata Documentation available.</param>
        /// <param name="pin_encrypted_PWK">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="card_ref_preference">No Metadata Documentation available.</param>
        /// <param name="classic_card_issue_YN">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="new_issuer_id">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_create_issuer(Nullable<global::System.Int32> issuer_status_id, Nullable<global::System.Int32> country_id, global::System.String issuer_name, global::System.String issuer_code, Nullable<global::System.Boolean> auto_create_dist_batch, Nullable<global::System.Boolean> instant_card_issue_YN, Nullable<global::System.Boolean> pin_mailer_printing_YN, Nullable<global::System.Boolean> delete_pin_file_YN, Nullable<global::System.Boolean> delete_card_file_YN, Nullable<global::System.Boolean> account_validation_YN, Nullable<global::System.Boolean> maker_checker_YN, Nullable<global::System.Boolean> enable_instant_pin_YN, Nullable<global::System.Boolean> authorise_pin_issue_YN, Nullable<global::System.Boolean> authorise_pin_reissue_YN, global::System.String license_file, global::System.String license_key, global::System.String cards_file_location, global::System.String card_file_type, global::System.String pin_file_location, global::System.String pin_encrypted_ZPK, global::System.String pin_mailer_file_type, global::System.String pin_printer_name, global::System.String pin_encrypted_PWK, Nullable<global::System.Int32> language_id, Nullable<global::System.Boolean> card_ref_preference, Nullable<global::System.Boolean> classic_card_issue_YN, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter new_issuer_id, ObjectParameter resultCode)
        {
            ObjectParameter issuer_status_idParameter;
            if (issuer_status_id.HasValue)
            {
                issuer_status_idParameter = new ObjectParameter("issuer_status_id", issuer_status_id);
            }
            else
            {
                issuer_status_idParameter = new ObjectParameter("issuer_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter country_idParameter;
            if (country_id.HasValue)
            {
                country_idParameter = new ObjectParameter("country_id", country_id);
            }
            else
            {
                country_idParameter = new ObjectParameter("country_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_nameParameter;
            if (issuer_name != null)
            {
                issuer_nameParameter = new ObjectParameter("issuer_name", issuer_name);
            }
            else
            {
                issuer_nameParameter = new ObjectParameter("issuer_name", typeof(global::System.String));
            }
    
            ObjectParameter issuer_codeParameter;
            if (issuer_code != null)
            {
                issuer_codeParameter = new ObjectParameter("issuer_code", issuer_code);
            }
            else
            {
                issuer_codeParameter = new ObjectParameter("issuer_code", typeof(global::System.String));
            }
    
            ObjectParameter auto_create_dist_batchParameter;
            if (auto_create_dist_batch.HasValue)
            {
                auto_create_dist_batchParameter = new ObjectParameter("auto_create_dist_batch", auto_create_dist_batch);
            }
            else
            {
                auto_create_dist_batchParameter = new ObjectParameter("auto_create_dist_batch", typeof(global::System.Boolean));
            }
    
            ObjectParameter instant_card_issue_YNParameter;
            if (instant_card_issue_YN.HasValue)
            {
                instant_card_issue_YNParameter = new ObjectParameter("instant_card_issue_YN", instant_card_issue_YN);
            }
            else
            {
                instant_card_issue_YNParameter = new ObjectParameter("instant_card_issue_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter pin_mailer_printing_YNParameter;
            if (pin_mailer_printing_YN.HasValue)
            {
                pin_mailer_printing_YNParameter = new ObjectParameter("pin_mailer_printing_YN", pin_mailer_printing_YN);
            }
            else
            {
                pin_mailer_printing_YNParameter = new ObjectParameter("pin_mailer_printing_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter delete_pin_file_YNParameter;
            if (delete_pin_file_YN.HasValue)
            {
                delete_pin_file_YNParameter = new ObjectParameter("delete_pin_file_YN", delete_pin_file_YN);
            }
            else
            {
                delete_pin_file_YNParameter = new ObjectParameter("delete_pin_file_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter delete_card_file_YNParameter;
            if (delete_card_file_YN.HasValue)
            {
                delete_card_file_YNParameter = new ObjectParameter("delete_card_file_YN", delete_card_file_YN);
            }
            else
            {
                delete_card_file_YNParameter = new ObjectParameter("delete_card_file_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter account_validation_YNParameter;
            if (account_validation_YN.HasValue)
            {
                account_validation_YNParameter = new ObjectParameter("account_validation_YN", account_validation_YN);
            }
            else
            {
                account_validation_YNParameter = new ObjectParameter("account_validation_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter maker_checker_YNParameter;
            if (maker_checker_YN.HasValue)
            {
                maker_checker_YNParameter = new ObjectParameter("maker_checker_YN", maker_checker_YN);
            }
            else
            {
                maker_checker_YNParameter = new ObjectParameter("maker_checker_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter enable_instant_pin_YNParameter;
            if (enable_instant_pin_YN.HasValue)
            {
                enable_instant_pin_YNParameter = new ObjectParameter("enable_instant_pin_YN", enable_instant_pin_YN);
            }
            else
            {
                enable_instant_pin_YNParameter = new ObjectParameter("enable_instant_pin_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter authorise_pin_issue_YNParameter;
            if (authorise_pin_issue_YN.HasValue)
            {
                authorise_pin_issue_YNParameter = new ObjectParameter("authorise_pin_issue_YN", authorise_pin_issue_YN);
            }
            else
            {
                authorise_pin_issue_YNParameter = new ObjectParameter("authorise_pin_issue_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter authorise_pin_reissue_YNParameter;
            if (authorise_pin_reissue_YN.HasValue)
            {
                authorise_pin_reissue_YNParameter = new ObjectParameter("authorise_pin_reissue_YN", authorise_pin_reissue_YN);
            }
            else
            {
                authorise_pin_reissue_YNParameter = new ObjectParameter("authorise_pin_reissue_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter license_fileParameter;
            if (license_file != null)
            {
                license_fileParameter = new ObjectParameter("license_file", license_file);
            }
            else
            {
                license_fileParameter = new ObjectParameter("license_file", typeof(global::System.String));
            }
    
            ObjectParameter license_keyParameter;
            if (license_key != null)
            {
                license_keyParameter = new ObjectParameter("license_key", license_key);
            }
            else
            {
                license_keyParameter = new ObjectParameter("license_key", typeof(global::System.String));
            }
    
            ObjectParameter cards_file_locationParameter;
            if (cards_file_location != null)
            {
                cards_file_locationParameter = new ObjectParameter("cards_file_location", cards_file_location);
            }
            else
            {
                cards_file_locationParameter = new ObjectParameter("cards_file_location", typeof(global::System.String));
            }
    
            ObjectParameter card_file_typeParameter;
            if (card_file_type != null)
            {
                card_file_typeParameter = new ObjectParameter("card_file_type", card_file_type);
            }
            else
            {
                card_file_typeParameter = new ObjectParameter("card_file_type", typeof(global::System.String));
            }
    
            ObjectParameter pin_file_locationParameter;
            if (pin_file_location != null)
            {
                pin_file_locationParameter = new ObjectParameter("pin_file_location", pin_file_location);
            }
            else
            {
                pin_file_locationParameter = new ObjectParameter("pin_file_location", typeof(global::System.String));
            }
    
            ObjectParameter pin_encrypted_ZPKParameter;
            if (pin_encrypted_ZPK != null)
            {
                pin_encrypted_ZPKParameter = new ObjectParameter("pin_encrypted_ZPK", pin_encrypted_ZPK);
            }
            else
            {
                pin_encrypted_ZPKParameter = new ObjectParameter("pin_encrypted_ZPK", typeof(global::System.String));
            }
    
            ObjectParameter pin_mailer_file_typeParameter;
            if (pin_mailer_file_type != null)
            {
                pin_mailer_file_typeParameter = new ObjectParameter("pin_mailer_file_type", pin_mailer_file_type);
            }
            else
            {
                pin_mailer_file_typeParameter = new ObjectParameter("pin_mailer_file_type", typeof(global::System.String));
            }
    
            ObjectParameter pin_printer_nameParameter;
            if (pin_printer_name != null)
            {
                pin_printer_nameParameter = new ObjectParameter("pin_printer_name", pin_printer_name);
            }
            else
            {
                pin_printer_nameParameter = new ObjectParameter("pin_printer_name", typeof(global::System.String));
            }
    
            ObjectParameter pin_encrypted_PWKParameter;
            if (pin_encrypted_PWK != null)
            {
                pin_encrypted_PWKParameter = new ObjectParameter("pin_encrypted_PWK", pin_encrypted_PWK);
            }
            else
            {
                pin_encrypted_PWKParameter = new ObjectParameter("pin_encrypted_PWK", typeof(global::System.String));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_ref_preferenceParameter;
            if (card_ref_preference.HasValue)
            {
                card_ref_preferenceParameter = new ObjectParameter("card_ref_preference", card_ref_preference);
            }
            else
            {
                card_ref_preferenceParameter = new ObjectParameter("card_ref_preference", typeof(global::System.Boolean));
            }
    
            ObjectParameter classic_card_issue_YNParameter;
            if (classic_card_issue_YN.HasValue)
            {
                classic_card_issue_YNParameter = new ObjectParameter("classic_card_issue_YN", classic_card_issue_YN);
            }
            else
            {
                classic_card_issue_YNParameter = new ObjectParameter("classic_card_issue_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_create_issuer", issuer_status_idParameter, country_idParameter, issuer_nameParameter, issuer_codeParameter, auto_create_dist_batchParameter, instant_card_issue_YNParameter, pin_mailer_printing_YNParameter, delete_pin_file_YNParameter, delete_card_file_YNParameter, account_validation_YNParameter, maker_checker_YNParameter, enable_instant_pin_YNParameter, authorise_pin_issue_YNParameter, authorise_pin_reissue_YNParameter, license_fileParameter, license_keyParameter, cards_file_locationParameter, card_file_typeParameter, pin_file_locationParameter, pin_encrypted_ZPKParameter, pin_mailer_file_typeParameter, pin_printer_nameParameter, pin_encrypted_PWKParameter, language_idParameter, card_ref_preferenceParameter, classic_card_issue_YNParameter, audit_user_idParameter, audit_workstationParameter, new_issuer_id, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="load_batch_reference">No Metadata Documentation available.</param>
        /// <param name="batch_status_id">No Metadata Documentation available.</param>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="load_card_status_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="file_load_id">No Metadata Documentation available.</param>
        /// <param name="name_of_file">No Metadata Documentation available.</param>
        /// <param name="file_created_date">No Metadata Documentation available.</param>
        /// <param name="file_size">No Metadata Documentation available.</param>
        /// <param name="load_date">No Metadata Documentation available.</param>
        /// <param name="file_status_id">No Metadata Documentation available.</param>
        /// <param name="file_directory">No Metadata Documentation available.</param>
        /// <param name="number_successful_records">No Metadata Documentation available.</param>
        /// <param name="number_failed_records">No Metadata Documentation available.</param>
        /// <param name="file_load_comments">No Metadata Documentation available.</param>
        /// <param name="file_type_id">No Metadata Documentation available.</param>
        public int usp_create_load_batch(global::System.String load_batch_reference, Nullable<global::System.Int32> batch_status_id, Nullable<global::System.Int64> user_id, Nullable<global::System.Int32> load_card_status_id, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> file_load_id, global::System.String name_of_file, Nullable<global::System.DateTime> file_created_date, Nullable<global::System.Int32> file_size, Nullable<global::System.DateTime> load_date, Nullable<global::System.Int32> file_status_id, global::System.String file_directory, Nullable<global::System.Int32> number_successful_records, Nullable<global::System.Int32> number_failed_records, global::System.String file_load_comments, Nullable<global::System.Int32> file_type_id)
        {
            ObjectParameter load_batch_referenceParameter;
            if (load_batch_reference != null)
            {
                load_batch_referenceParameter = new ObjectParameter("load_batch_reference", load_batch_reference);
            }
            else
            {
                load_batch_referenceParameter = new ObjectParameter("load_batch_reference", typeof(global::System.String));
            }
    
            ObjectParameter batch_status_idParameter;
            if (batch_status_id.HasValue)
            {
                batch_status_idParameter = new ObjectParameter("batch_status_id", batch_status_id);
            }
            else
            {
                batch_status_idParameter = new ObjectParameter("batch_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter load_card_status_idParameter;
            if (load_card_status_id.HasValue)
            {
                load_card_status_idParameter = new ObjectParameter("load_card_status_id", load_card_status_id);
            }
            else
            {
                load_card_status_idParameter = new ObjectParameter("load_card_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter file_load_idParameter;
            if (file_load_id.HasValue)
            {
                file_load_idParameter = new ObjectParameter("file_load_id", file_load_id);
            }
            else
            {
                file_load_idParameter = new ObjectParameter("file_load_id", typeof(global::System.Int32));
            }
    
            ObjectParameter name_of_fileParameter;
            if (name_of_file != null)
            {
                name_of_fileParameter = new ObjectParameter("name_of_file", name_of_file);
            }
            else
            {
                name_of_fileParameter = new ObjectParameter("name_of_file", typeof(global::System.String));
            }
    
            ObjectParameter file_created_dateParameter;
            if (file_created_date.HasValue)
            {
                file_created_dateParameter = new ObjectParameter("file_created_date", file_created_date);
            }
            else
            {
                file_created_dateParameter = new ObjectParameter("file_created_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter file_sizeParameter;
            if (file_size.HasValue)
            {
                file_sizeParameter = new ObjectParameter("file_size", file_size);
            }
            else
            {
                file_sizeParameter = new ObjectParameter("file_size", typeof(global::System.Int32));
            }
    
            ObjectParameter load_dateParameter;
            if (load_date.HasValue)
            {
                load_dateParameter = new ObjectParameter("load_date", load_date);
            }
            else
            {
                load_dateParameter = new ObjectParameter("load_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter file_status_idParameter;
            if (file_status_id.HasValue)
            {
                file_status_idParameter = new ObjectParameter("file_status_id", file_status_id);
            }
            else
            {
                file_status_idParameter = new ObjectParameter("file_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter file_directoryParameter;
            if (file_directory != null)
            {
                file_directoryParameter = new ObjectParameter("file_directory", file_directory);
            }
            else
            {
                file_directoryParameter = new ObjectParameter("file_directory", typeof(global::System.String));
            }
    
            ObjectParameter number_successful_recordsParameter;
            if (number_successful_records.HasValue)
            {
                number_successful_recordsParameter = new ObjectParameter("number_successful_records", number_successful_records);
            }
            else
            {
                number_successful_recordsParameter = new ObjectParameter("number_successful_records", typeof(global::System.Int32));
            }
    
            ObjectParameter number_failed_recordsParameter;
            if (number_failed_records.HasValue)
            {
                number_failed_recordsParameter = new ObjectParameter("number_failed_records", number_failed_records);
            }
            else
            {
                number_failed_recordsParameter = new ObjectParameter("number_failed_records", typeof(global::System.Int32));
            }
    
            ObjectParameter file_load_commentsParameter;
            if (file_load_comments != null)
            {
                file_load_commentsParameter = new ObjectParameter("file_load_comments", file_load_comments);
            }
            else
            {
                file_load_commentsParameter = new ObjectParameter("file_load_comments", typeof(global::System.String));
            }
    
            ObjectParameter file_type_idParameter;
            if (file_type_id.HasValue)
            {
                file_type_idParameter = new ObjectParameter("file_type_id", file_type_id);
            }
            else
            {
                file_type_idParameter = new ObjectParameter("file_type_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("usp_create_load_batch", load_batch_referenceParameter, batch_status_idParameter, user_idParameter, load_card_status_idParameter, issuer_idParameter, file_load_idParameter, name_of_fileParameter, file_created_dateParameter, file_sizeParameter, load_dateParameter, file_status_idParameter, file_directoryParameter, number_successful_recordsParameter, number_failed_recordsParameter, file_load_commentsParameter, file_type_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_group_name">No Metadata Documentation available.</param>
        /// <param name="user_role_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="can_read">No Metadata Documentation available.</param>
        /// <param name="can_create">No Metadata Documentation available.</param>
        /// <param name="can_update">No Metadata Documentation available.</param>
        /// <param name="all_branch_access">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="new_user_group_id">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_create_user_group(global::System.String user_group_name, Nullable<global::System.Int32> user_role_id, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Boolean> can_read, Nullable<global::System.Boolean> can_create, Nullable<global::System.Boolean> can_update, Nullable<global::System.Boolean> all_branch_access, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter new_user_group_id, ObjectParameter resultCode)
        {
            ObjectParameter user_group_nameParameter;
            if (user_group_name != null)
            {
                user_group_nameParameter = new ObjectParameter("user_group_name", user_group_name);
            }
            else
            {
                user_group_nameParameter = new ObjectParameter("user_group_name", typeof(global::System.String));
            }
    
            ObjectParameter user_role_idParameter;
            if (user_role_id.HasValue)
            {
                user_role_idParameter = new ObjectParameter("user_role_id", user_role_id);
            }
            else
            {
                user_role_idParameter = new ObjectParameter("user_role_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter can_readParameter;
            if (can_read.HasValue)
            {
                can_readParameter = new ObjectParameter("can_read", can_read);
            }
            else
            {
                can_readParameter = new ObjectParameter("can_read", typeof(global::System.Boolean));
            }
    
            ObjectParameter can_createParameter;
            if (can_create.HasValue)
            {
                can_createParameter = new ObjectParameter("can_create", can_create);
            }
            else
            {
                can_createParameter = new ObjectParameter("can_create", typeof(global::System.Boolean));
            }
    
            ObjectParameter can_updateParameter;
            if (can_update.HasValue)
            {
                can_updateParameter = new ObjectParameter("can_update", can_update);
            }
            else
            {
                can_updateParameter = new ObjectParameter("can_update", typeof(global::System.Boolean));
            }
    
            ObjectParameter all_branch_accessParameter;
            if (all_branch_access.HasValue)
            {
                all_branch_accessParameter = new ObjectParameter("all_branch_access", all_branch_access);
            }
            else
            {
                all_branch_accessParameter = new ObjectParameter("all_branch_access", typeof(global::System.Boolean));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_create_user_group", user_group_nameParameter, user_role_idParameter, issuer_idParameter, can_readParameter, can_createParameter, can_updateParameter, all_branch_accessParameter, audit_user_idParameter, audit_workstationParameter, new_user_group_id, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="dist_batch_id">No Metadata Documentation available.</param>
        /// <param name="status_notes">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_dist_batch_reject_production(Nullable<global::System.Int64> dist_batch_id, global::System.String status_notes, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter dist_batch_idParameter;
            if (dist_batch_id.HasValue)
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", dist_batch_id);
            }
            else
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter status_notesParameter;
            if (status_notes != null)
            {
                status_notesParameter = new ObjectParameter("status_notes", status_notes);
            }
            else
            {
                status_notesParameter = new ObjectParameter("status_notes", typeof(global::System.String));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_dist_batch_reject_production", dist_batch_idParameter, status_notesParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="dist_batch_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_dist_batch_to_vault(Nullable<global::System.Int64> dist_batch_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter dist_batch_idParameter;
            if (dist_batch_id.HasValue)
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", dist_batch_id);
            }
            else
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_dist_batch_to_vault", dist_batch_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int usp_find_distinct_load_cards()
        {
            return base.ExecuteFunction("usp_find_distinct_load_cards");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int usp_find_load_cards()
        {
            return base.ExecuteFunction("usp_find_load_cards");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_get_branchcardstock_report(Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> language_id, Nullable<global::System.Int32> product_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_get_branchcardstock_report", branch_idParameter, issuer_idParameter, language_idParameter, product_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="card_centre">No Metadata Documentation available.</param>
        /// <param name="languageId">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_get_branches_for_userroles(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int64> user_id, Nullable<global::System.Boolean> card_centre, Nullable<global::System.Int32> languageId, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter card_centreParameter;
            if (card_centre.HasValue)
            {
                card_centreParameter = new ObjectParameter("card_centre", card_centre);
            }
            else
            {
                card_centreParameter = new ObjectParameter("card_centre", typeof(global::System.Boolean));
            }
    
            ObjectParameter languageIdParameter;
            if (languageId.HasValue)
            {
                languageIdParameter = new ObjectParameter("languageId", languageId);
            }
            else
            {
                languageIdParameter = new ObjectParameter("languageId", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_get_branches_for_userroles", issuer_idParameter, user_idParameter, card_centreParameter, languageIdParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_get_burnrate_report(Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> language_id, Nullable<global::System.Int32> product_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_get_burnrate_report", branch_idParameter, issuer_idParameter, language_idParameter, product_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_get_connection_parameters(Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_get_connection_parameters", audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="cCY">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> usp_get_currency(global::System.String cCY)
        {
            ObjectParameter cCYParameter;
            if (cCY != null)
            {
                cCYParameter = new ObjectParameter("CCY", cCY);
            }
            else
            {
                cCYParameter = new ObjectParameter("CCY", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("usp_get_currency", cCYParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="fromdate">No Metadata Documentation available.</param>
        /// <param name="todate">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_get_feerevenue_report(Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> language_id, Nullable<global::System.Int32> product_id, Nullable<global::System.DateTimeOffset> fromdate, Nullable<global::System.DateTimeOffset> todate, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter fromdateParameter;
            if (fromdate.HasValue)
            {
                fromdateParameter = new ObjectParameter("fromdate", fromdate);
            }
            else
            {
                fromdateParameter = new ObjectParameter("fromdate", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter todateParameter;
            if (todate.HasValue)
            {
                todateParameter = new ObjectParameter("todate", todate);
            }
            else
            {
                todateParameter = new ObjectParameter("todate", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_get_feerevenue_report", branch_idParameter, issuer_idParameter, language_idParameter, product_idParameter, fromdateParameter, todateParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        public ObjectResult<usp_get_fonts_ist_Result> usp_get_fonts_ist(Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage)
        {
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<usp_get_fonts_ist_Result>("usp_get_fonts_ist", pageIndexParameter, rowsPerPageParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_code">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<issuer> usp_get_issuer_by_code(global::System.String issuer_code, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_codeParameter;
            if (issuer_code != null)
            {
                issuer_codeParameter = new ObjectParameter("issuer_code", issuer_code);
            }
            else
            {
                issuer_codeParameter = new ObjectParameter("issuer_code", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<issuer>("usp_get_issuer_by_code", issuer_codeParameter, audit_user_idParameter, audit_workstationParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="issuer_code">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<issuer> usp_get_issuer_by_code(global::System.String issuer_code, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, MergeOption mergeOption)
        {
            ObjectParameter issuer_codeParameter;
            if (issuer_code != null)
            {
                issuer_codeParameter = new ObjectParameter("issuer_code", issuer_code);
            }
            else
            {
                issuer_codeParameter = new ObjectParameter("issuer_code", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<issuer>("usp_get_issuer_by_code", mergeOption, issuer_codeParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="connection_parameter_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<usp_get_issuer_interface_details_Result> usp_get_issuer_interface_details(Nullable<global::System.Int32> connection_parameter_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter connection_parameter_idParameter;
            if (connection_parameter_id.HasValue)
            {
                connection_parameter_idParameter = new ObjectParameter("connection_parameter_id", connection_parameter_id);
            }
            else
            {
                connection_parameter_idParameter = new ObjectParameter("connection_parameter_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_get_issuer_interface_details_Result>("usp_get_issuer_interface_details", connection_parameter_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="interface_type_id">No Metadata Documentation available.</param>
        /// <param name="interface_area">No Metadata Documentation available.</param>
        /// <param name="interface_guid">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<usp_get_parameters_Result> usp_get_parameters(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> interface_type_id, Nullable<global::System.Int32> interface_area, global::System.String interface_guid, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter interface_type_idParameter;
            if (interface_type_id.HasValue)
            {
                interface_type_idParameter = new ObjectParameter("interface_type_id", interface_type_id);
            }
            else
            {
                interface_type_idParameter = new ObjectParameter("interface_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter interface_areaParameter;
            if (interface_area.HasValue)
            {
                interface_areaParameter = new ObjectParameter("interface_area", interface_area);
            }
            else
            {
                interface_areaParameter = new ObjectParameter("interface_area", typeof(global::System.Int32));
            }
    
            ObjectParameter interface_guidParameter;
            if (interface_guid != null)
            {
                interface_guidParameter = new ObjectParameter("interface_guid", interface_guid);
            }
            else
            {
                interface_guidParameter = new ObjectParameter("interface_guid", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_get_parameters_Result>("usp_get_parameters", issuer_idParameter, interface_type_idParameter, interface_areaParameter, interface_guidParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="sub_product_id">No Metadata Documentation available.</param>
        /// <param name="auditUserId">No Metadata Documentation available.</param>
        /// <param name="auditWorkStation">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> usp_get_sequencenumber(Nullable<global::System.Int64> product_id, Nullable<global::System.Int32> sub_product_id, Nullable<global::System.Int32> auditUserId, global::System.String auditWorkStation)
        {
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int64));
            }
    
            ObjectParameter sub_product_idParameter;
            if (sub_product_id.HasValue)
            {
                sub_product_idParameter = new ObjectParameter("sub_product_id", sub_product_id);
            }
            else
            {
                sub_product_idParameter = new ObjectParameter("sub_product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter auditUserIdParameter;
            if (auditUserId.HasValue)
            {
                auditUserIdParameter = new ObjectParameter("auditUserId", auditUserId);
            }
            else
            {
                auditUserIdParameter = new ObjectParameter("auditUserId", typeof(global::System.Int32));
            }
    
            ObjectParameter auditWorkStationParameter;
            if (auditWorkStation != null)
            {
                auditWorkStationParameter = new ObjectParameter("auditWorkStation", auditWorkStation);
            }
            else
            {
                auditWorkStationParameter = new ObjectParameter("auditWorkStation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<global::System.String>("usp_get_sequencenumber", product_idParameter, sub_product_idParameter, auditUserIdParameter, auditWorkStationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_get_status_flow_roles(Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_get_status_flow_roles", audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="batchReference">No Metadata Documentation available.</param>
        /// <param name="sequenceNumbers">No Metadata Documentation available.</param>
        /// <param name="card_status">No Metadata Documentation available.</param>
        public int usp_insert_cards_forBatch(global::System.String batchReference, global::System.String sequenceNumbers, global::System.String card_status)
        {
            ObjectParameter batchReferenceParameter;
            if (batchReference != null)
            {
                batchReferenceParameter = new ObjectParameter("batchReference", batchReference);
            }
            else
            {
                batchReferenceParameter = new ObjectParameter("batchReference", typeof(global::System.String));
            }
    
            ObjectParameter sequenceNumbersParameter;
            if (sequenceNumbers != null)
            {
                sequenceNumbersParameter = new ObjectParameter("sequenceNumbers", sequenceNumbers);
            }
            else
            {
                sequenceNumbersParameter = new ObjectParameter("sequenceNumbers", typeof(global::System.String));
            }
    
            ObjectParameter card_statusParameter;
            if (card_status != null)
            {
                card_statusParameter = new ObjectParameter("card_status", card_status);
            }
            else
            {
                card_statusParameter = new ObjectParameter("card_status", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_insert_cards_forBatch", batchReferenceParameter, sequenceNumbersParameter, card_statusParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_insert_product_currency(Nullable<global::System.Int32> product_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_insert_product_currency", product_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_group_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_insert_user_group_branches(Nullable<global::System.Int32> user_group_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter user_group_idParameter;
            if (user_group_id.HasValue)
            {
                user_group_idParameter = new ObjectParameter("user_group_id", user_group_id);
            }
            else
            {
                user_group_idParameter = new ObjectParameter("user_group_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_insert_user_group_branches", user_group_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Nullable<global::System.Int16>> usp_integration_bellid_get_sequence()
        {
            return base.ExecuteFunction<Nullable<global::System.Int16>>("usp_integration_bellid_get_sequence");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="integration_name">No Metadata Documentation available.</param>
        /// <param name="integration_object_name">No Metadata Documentation available.</param>
        public ObjectResult<usp_integration_get_default_values_Result> usp_integration_get_default_values(global::System.String integration_name, global::System.String integration_object_name)
        {
            ObjectParameter integration_nameParameter;
            if (integration_name != null)
            {
                integration_nameParameter = new ObjectParameter("integration_name", integration_name);
            }
            else
            {
                integration_nameParameter = new ObjectParameter("integration_name", typeof(global::System.String));
            }
    
            ObjectParameter integration_object_nameParameter;
            if (integration_object_name != null)
            {
                integration_object_nameParameter = new ObjectParameter("integration_object_name", integration_object_name);
            }
            else
            {
                integration_object_nameParameter = new ObjectParameter("integration_object_name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_integration_get_default_values_Result>("usp_integration_get_default_values", integration_nameParameter, integration_object_nameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="integration_name">No Metadata Documentation available.</param>
        /// <param name="integration_object_name">No Metadata Documentation available.</param>
        public ObjectResult<usp_integration_get_response_fields_Result> usp_integration_get_response_fields(global::System.String integration_name, global::System.String integration_object_name)
        {
            ObjectParameter integration_nameParameter;
            if (integration_name != null)
            {
                integration_nameParameter = new ObjectParameter("integration_name", integration_name);
            }
            else
            {
                integration_nameParameter = new ObjectParameter("integration_name", typeof(global::System.String));
            }
    
            ObjectParameter integration_object_nameParameter;
            if (integration_object_name != null)
            {
                integration_object_nameParameter = new ObjectParameter("integration_object_name", integration_object_name);
            }
            else
            {
                integration_object_nameParameter = new ObjectParameter("integration_object_name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_integration_get_response_fields_Result>("usp_integration_get_response_fields", integration_nameParameter, integration_object_nameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        public int usp_integration_get_response_values(Nullable<global::System.Int32> language_id)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("usp_integration_get_response_values", language_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fee_charged">No Metadata Documentation available.</param>
        /// <param name="accountbalance">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_issue_card_check_account_balance(Nullable<global::System.Decimal> fee_charged, Nullable<global::System.Decimal> accountbalance, ObjectParameter resultCode)
        {
            ObjectParameter fee_chargedParameter;
            if (fee_charged.HasValue)
            {
                fee_chargedParameter = new ObjectParameter("fee_charged", fee_charged);
            }
            else
            {
                fee_chargedParameter = new ObjectParameter("fee_charged", typeof(global::System.Decimal));
            }
    
            ObjectParameter accountbalanceParameter;
            if (accountbalance.HasValue)
            {
                accountbalanceParameter = new ObjectParameter("accountbalance", accountbalance);
            }
            else
            {
                accountbalanceParameter = new ObjectParameter("accountbalance", typeof(global::System.Decimal));
            }
    
            return base.ExecuteFunction("usp_issue_card_check_account_balance", fee_chargedParameter, accountbalanceParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pin_batch_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_pin_prod_to_pin_batch(Nullable<global::System.Int64> pin_batch_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter pin_batch_idParameter;
            if (pin_batch_id.HasValue)
            {
                pin_batch_idParameter = new ObjectParameter("pin_batch_id", pin_batch_id);
            }
            else
            {
                pin_batch_idParameter = new ObjectParameter("pin_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_pin_prod_to_pin_batch", pin_batch_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="dist_batch_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="autogenerate_dist_batch_id">No Metadata Documentation available.</param>
        public int usp_prod_to_dist_batch(Nullable<global::System.Int64> dist_batch_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, Nullable<global::System.Boolean> autogenerate_dist_batch_id)
        {
            ObjectParameter dist_batch_idParameter;
            if (dist_batch_id.HasValue)
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", dist_batch_id);
            }
            else
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            ObjectParameter autogenerate_dist_batch_idParameter;
            if (autogenerate_dist_batch_id.HasValue)
            {
                autogenerate_dist_batch_idParameter = new ObjectParameter("autogenerate_dist_batch_id", autogenerate_dist_batch_id);
            }
            else
            {
                autogenerate_dist_batch_idParameter = new ObjectParameter("autogenerate_dist_batch_id", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction("usp_prod_to_dist_batch", dist_batch_idParameter, audit_user_idParameter, audit_workstationParameter, autogenerate_dist_batch_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="dist_batch_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_prod_to_pin(Nullable<global::System.Int64> dist_batch_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter dist_batch_idParameter;
            if (dist_batch_id.HasValue)
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", dist_batch_id);
            }
            else
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_prod_to_pin", dist_batch_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="dist_batch_id">No Metadata Documentation available.</param>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="pvv">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_rswitch_hsm_pin_printed(Nullable<global::System.Int64> dist_batch_id, Nullable<global::System.Int64> card_id, global::System.String pvv, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter dist_batch_idParameter;
            if (dist_batch_id.HasValue)
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", dist_batch_id);
            }
            else
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter pvvParameter;
            if (pvv != null)
            {
                pvvParameter = new ObjectParameter("pvv", pvv);
            }
            else
            {
                pvvParameter = new ObjectParameter("pvv", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_rswitch_hsm_pin_printed", dist_batch_idParameter, card_idParameter, pvvParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="activation_date">No Metadata Documentation available.</param>
        public int usp_rswitch_update_card_numbers(Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter activation_date)
        {
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_rswitch_update_card_numbers", audit_user_idParameter, audit_workstationParameter, activation_date);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="cipheredText">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> usp_sys_decrypt(global::System.Byte[] cipheredText)
        {
            ObjectParameter cipheredTextParameter;
            if (cipheredText != null)
            {
                cipheredTextParameter = new ObjectParameter("cipheredText", cipheredText);
            }
            else
            {
                cipheredTextParameter = new ObjectParameter("cipheredText", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction<global::System.String>("usp_sys_decrypt", cipheredTextParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="clearText">No Metadata Documentation available.</param>
        public ObjectResult<global::System.Byte[]> usp_sys_encrypt(global::System.String clearText)
        {
            ObjectParameter clearTextParameter;
            if (clearText != null)
            {
                clearTextParameter = new ObjectParameter("clearText", clearText);
            }
            else
            {
                clearTextParameter = new ObjectParameter("clearText", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<global::System.Byte[]>("usp_sys_encrypt", clearTextParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_update_card_numbers(Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_card_numbers", audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_update_card_numbers_bikey(Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_card_numbers_bikey", audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="newSequenceNumber">No Metadata Documentation available.</param>
        /// <param name="auditUserId">No Metadata Documentation available.</param>
        /// <param name="auditWorkStation">No Metadata Documentation available.</param>
        public int usp_update_cardsequencenumber(Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> newSequenceNumber, Nullable<global::System.Int64> auditUserId, global::System.String auditWorkStation)
        {
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter newSequenceNumberParameter;
            if (newSequenceNumber.HasValue)
            {
                newSequenceNumberParameter = new ObjectParameter("newSequenceNumber", newSequenceNumber);
            }
            else
            {
                newSequenceNumberParameter = new ObjectParameter("newSequenceNumber", typeof(global::System.Int32));
            }
    
            ObjectParameter auditUserIdParameter;
            if (auditUserId.HasValue)
            {
                auditUserIdParameter = new ObjectParameter("auditUserId", auditUserId);
            }
            else
            {
                auditUserIdParameter = new ObjectParameter("auditUserId", typeof(global::System.Int64));
            }
    
            ObjectParameter auditWorkStationParameter;
            if (auditWorkStation != null)
            {
                auditWorkStationParameter = new ObjectParameter("auditWorkStation", auditWorkStation);
            }
            else
            {
                auditWorkStationParameter = new ObjectParameter("auditWorkStation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_cardsequencenumber", product_idParameter, newSequenceNumberParameter, auditUserIdParameter, auditWorkStationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fee_detail_id">No Metadata Documentation available.</param>
        /// <param name="card_issue_reason_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_update_fee_charge(Nullable<global::System.Int32> fee_detail_id, Nullable<global::System.Int32> card_issue_reason_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter fee_detail_idParameter;
            if (fee_detail_id.HasValue)
            {
                fee_detail_idParameter = new ObjectParameter("fee_detail_id", fee_detail_id);
            }
            else
            {
                fee_detail_idParameter = new ObjectParameter("fee_detail_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_issue_reason_idParameter;
            if (card_issue_reason_id.HasValue)
            {
                card_issue_reason_idParameter = new ObjectParameter("card_issue_reason_id", card_issue_reason_id);
            }
            else
            {
                card_issue_reason_idParameter = new ObjectParameter("card_issue_reason_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_fee_charge", fee_detail_idParameter, card_issue_reason_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fee_scheme_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="fee_scheme_name">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_update_fee_scheme(Nullable<global::System.Int32> fee_scheme_id, Nullable<global::System.Int32> issuer_id, global::System.String fee_scheme_name, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter fee_scheme_idParameter;
            if (fee_scheme_id.HasValue)
            {
                fee_scheme_idParameter = new ObjectParameter("fee_scheme_id", fee_scheme_id);
            }
            else
            {
                fee_scheme_idParameter = new ObjectParameter("fee_scheme_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter fee_scheme_nameParameter;
            if (fee_scheme_name != null)
            {
                fee_scheme_nameParameter = new ObjectParameter("fee_scheme_name", fee_scheme_name);
            }
            else
            {
                fee_scheme_nameParameter = new ObjectParameter("fee_scheme_name", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_fee_scheme", fee_scheme_idParameter, issuer_idParameter, fee_scheme_nameParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="issuer_status_id">No Metadata Documentation available.</param>
        /// <param name="country_id">No Metadata Documentation available.</param>
        /// <param name="issuer_name">No Metadata Documentation available.</param>
        /// <param name="issuer_code">No Metadata Documentation available.</param>
        /// <param name="auto_create_dist_batch">No Metadata Documentation available.</param>
        /// <param name="instant_card_issue_YN">No Metadata Documentation available.</param>
        /// <param name="pin_mailer_printing_YN">No Metadata Documentation available.</param>
        /// <param name="delete_pin_file_YN">No Metadata Documentation available.</param>
        /// <param name="delete_card_file_YN">No Metadata Documentation available.</param>
        /// <param name="account_validation_YN">No Metadata Documentation available.</param>
        /// <param name="maker_checker_YN">No Metadata Documentation available.</param>
        /// <param name="cards_file_location">No Metadata Documentation available.</param>
        /// <param name="card_file_type">No Metadata Documentation available.</param>
        /// <param name="pin_file_location">No Metadata Documentation available.</param>
        /// <param name="pin_encrypted_ZPK">No Metadata Documentation available.</param>
        /// <param name="pin_mailer_file_type">No Metadata Documentation available.</param>
        /// <param name="pin_printer_name">No Metadata Documentation available.</param>
        /// <param name="pin_encrypted_PWK">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="card_ref_preference">No Metadata Documentation available.</param>
        /// <param name="classic_card_issue_YN">No Metadata Documentation available.</param>
        /// <param name="enable_instant_pin_YN">No Metadata Documentation available.</param>
        /// <param name="authorise_pin_issue_YN">No Metadata Documentation available.</param>
        /// <param name="authorise_pin_reissue_YN">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_update_issuer(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> issuer_status_id, Nullable<global::System.Int32> country_id, global::System.String issuer_name, global::System.String issuer_code, Nullable<global::System.Boolean> auto_create_dist_batch, Nullable<global::System.Boolean> instant_card_issue_YN, Nullable<global::System.Boolean> pin_mailer_printing_YN, Nullable<global::System.Boolean> delete_pin_file_YN, Nullable<global::System.Boolean> delete_card_file_YN, Nullable<global::System.Boolean> account_validation_YN, Nullable<global::System.Boolean> maker_checker_YN, global::System.String cards_file_location, global::System.String card_file_type, global::System.String pin_file_location, global::System.String pin_encrypted_ZPK, global::System.String pin_mailer_file_type, global::System.String pin_printer_name, global::System.String pin_encrypted_PWK, Nullable<global::System.Int32> language_id, Nullable<global::System.Boolean> card_ref_preference, Nullable<global::System.Boolean> classic_card_issue_YN, Nullable<global::System.Boolean> enable_instant_pin_YN, Nullable<global::System.Boolean> authorise_pin_issue_YN, Nullable<global::System.Boolean> authorise_pin_reissue_YN, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_status_idParameter;
            if (issuer_status_id.HasValue)
            {
                issuer_status_idParameter = new ObjectParameter("issuer_status_id", issuer_status_id);
            }
            else
            {
                issuer_status_idParameter = new ObjectParameter("issuer_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter country_idParameter;
            if (country_id.HasValue)
            {
                country_idParameter = new ObjectParameter("country_id", country_id);
            }
            else
            {
                country_idParameter = new ObjectParameter("country_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_nameParameter;
            if (issuer_name != null)
            {
                issuer_nameParameter = new ObjectParameter("issuer_name", issuer_name);
            }
            else
            {
                issuer_nameParameter = new ObjectParameter("issuer_name", typeof(global::System.String));
            }
    
            ObjectParameter issuer_codeParameter;
            if (issuer_code != null)
            {
                issuer_codeParameter = new ObjectParameter("issuer_code", issuer_code);
            }
            else
            {
                issuer_codeParameter = new ObjectParameter("issuer_code", typeof(global::System.String));
            }
    
            ObjectParameter auto_create_dist_batchParameter;
            if (auto_create_dist_batch.HasValue)
            {
                auto_create_dist_batchParameter = new ObjectParameter("auto_create_dist_batch", auto_create_dist_batch);
            }
            else
            {
                auto_create_dist_batchParameter = new ObjectParameter("auto_create_dist_batch", typeof(global::System.Boolean));
            }
    
            ObjectParameter instant_card_issue_YNParameter;
            if (instant_card_issue_YN.HasValue)
            {
                instant_card_issue_YNParameter = new ObjectParameter("instant_card_issue_YN", instant_card_issue_YN);
            }
            else
            {
                instant_card_issue_YNParameter = new ObjectParameter("instant_card_issue_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter pin_mailer_printing_YNParameter;
            if (pin_mailer_printing_YN.HasValue)
            {
                pin_mailer_printing_YNParameter = new ObjectParameter("pin_mailer_printing_YN", pin_mailer_printing_YN);
            }
            else
            {
                pin_mailer_printing_YNParameter = new ObjectParameter("pin_mailer_printing_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter delete_pin_file_YNParameter;
            if (delete_pin_file_YN.HasValue)
            {
                delete_pin_file_YNParameter = new ObjectParameter("delete_pin_file_YN", delete_pin_file_YN);
            }
            else
            {
                delete_pin_file_YNParameter = new ObjectParameter("delete_pin_file_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter delete_card_file_YNParameter;
            if (delete_card_file_YN.HasValue)
            {
                delete_card_file_YNParameter = new ObjectParameter("delete_card_file_YN", delete_card_file_YN);
            }
            else
            {
                delete_card_file_YNParameter = new ObjectParameter("delete_card_file_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter account_validation_YNParameter;
            if (account_validation_YN.HasValue)
            {
                account_validation_YNParameter = new ObjectParameter("account_validation_YN", account_validation_YN);
            }
            else
            {
                account_validation_YNParameter = new ObjectParameter("account_validation_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter maker_checker_YNParameter;
            if (maker_checker_YN.HasValue)
            {
                maker_checker_YNParameter = new ObjectParameter("maker_checker_YN", maker_checker_YN);
            }
            else
            {
                maker_checker_YNParameter = new ObjectParameter("maker_checker_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter cards_file_locationParameter;
            if (cards_file_location != null)
            {
                cards_file_locationParameter = new ObjectParameter("cards_file_location", cards_file_location);
            }
            else
            {
                cards_file_locationParameter = new ObjectParameter("cards_file_location", typeof(global::System.String));
            }
    
            ObjectParameter card_file_typeParameter;
            if (card_file_type != null)
            {
                card_file_typeParameter = new ObjectParameter("card_file_type", card_file_type);
            }
            else
            {
                card_file_typeParameter = new ObjectParameter("card_file_type", typeof(global::System.String));
            }
    
            ObjectParameter pin_file_locationParameter;
            if (pin_file_location != null)
            {
                pin_file_locationParameter = new ObjectParameter("pin_file_location", pin_file_location);
            }
            else
            {
                pin_file_locationParameter = new ObjectParameter("pin_file_location", typeof(global::System.String));
            }
    
            ObjectParameter pin_encrypted_ZPKParameter;
            if (pin_encrypted_ZPK != null)
            {
                pin_encrypted_ZPKParameter = new ObjectParameter("pin_encrypted_ZPK", pin_encrypted_ZPK);
            }
            else
            {
                pin_encrypted_ZPKParameter = new ObjectParameter("pin_encrypted_ZPK", typeof(global::System.String));
            }
    
            ObjectParameter pin_mailer_file_typeParameter;
            if (pin_mailer_file_type != null)
            {
                pin_mailer_file_typeParameter = new ObjectParameter("pin_mailer_file_type", pin_mailer_file_type);
            }
            else
            {
                pin_mailer_file_typeParameter = new ObjectParameter("pin_mailer_file_type", typeof(global::System.String));
            }
    
            ObjectParameter pin_printer_nameParameter;
            if (pin_printer_name != null)
            {
                pin_printer_nameParameter = new ObjectParameter("pin_printer_name", pin_printer_name);
            }
            else
            {
                pin_printer_nameParameter = new ObjectParameter("pin_printer_name", typeof(global::System.String));
            }
    
            ObjectParameter pin_encrypted_PWKParameter;
            if (pin_encrypted_PWK != null)
            {
                pin_encrypted_PWKParameter = new ObjectParameter("pin_encrypted_PWK", pin_encrypted_PWK);
            }
            else
            {
                pin_encrypted_PWKParameter = new ObjectParameter("pin_encrypted_PWK", typeof(global::System.String));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_ref_preferenceParameter;
            if (card_ref_preference.HasValue)
            {
                card_ref_preferenceParameter = new ObjectParameter("card_ref_preference", card_ref_preference);
            }
            else
            {
                card_ref_preferenceParameter = new ObjectParameter("card_ref_preference", typeof(global::System.Boolean));
            }
    
            ObjectParameter classic_card_issue_YNParameter;
            if (classic_card_issue_YN.HasValue)
            {
                classic_card_issue_YNParameter = new ObjectParameter("classic_card_issue_YN", classic_card_issue_YN);
            }
            else
            {
                classic_card_issue_YNParameter = new ObjectParameter("classic_card_issue_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter enable_instant_pin_YNParameter;
            if (enable_instant_pin_YN.HasValue)
            {
                enable_instant_pin_YNParameter = new ObjectParameter("enable_instant_pin_YN", enable_instant_pin_YN);
            }
            else
            {
                enable_instant_pin_YNParameter = new ObjectParameter("enable_instant_pin_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter authorise_pin_issue_YNParameter;
            if (authorise_pin_issue_YN.HasValue)
            {
                authorise_pin_issue_YNParameter = new ObjectParameter("authorise_pin_issue_YN", authorise_pin_issue_YN);
            }
            else
            {
                authorise_pin_issue_YNParameter = new ObjectParameter("authorise_pin_issue_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter authorise_pin_reissue_YNParameter;
            if (authorise_pin_reissue_YN.HasValue)
            {
                authorise_pin_reissue_YNParameter = new ObjectParameter("authorise_pin_reissue_YN", authorise_pin_reissue_YN);
            }
            else
            {
                authorise_pin_reissue_YNParameter = new ObjectParameter("authorise_pin_reissue_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_issuer", issuer_idParameter, issuer_status_idParameter, country_idParameter, issuer_nameParameter, issuer_codeParameter, auto_create_dist_batchParameter, instant_card_issue_YNParameter, pin_mailer_printing_YNParameter, delete_pin_file_YNParameter, delete_card_file_YNParameter, account_validation_YNParameter, maker_checker_YNParameter, cards_file_locationParameter, card_file_typeParameter, pin_file_locationParameter, pin_encrypted_ZPKParameter, pin_mailer_file_typeParameter, pin_printer_nameParameter, pin_encrypted_PWKParameter, language_idParameter, card_ref_preferenceParameter, classic_card_issue_YNParameter, enable_instant_pin_YNParameter, authorise_pin_issue_YNParameter, authorise_pin_reissue_YNParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="selectedOption">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_update_issuer_card_ref_pref(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> selectedOption, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter selectedOptionParameter;
            if (selectedOption.HasValue)
            {
                selectedOptionParameter = new ObjectParameter("selectedOption", selectedOption);
            }
            else
            {
                selectedOptionParameter = new ObjectParameter("selectedOption", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_issuer_card_ref_pref", issuer_idParameter, selectedOptionParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_group_id">No Metadata Documentation available.</param>
        /// <param name="user_group_name">No Metadata Documentation available.</param>
        /// <param name="user_role_id">No Metadata Documentation available.</param>
        /// <param name="can_read">No Metadata Documentation available.</param>
        /// <param name="can_create">No Metadata Documentation available.</param>
        /// <param name="can_update">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="all_branch_access">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_update_user_group(Nullable<global::System.Int32> user_group_id, global::System.String user_group_name, Nullable<global::System.Int32> user_role_id, Nullable<global::System.Boolean> can_read, Nullable<global::System.Boolean> can_create, Nullable<global::System.Boolean> can_update, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Boolean> all_branch_access, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter user_group_idParameter;
            if (user_group_id.HasValue)
            {
                user_group_idParameter = new ObjectParameter("user_group_id", user_group_id);
            }
            else
            {
                user_group_idParameter = new ObjectParameter("user_group_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_group_nameParameter;
            if (user_group_name != null)
            {
                user_group_nameParameter = new ObjectParameter("user_group_name", user_group_name);
            }
            else
            {
                user_group_nameParameter = new ObjectParameter("user_group_name", typeof(global::System.String));
            }
    
            ObjectParameter user_role_idParameter;
            if (user_role_id.HasValue)
            {
                user_role_idParameter = new ObjectParameter("user_role_id", user_role_id);
            }
            else
            {
                user_role_idParameter = new ObjectParameter("user_role_id", typeof(global::System.Int32));
            }
    
            ObjectParameter can_readParameter;
            if (can_read.HasValue)
            {
                can_readParameter = new ObjectParameter("can_read", can_read);
            }
            else
            {
                can_readParameter = new ObjectParameter("can_read", typeof(global::System.Boolean));
            }
    
            ObjectParameter can_createParameter;
            if (can_create.HasValue)
            {
                can_createParameter = new ObjectParameter("can_create", can_create);
            }
            else
            {
                can_createParameter = new ObjectParameter("can_create", typeof(global::System.Boolean));
            }
    
            ObjectParameter can_updateParameter;
            if (can_update.HasValue)
            {
                can_updateParameter = new ObjectParameter("can_update", can_update);
            }
            else
            {
                can_updateParameter = new ObjectParameter("can_update", typeof(global::System.Boolean));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter all_branch_accessParameter;
            if (all_branch_access.HasValue)
            {
                all_branch_accessParameter = new ObjectParameter("all_branch_access", all_branch_access);
            }
            else
            {
                all_branch_accessParameter = new ObjectParameter("all_branch_access", typeof(global::System.Boolean));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_user_group", user_group_idParameter, user_group_nameParameter, user_role_idParameter, can_readParameter, can_createParameter, can_updateParameter, issuer_idParameter, all_branch_accessParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="authorisation_pin_number">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_update_instant_authorisation_pin(Nullable<global::System.Int64> user_id, global::System.String authorisation_pin_number, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter authorisation_pin_numberParameter;
            if (authorisation_pin_number != null)
            {
                authorisation_pin_numberParameter = new ObjectParameter("authorisation_pin_number", authorisation_pin_number);
            }
            else
            {
                authorisation_pin_numberParameter = new ObjectParameter("authorisation_pin_number", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_instant_authorisation_pin", user_idParameter, authorisation_pin_numberParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="username">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<AuthPasscodeResult> usp_get_authpin_by_user_id(global::System.String username, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("username", typeof(global::System.String));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<AuthPasscodeResult>("usp_get_authpin_by_user_id", usernameParameter, branch_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="terminal_name">No Metadata Documentation available.</param>
        /// <param name="terminal_model">No Metadata Documentation available.</param>
        /// <param name="device_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="terminal_masterkey_id">No Metadata Documentation available.</param>
        /// <param name="password">No Metadata Documentation available.</param>
        /// <param name="isMacUsed">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="new_terminal_id">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_create_terminal(global::System.String terminal_name, global::System.String terminal_model, global::System.String device_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> terminal_masterkey_id, global::System.String password, Nullable<global::System.Boolean> isMacUsed, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter new_terminal_id, ObjectParameter resultCode)
        {
            ObjectParameter terminal_nameParameter;
            if (terminal_name != null)
            {
                terminal_nameParameter = new ObjectParameter("terminal_name", terminal_name);
            }
            else
            {
                terminal_nameParameter = new ObjectParameter("terminal_name", typeof(global::System.String));
            }
    
            ObjectParameter terminal_modelParameter;
            if (terminal_model != null)
            {
                terminal_modelParameter = new ObjectParameter("terminal_model", terminal_model);
            }
            else
            {
                terminal_modelParameter = new ObjectParameter("terminal_model", typeof(global::System.String));
            }
    
            ObjectParameter device_idParameter;
            if (device_id != null)
            {
                device_idParameter = new ObjectParameter("device_id", device_id);
            }
            else
            {
                device_idParameter = new ObjectParameter("device_id", typeof(global::System.String));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter terminal_masterkey_idParameter;
            if (terminal_masterkey_id.HasValue)
            {
                terminal_masterkey_idParameter = new ObjectParameter("terminal_masterkey_id", terminal_masterkey_id);
            }
            else
            {
                terminal_masterkey_idParameter = new ObjectParameter("terminal_masterkey_id", typeof(global::System.Int32));
            }
    
            ObjectParameter passwordParameter;
            if (password != null)
            {
                passwordParameter = new ObjectParameter("password", password);
            }
            else
            {
                passwordParameter = new ObjectParameter("password", typeof(global::System.String));
            }
    
            ObjectParameter isMacUsedParameter;
            if (isMacUsed.HasValue)
            {
                isMacUsedParameter = new ObjectParameter("IsMacUsed", isMacUsed);
            }
            else
            {
                isMacUsedParameter = new ObjectParameter("IsMacUsed", typeof(global::System.Boolean));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_create_terminal", terminal_nameParameter, terminal_modelParameter, device_idParameter, branch_idParameter, terminal_masterkey_idParameter, passwordParameter, isMacUsedParameter, audit_user_idParameter, audit_workstationParameter, new_terminal_id, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="terminal_id">No Metadata Documentation available.</param>
        /// <param name="terminal_name">No Metadata Documentation available.</param>
        /// <param name="terminal_model">No Metadata Documentation available.</param>
        /// <param name="device_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="terminal_masterkey_id">No Metadata Documentation available.</param>
        /// <param name="password">No Metadata Documentation available.</param>
        /// <param name="isMacUsed">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_update_terminal(Nullable<global::System.Int32> terminal_id, global::System.String terminal_name, global::System.String terminal_model, global::System.String device_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> terminal_masterkey_id, global::System.String password, Nullable<global::System.Boolean> isMacUsed, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter terminal_idParameter;
            if (terminal_id.HasValue)
            {
                terminal_idParameter = new ObjectParameter("terminal_id", terminal_id);
            }
            else
            {
                terminal_idParameter = new ObjectParameter("terminal_id", typeof(global::System.Int32));
            }
    
            ObjectParameter terminal_nameParameter;
            if (terminal_name != null)
            {
                terminal_nameParameter = new ObjectParameter("terminal_name", terminal_name);
            }
            else
            {
                terminal_nameParameter = new ObjectParameter("terminal_name", typeof(global::System.String));
            }
    
            ObjectParameter terminal_modelParameter;
            if (terminal_model != null)
            {
                terminal_modelParameter = new ObjectParameter("terminal_model", terminal_model);
            }
            else
            {
                terminal_modelParameter = new ObjectParameter("terminal_model", typeof(global::System.String));
            }
    
            ObjectParameter device_idParameter;
            if (device_id != null)
            {
                device_idParameter = new ObjectParameter("device_id", device_id);
            }
            else
            {
                device_idParameter = new ObjectParameter("device_id", typeof(global::System.String));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter terminal_masterkey_idParameter;
            if (terminal_masterkey_id.HasValue)
            {
                terminal_masterkey_idParameter = new ObjectParameter("terminal_masterkey_id", terminal_masterkey_id);
            }
            else
            {
                terminal_masterkey_idParameter = new ObjectParameter("terminal_masterkey_id", typeof(global::System.Int32));
            }
    
            ObjectParameter passwordParameter;
            if (password != null)
            {
                passwordParameter = new ObjectParameter("password", password);
            }
            else
            {
                passwordParameter = new ObjectParameter("password", typeof(global::System.String));
            }
    
            ObjectParameter isMacUsedParameter;
            if (isMacUsed.HasValue)
            {
                isMacUsedParameter = new ObjectParameter("IsMacUsed", isMacUsed);
            }
            else
            {
                isMacUsedParameter = new ObjectParameter("IsMacUsed", typeof(global::System.Boolean));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_terminal", terminal_idParameter, terminal_nameParameter, terminal_modelParameter, device_idParameter, branch_idParameter, terminal_masterkey_idParameter, passwordParameter, isMacUsedParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="terminal_id">No Metadata Documentation available.</param>
        public ObjectResult<TerminalResult> usp_get_terminal(Nullable<global::System.Int32> terminal_id)
        {
            ObjectParameter terminal_idParameter;
            if (terminal_id.HasValue)
            {
                terminal_idParameter = new ObjectParameter("terminal_id", terminal_id);
            }
            else
            {
                terminal_idParameter = new ObjectParameter("terminal_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<TerminalResult>("usp_get_terminal", terminal_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="languageId">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        public ObjectResult<TerminalListResult> usp_get_terminals_list(Nullable<global::System.Int32> languageId, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage)
        {
            ObjectParameter languageIdParameter;
            if (languageId.HasValue)
            {
                languageIdParameter = new ObjectParameter("languageId", languageId);
            }
            else
            {
                languageIdParameter = new ObjectParameter("languageId", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<TerminalListResult>("usp_get_terminals_list", languageIdParameter, issuer_idParameter, branch_idParameter, pageIndexParameter, rowsPerPageParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="device_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<TerminalTMKResult> usp_get_tmk_by_terminal(global::System.String device_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter device_idParameter;
            if (device_id != null)
            {
                device_idParameter = new ObjectParameter("device_id", device_id);
            }
            else
            {
                device_idParameter = new ObjectParameter("device_id", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<TerminalTMKResult>("usp_get_tmk_by_terminal", device_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="terminal_name">No Metadata Documentation available.</param>
        /// <param name="device_id">No Metadata Documentation available.</param>
        /// <param name="terminal_model">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        public ObjectResult<TerminalListResult> usp_search_terminal(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, global::System.String terminal_name, global::System.String device_id, global::System.String terminal_model, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter terminal_nameParameter;
            if (terminal_name != null)
            {
                terminal_nameParameter = new ObjectParameter("terminal_name", terminal_name);
            }
            else
            {
                terminal_nameParameter = new ObjectParameter("terminal_name", typeof(global::System.String));
            }
    
            ObjectParameter device_idParameter;
            if (device_id != null)
            {
                device_idParameter = new ObjectParameter("device_id", device_id);
            }
            else
            {
                device_idParameter = new ObjectParameter("device_id", typeof(global::System.String));
            }
    
            ObjectParameter terminal_modelParameter;
            if (terminal_model != null)
            {
                terminal_modelParameter = new ObjectParameter("terminal_model", terminal_model);
            }
            else
            {
                terminal_modelParameter = new ObjectParameter("terminal_model", typeof(global::System.String));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<TerminalListResult>("usp_search_terminal", issuer_idParameter, branch_idParameter, terminal_nameParameter, device_idParameter, terminal_modelParameter, pageIndexParameter, rowsPerPageParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="masterkey">No Metadata Documentation available.</param>
        /// <param name="masterkey_name">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="new_masterkey_id">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_create_masterkey(global::System.String masterkey, global::System.String masterkey_name, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter new_masterkey_id, ObjectParameter resultCode)
        {
            ObjectParameter masterkeyParameter;
            if (masterkey != null)
            {
                masterkeyParameter = new ObjectParameter("masterkey", masterkey);
            }
            else
            {
                masterkeyParameter = new ObjectParameter("masterkey", typeof(global::System.String));
            }
    
            ObjectParameter masterkey_nameParameter;
            if (masterkey_name != null)
            {
                masterkey_nameParameter = new ObjectParameter("masterkey_name", masterkey_name);
            }
            else
            {
                masterkey_nameParameter = new ObjectParameter("masterkey_name", typeof(global::System.String));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_create_masterkey", masterkeyParameter, masterkey_nameParameter, issuer_idParameter, audit_user_idParameter, audit_workstationParameter, new_masterkey_id, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        public ObjectResult<TerminalTMKIssuerResult> usp_get_tmk_by_issuer(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<TerminalTMKIssuerResult>("usp_get_tmk_by_issuer", issuer_idParameter, branch_idParameter, pageIndexParameter, rowsPerPageParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="masterkey_id">No Metadata Documentation available.</param>
        /// <param name="masterkey">No Metadata Documentation available.</param>
        /// <param name="masterkey_name">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_update_masterkey(Nullable<global::System.Int32> masterkey_id, global::System.String masterkey, global::System.String masterkey_name, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter masterkey_idParameter;
            if (masterkey_id.HasValue)
            {
                masterkey_idParameter = new ObjectParameter("masterkey_id", masterkey_id);
            }
            else
            {
                masterkey_idParameter = new ObjectParameter("masterkey_id", typeof(global::System.Int32));
            }
    
            ObjectParameter masterkeyParameter;
            if (masterkey != null)
            {
                masterkeyParameter = new ObjectParameter("masterkey", masterkey);
            }
            else
            {
                masterkeyParameter = new ObjectParameter("masterkey", typeof(global::System.String));
            }
    
            ObjectParameter masterkey_nameParameter;
            if (masterkey_name != null)
            {
                masterkey_nameParameter = new ObjectParameter("masterkey_name", masterkey_name);
            }
            else
            {
                masterkey_nameParameter = new ObjectParameter("masterkey_name", typeof(global::System.String));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_masterkey", masterkey_idParameter, masterkeyParameter, masterkey_nameParameter, issuer_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="comment">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_pin_mailer_reprint_request(Nullable<global::System.Int64> card_id, global::System.String comment, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter commentParameter;
            if (comment != null)
            {
                commentParameter = new ObjectParameter("comment", comment);
            }
            else
            {
                commentParameter = new ObjectParameter("comment", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_pin_mailer_reprint_request", card_idParameter, commentParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="languageId">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<PinMailerReprintRequestResult> usp_get_pin_mailer_reprint_requests(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> languageId, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter languageIdParameter;
            if (languageId.HasValue)
            {
                languageIdParameter = new ObjectParameter("languageId", languageId);
            }
            else
            {
                languageIdParameter = new ObjectParameter("languageId", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PinMailerReprintRequestResult>("usp_get_pin_mailer_reprint_requests", issuer_idParameter, branch_idParameter, languageIdParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_issue_method_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="cards_in_batch">No Metadata Documentation available.</param>
        /// <param name="pin_batch_id">No Metadata Documentation available.</param>
        /// <param name="pin_batch_ref">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_request_pin_mailer_reprints(Nullable<global::System.Int32> card_issue_method_id, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> product_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter cards_in_batch, ObjectParameter pin_batch_id, ObjectParameter pin_batch_ref, ObjectParameter resultCode)
        {
            ObjectParameter card_issue_method_idParameter;
            if (card_issue_method_id.HasValue)
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", card_issue_method_id);
            }
            else
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_request_pin_mailer_reprints", card_issue_method_idParameter, issuer_idParameter, branch_idParameter, product_idParameter, audit_user_idParameter, audit_workstationParameter, cards_in_batch, pin_batch_id, pin_batch_ref, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="comment">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_pin_mailer_reprint_approve(Nullable<global::System.Int64> card_id, global::System.String comment, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter commentParameter;
            if (comment != null)
            {
                commentParameter = new ObjectParameter("comment", comment);
            }
            else
            {
                commentParameter = new ObjectParameter("comment", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_pin_mailer_reprint_approve", card_idParameter, commentParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pin_batch_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<PinBatchCardDetailsResult> usp_get_pin_batch_card_details(Nullable<global::System.Int64> pin_batch_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter pin_batch_idParameter;
            if (pin_batch_id.HasValue)
            {
                pin_batch_idParameter = new ObjectParameter("pin_batch_id", pin_batch_id);
            }
            else
            {
                pin_batch_idParameter = new ObjectParameter("pin_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PinBatchCardDetailsResult>("usp_get_pin_batch_card_details", pin_batch_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="masterkey_id">No Metadata Documentation available.</param>
        public ObjectResult<MasterkeyResult> usp_get_masterkey(Nullable<global::System.Int32> masterkey_id)
        {
            ObjectParameter masterkey_idParameter;
            if (masterkey_id.HasValue)
            {
                masterkey_idParameter = new ObjectParameter("masterkey_id", masterkey_id);
            }
            else
            {
                masterkey_idParameter = new ObjectParameter("masterkey_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<MasterkeyResult>("usp_get_masterkey", masterkey_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="comment">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_pin_mailer_reprint_reject(Nullable<global::System.Int64> card_id, global::System.String comment, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter commentParameter;
            if (comment != null)
            {
                commentParameter = new ObjectParameter("comment", comment);
            }
            else
            {
                commentParameter = new ObjectParameter("comment", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_pin_mailer_reprint_reject", card_idParameter, commentParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="user_role_id">No Metadata Documentation available.</param>
        /// <param name="pin_mailer_reprint_status_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<PinMailerReprintResult> usp_search_pin_mailer_reprint(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> user_role_id, Nullable<global::System.Int32> pin_mailer_reprint_status_id, Nullable<global::System.Int32> language_id, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_role_idParameter;
            if (user_role_id.HasValue)
            {
                user_role_idParameter = new ObjectParameter("user_role_id", user_role_id);
            }
            else
            {
                user_role_idParameter = new ObjectParameter("user_role_id", typeof(global::System.Int32));
            }
    
            ObjectParameter pin_mailer_reprint_status_idParameter;
            if (pin_mailer_reprint_status_id.HasValue)
            {
                pin_mailer_reprint_status_idParameter = new ObjectParameter("pin_mailer_reprint_status_id", pin_mailer_reprint_status_id);
            }
            else
            {
                pin_mailer_reprint_status_idParameter = new ObjectParameter("pin_mailer_reprint_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PinMailerReprintResult>("usp_search_pin_mailer_reprint", issuer_idParameter, branch_idParameter, user_role_idParameter, pin_mailer_reprint_status_idParameter, language_idParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<TerminalParametersResult> usp_get_terminal_parameters(Nullable<global::System.Int32> product_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<TerminalParametersResult>("usp_get_terminal_parameters", product_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_pin_batch_statuses(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_pin_batch_statuses", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="pan">No Metadata Documentation available.</param>
        /// <param name="authorise_user_id">No Metadata Documentation available.</param>
        /// <param name="failed">No Metadata Documentation available.</param>
        /// <param name="note">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_insert_pin_reissue(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> product_id, global::System.String pan, Nullable<global::System.Int64> authorise_user_id, Nullable<global::System.Boolean> failed, global::System.String note, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter panParameter;
            if (pan != null)
            {
                panParameter = new ObjectParameter("pan", pan);
            }
            else
            {
                panParameter = new ObjectParameter("pan", typeof(global::System.String));
            }
    
            ObjectParameter authorise_user_idParameter;
            if (authorise_user_id.HasValue)
            {
                authorise_user_idParameter = new ObjectParameter("authorise_user_id", authorise_user_id);
            }
            else
            {
                authorise_user_idParameter = new ObjectParameter("authorise_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter failedParameter;
            if (failed.HasValue)
            {
                failedParameter = new ObjectParameter("failed", failed);
            }
            else
            {
                failedParameter = new ObjectParameter("failed", typeof(global::System.Boolean));
            }
    
            ObjectParameter noteParameter;
            if (note != null)
            {
                noteParameter = new ObjectParameter("note", note);
            }
            else
            {
                noteParameter = new ObjectParameter("note", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_insert_pin_reissue", issuer_idParameter, branch_idParameter, product_idParameter, panParameter, authorise_user_idParameter, failedParameter, noteParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="masterkeyid">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultcode">No Metadata Documentation available.</param>
        public int usp_delete_masterkey(Nullable<global::System.Int32> masterkeyid, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultcode)
        {
            ObjectParameter masterkeyidParameter;
            if (masterkeyid.HasValue)
            {
                masterkeyidParameter = new ObjectParameter("masterkeyid", masterkeyid);
            }
            else
            {
                masterkeyidParameter = new ObjectParameter("masterkeyid", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_delete_masterkey", masterkeyidParameter, audit_user_idParameter, audit_workstationParameter, resultcode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="terminalid">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultcode">No Metadata Documentation available.</param>
        public int usp_delete_terminaldetails(Nullable<global::System.Int32> terminalid, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultcode)
        {
            ObjectParameter terminalidParameter;
            if (terminalid.HasValue)
            {
                terminalidParameter = new ObjectParameter("terminalid", terminalid);
            }
            else
            {
                terminalidParameter = new ObjectParameter("terminalid", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_delete_terminaldetails", terminalidParameter, audit_user_idParameter, audit_workstationParameter, resultcode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pin_batch_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<PinBatchCardsResult> usp_get_pin_batch_cards(Nullable<global::System.Int64> pin_batch_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter pin_batch_idParameter;
            if (pin_batch_id.HasValue)
            {
                pin_batch_idParameter = new ObjectParameter("pin_batch_id", pin_batch_id);
            }
            else
            {
                pin_batch_idParameter = new ObjectParameter("pin_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PinBatchCardsResult>("usp_get_pin_batch_cards", pin_batch_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pin_batch_id">No Metadata Documentation available.</param>
        /// <param name="languageId">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<PinBatchHistoryResult> usp_get_pin_batch_history(Nullable<global::System.Int64> pin_batch_id, Nullable<global::System.Int32> languageId, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter pin_batch_idParameter;
            if (pin_batch_id.HasValue)
            {
                pin_batch_idParameter = new ObjectParameter("pin_batch_id", pin_batch_id);
            }
            else
            {
                pin_batch_idParameter = new ObjectParameter("pin_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter languageIdParameter;
            if (languageId.HasValue)
            {
                languageIdParameter = new ObjectParameter("languageId", languageId);
            }
            else
            {
                languageIdParameter = new ObjectParameter("languageId", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PinBatchHistoryResult>("usp_get_pin_batch_history", pin_batch_idParameter, languageIdParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fee_scheme_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_delete_fee_scheme(Nullable<global::System.Int32> fee_scheme_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter fee_scheme_idParameter;
            if (fee_scheme_id.HasValue)
            {
                fee_scheme_idParameter = new ObjectParameter("fee_scheme_id", fee_scheme_id);
            }
            else
            {
                fee_scheme_idParameter = new ObjectParameter("fee_scheme_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_delete_fee_scheme", fee_scheme_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="languageId">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<CardHistoryReference> usp_get_card_history_reference(Nullable<global::System.Int32> card_id, Nullable<global::System.Int32> languageId, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int32));
            }
    
            ObjectParameter languageIdParameter;
            if (languageId.HasValue)
            {
                languageIdParameter = new ObjectParameter("languageId", languageId);
            }
            else
            {
                languageIdParameter = new ObjectParameter("languageId", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<CardHistoryReference>("usp_get_card_history_reference", card_idParameter, languageIdParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="languageId">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<CardHistoryStatus> usp_get_card_history_status(Nullable<global::System.Int32> card_id, Nullable<global::System.Int32> languageId, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int32));
            }
    
            ObjectParameter languageIdParameter;
            if (languageId.HasValue)
            {
                languageIdParameter = new ObjectParameter("languageId", languageId);
            }
            else
            {
                languageIdParameter = new ObjectParameter("languageId", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<CardHistoryStatus>("usp_get_card_history_status", card_idParameter, languageIdParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="audit_action_id">No Metadata Documentation available.</param>
        /// <param name="user_role_id">No Metadata Documentation available.</param>
        /// <param name="username">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="date_from">No Metadata Documentation available.</param>
        /// <param name="date_to">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="aduti_workstation">No Metadata Documentation available.</param>
        public ObjectResult<GetAuditData_Result> usp_get_auditdata(Nullable<global::System.Int32> audit_action_id, Nullable<global::System.Int32> user_role_id, global::System.String username, Nullable<global::System.Int32> issuer_id, Nullable<global::System.DateTimeOffset> date_from, Nullable<global::System.DateTimeOffset> date_to, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String aduti_workstation)
        {
            ObjectParameter audit_action_idParameter;
            if (audit_action_id.HasValue)
            {
                audit_action_idParameter = new ObjectParameter("audit_action_id", audit_action_id);
            }
            else
            {
                audit_action_idParameter = new ObjectParameter("audit_action_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_role_idParameter;
            if (user_role_id.HasValue)
            {
                user_role_idParameter = new ObjectParameter("user_role_id", user_role_id);
            }
            else
            {
                user_role_idParameter = new ObjectParameter("user_role_id", typeof(global::System.Int32));
            }
    
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("username", typeof(global::System.String));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter date_fromParameter;
            if (date_from.HasValue)
            {
                date_fromParameter = new ObjectParameter("date_from", date_from);
            }
            else
            {
                date_fromParameter = new ObjectParameter("date_from", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter date_toParameter;
            if (date_to.HasValue)
            {
                date_toParameter = new ObjectParameter("date_to", date_to);
            }
            else
            {
                date_toParameter = new ObjectParameter("date_to", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter aduti_workstationParameter;
            if (aduti_workstation != null)
            {
                aduti_workstationParameter = new ObjectParameter("aduti_workstation", aduti_workstation);
            }
            else
            {
                aduti_workstationParameter = new ObjectParameter("aduti_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GetAuditData_Result>("usp_get_auditdata", audit_action_idParameter, user_role_idParameter, usernameParameter, issuer_idParameter, date_fromParameter, date_toParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, aduti_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="user_group_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="user_role_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_get_brachesperusergroup_auditreport(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> user_group_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> user_role_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_group_idParameter;
            if (user_group_id.HasValue)
            {
                user_group_idParameter = new ObjectParameter("user_group_id", user_group_id);
            }
            else
            {
                user_group_idParameter = new ObjectParameter("user_group_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_role_idParameter;
            if (user_role_id.HasValue)
            {
                user_role_idParameter = new ObjectParameter("user_role_id", user_role_id);
            }
            else
            {
                user_role_idParameter = new ObjectParameter("user_role_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_get_brachesperusergroup_auditreport", issuer_idParameter, user_group_idParameter, branch_idParameter, user_role_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="file_load_id">No Metadata Documentation available.</param>
        /// <param name="file_status_id">No Metadata Documentation available.</param>
        /// <param name="name_of_file">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="date_from">No Metadata Documentation available.</param>
        /// <param name="date_to">No Metadata Documentation available.</param>
        /// <param name="languageId">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<GetFileLoderLog_Result> usp_get_fileloaderlog(Nullable<global::System.Int32> file_load_id, Nullable<global::System.Int32> file_status_id, global::System.String name_of_file, Nullable<global::System.Int32> issuer_id, Nullable<global::System.DateTimeOffset> date_from, Nullable<global::System.DateTimeOffset> date_to, Nullable<global::System.Int32> languageId, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter file_load_idParameter;
            if (file_load_id.HasValue)
            {
                file_load_idParameter = new ObjectParameter("file_load_id", file_load_id);
            }
            else
            {
                file_load_idParameter = new ObjectParameter("file_load_id", typeof(global::System.Int32));
            }
    
            ObjectParameter file_status_idParameter;
            if (file_status_id.HasValue)
            {
                file_status_idParameter = new ObjectParameter("file_status_id", file_status_id);
            }
            else
            {
                file_status_idParameter = new ObjectParameter("file_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter name_of_fileParameter;
            if (name_of_file != null)
            {
                name_of_fileParameter = new ObjectParameter("name_of_file", name_of_file);
            }
            else
            {
                name_of_fileParameter = new ObjectParameter("name_of_file", typeof(global::System.String));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter date_fromParameter;
            if (date_from.HasValue)
            {
                date_fromParameter = new ObjectParameter("date_from", date_from);
            }
            else
            {
                date_fromParameter = new ObjectParameter("date_from", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter date_toParameter;
            if (date_to.HasValue)
            {
                date_toParameter = new ObjectParameter("date_to", date_to);
            }
            else
            {
                date_toParameter = new ObjectParameter("date_to", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter languageIdParameter;
            if (languageId.HasValue)
            {
                languageIdParameter = new ObjectParameter("languageId", languageId);
            }
            else
            {
                languageIdParameter = new ObjectParameter("languageId", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GetFileLoderLog_Result>("usp_get_fileloaderlog", file_load_idParameter, file_status_idParameter, name_of_fileParameter, issuer_idParameter, date_fromParameter, date_toParameter, languageIdParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="user_group_id">No Metadata Documentation available.</param>
        /// <param name="user_role_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_get_userbyroles_auditreport(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> user_group_id, Nullable<global::System.Int32> user_role_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_group_idParameter;
            if (user_group_id.HasValue)
            {
                user_group_idParameter = new ObjectParameter("user_group_id", user_group_id);
            }
            else
            {
                user_group_idParameter = new ObjectParameter("user_group_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_role_idParameter;
            if (user_role_id.HasValue)
            {
                user_role_idParameter = new ObjectParameter("user_role_id", user_role_id);
            }
            else
            {
                user_role_idParameter = new ObjectParameter("user_role_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_get_userbyroles_auditreport", issuer_idParameter, user_group_idParameter, user_role_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="user_group_id">No Metadata Documentation available.</param>
        /// <param name="user_role_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_get_usergroup_auditreport(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> user_group_id, Nullable<global::System.Int32> user_role_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_group_idParameter;
            if (user_group_id.HasValue)
            {
                user_group_idParameter = new ObjectParameter("user_group_id", user_group_id);
            }
            else
            {
                user_group_idParameter = new ObjectParameter("user_group_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_role_idParameter;
            if (user_role_id.HasValue)
            {
                user_role_idParameter = new ObjectParameter("user_role_id", user_role_id);
            }
            else
            {
                user_role_idParameter = new ObjectParameter("user_role_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_get_usergroup_auditreport", issuer_idParameter, user_group_idParameter, user_role_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pin_reissue_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<PinReissueResult> usp_get_pin_reissue(Nullable<global::System.Int64> pin_reissue_id, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter pin_reissue_idParameter;
            if (pin_reissue_id.HasValue)
            {
                pin_reissue_idParameter = new ObjectParameter("pin_reissue_id", pin_reissue_id);
            }
            else
            {
                pin_reissue_idParameter = new ObjectParameter("pin_reissue_id", typeof(global::System.Int64));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PinReissueResult>("usp_get_pin_reissue", pin_reissue_idParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pin_reissue_id">No Metadata Documentation available.</param>
        /// <param name="notes">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public ObjectResult<PinReissueResult> usp_pin_reissue_approve(Nullable<global::System.Int64> pin_reissue_id, global::System.String notes, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter pin_reissue_idParameter;
            if (pin_reissue_id.HasValue)
            {
                pin_reissue_idParameter = new ObjectParameter("pin_reissue_id", pin_reissue_id);
            }
            else
            {
                pin_reissue_idParameter = new ObjectParameter("pin_reissue_id", typeof(global::System.Int64));
            }
    
            ObjectParameter notesParameter;
            if (notes != null)
            {
                notesParameter = new ObjectParameter("notes", notes);
            }
            else
            {
                notesParameter = new ObjectParameter("notes", typeof(global::System.String));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PinReissueResult>("usp_pin_reissue_approve", pin_reissue_idParameter, notesParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pin_reissue_id">No Metadata Documentation available.</param>
        /// <param name="notes">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public ObjectResult<PinReissueResult> usp_pin_reissue_complete(Nullable<global::System.Int64> pin_reissue_id, global::System.String notes, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter pin_reissue_idParameter;
            if (pin_reissue_id.HasValue)
            {
                pin_reissue_idParameter = new ObjectParameter("pin_reissue_id", pin_reissue_id);
            }
            else
            {
                pin_reissue_idParameter = new ObjectParameter("pin_reissue_id", typeof(global::System.Int64));
            }
    
            ObjectParameter notesParameter;
            if (notes != null)
            {
                notesParameter = new ObjectParameter("notes", notes);
            }
            else
            {
                notesParameter = new ObjectParameter("notes", typeof(global::System.String));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PinReissueResult>("usp_pin_reissue_complete", pin_reissue_idParameter, notesParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pin_reissue_id">No Metadata Documentation available.</param>
        /// <param name="notes">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public ObjectResult<PinReissueResult> usp_pin_reissue_reject(Nullable<global::System.Int64> pin_reissue_id, global::System.String notes, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter pin_reissue_idParameter;
            if (pin_reissue_id.HasValue)
            {
                pin_reissue_idParameter = new ObjectParameter("pin_reissue_id", pin_reissue_id);
            }
            else
            {
                pin_reissue_idParameter = new ObjectParameter("pin_reissue_id", typeof(global::System.Int64));
            }
    
            ObjectParameter notesParameter;
            if (notes != null)
            {
                notesParameter = new ObjectParameter("notes", notes);
            }
            else
            {
                notesParameter = new ObjectParameter("notes", typeof(global::System.String));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PinReissueResult>("usp_pin_reissue_reject", pin_reissue_idParameter, notesParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="pan">No Metadata Documentation available.</param>
        /// <param name="primary_index_number">No Metadata Documentation available.</param>
        /// <param name="mobile_number">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="pin_reissue_type">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public ObjectResult<PinReissueResult> usp_request_pin_reissue(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> product_id, global::System.String pan, global::System.Byte[] primary_index_number, global::System.String mobile_number, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, Nullable<global::System.Int32> pin_reissue_type, ObjectParameter resultCode)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter panParameter;
            if (pan != null)
            {
                panParameter = new ObjectParameter("pan", pan);
            }
            else
            {
                panParameter = new ObjectParameter("pan", typeof(global::System.String));
            }
    
            ObjectParameter primary_index_numberParameter;
            if (primary_index_number != null)
            {
                primary_index_numberParameter = new ObjectParameter("primary_index_number", primary_index_number);
            }
            else
            {
                primary_index_numberParameter = new ObjectParameter("primary_index_number", typeof(global::System.Byte[]));
            }
    
            ObjectParameter mobile_numberParameter;
            if (mobile_number != null)
            {
                mobile_numberParameter = new ObjectParameter("mobile_number", mobile_number);
            }
            else
            {
                mobile_numberParameter = new ObjectParameter("mobile_number", typeof(global::System.String));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            ObjectParameter pin_reissue_typeParameter;
            if (pin_reissue_type.HasValue)
            {
                pin_reissue_typeParameter = new ObjectParameter("pin_reissue_type", pin_reissue_type);
            }
            else
            {
                pin_reissue_typeParameter = new ObjectParameter("pin_reissue_type", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<PinReissueResult>("usp_request_pin_reissue", issuer_idParameter, branch_idParameter, product_idParameter, panParameter, primary_index_numberParameter, mobile_numberParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter, pin_reissue_typeParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="user_role_id">No Metadata Documentation available.</param>
        /// <param name="pin_reissue_statuses_id">No Metadata Documentation available.</param>
        /// <param name="operator_user_id">No Metadata Documentation available.</param>
        /// <param name="operator_in_progress">No Metadata Documentation available.</param>
        /// <param name="authorise_user_id">No Metadata Documentation available.</param>
        /// <param name="date_from">No Metadata Documentation available.</param>
        /// <param name="date_to">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="pin_reissue_type_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<PinReissueResult> usp_search_pin_reissue(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> user_role_id, Nullable<global::System.Int32> pin_reissue_statuses_id, Nullable<global::System.Int64> operator_user_id, Nullable<global::System.Boolean> operator_in_progress, Nullable<global::System.Int64> authorise_user_id, Nullable<global::System.DateTime> date_from, Nullable<global::System.DateTime> date_to, Nullable<global::System.Int32> language_id, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int32> pin_reissue_type_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_role_idParameter;
            if (user_role_id.HasValue)
            {
                user_role_idParameter = new ObjectParameter("user_role_id", user_role_id);
            }
            else
            {
                user_role_idParameter = new ObjectParameter("user_role_id", typeof(global::System.Int32));
            }
    
            ObjectParameter pin_reissue_statuses_idParameter;
            if (pin_reissue_statuses_id.HasValue)
            {
                pin_reissue_statuses_idParameter = new ObjectParameter("pin_reissue_statuses_id", pin_reissue_statuses_id);
            }
            else
            {
                pin_reissue_statuses_idParameter = new ObjectParameter("pin_reissue_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter operator_user_idParameter;
            if (operator_user_id.HasValue)
            {
                operator_user_idParameter = new ObjectParameter("operator_user_id", operator_user_id);
            }
            else
            {
                operator_user_idParameter = new ObjectParameter("operator_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter operator_in_progressParameter;
            if (operator_in_progress.HasValue)
            {
                operator_in_progressParameter = new ObjectParameter("operator_in_progress", operator_in_progress);
            }
            else
            {
                operator_in_progressParameter = new ObjectParameter("operator_in_progress", typeof(global::System.Boolean));
            }
    
            ObjectParameter authorise_user_idParameter;
            if (authorise_user_id.HasValue)
            {
                authorise_user_idParameter = new ObjectParameter("authorise_user_id", authorise_user_id);
            }
            else
            {
                authorise_user_idParameter = new ObjectParameter("authorise_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter date_fromParameter;
            if (date_from.HasValue)
            {
                date_fromParameter = new ObjectParameter("date_from", date_from);
            }
            else
            {
                date_fromParameter = new ObjectParameter("date_from", typeof(global::System.DateTime));
            }
    
            ObjectParameter date_toParameter;
            if (date_to.HasValue)
            {
                date_toParameter = new ObjectParameter("date_to", date_to);
            }
            else
            {
                date_toParameter = new ObjectParameter("date_to", typeof(global::System.DateTime));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter pin_reissue_type_idParameter;
            if (pin_reissue_type_id.HasValue)
            {
                pin_reissue_type_idParameter = new ObjectParameter("pin_reissue_type_id", pin_reissue_type_id);
            }
            else
            {
                pin_reissue_type_idParameter = new ObjectParameter("pin_reissue_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PinReissueResult>("usp_search_pin_reissue", issuer_idParameter, branch_idParameter, user_role_idParameter, pin_reissue_statuses_idParameter, operator_user_idParameter, operator_in_progressParameter, authorise_user_idParameter, date_fromParameter, date_toParameter, language_idParameter, pageIndexParameter, rowsPerPageParameter, pin_reissue_type_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_pin_reissue_statuses(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_pin_reissue_statuses", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pin_reissue_id">No Metadata Documentation available.</param>
        /// <param name="notes">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public ObjectResult<PinReissueResult> usp_pin_reissue_expired(Nullable<global::System.Int64> pin_reissue_id, global::System.String notes, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter pin_reissue_idParameter;
            if (pin_reissue_id.HasValue)
            {
                pin_reissue_idParameter = new ObjectParameter("pin_reissue_id", pin_reissue_id);
            }
            else
            {
                pin_reissue_idParameter = new ObjectParameter("pin_reissue_id", typeof(global::System.Int64));
            }
    
            ObjectParameter notesParameter;
            if (notes != null)
            {
                notesParameter = new ObjectParameter("notes", notes);
            }
            else
            {
                notesParameter = new ObjectParameter("notes", typeof(global::System.String));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PinReissueResult>("usp_pin_reissue_expired", pin_reissue_idParameter, notesParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="export_batch_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<ExportBatchResult> usp_get_export_batch(Nullable<global::System.Int64> export_batch_id, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter export_batch_idParameter;
            if (export_batch_id.HasValue)
            {
                export_batch_idParameter = new ObjectParameter("export_batch_id", export_batch_id);
            }
            else
            {
                export_batch_idParameter = new ObjectParameter("export_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ExportBatchResult>("usp_get_export_batch", export_batch_idParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="export_batch_statuses_id">No Metadata Documentation available.</param>
        /// <param name="batch_reference">No Metadata Documentation available.</param>
        /// <param name="date_from">No Metadata Documentation available.</param>
        /// <param name="date_to">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<ExportBatchResult> usp_search_export_batches_paged(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> export_batch_statuses_id, global::System.String batch_reference, Nullable<global::System.DateTime> date_from, Nullable<global::System.DateTime> date_to, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter export_batch_statuses_idParameter;
            if (export_batch_statuses_id.HasValue)
            {
                export_batch_statuses_idParameter = new ObjectParameter("export_batch_statuses_id", export_batch_statuses_id);
            }
            else
            {
                export_batch_statuses_idParameter = new ObjectParameter("export_batch_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter batch_referenceParameter;
            if (batch_reference != null)
            {
                batch_referenceParameter = new ObjectParameter("batch_reference", batch_reference);
            }
            else
            {
                batch_referenceParameter = new ObjectParameter("batch_reference", typeof(global::System.String));
            }
    
            ObjectParameter date_fromParameter;
            if (date_from.HasValue)
            {
                date_fromParameter = new ObjectParameter("date_from", date_from);
            }
            else
            {
                date_fromParameter = new ObjectParameter("date_from", typeof(global::System.DateTime));
            }
    
            ObjectParameter date_toParameter;
            if (date_to.HasValue)
            {
                date_toParameter = new ObjectParameter("date_to", date_to);
            }
            else
            {
                date_toParameter = new ObjectParameter("date_to", typeof(global::System.DateTime));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ExportBatchResult>("usp_search_export_batches_paged", issuer_idParameter, product_idParameter, export_batch_statuses_idParameter, batch_referenceParameter, date_fromParameter, date_toParameter, pageIndexParameter, rowsPerPageParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_export_batch_statuses(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_export_batch_statuses", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="export_batch_id">No Metadata Documentation available.</param>
        /// <param name="is_auto_approval">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public ObjectResult<ExportBatchResult> usp_export_batch_status_approve(Nullable<global::System.Int64> export_batch_id, Nullable<global::System.Boolean> is_auto_approval, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter export_batch_idParameter;
            if (export_batch_id.HasValue)
            {
                export_batch_idParameter = new ObjectParameter("export_batch_id", export_batch_id);
            }
            else
            {
                export_batch_idParameter = new ObjectParameter("export_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter is_auto_approvalParameter;
            if (is_auto_approval.HasValue)
            {
                is_auto_approvalParameter = new ObjectParameter("is_auto_approval", is_auto_approval);
            }
            else
            {
                is_auto_approvalParameter = new ObjectParameter("is_auto_approval", typeof(global::System.Boolean));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ExportBatchResult>("usp_export_batch_status_approve", export_batch_idParameter, is_auto_approvalParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="export_batch_id">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public ObjectResult<ExportBatchResult> usp_export_batch_status_reject(Nullable<global::System.Int64> export_batch_id, global::System.String comments, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter export_batch_idParameter;
            if (export_batch_id.HasValue)
            {
                export_batch_idParameter = new ObjectParameter("export_batch_id", export_batch_id);
            }
            else
            {
                export_batch_idParameter = new ObjectParameter("export_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("comments", typeof(global::System.String));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ExportBatchResult>("usp_export_batch_status_reject", export_batch_idParameter, commentsParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="export_batch_id">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public ObjectResult<ExportBatchResult> usp_export_batch_status_request(Nullable<global::System.Int64> export_batch_id, global::System.String comments, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter export_batch_idParameter;
            if (export_batch_id.HasValue)
            {
                export_batch_idParameter = new ObjectParameter("export_batch_id", export_batch_id);
            }
            else
            {
                export_batch_idParameter = new ObjectParameter("export_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("comments", typeof(global::System.String));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ExportBatchResult>("usp_export_batch_status_request", export_batch_idParameter, commentsParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="pvv_lmk">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_card_pvv(Nullable<global::System.Int64> card_id, global::System.String pvv_lmk, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter pvv_lmkParameter;
            if (pvv_lmk != null)
            {
                pvv_lmkParameter = new ObjectParameter("pvv_lmk", pvv_lmk);
            }
            else
            {
                pvv_lmkParameter = new ObjectParameter("pvv_lmk", typeof(global::System.String));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_card_pvv", card_idParameter, pvv_lmkParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_product_load_type(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_product_load_type", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="dist_batch_id">No Metadata Documentation available.</param>
        /// <param name="languageId">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<ExportBatchHistoryResult> usp_get_export_batch_history(Nullable<global::System.Int64> dist_batch_id, Nullable<global::System.Int32> languageId, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter dist_batch_idParameter;
            if (dist_batch_id.HasValue)
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", dist_batch_id);
            }
            else
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter languageIdParameter;
            if (languageId.HasValue)
            {
                languageIdParameter = new ObjectParameter("languageId", languageId);
            }
            else
            {
                languageIdParameter = new ObjectParameter("languageId", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ExportBatchHistoryResult>("usp_get_export_batch_history", dist_batch_idParameter, languageIdParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="export_batch_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<ExportBatchCardResult> usp_get_export_batch_cards(Nullable<global::System.Int64> export_batch_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter export_batch_idParameter;
            if (export_batch_id.HasValue)
            {
                export_batch_idParameter = new ObjectParameter("export_batch_id", export_batch_id);
            }
            else
            {
                export_batch_idParameter = new ObjectParameter("export_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ExportBatchCardResult>("usp_get_export_batch_cards", export_batch_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="interface_type_id">No Metadata Documentation available.</param>
        /// <param name="interface_area">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_get_product_interfaces(Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> interface_type_id, Nullable<global::System.Int32> interface_area, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter interface_type_idParameter;
            if (interface_type_id.HasValue)
            {
                interface_type_idParameter = new ObjectParameter("interface_type_id", interface_type_id);
            }
            else
            {
                interface_type_idParameter = new ObjectParameter("interface_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter interface_areaParameter;
            if (interface_area.HasValue)
            {
                interface_areaParameter = new ObjectParameter("interface_area", interface_area);
            }
            else
            {
                interface_areaParameter = new ObjectParameter("interface_area", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_get_product_interfaces", product_idParameter, interface_type_idParameter, interface_areaParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="connection_parameter_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<ProductInterfaceResult> usp_get_product_by_interfaces(Nullable<global::System.Int32> connection_parameter_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter connection_parameter_idParameter;
            if (connection_parameter_id.HasValue)
            {
                connection_parameter_idParameter = new ObjectParameter("connection_parameter_id", connection_parameter_id);
            }
            else
            {
                connection_parameter_idParameter = new ObjectParameter("connection_parameter_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ProductInterfaceResult>("usp_get_product_by_interfaces", connection_parameter_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="connection_params_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<IssuerInterfaceResult> usp_get_issuer_by_interface(Nullable<global::System.Int32> connection_params_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter connection_params_idParameter;
            if (connection_params_id.HasValue)
            {
                connection_params_idParameter = new ObjectParameter("connection_params_id", connection_params_id);
            }
            else
            {
                connection_params_idParameter = new ObjectParameter("connection_params_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<IssuerInterfaceResult>("usp_get_issuer_by_interface", connection_params_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="product_id">No Metadata Documentation available.</param>
        public ObjectResult<ProductPrintFieldResult> usp_get_product_print_fields(Nullable<global::System.Int64> product_id)
        {
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<ProductPrintFieldResult>("usp_get_product_print_fields", product_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="customer_account_number">No Metadata Documentation available.</param>
        /// <param name="customer_account_pin">No Metadata Documentation available.</param>
        /// <param name="domicile_branch_id">No Metadata Documentation available.</param>
        /// <param name="account_type_id">No Metadata Documentation available.</param>
        /// <param name="card_issue_reason_id">No Metadata Documentation available.</param>
        /// <param name="customer_first_name">No Metadata Documentation available.</param>
        /// <param name="customer_middle_name">No Metadata Documentation available.</param>
        /// <param name="customer_last_name">No Metadata Documentation available.</param>
        /// <param name="name_on_card">No Metadata Documentation available.</param>
        /// <param name="customer_title_id">No Metadata Documentation available.</param>
        /// <param name="cms_id">No Metadata Documentation available.</param>
        /// <param name="customer_id">No Metadata Documentation available.</param>
        /// <param name="contract_number">No Metadata Documentation available.</param>
        /// <param name="contact_number">No Metadata Documentation available.</param>
        /// <param name="id_number">No Metadata Documentation available.</param>
        /// <param name="currency_id">No Metadata Documentation available.</param>
        /// <param name="resident_id">No Metadata Documentation available.</param>
        /// <param name="customer_type_id">No Metadata Documentation available.</param>
        /// <param name="cbs_account_type">No Metadata Documentation available.</param>
        /// <param name="fee_detail_id">No Metadata Documentation available.</param>
        /// <param name="fee_waiver_YN">No Metadata Documentation available.</param>
        /// <param name="fee_editable_YN">No Metadata Documentation available.</param>
        /// <param name="fee_charged">No Metadata Documentation available.</param>
        /// <param name="fee_overridden_YN">No Metadata Documentation available.</param>
        /// <param name="customer_email">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_issue_card_to_customer(Nullable<global::System.Int64> card_id, global::System.String customer_account_number, global::System.String customer_account_pin, Nullable<global::System.Int32> domicile_branch_id, Nullable<global::System.Int32> account_type_id, Nullable<global::System.Int32> card_issue_reason_id, global::System.String customer_first_name, global::System.String customer_middle_name, global::System.String customer_last_name, global::System.String name_on_card, Nullable<global::System.Int32> customer_title_id, global::System.String cms_id, global::System.String customer_id, global::System.String contract_number, global::System.String contact_number, global::System.String id_number, Nullable<global::System.Int32> currency_id, Nullable<global::System.Int32> resident_id, Nullable<global::System.Int32> customer_type_id, global::System.String cbs_account_type, Nullable<global::System.Int32> fee_detail_id, Nullable<global::System.Boolean> fee_waiver_YN, Nullable<global::System.Boolean> fee_editable_YN, Nullable<global::System.Decimal> fee_charged, Nullable<global::System.Boolean> fee_overridden_YN, global::System.String customer_email, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter customer_account_numberParameter;
            if (customer_account_number != null)
            {
                customer_account_numberParameter = new ObjectParameter("customer_account_number", customer_account_number);
            }
            else
            {
                customer_account_numberParameter = new ObjectParameter("customer_account_number", typeof(global::System.String));
            }
    
            ObjectParameter customer_account_pinParameter;
            if (customer_account_pin != null)
            {
                customer_account_pinParameter = new ObjectParameter("customer_account_pin", customer_account_pin);
            }
            else
            {
                customer_account_pinParameter = new ObjectParameter("customer_account_pin", typeof(global::System.String));
            }
    
            ObjectParameter domicile_branch_idParameter;
            if (domicile_branch_id.HasValue)
            {
                domicile_branch_idParameter = new ObjectParameter("domicile_branch_id", domicile_branch_id);
            }
            else
            {
                domicile_branch_idParameter = new ObjectParameter("domicile_branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter account_type_idParameter;
            if (account_type_id.HasValue)
            {
                account_type_idParameter = new ObjectParameter("account_type_id", account_type_id);
            }
            else
            {
                account_type_idParameter = new ObjectParameter("account_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_issue_reason_idParameter;
            if (card_issue_reason_id.HasValue)
            {
                card_issue_reason_idParameter = new ObjectParameter("card_issue_reason_id", card_issue_reason_id);
            }
            else
            {
                card_issue_reason_idParameter = new ObjectParameter("card_issue_reason_id", typeof(global::System.Int32));
            }
    
            ObjectParameter customer_first_nameParameter;
            if (customer_first_name != null)
            {
                customer_first_nameParameter = new ObjectParameter("customer_first_name", customer_first_name);
            }
            else
            {
                customer_first_nameParameter = new ObjectParameter("customer_first_name", typeof(global::System.String));
            }
    
            ObjectParameter customer_middle_nameParameter;
            if (customer_middle_name != null)
            {
                customer_middle_nameParameter = new ObjectParameter("customer_middle_name", customer_middle_name);
            }
            else
            {
                customer_middle_nameParameter = new ObjectParameter("customer_middle_name", typeof(global::System.String));
            }
    
            ObjectParameter customer_last_nameParameter;
            if (customer_last_name != null)
            {
                customer_last_nameParameter = new ObjectParameter("customer_last_name", customer_last_name);
            }
            else
            {
                customer_last_nameParameter = new ObjectParameter("customer_last_name", typeof(global::System.String));
            }
    
            ObjectParameter name_on_cardParameter;
            if (name_on_card != null)
            {
                name_on_cardParameter = new ObjectParameter("name_on_card", name_on_card);
            }
            else
            {
                name_on_cardParameter = new ObjectParameter("name_on_card", typeof(global::System.String));
            }
    
            ObjectParameter customer_title_idParameter;
            if (customer_title_id.HasValue)
            {
                customer_title_idParameter = new ObjectParameter("customer_title_id", customer_title_id);
            }
            else
            {
                customer_title_idParameter = new ObjectParameter("customer_title_id", typeof(global::System.Int32));
            }
    
            ObjectParameter cms_idParameter;
            if (cms_id != null)
            {
                cms_idParameter = new ObjectParameter("cms_id", cms_id);
            }
            else
            {
                cms_idParameter = new ObjectParameter("cms_id", typeof(global::System.String));
            }
    
            ObjectParameter customer_idParameter;
            if (customer_id != null)
            {
                customer_idParameter = new ObjectParameter("customer_id", customer_id);
            }
            else
            {
                customer_idParameter = new ObjectParameter("customer_id", typeof(global::System.String));
            }
    
            ObjectParameter contract_numberParameter;
            if (contract_number != null)
            {
                contract_numberParameter = new ObjectParameter("contract_number", contract_number);
            }
            else
            {
                contract_numberParameter = new ObjectParameter("contract_number", typeof(global::System.String));
            }
    
            ObjectParameter contact_numberParameter;
            if (contact_number != null)
            {
                contact_numberParameter = new ObjectParameter("contact_number", contact_number);
            }
            else
            {
                contact_numberParameter = new ObjectParameter("contact_number", typeof(global::System.String));
            }
    
            ObjectParameter id_numberParameter;
            if (id_number != null)
            {
                id_numberParameter = new ObjectParameter("id_number", id_number);
            }
            else
            {
                id_numberParameter = new ObjectParameter("id_number", typeof(global::System.String));
            }
    
            ObjectParameter currency_idParameter;
            if (currency_id.HasValue)
            {
                currency_idParameter = new ObjectParameter("currency_id", currency_id);
            }
            else
            {
                currency_idParameter = new ObjectParameter("currency_id", typeof(global::System.Int32));
            }
    
            ObjectParameter resident_idParameter;
            if (resident_id.HasValue)
            {
                resident_idParameter = new ObjectParameter("resident_id", resident_id);
            }
            else
            {
                resident_idParameter = new ObjectParameter("resident_id", typeof(global::System.Int32));
            }
    
            ObjectParameter customer_type_idParameter;
            if (customer_type_id.HasValue)
            {
                customer_type_idParameter = new ObjectParameter("customer_type_id", customer_type_id);
            }
            else
            {
                customer_type_idParameter = new ObjectParameter("customer_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter cbs_account_typeParameter;
            if (cbs_account_type != null)
            {
                cbs_account_typeParameter = new ObjectParameter("cbs_account_type", cbs_account_type);
            }
            else
            {
                cbs_account_typeParameter = new ObjectParameter("cbs_account_type", typeof(global::System.String));
            }
    
            ObjectParameter fee_detail_idParameter;
            if (fee_detail_id.HasValue)
            {
                fee_detail_idParameter = new ObjectParameter("fee_detail_id", fee_detail_id);
            }
            else
            {
                fee_detail_idParameter = new ObjectParameter("fee_detail_id", typeof(global::System.Int32));
            }
    
            ObjectParameter fee_waiver_YNParameter;
            if (fee_waiver_YN.HasValue)
            {
                fee_waiver_YNParameter = new ObjectParameter("fee_waiver_YN", fee_waiver_YN);
            }
            else
            {
                fee_waiver_YNParameter = new ObjectParameter("fee_waiver_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter fee_editable_YNParameter;
            if (fee_editable_YN.HasValue)
            {
                fee_editable_YNParameter = new ObjectParameter("fee_editable_YN", fee_editable_YN);
            }
            else
            {
                fee_editable_YNParameter = new ObjectParameter("fee_editable_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter fee_chargedParameter;
            if (fee_charged.HasValue)
            {
                fee_chargedParameter = new ObjectParameter("fee_charged", fee_charged);
            }
            else
            {
                fee_chargedParameter = new ObjectParameter("fee_charged", typeof(global::System.Decimal));
            }
    
            ObjectParameter fee_overridden_YNParameter;
            if (fee_overridden_YN.HasValue)
            {
                fee_overridden_YNParameter = new ObjectParameter("fee_overridden_YN", fee_overridden_YN);
            }
            else
            {
                fee_overridden_YNParameter = new ObjectParameter("fee_overridden_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter customer_emailParameter;
            if (customer_email != null)
            {
                customer_emailParameter = new ObjectParameter("customer_email", customer_email);
            }
            else
            {
                customer_emailParameter = new ObjectParameter("customer_email", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_issue_card_to_customer", card_idParameter, customer_account_numberParameter, customer_account_pinParameter, domicile_branch_idParameter, account_type_idParameter, card_issue_reason_idParameter, customer_first_nameParameter, customer_middle_nameParameter, customer_last_nameParameter, name_on_cardParameter, customer_title_idParameter, cms_idParameter, customer_idParameter, contract_numberParameter, contact_numberParameter, id_numberParameter, currency_idParameter, resident_idParameter, customer_type_idParameter, cbs_account_typeParameter, fee_detail_idParameter, fee_waiver_YNParameter, fee_editable_YNParameter, fee_chargedParameter, fee_overridden_YNParameter, customer_emailParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        public ObjectResult<ProductPrintFieldResult> usp_get_product_print_fields_value(Nullable<global::System.Int64> card_id)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<ProductPrintFieldResult>("usp_get_product_print_fields_value", card_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_update_product_print_fields(Nullable<global::System.Int32> product_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_product_print_fields", product_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="productid">No Metadata Documentation available.</param>
        public ObjectResult<PrintFieldsResult> usp_get_printfields_byproductid(Nullable<global::System.Int32> productid)
        {
            ObjectParameter productidParameter;
            if (productid.HasValue)
            {
                productidParameter = new ObjectParameter("Productid", productid);
            }
            else
            {
                productidParameter = new ObjectParameter("Productid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<PrintFieldsResult>("usp_get_printfields_byproductid", productidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="customeraccountid">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_update_printfieldvalues(Nullable<global::System.Int32> customeraccountid, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter customeraccountidParameter;
            if (customeraccountid.HasValue)
            {
                customeraccountidParameter = new ObjectParameter("customeraccountid", customeraccountid);
            }
            else
            {
                customeraccountidParameter = new ObjectParameter("customeraccountid", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_printfieldvalues", customeraccountidParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="productid">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="result_code">No Metadata Documentation available.</param>
        public int usp_activate_product(Nullable<global::System.Int32> productid, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter result_code)
        {
            ObjectParameter productidParameter;
            if (productid.HasValue)
            {
                productidParameter = new ObjectParameter("productid", productid);
            }
            else
            {
                productidParameter = new ObjectParameter("productid", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_activate_product", productidParameter, audit_user_idParameter, audit_workstationParameter, result_code);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="passwordValidPeriod">No Metadata Documentation available.</param>
        /// <param name="passwordMinLength">No Metadata Documentation available.</param>
        /// <param name="passwordMaxLength">No Metadata Documentation available.</param>
        /// <param name="previousPasswordsCount">No Metadata Documentation available.</param>
        /// <param name="maxInvalidPasswordAttempts">No Metadata Documentation available.</param>
        /// <param name="passwordAttemptLockoutDuration">No Metadata Documentation available.</param>
        /// <param name="createdBy">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="user_admin_id">No Metadata Documentation available.</param>
        public int usp_create_useradminsettings(Nullable<global::System.Int32> passwordValidPeriod, Nullable<global::System.Int32> passwordMinLength, Nullable<global::System.Int32> passwordMaxLength, Nullable<global::System.Int32> previousPasswordsCount, Nullable<global::System.Int32> maxInvalidPasswordAttempts, Nullable<global::System.Int32> passwordAttemptLockoutDuration, Nullable<global::System.Int32> createdBy, global::System.String audit_workstation, ObjectParameter user_admin_id)
        {
            ObjectParameter passwordValidPeriodParameter;
            if (passwordValidPeriod.HasValue)
            {
                passwordValidPeriodParameter = new ObjectParameter("PasswordValidPeriod", passwordValidPeriod);
            }
            else
            {
                passwordValidPeriodParameter = new ObjectParameter("PasswordValidPeriod", typeof(global::System.Int32));
            }
    
            ObjectParameter passwordMinLengthParameter;
            if (passwordMinLength.HasValue)
            {
                passwordMinLengthParameter = new ObjectParameter("PasswordMinLength", passwordMinLength);
            }
            else
            {
                passwordMinLengthParameter = new ObjectParameter("PasswordMinLength", typeof(global::System.Int32));
            }
    
            ObjectParameter passwordMaxLengthParameter;
            if (passwordMaxLength.HasValue)
            {
                passwordMaxLengthParameter = new ObjectParameter("PasswordMaxLength", passwordMaxLength);
            }
            else
            {
                passwordMaxLengthParameter = new ObjectParameter("PasswordMaxLength", typeof(global::System.Int32));
            }
    
            ObjectParameter previousPasswordsCountParameter;
            if (previousPasswordsCount.HasValue)
            {
                previousPasswordsCountParameter = new ObjectParameter("PreviousPasswordsCount", previousPasswordsCount);
            }
            else
            {
                previousPasswordsCountParameter = new ObjectParameter("PreviousPasswordsCount", typeof(global::System.Int32));
            }
    
            ObjectParameter maxInvalidPasswordAttemptsParameter;
            if (maxInvalidPasswordAttempts.HasValue)
            {
                maxInvalidPasswordAttemptsParameter = new ObjectParameter("maxInvalidPasswordAttempts", maxInvalidPasswordAttempts);
            }
            else
            {
                maxInvalidPasswordAttemptsParameter = new ObjectParameter("maxInvalidPasswordAttempts", typeof(global::System.Int32));
            }
    
            ObjectParameter passwordAttemptLockoutDurationParameter;
            if (passwordAttemptLockoutDuration.HasValue)
            {
                passwordAttemptLockoutDurationParameter = new ObjectParameter("PasswordAttemptLockoutDuration", passwordAttemptLockoutDuration);
            }
            else
            {
                passwordAttemptLockoutDurationParameter = new ObjectParameter("PasswordAttemptLockoutDuration", typeof(global::System.Int32));
            }
    
            ObjectParameter createdByParameter;
            if (createdBy.HasValue)
            {
                createdByParameter = new ObjectParameter("CreatedBy", createdBy);
            }
            else
            {
                createdByParameter = new ObjectParameter("CreatedBy", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_create_useradminsettings", passwordValidPeriodParameter, passwordMinLengthParameter, passwordMaxLengthParameter, previousPasswordsCountParameter, maxInvalidPasswordAttemptsParameter, passwordAttemptLockoutDurationParameter, createdByParameter, audit_workstationParameter, user_admin_id);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<useradminsettingslist> usp_get_useradminsettingslist(Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<useradminsettingslist>("usp_get_useradminsettingslist", audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_admin_id">No Metadata Documentation available.</param>
        /// <param name="passwordValidPeriod">No Metadata Documentation available.</param>
        /// <param name="passwordMinLength">No Metadata Documentation available.</param>
        /// <param name="passwordMaxLength">No Metadata Documentation available.</param>
        /// <param name="previousPasswordsCount">No Metadata Documentation available.</param>
        /// <param name="maxInvalidPasswordAttempts">No Metadata Documentation available.</param>
        /// <param name="passwordAttemptLockoutDuration">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_update_useradminsettings(Nullable<global::System.Int32> user_admin_id, Nullable<global::System.Int32> passwordValidPeriod, Nullable<global::System.Int32> passwordMinLength, Nullable<global::System.Int32> passwordMaxLength, Nullable<global::System.Int32> previousPasswordsCount, Nullable<global::System.Int32> maxInvalidPasswordAttempts, Nullable<global::System.Int32> passwordAttemptLockoutDuration, Nullable<global::System.Int32> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter user_admin_idParameter;
            if (user_admin_id.HasValue)
            {
                user_admin_idParameter = new ObjectParameter("user_admin_id", user_admin_id);
            }
            else
            {
                user_admin_idParameter = new ObjectParameter("user_admin_id", typeof(global::System.Int32));
            }
    
            ObjectParameter passwordValidPeriodParameter;
            if (passwordValidPeriod.HasValue)
            {
                passwordValidPeriodParameter = new ObjectParameter("PasswordValidPeriod", passwordValidPeriod);
            }
            else
            {
                passwordValidPeriodParameter = new ObjectParameter("PasswordValidPeriod", typeof(global::System.Int32));
            }
    
            ObjectParameter passwordMinLengthParameter;
            if (passwordMinLength.HasValue)
            {
                passwordMinLengthParameter = new ObjectParameter("PasswordMinLength", passwordMinLength);
            }
            else
            {
                passwordMinLengthParameter = new ObjectParameter("PasswordMinLength", typeof(global::System.Int32));
            }
    
            ObjectParameter passwordMaxLengthParameter;
            if (passwordMaxLength.HasValue)
            {
                passwordMaxLengthParameter = new ObjectParameter("PasswordMaxLength", passwordMaxLength);
            }
            else
            {
                passwordMaxLengthParameter = new ObjectParameter("PasswordMaxLength", typeof(global::System.Int32));
            }
    
            ObjectParameter previousPasswordsCountParameter;
            if (previousPasswordsCount.HasValue)
            {
                previousPasswordsCountParameter = new ObjectParameter("PreviousPasswordsCount", previousPasswordsCount);
            }
            else
            {
                previousPasswordsCountParameter = new ObjectParameter("PreviousPasswordsCount", typeof(global::System.Int32));
            }
    
            ObjectParameter maxInvalidPasswordAttemptsParameter;
            if (maxInvalidPasswordAttempts.HasValue)
            {
                maxInvalidPasswordAttemptsParameter = new ObjectParameter("maxInvalidPasswordAttempts", maxInvalidPasswordAttempts);
            }
            else
            {
                maxInvalidPasswordAttemptsParameter = new ObjectParameter("maxInvalidPasswordAttempts", typeof(global::System.Int32));
            }
    
            ObjectParameter passwordAttemptLockoutDurationParameter;
            if (passwordAttemptLockoutDuration.HasValue)
            {
                passwordAttemptLockoutDurationParameter = new ObjectParameter("PasswordAttemptLockoutDuration", passwordAttemptLockoutDuration);
            }
            else
            {
                passwordAttemptLockoutDurationParameter = new ObjectParameter("PasswordAttemptLockoutDuration", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_useradminsettings", user_admin_idParameter, passwordValidPeriodParameter, passwordMinLengthParameter, passwordMaxLengthParameter, previousPasswordsCountParameter, maxInvalidPasswordAttemptsParameter, passwordAttemptLockoutDurationParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<AuthenticationtypesResult> usp_get_authenticationtypes(Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<AuthenticationtypesResult>("usp_get_authenticationtypes", audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="connection_parameter_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<ConnectionParamsResult> usp_get_connection_parameter(Nullable<global::System.Int32> connection_parameter_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter connection_parameter_idParameter;
            if (connection_parameter_id.HasValue)
            {
                connection_parameter_idParameter = new ObjectParameter("connection_parameter_id", connection_parameter_id);
            }
            else
            {
                connection_parameter_idParameter = new ObjectParameter("connection_parameter_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ConnectionParamsResult>("usp_get_connection_parameter", connection_parameter_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_file_encryption_type(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_file_encryption_type", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<pin_block_formatResult> usp_get_pin_block_format(Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<pin_block_formatResult>("usp_get_pin_block_format", audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_print_field_types(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_print_field_types", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="currency_id">No Metadata Documentation available.</param>
        /// <param name="active_YN">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<ProductCurrencyResult> usp_get_product_currency(Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> currency_id, Nullable<global::System.Boolean> active_YN, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter currency_idParameter;
            if (currency_id.HasValue)
            {
                currency_idParameter = new ObjectParameter("currency_id", currency_id);
            }
            else
            {
                currency_idParameter = new ObjectParameter("currency_id", typeof(global::System.Int32));
            }
    
            ObjectParameter active_YNParameter;
            if (active_YN.HasValue)
            {
                active_YNParameter = new ObjectParameter("active_YN", active_YN);
            }
            else
            {
                active_YNParameter = new ObjectParameter("active_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ProductCurrencyResult>("usp_get_product_currency", product_idParameter, currency_idParameter, active_YNParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="external_system_id">No Metadata Documentation available.</param>
        /// <param name="field_name">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="external_system_field_id">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_create_external_system_fields(Nullable<global::System.Int32> external_system_id, global::System.String field_name, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter external_system_field_id, ObjectParameter resultCode)
        {
            ObjectParameter external_system_idParameter;
            if (external_system_id.HasValue)
            {
                external_system_idParameter = new ObjectParameter("external_system_id", external_system_id);
            }
            else
            {
                external_system_idParameter = new ObjectParameter("external_system_id", typeof(global::System.Int32));
            }
    
            ObjectParameter field_nameParameter;
            if (field_name != null)
            {
                field_nameParameter = new ObjectParameter("field_name", field_name);
            }
            else
            {
                field_nameParameter = new ObjectParameter("field_name", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_create_external_system_fields", external_system_idParameter, field_nameParameter, audit_user_idParameter, audit_workstationParameter, external_system_field_id, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="external_system_type_id">No Metadata Documentation available.</param>
        /// <param name="system_name">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="external_system_id">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_create_external_systems(Nullable<global::System.Int32> external_system_type_id, global::System.String system_name, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter external_system_id, ObjectParameter resultCode)
        {
            ObjectParameter external_system_type_idParameter;
            if (external_system_type_id.HasValue)
            {
                external_system_type_idParameter = new ObjectParameter("external_system_type_id", external_system_type_id);
            }
            else
            {
                external_system_type_idParameter = new ObjectParameter("external_system_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter system_nameParameter;
            if (system_name != null)
            {
                system_nameParameter = new ObjectParameter("system_name", system_name);
            }
            else
            {
                system_nameParameter = new ObjectParameter("system_name", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_create_external_systems", external_system_type_idParameter, system_nameParameter, audit_user_idParameter, audit_workstationParameter, external_system_id, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="external_system_field_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_delete_external_system_fields(Nullable<global::System.Int32> external_system_field_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter external_system_field_idParameter;
            if (external_system_field_id.HasValue)
            {
                external_system_field_idParameter = new ObjectParameter("external_system_field_id", external_system_field_id);
            }
            else
            {
                external_system_field_idParameter = new ObjectParameter("external_system_field_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_delete_external_system_fields", external_system_field_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="external_system_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_delete_external_systems(Nullable<global::System.Int32> external_system_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter external_system_idParameter;
            if (external_system_id.HasValue)
            {
                external_system_idParameter = new ObjectParameter("external_system_id", external_system_id);
            }
            else
            {
                external_system_idParameter = new ObjectParameter("external_system_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_delete_external_systems", external_system_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="external_system_field_id">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<ExternalSystemFieldsResult> usp_get_external_system_fields(Nullable<global::System.Int32> external_system_field_id, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter external_system_field_idParameter;
            if (external_system_field_id.HasValue)
            {
                external_system_field_idParameter = new ObjectParameter("external_system_field_id", external_system_field_id);
            }
            else
            {
                external_system_field_idParameter = new ObjectParameter("external_system_field_id", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ExternalSystemFieldsResult>("usp_get_external_system_fields", external_system_field_idParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="external_system_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<ExternalSystemsResult> usp_get_external_systems(Nullable<global::System.Int32> external_system_id, Nullable<global::System.Int32> language_id, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter external_system_idParameter;
            if (external_system_id.HasValue)
            {
                external_system_idParameter = new ObjectParameter("external_system_id", external_system_id);
            }
            else
            {
                external_system_idParameter = new ObjectParameter("external_system_id", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ExternalSystemsResult>("usp_get_external_systems", external_system_idParameter, language_idParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="external_system_field_id">No Metadata Documentation available.</param>
        /// <param name="external_system_id">No Metadata Documentation available.</param>
        /// <param name="field_name">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_update_external_system_fields(Nullable<global::System.Int32> external_system_field_id, Nullable<global::System.Int32> external_system_id, global::System.String field_name, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter external_system_field_idParameter;
            if (external_system_field_id.HasValue)
            {
                external_system_field_idParameter = new ObjectParameter("external_system_field_id", external_system_field_id);
            }
            else
            {
                external_system_field_idParameter = new ObjectParameter("external_system_field_id", typeof(global::System.Int32));
            }
    
            ObjectParameter external_system_idParameter;
            if (external_system_id.HasValue)
            {
                external_system_idParameter = new ObjectParameter("external_system_id", external_system_id);
            }
            else
            {
                external_system_idParameter = new ObjectParameter("external_system_id", typeof(global::System.Int32));
            }
    
            ObjectParameter field_nameParameter;
            if (field_name != null)
            {
                field_nameParameter = new ObjectParameter("field_name", field_name);
            }
            else
            {
                field_nameParameter = new ObjectParameter("field_name", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_external_system_fields", external_system_field_idParameter, external_system_idParameter, field_nameParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="external_system_id">No Metadata Documentation available.</param>
        /// <param name="external_system_type_id">No Metadata Documentation available.</param>
        /// <param name="system_name">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_update_external_systems(Nullable<global::System.Int32> external_system_id, Nullable<global::System.Int32> external_system_type_id, global::System.String system_name, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter external_system_idParameter;
            if (external_system_id.HasValue)
            {
                external_system_idParameter = new ObjectParameter("external_system_id", external_system_id);
            }
            else
            {
                external_system_idParameter = new ObjectParameter("external_system_id", typeof(global::System.Int32));
            }
    
            ObjectParameter external_system_type_idParameter;
            if (external_system_type_id.HasValue)
            {
                external_system_type_idParameter = new ObjectParameter("external_system_type_id", external_system_type_id);
            }
            else
            {
                external_system_type_idParameter = new ObjectParameter("external_system_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter system_nameParameter;
            if (system_name != null)
            {
                system_nameParameter = new ObjectParameter("system_name", system_name);
            }
            else
            {
                system_nameParameter = new ObjectParameter("system_name", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_external_systems", external_system_idParameter, external_system_type_idParameter, system_nameParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_external_system_types(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_external_system_types", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="external_system_type_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<ProductExternalSystemResult> usp_get_product_external_system_fields(Nullable<global::System.Int32> external_system_type_id, Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter external_system_type_idParameter;
            if (external_system_type_id.HasValue)
            {
                external_system_type_idParameter = new ObjectParameter("external_system_type_id", external_system_type_id);
            }
            else
            {
                external_system_type_idParameter = new ObjectParameter("external_system_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ProductExternalSystemResult>("usp_get_product_external_system_fields", external_system_type_idParameter, product_idParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="error">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_issue_card_cms_retry(Nullable<global::System.Int64> card_id, global::System.String error, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter errorParameter;
            if (error != null)
            {
                errorParameter = new ObjectParameter("error", error);
            }
            else
            {
                errorParameter = new ObjectParameter("error", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_issue_card_cms_retry", card_idParameter, errorParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_issue_method_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<usp_get_dist_batch_flows_Result> usp_get_dist_batch_flows(Nullable<global::System.Int32> card_issue_method_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter card_issue_method_idParameter;
            if (card_issue_method_id.HasValue)
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", card_issue_method_id);
            }
            else
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_get_dist_batch_flows_Result>("usp_get_dist_batch_flows", card_issue_method_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="dist_batch_type_id">No Metadata Documentation available.</param>
        /// <param name="dist_batch_statuses_id">No Metadata Documentation available.</param>
        /// <param name="channel_id">No Metadata Documentation available.</param>
        public ObjectResult<notification_batchResult> usp_get_notification_batch(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> dist_batch_type_id, Nullable<global::System.Int32> dist_batch_statuses_id, Nullable<global::System.Int32> channel_id)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter dist_batch_type_idParameter;
            if (dist_batch_type_id.HasValue)
            {
                dist_batch_type_idParameter = new ObjectParameter("dist_batch_type_id", dist_batch_type_id);
            }
            else
            {
                dist_batch_type_idParameter = new ObjectParameter("dist_batch_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter dist_batch_statuses_idParameter;
            if (dist_batch_statuses_id.HasValue)
            {
                dist_batch_statuses_idParameter = new ObjectParameter("dist_batch_statuses_id", dist_batch_statuses_id);
            }
            else
            {
                dist_batch_statuses_idParameter = new ObjectParameter("dist_batch_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter channel_idParameter;
            if (channel_id.HasValue)
            {
                channel_idParameter = new ObjectParameter("channel_id", channel_id);
            }
            else
            {
                channel_idParameter = new ObjectParameter("channel_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<notification_batchResult>("usp_get_notification_batch", issuer_idParameter, dist_batch_type_idParameter, dist_batch_statuses_idParameter, channel_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        public ObjectResult<notification_batch_ListResult> usp_get_notification_batch_List(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<notification_batch_ListResult>("usp_get_notification_batch_List", issuer_idParameter, pageIndexParameter, rowsPerPageParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_card_statuses_id">No Metadata Documentation available.</param>
        /// <param name="card_issue_method_id">No Metadata Documentation available.</param>
        /// <param name="channel_id">No Metadata Documentation available.</param>
        public ObjectResult<notification_branchResult> usp_get_notification_branch(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_card_statuses_id, Nullable<global::System.Int32> card_issue_method_id, Nullable<global::System.Int32> channel_id)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_card_statuses_idParameter;
            if (branch_card_statuses_id.HasValue)
            {
                branch_card_statuses_idParameter = new ObjectParameter("branch_card_statuses_id", branch_card_statuses_id);
            }
            else
            {
                branch_card_statuses_idParameter = new ObjectParameter("branch_card_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_issue_method_idParameter;
            if (card_issue_method_id.HasValue)
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", card_issue_method_id);
            }
            else
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", typeof(global::System.Int32));
            }
    
            ObjectParameter channel_idParameter;
            if (channel_id.HasValue)
            {
                channel_idParameter = new ObjectParameter("channel_id", channel_id);
            }
            else
            {
                channel_idParameter = new ObjectParameter("channel_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<notification_branchResult>("usp_get_notification_branch", issuer_idParameter, branch_card_statuses_idParameter, card_issue_method_idParameter, channel_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        public ObjectResult<notification_branch_ListResult> usp_get_notification_branch_List(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<notification_branch_ListResult>("usp_get_notification_branch_List", issuer_idParameter, pageIndexParameter, rowsPerPageParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="dist_batch_type_id">No Metadata Documentation available.</param>
        /// <param name="dist_batch_statuses_id">No Metadata Documentation available.</param>
        /// <param name="channel_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_delete_notification_batch(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> dist_batch_type_id, Nullable<global::System.Int32> dist_batch_statuses_id, Nullable<global::System.Int32> channel_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter dist_batch_type_idParameter;
            if (dist_batch_type_id.HasValue)
            {
                dist_batch_type_idParameter = new ObjectParameter("dist_batch_type_id", dist_batch_type_id);
            }
            else
            {
                dist_batch_type_idParameter = new ObjectParameter("dist_batch_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter dist_batch_statuses_idParameter;
            if (dist_batch_statuses_id.HasValue)
            {
                dist_batch_statuses_idParameter = new ObjectParameter("dist_batch_statuses_id", dist_batch_statuses_id);
            }
            else
            {
                dist_batch_statuses_idParameter = new ObjectParameter("dist_batch_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter channel_idParameter;
            if (channel_id.HasValue)
            {
                channel_idParameter = new ObjectParameter("channel_id", channel_id);
            }
            else
            {
                channel_idParameter = new ObjectParameter("channel_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_delete_notification_batch", issuer_idParameter, dist_batch_type_idParameter, dist_batch_statuses_idParameter, channel_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_card_statuses_id">No Metadata Documentation available.</param>
        /// <param name="card_issue_method_id">No Metadata Documentation available.</param>
        /// <param name="channel_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_delete_notification_branch(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_card_statuses_id, Nullable<global::System.Int32> card_issue_method_id, Nullable<global::System.Int32> channel_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_card_statuses_idParameter;
            if (branch_card_statuses_id.HasValue)
            {
                branch_card_statuses_idParameter = new ObjectParameter("branch_card_statuses_id", branch_card_statuses_id);
            }
            else
            {
                branch_card_statuses_idParameter = new ObjectParameter("branch_card_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_issue_method_idParameter;
            if (card_issue_method_id.HasValue)
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", card_issue_method_id);
            }
            else
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", typeof(global::System.Int32));
            }
    
            ObjectParameter channel_idParameter;
            if (channel_id.HasValue)
            {
                channel_idParameter = new ObjectParameter("channel_id", channel_id);
            }
            else
            {
                channel_idParameter = new ObjectParameter("channel_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_delete_notification_branch", issuer_idParameter, branch_card_statuses_idParameter, card_issue_method_idParameter, channel_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<ZoneKeyResult> usp_get_zone_key(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ZoneKeyResult>("usp_get_zone_key", issuer_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        public ObjectResult<usp_get_product_accounting_list_Result> usp_get_product_accounting_list(Nullable<global::System.Int32> issuer_id)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<usp_get_product_accounting_list_Result>("usp_get_product_accounting_list", issuer_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fee_accounting_id">No Metadata Documentation available.</param>
        public ObjectResult<ProductFeeAccountingResult> usp_get_product_fee_accounting(Nullable<global::System.Int32> fee_accounting_id)
        {
            ObjectParameter fee_accounting_idParameter;
            if (fee_accounting_id.HasValue)
            {
                fee_accounting_idParameter = new ObjectParameter("fee_accounting_id", fee_accounting_id);
            }
            else
            {
                fee_accounting_idParameter = new ObjectParameter("fee_accounting_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<ProductFeeAccountingResult>("usp_get_product_fee_accounting", fee_accounting_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<ProductFeeAccountingResult> usp_get_product_fee_accounting_list(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ProductFeeAccountingResult>("usp_get_product_fee_accounting_list", issuer_idParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fee_accounting_name">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="fee_revenue_account_no">No Metadata Documentation available.</param>
        /// <param name="fee_revenue_account_type_id">No Metadata Documentation available.</param>
        /// <param name="fee_revenue_branch_code">No Metadata Documentation available.</param>
        /// <param name="fee_revenue_narration_en">No Metadata Documentation available.</param>
        /// <param name="fee_revenue_narration_fr">No Metadata Documentation available.</param>
        /// <param name="fee_revenue_narration_pt">No Metadata Documentation available.</param>
        /// <param name="fee_revenue_narration_es">No Metadata Documentation available.</param>
        /// <param name="vat_account_no">No Metadata Documentation available.</param>
        /// <param name="vat_account_type_id">No Metadata Documentation available.</param>
        /// <param name="vat_account_branch_code">No Metadata Documentation available.</param>
        /// <param name="vat_narration_en">No Metadata Documentation available.</param>
        /// <param name="vat_narration_fr">No Metadata Documentation available.</param>
        /// <param name="vat_narration_pt">No Metadata Documentation available.</param>
        /// <param name="vat_narration_es">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="new_fee_accounting_id">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_create_product_fee_accounting(global::System.String fee_accounting_name, Nullable<global::System.Int32> issuer_id, global::System.String fee_revenue_account_no, Nullable<global::System.Int32> fee_revenue_account_type_id, global::System.String fee_revenue_branch_code, global::System.String fee_revenue_narration_en, global::System.String fee_revenue_narration_fr, global::System.String fee_revenue_narration_pt, global::System.String fee_revenue_narration_es, global::System.String vat_account_no, Nullable<global::System.Int32> vat_account_type_id, global::System.String vat_account_branch_code, global::System.String vat_narration_en, global::System.String vat_narration_fr, global::System.String vat_narration_pt, global::System.String vat_narration_es, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter new_fee_accounting_id, ObjectParameter resultCode)
        {
            ObjectParameter fee_accounting_nameParameter;
            if (fee_accounting_name != null)
            {
                fee_accounting_nameParameter = new ObjectParameter("fee_accounting_name", fee_accounting_name);
            }
            else
            {
                fee_accounting_nameParameter = new ObjectParameter("fee_accounting_name", typeof(global::System.String));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter fee_revenue_account_noParameter;
            if (fee_revenue_account_no != null)
            {
                fee_revenue_account_noParameter = new ObjectParameter("fee_revenue_account_no", fee_revenue_account_no);
            }
            else
            {
                fee_revenue_account_noParameter = new ObjectParameter("fee_revenue_account_no", typeof(global::System.String));
            }
    
            ObjectParameter fee_revenue_account_type_idParameter;
            if (fee_revenue_account_type_id.HasValue)
            {
                fee_revenue_account_type_idParameter = new ObjectParameter("fee_revenue_account_type_id", fee_revenue_account_type_id);
            }
            else
            {
                fee_revenue_account_type_idParameter = new ObjectParameter("fee_revenue_account_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter fee_revenue_branch_codeParameter;
            if (fee_revenue_branch_code != null)
            {
                fee_revenue_branch_codeParameter = new ObjectParameter("fee_revenue_branch_code", fee_revenue_branch_code);
            }
            else
            {
                fee_revenue_branch_codeParameter = new ObjectParameter("fee_revenue_branch_code", typeof(global::System.String));
            }
    
            ObjectParameter fee_revenue_narration_enParameter;
            if (fee_revenue_narration_en != null)
            {
                fee_revenue_narration_enParameter = new ObjectParameter("fee_revenue_narration_en", fee_revenue_narration_en);
            }
            else
            {
                fee_revenue_narration_enParameter = new ObjectParameter("fee_revenue_narration_en", typeof(global::System.String));
            }
    
            ObjectParameter fee_revenue_narration_frParameter;
            if (fee_revenue_narration_fr != null)
            {
                fee_revenue_narration_frParameter = new ObjectParameter("fee_revenue_narration_fr", fee_revenue_narration_fr);
            }
            else
            {
                fee_revenue_narration_frParameter = new ObjectParameter("fee_revenue_narration_fr", typeof(global::System.String));
            }
    
            ObjectParameter fee_revenue_narration_ptParameter;
            if (fee_revenue_narration_pt != null)
            {
                fee_revenue_narration_ptParameter = new ObjectParameter("fee_revenue_narration_pt", fee_revenue_narration_pt);
            }
            else
            {
                fee_revenue_narration_ptParameter = new ObjectParameter("fee_revenue_narration_pt", typeof(global::System.String));
            }
    
            ObjectParameter fee_revenue_narration_esParameter;
            if (fee_revenue_narration_es != null)
            {
                fee_revenue_narration_esParameter = new ObjectParameter("fee_revenue_narration_es", fee_revenue_narration_es);
            }
            else
            {
                fee_revenue_narration_esParameter = new ObjectParameter("fee_revenue_narration_es", typeof(global::System.String));
            }
    
            ObjectParameter vat_account_noParameter;
            if (vat_account_no != null)
            {
                vat_account_noParameter = new ObjectParameter("vat_account_no", vat_account_no);
            }
            else
            {
                vat_account_noParameter = new ObjectParameter("vat_account_no", typeof(global::System.String));
            }
    
            ObjectParameter vat_account_type_idParameter;
            if (vat_account_type_id.HasValue)
            {
                vat_account_type_idParameter = new ObjectParameter("vat_account_type_id", vat_account_type_id);
            }
            else
            {
                vat_account_type_idParameter = new ObjectParameter("vat_account_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter vat_account_branch_codeParameter;
            if (vat_account_branch_code != null)
            {
                vat_account_branch_codeParameter = new ObjectParameter("vat_account_branch_code", vat_account_branch_code);
            }
            else
            {
                vat_account_branch_codeParameter = new ObjectParameter("vat_account_branch_code", typeof(global::System.String));
            }
    
            ObjectParameter vat_narration_enParameter;
            if (vat_narration_en != null)
            {
                vat_narration_enParameter = new ObjectParameter("vat_narration_en", vat_narration_en);
            }
            else
            {
                vat_narration_enParameter = new ObjectParameter("vat_narration_en", typeof(global::System.String));
            }
    
            ObjectParameter vat_narration_frParameter;
            if (vat_narration_fr != null)
            {
                vat_narration_frParameter = new ObjectParameter("vat_narration_fr", vat_narration_fr);
            }
            else
            {
                vat_narration_frParameter = new ObjectParameter("vat_narration_fr", typeof(global::System.String));
            }
    
            ObjectParameter vat_narration_ptParameter;
            if (vat_narration_pt != null)
            {
                vat_narration_ptParameter = new ObjectParameter("vat_narration_pt", vat_narration_pt);
            }
            else
            {
                vat_narration_ptParameter = new ObjectParameter("vat_narration_pt", typeof(global::System.String));
            }
    
            ObjectParameter vat_narration_esParameter;
            if (vat_narration_es != null)
            {
                vat_narration_esParameter = new ObjectParameter("vat_narration_es", vat_narration_es);
            }
            else
            {
                vat_narration_esParameter = new ObjectParameter("vat_narration_es", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_create_product_fee_accounting", fee_accounting_nameParameter, issuer_idParameter, fee_revenue_account_noParameter, fee_revenue_account_type_idParameter, fee_revenue_branch_codeParameter, fee_revenue_narration_enParameter, fee_revenue_narration_frParameter, fee_revenue_narration_ptParameter, fee_revenue_narration_esParameter, vat_account_noParameter, vat_account_type_idParameter, vat_account_branch_codeParameter, vat_narration_enParameter, vat_narration_frParameter, vat_narration_ptParameter, vat_narration_esParameter, audit_user_idParameter, audit_workstationParameter, new_fee_accounting_id, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fee_accounting_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_delete_product_fee_accounting(Nullable<global::System.Int32> fee_accounting_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter fee_accounting_idParameter;
            if (fee_accounting_id.HasValue)
            {
                fee_accounting_idParameter = new ObjectParameter("fee_accounting_id", fee_accounting_id);
            }
            else
            {
                fee_accounting_idParameter = new ObjectParameter("fee_accounting_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_delete_product_fee_accounting", fee_accounting_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fee_accounting_id">No Metadata Documentation available.</param>
        /// <param name="fee_accounting_name">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="fee_revenue_account_no">No Metadata Documentation available.</param>
        /// <param name="fee_revenue_account_type_id">No Metadata Documentation available.</param>
        /// <param name="fee_revenue_branch_code">No Metadata Documentation available.</param>
        /// <param name="fee_revenue_narration_en">No Metadata Documentation available.</param>
        /// <param name="fee_revenue_narration_fr">No Metadata Documentation available.</param>
        /// <param name="fee_revenue_narration_pt">No Metadata Documentation available.</param>
        /// <param name="fee_revenue_narration_es">No Metadata Documentation available.</param>
        /// <param name="vat_account_no">No Metadata Documentation available.</param>
        /// <param name="vat_account_type_id">No Metadata Documentation available.</param>
        /// <param name="vat_account_branch_code">No Metadata Documentation available.</param>
        /// <param name="vat_narration_en">No Metadata Documentation available.</param>
        /// <param name="vat_narration_fr">No Metadata Documentation available.</param>
        /// <param name="vat_narration_pt">No Metadata Documentation available.</param>
        /// <param name="vat_narration_es">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_update_product_fee_accounting(Nullable<global::System.Int32> fee_accounting_id, global::System.String fee_accounting_name, Nullable<global::System.Int32> issuer_id, global::System.String fee_revenue_account_no, Nullable<global::System.Int32> fee_revenue_account_type_id, global::System.String fee_revenue_branch_code, global::System.String fee_revenue_narration_en, global::System.String fee_revenue_narration_fr, global::System.String fee_revenue_narration_pt, global::System.String fee_revenue_narration_es, global::System.String vat_account_no, Nullable<global::System.Int32> vat_account_type_id, global::System.String vat_account_branch_code, global::System.String vat_narration_en, global::System.String vat_narration_fr, global::System.String vat_narration_pt, global::System.String vat_narration_es, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter fee_accounting_idParameter;
            if (fee_accounting_id.HasValue)
            {
                fee_accounting_idParameter = new ObjectParameter("fee_accounting_id", fee_accounting_id);
            }
            else
            {
                fee_accounting_idParameter = new ObjectParameter("fee_accounting_id", typeof(global::System.Int32));
            }
    
            ObjectParameter fee_accounting_nameParameter;
            if (fee_accounting_name != null)
            {
                fee_accounting_nameParameter = new ObjectParameter("fee_accounting_name", fee_accounting_name);
            }
            else
            {
                fee_accounting_nameParameter = new ObjectParameter("fee_accounting_name", typeof(global::System.String));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter fee_revenue_account_noParameter;
            if (fee_revenue_account_no != null)
            {
                fee_revenue_account_noParameter = new ObjectParameter("fee_revenue_account_no", fee_revenue_account_no);
            }
            else
            {
                fee_revenue_account_noParameter = new ObjectParameter("fee_revenue_account_no", typeof(global::System.String));
            }
    
            ObjectParameter fee_revenue_account_type_idParameter;
            if (fee_revenue_account_type_id.HasValue)
            {
                fee_revenue_account_type_idParameter = new ObjectParameter("fee_revenue_account_type_id", fee_revenue_account_type_id);
            }
            else
            {
                fee_revenue_account_type_idParameter = new ObjectParameter("fee_revenue_account_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter fee_revenue_branch_codeParameter;
            if (fee_revenue_branch_code != null)
            {
                fee_revenue_branch_codeParameter = new ObjectParameter("fee_revenue_branch_code", fee_revenue_branch_code);
            }
            else
            {
                fee_revenue_branch_codeParameter = new ObjectParameter("fee_revenue_branch_code", typeof(global::System.String));
            }
    
            ObjectParameter fee_revenue_narration_enParameter;
            if (fee_revenue_narration_en != null)
            {
                fee_revenue_narration_enParameter = new ObjectParameter("fee_revenue_narration_en", fee_revenue_narration_en);
            }
            else
            {
                fee_revenue_narration_enParameter = new ObjectParameter("fee_revenue_narration_en", typeof(global::System.String));
            }
    
            ObjectParameter fee_revenue_narration_frParameter;
            if (fee_revenue_narration_fr != null)
            {
                fee_revenue_narration_frParameter = new ObjectParameter("fee_revenue_narration_fr", fee_revenue_narration_fr);
            }
            else
            {
                fee_revenue_narration_frParameter = new ObjectParameter("fee_revenue_narration_fr", typeof(global::System.String));
            }
    
            ObjectParameter fee_revenue_narration_ptParameter;
            if (fee_revenue_narration_pt != null)
            {
                fee_revenue_narration_ptParameter = new ObjectParameter("fee_revenue_narration_pt", fee_revenue_narration_pt);
            }
            else
            {
                fee_revenue_narration_ptParameter = new ObjectParameter("fee_revenue_narration_pt", typeof(global::System.String));
            }
    
            ObjectParameter fee_revenue_narration_esParameter;
            if (fee_revenue_narration_es != null)
            {
                fee_revenue_narration_esParameter = new ObjectParameter("fee_revenue_narration_es", fee_revenue_narration_es);
            }
            else
            {
                fee_revenue_narration_esParameter = new ObjectParameter("fee_revenue_narration_es", typeof(global::System.String));
            }
    
            ObjectParameter vat_account_noParameter;
            if (vat_account_no != null)
            {
                vat_account_noParameter = new ObjectParameter("vat_account_no", vat_account_no);
            }
            else
            {
                vat_account_noParameter = new ObjectParameter("vat_account_no", typeof(global::System.String));
            }
    
            ObjectParameter vat_account_type_idParameter;
            if (vat_account_type_id.HasValue)
            {
                vat_account_type_idParameter = new ObjectParameter("vat_account_type_id", vat_account_type_id);
            }
            else
            {
                vat_account_type_idParameter = new ObjectParameter("vat_account_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter vat_account_branch_codeParameter;
            if (vat_account_branch_code != null)
            {
                vat_account_branch_codeParameter = new ObjectParameter("vat_account_branch_code", vat_account_branch_code);
            }
            else
            {
                vat_account_branch_codeParameter = new ObjectParameter("vat_account_branch_code", typeof(global::System.String));
            }
    
            ObjectParameter vat_narration_enParameter;
            if (vat_narration_en != null)
            {
                vat_narration_enParameter = new ObjectParameter("vat_narration_en", vat_narration_en);
            }
            else
            {
                vat_narration_enParameter = new ObjectParameter("vat_narration_en", typeof(global::System.String));
            }
    
            ObjectParameter vat_narration_frParameter;
            if (vat_narration_fr != null)
            {
                vat_narration_frParameter = new ObjectParameter("vat_narration_fr", vat_narration_fr);
            }
            else
            {
                vat_narration_frParameter = new ObjectParameter("vat_narration_fr", typeof(global::System.String));
            }
    
            ObjectParameter vat_narration_ptParameter;
            if (vat_narration_pt != null)
            {
                vat_narration_ptParameter = new ObjectParameter("vat_narration_pt", vat_narration_pt);
            }
            else
            {
                vat_narration_ptParameter = new ObjectParameter("vat_narration_pt", typeof(global::System.String));
            }
    
            ObjectParameter vat_narration_esParameter;
            if (vat_narration_es != null)
            {
                vat_narration_esParameter = new ObjectParameter("vat_narration_es", vat_narration_es);
            }
            else
            {
                vat_narration_esParameter = new ObjectParameter("vat_narration_es", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_product_fee_accounting", fee_accounting_idParameter, fee_accounting_nameParameter, issuer_idParameter, fee_revenue_account_noParameter, fee_revenue_account_type_idParameter, fee_revenue_branch_codeParameter, fee_revenue_narration_enParameter, fee_revenue_narration_frParameter, fee_revenue_narration_ptParameter, fee_revenue_narration_esParameter, vat_account_noParameter, vat_account_type_idParameter, vat_account_branch_codeParameter, vat_narration_enParameter, vat_narration_frParameter, vat_narration_ptParameter, vat_narration_esParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public ObjectResult<CreatedExportBatchResult> usp_create_export_batches(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<CreatedExportBatchResult>("usp_create_export_batches", issuer_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="export_batch_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<ExportBatchCardDetailsResult> usp_get_export_batch_card_details(Nullable<global::System.Int64> export_batch_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter export_batch_idParameter;
            if (export_batch_id.HasValue)
            {
                export_batch_idParameter = new ObjectParameter("export_batch_id", export_batch_id);
            }
            else
            {
                export_batch_idParameter = new ObjectParameter("export_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ExportBatchCardDetailsResult>("usp_get_export_batch_card_details", export_batch_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="remote_component_ip">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<usp_remote_get_pending_Result> usp_remote_get_pending(Nullable<global::System.Int32> issuer_id, global::System.String remote_component_ip, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter remote_component_ipParameter;
            if (remote_component_ip != null)
            {
                remote_component_ipParameter = new ObjectParameter("remote_component_ip", remote_component_ip);
            }
            else
            {
                remote_component_ipParameter = new ObjectParameter("remote_component_ip", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_remote_get_pending_Result>("usp_remote_get_pending", issuer_idParameter, remote_component_ipParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="remote_token">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<RemoteTokenIssuerResult> usp_remote_get_token(Nullable<global::System.Guid> remote_token, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter remote_tokenParameter;
            if (remote_token.HasValue)
            {
                remote_tokenParameter = new ObjectParameter("remote_token", remote_token);
            }
            else
            {
                remote_tokenParameter = new ObjectParameter("remote_token", typeof(global::System.Guid));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<RemoteTokenIssuerResult>("usp_remote_get_token", remote_tokenParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="remote_address">No Metadata Documentation available.</param>
        /// <param name="token">No Metadata Documentation available.</param>
        /// <param name="request">No Metadata Documentation available.</param>
        /// <param name="method_call_id">No Metadata Documentation available.</param>
        public int usp_remote_log_request(global::System.String remote_address, global::System.String token, global::System.String request, Nullable<global::System.Int32> method_call_id)
        {
            ObjectParameter remote_addressParameter;
            if (remote_address != null)
            {
                remote_addressParameter = new ObjectParameter("remote_address", remote_address);
            }
            else
            {
                remote_addressParameter = new ObjectParameter("remote_address", typeof(global::System.String));
            }
    
            ObjectParameter tokenParameter;
            if (token != null)
            {
                tokenParameter = new ObjectParameter("token", token);
            }
            else
            {
                tokenParameter = new ObjectParameter("token", typeof(global::System.String));
            }
    
            ObjectParameter requestParameter;
            if (request != null)
            {
                requestParameter = new ObjectParameter("request", request);
            }
            else
            {
                requestParameter = new ObjectParameter("request", typeof(global::System.String));
            }
    
            ObjectParameter method_call_idParameter;
            if (method_call_id.HasValue)
            {
                method_call_idParameter = new ObjectParameter("method_call_id", method_call_id);
            }
            else
            {
                method_call_idParameter = new ObjectParameter("method_call_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("usp_remote_log_request", remote_addressParameter, tokenParameter, requestParameter, method_call_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="card_fee_charge_status_id">No Metadata Documentation available.</param>
        /// <param name="fee_reference_number">No Metadata Documentation available.</param>
        /// <param name="fee_reversal_ref_number">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_fee_charge_update_status(Nullable<global::System.Int64> card_id, Nullable<global::System.Int32> card_fee_charge_status_id, global::System.String fee_reference_number, global::System.String fee_reversal_ref_number, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter card_fee_charge_status_idParameter;
            if (card_fee_charge_status_id.HasValue)
            {
                card_fee_charge_status_idParameter = new ObjectParameter("card_fee_charge_status_id", card_fee_charge_status_id);
            }
            else
            {
                card_fee_charge_status_idParameter = new ObjectParameter("card_fee_charge_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter fee_reference_numberParameter;
            if (fee_reference_number != null)
            {
                fee_reference_numberParameter = new ObjectParameter("fee_reference_number", fee_reference_number);
            }
            else
            {
                fee_reference_numberParameter = new ObjectParameter("fee_reference_number", typeof(global::System.String));
            }
    
            ObjectParameter fee_reversal_ref_numberParameter;
            if (fee_reversal_ref_number != null)
            {
                fee_reversal_ref_numberParameter = new ObjectParameter("fee_reversal_ref_number", fee_reversal_ref_number);
            }
            else
            {
                fee_reversal_ref_numberParameter = new ObjectParameter("fee_reversal_ref_number", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_fee_charge_update_status", card_idParameter, card_fee_charge_status_idParameter, fee_reference_numberParameter, fee_reversal_ref_numberParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="remote_card_update_statuses_id">No Metadata Documentation available.</param>
        /// <param name="comment">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<RemoteCardUpdateDetailResult> usp_remote_card_update_change_status(Nullable<global::System.Int64> card_id, Nullable<global::System.Int32> remote_card_update_statuses_id, global::System.String comment, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter remote_card_update_statuses_idParameter;
            if (remote_card_update_statuses_id.HasValue)
            {
                remote_card_update_statuses_idParameter = new ObjectParameter("remote_card_update_statuses_id", remote_card_update_statuses_id);
            }
            else
            {
                remote_card_update_statuses_idParameter = new ObjectParameter("remote_card_update_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter commentParameter;
            if (comment != null)
            {
                commentParameter = new ObjectParameter("comment", comment);
            }
            else
            {
                commentParameter = new ObjectParameter("comment", typeof(global::System.String));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<RemoteCardUpdateDetailResult>("usp_remote_card_update_change_status", card_idParameter, remote_card_update_statuses_idParameter, commentParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="remote_card_update_statuses_id">No Metadata Documentation available.</param>
        /// <param name="comment">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_remote_card_update_change_statuses(Nullable<global::System.Int32> remote_card_update_statuses_id, global::System.String comment, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter remote_card_update_statuses_idParameter;
            if (remote_card_update_statuses_id.HasValue)
            {
                remote_card_update_statuses_idParameter = new ObjectParameter("remote_card_update_statuses_id", remote_card_update_statuses_id);
            }
            else
            {
                remote_card_update_statuses_idParameter = new ObjectParameter("remote_card_update_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter commentParameter;
            if (comment != null)
            {
                commentParameter = new ObjectParameter("comment", comment);
            }
            else
            {
                commentParameter = new ObjectParameter("comment", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_remote_card_update_change_statuses", remote_card_update_statuses_idParameter, commentParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<RemoteCardUpdateDetailResult> usp_remote_card_update_get_detail(Nullable<global::System.Int64> card_id, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<RemoteCardUpdateDetailResult>("usp_remote_card_update_get_detail", card_idParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_number">No Metadata Documentation available.</param>
        /// <param name="remote_update_statuses_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="date_from">No Metadata Documentation available.</param>
        /// <param name="date_to">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<RemoteCardUpdateSearchResult> usp_remote_card_update_search(global::System.String card_number, Nullable<global::System.Int32> remote_update_statuses_id, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> product_id, Nullable<global::System.DateTimeOffset> date_from, Nullable<global::System.DateTimeOffset> date_to, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter card_numberParameter;
            if (card_number != null)
            {
                card_numberParameter = new ObjectParameter("card_number", card_number);
            }
            else
            {
                card_numberParameter = new ObjectParameter("card_number", typeof(global::System.String));
            }
    
            ObjectParameter remote_update_statuses_idParameter;
            if (remote_update_statuses_id.HasValue)
            {
                remote_update_statuses_idParameter = new ObjectParameter("remote_update_statuses_id", remote_update_statuses_id);
            }
            else
            {
                remote_update_statuses_idParameter = new ObjectParameter("remote_update_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter date_fromParameter;
            if (date_from.HasValue)
            {
                date_fromParameter = new ObjectParameter("date_from", date_from);
            }
            else
            {
                date_fromParameter = new ObjectParameter("date_from", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter date_toParameter;
            if (date_to.HasValue)
            {
                date_toParameter = new ObjectParameter("date_to", date_to);
            }
            else
            {
                date_toParameter = new ObjectParameter("date_to", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<RemoteCardUpdateSearchResult>("usp_remote_card_update_search", card_numberParameter, remote_update_statuses_idParameter, issuer_idParameter, branch_idParameter, product_idParameter, date_fromParameter, date_toParameter, pageIndexParameter, rowsPerPageParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_remote_update_statuses(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_remote_update_statuses", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="dist_batch_id">No Metadata Documentation available.</param>
        /// <param name="card_issue_method_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> usp_get_productionbatch_card_count(Nullable<global::System.Int32> dist_batch_id, Nullable<global::System.Int32> card_issue_method_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter dist_batch_idParameter;
            if (dist_batch_id.HasValue)
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", dist_batch_id);
            }
            else
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_issue_method_idParameter;
            if (card_issue_method_id.HasValue)
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", card_issue_method_id);
            }
            else
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("usp_get_productionbatch_card_count", dist_batch_idParameter, card_issue_method_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="dist_batch_id">No Metadata Documentation available.</param>
        /// <param name="dist_batch_status_id">No Metadata Documentation available.</param>
        /// <param name="distbatch_type_id">No Metadata Documentation available.</param>
        /// <param name="cardissuemethod">No Metadata Documentation available.</param>
        /// <param name="status_notes">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public ObjectResult<DistBatchResult> usp_distbatch_cancel(Nullable<global::System.Int64> dist_batch_id, Nullable<global::System.Int32> dist_batch_status_id, Nullable<global::System.Int32> distbatch_type_id, Nullable<global::System.Int32> cardissuemethod, global::System.String status_notes, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter dist_batch_idParameter;
            if (dist_batch_id.HasValue)
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", dist_batch_id);
            }
            else
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter dist_batch_status_idParameter;
            if (dist_batch_status_id.HasValue)
            {
                dist_batch_status_idParameter = new ObjectParameter("dist_batch_status_id", dist_batch_status_id);
            }
            else
            {
                dist_batch_status_idParameter = new ObjectParameter("dist_batch_status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter distbatch_type_idParameter;
            if (distbatch_type_id.HasValue)
            {
                distbatch_type_idParameter = new ObjectParameter("distbatch_type_id", distbatch_type_id);
            }
            else
            {
                distbatch_type_idParameter = new ObjectParameter("distbatch_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter cardissuemethodParameter;
            if (cardissuemethod.HasValue)
            {
                cardissuemethodParameter = new ObjectParameter("cardissuemethod", cardissuemethod);
            }
            else
            {
                cardissuemethodParameter = new ObjectParameter("cardissuemethod", typeof(global::System.Int32));
            }
    
            ObjectParameter status_notesParameter;
            if (status_notes != null)
            {
                status_notesParameter = new ObjectParameter("status_notes", status_notes);
            }
            else
            {
                status_notesParameter = new ObjectParameter("status_notes", typeof(global::System.String));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<DistBatchResult>("usp_distbatch_cancel", dist_batch_idParameter, dist_batch_status_idParameter, distbatch_type_idParameter, cardissuemethodParameter, status_notesParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="dist_batch_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="card_issue_method_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> usp_get_dist_batch_card_count(Nullable<global::System.Int64> dist_batch_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> card_issue_method_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter dist_batch_idParameter;
            if (dist_batch_id.HasValue)
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", dist_batch_id);
            }
            else
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_issue_method_idParameter;
            if (card_issue_method_id.HasValue)
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", card_issue_method_id);
            }
            else
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("usp_get_dist_batch_card_count", dist_batch_idParameter, branch_idParameter, product_idParameter, card_issue_method_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="issuerId">No Metadata Documentation available.</param>
        /// <param name="dist_batch_reference">No Metadata Documentation available.</param>
        /// <param name="dist_batch_statuses_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="card_issue_method_id">No Metadata Documentation available.</param>
        /// <param name="distBatchTypeId">No Metadata Documentation available.</param>
        /// <param name="date_start">No Metadata Documentation available.</param>
        /// <param name="date_end">No Metadata Documentation available.</param>
        /// <param name="cards_for_redistribution_YN">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<DistStatusResult> usp_get_dist_batches_for_status(Nullable<global::System.Int64> user_id, Nullable<global::System.Int32> issuerId, global::System.String dist_batch_reference, Nullable<global::System.Int32> dist_batch_statuses_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> card_issue_method_id, Nullable<global::System.Int32> distBatchTypeId, Nullable<global::System.DateTimeOffset> date_start, Nullable<global::System.DateTimeOffset> date_end, Nullable<global::System.Boolean> cards_for_redistribution_YN, Nullable<global::System.Int32> language_id, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter issuerIdParameter;
            if (issuerId.HasValue)
            {
                issuerIdParameter = new ObjectParameter("issuerId", issuerId);
            }
            else
            {
                issuerIdParameter = new ObjectParameter("issuerId", typeof(global::System.Int32));
            }
    
            ObjectParameter dist_batch_referenceParameter;
            if (dist_batch_reference != null)
            {
                dist_batch_referenceParameter = new ObjectParameter("dist_batch_reference", dist_batch_reference);
            }
            else
            {
                dist_batch_referenceParameter = new ObjectParameter("dist_batch_reference", typeof(global::System.String));
            }
    
            ObjectParameter dist_batch_statuses_idParameter;
            if (dist_batch_statuses_id.HasValue)
            {
                dist_batch_statuses_idParameter = new ObjectParameter("dist_batch_statuses_id", dist_batch_statuses_id);
            }
            else
            {
                dist_batch_statuses_idParameter = new ObjectParameter("dist_batch_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_issue_method_idParameter;
            if (card_issue_method_id.HasValue)
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", card_issue_method_id);
            }
            else
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", typeof(global::System.Int32));
            }
    
            ObjectParameter distBatchTypeIdParameter;
            if (distBatchTypeId.HasValue)
            {
                distBatchTypeIdParameter = new ObjectParameter("distBatchTypeId", distBatchTypeId);
            }
            else
            {
                distBatchTypeIdParameter = new ObjectParameter("distBatchTypeId", typeof(global::System.Int32));
            }
    
            ObjectParameter date_startParameter;
            if (date_start.HasValue)
            {
                date_startParameter = new ObjectParameter("date_start", date_start);
            }
            else
            {
                date_startParameter = new ObjectParameter("date_start", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter date_endParameter;
            if (date_end.HasValue)
            {
                date_endParameter = new ObjectParameter("date_end", date_end);
            }
            else
            {
                date_endParameter = new ObjectParameter("date_end", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter cards_for_redistribution_YNParameter;
            if (cards_for_redistribution_YN.HasValue)
            {
                cards_for_redistribution_YNParameter = new ObjectParameter("cards_for_redistribution_YN", cards_for_redistribution_YN);
            }
            else
            {
                cards_for_redistribution_YNParameter = new ObjectParameter("cards_for_redistribution_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<DistStatusResult>("usp_get_dist_batches_for_status", user_idParameter, issuerIdParameter, dist_batch_referenceParameter, dist_batch_statuses_idParameter, branch_idParameter, card_issue_method_idParameter, distBatchTypeIdParameter, date_startParameter, date_endParameter, cards_for_redistribution_YNParameter, language_idParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="languageId">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<GroupsRolesResult> usp_get_groups_roles_for_user_pending(Nullable<global::System.Int64> user_id, Nullable<global::System.Int32> languageId, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter languageIdParameter;
            if (languageId.HasValue)
            {
                languageIdParameter = new ObjectParameter("languageId", languageId);
            }
            else
            {
                languageIdParameter = new ObjectParameter("languageId", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GroupsRolesResult>("usp_get_groups_roles_for_user_pending", user_idParameter, languageIdParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="user_role_id">No Metadata Documentation available.</param>
        public ObjectResult<UserGroupAdminResult> usp_get_user_groups_pending_admin(Nullable<global::System.Int64> user_id, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> user_role_id)
        {
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_role_idParameter;
            if (user_role_id.HasValue)
            {
                user_role_idParameter = new ObjectParameter("user_role_id", user_role_id);
            }
            else
            {
                user_role_idParameter = new ObjectParameter("user_role_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<UserGroupAdminResult>("usp_get_user_groups_pending_admin", user_idParameter, issuer_idParameter, branch_idParameter, user_role_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_pending_id">No Metadata Documentation available.</param>
        public ObjectResult<decrypted_user> usp_get_user_pending_by_user_id(Nullable<global::System.Int64> user_pending_id)
        {
            ObjectParameter user_pending_idParameter;
            if (user_pending_id.HasValue)
            {
                user_pending_idParameter = new ObjectParameter("user_pending_id", user_pending_id);
            }
            else
            {
                user_pending_idParameter = new ObjectParameter("user_pending_id", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<decrypted_user>("usp_get_user_pending_by_user_id", user_pending_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="user_name">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        public ObjectResult<user_list_result> usp_get_user_pending_list(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, global::System.String user_name, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_nameParameter;
            if (user_name != null)
            {
                user_nameParameter = new ObjectParameter("user_name", user_name);
            }
            else
            {
                user_nameParameter = new ObjectParameter("user_name", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<user_list_result>("usp_get_user_pending_list", issuer_idParameter, branch_idParameter, user_nameParameter, audit_user_idParameter, audit_workstationParameter, pageIndexParameter, rowsPerPageParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pending_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_user_audit_approve(Nullable<global::System.Int64> pending_user_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter pending_user_idParameter;
            if (pending_user_id.HasValue)
            {
                pending_user_idParameter = new ObjectParameter("pending_user_id", pending_user_id);
            }
            else
            {
                pending_user_idParameter = new ObjectParameter("pending_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_user_audit_approve", pending_user_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pending_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_user_audit_reject(Nullable<global::System.Int64> pending_user_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter pending_user_idParameter;
            if (pending_user_id.HasValue)
            {
                pending_user_idParameter = new ObjectParameter("pending_user_id", pending_user_id);
            }
            else
            {
                pending_user_idParameter = new ObjectParameter("pending_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_user_audit_reject", pending_user_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="dist_batch_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> usp_get_dist_batch_card_count_for_distribution(Nullable<global::System.Int64> dist_batch_id, Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter dist_batch_idParameter;
            if (dist_batch_id.HasValue)
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", dist_batch_id);
            }
            else
            {
                dist_batch_idParameter = new ObjectParameter("dist_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("usp_get_dist_batch_card_count_for_distribution", dist_batch_idParameter, product_idParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_branch_types(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_branch_types", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="languageId">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<hybrid_request_result> usp_get_hybridrequests(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> languageId, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter languageIdParameter;
            if (languageId.HasValue)
            {
                languageIdParameter = new ObjectParameter("languageId", languageId);
            }
            else
            {
                languageIdParameter = new ObjectParameter("languageId", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<hybrid_request_result>("usp_get_hybridrequests", issuer_idParameter, branch_idParameter, languageIdParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="delivery_branch_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="card_priority_id">No Metadata Documentation available.</param>
        /// <param name="customer_account_number">No Metadata Documentation available.</param>
        /// <param name="domicile_branch_id">No Metadata Documentation available.</param>
        /// <param name="account_type_id">No Metadata Documentation available.</param>
        /// <param name="card_issue_reason_id">No Metadata Documentation available.</param>
        /// <param name="customer_first_name">No Metadata Documentation available.</param>
        /// <param name="customer_middle_name">No Metadata Documentation available.</param>
        /// <param name="customer_last_name">No Metadata Documentation available.</param>
        /// <param name="name_on_card">No Metadata Documentation available.</param>
        /// <param name="customer_title_id">No Metadata Documentation available.</param>
        /// <param name="currency_id">No Metadata Documentation available.</param>
        /// <param name="resident_id">No Metadata Documentation available.</param>
        /// <param name="customer_type_id">No Metadata Documentation available.</param>
        /// <param name="cms_id">No Metadata Documentation available.</param>
        /// <param name="contract_number">No Metadata Documentation available.</param>
        /// <param name="idnumber">No Metadata Documentation available.</param>
        /// <param name="contact_number">No Metadata Documentation available.</param>
        /// <param name="customer_id">No Metadata Documentation available.</param>
        /// <param name="fee_waiver_YN">No Metadata Documentation available.</param>
        /// <param name="fee_editable_YN">No Metadata Documentation available.</param>
        /// <param name="fee_charged">No Metadata Documentation available.</param>
        /// <param name="fee_overridden_YN">No Metadata Documentation available.</param>
        /// <param name="card_issue_method_id">No Metadata Documentation available.</param>
        /// <param name="cbs_account_type">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="request_id">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        /// <param name="new_customer_account_id">No Metadata Documentation available.</param>
        public int usp_request_hybrid_card_for_customer(Nullable<global::System.Int32> delivery_branch_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> card_priority_id, global::System.String customer_account_number, Nullable<global::System.Int32> domicile_branch_id, Nullable<global::System.Int32> account_type_id, Nullable<global::System.Int32> card_issue_reason_id, global::System.String customer_first_name, global::System.String customer_middle_name, global::System.String customer_last_name, global::System.String name_on_card, Nullable<global::System.Int32> customer_title_id, Nullable<global::System.Int32> currency_id, Nullable<global::System.Int32> resident_id, Nullable<global::System.Int32> customer_type_id, global::System.String cms_id, global::System.String contract_number, global::System.String idnumber, global::System.String contact_number, global::System.String customer_id, Nullable<global::System.Boolean> fee_waiver_YN, Nullable<global::System.Boolean> fee_editable_YN, Nullable<global::System.Decimal> fee_charged, Nullable<global::System.Boolean> fee_overridden_YN, Nullable<global::System.Int32> card_issue_method_id, global::System.String cbs_account_type, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter request_id, ObjectParameter resultCode, ObjectParameter new_customer_account_id)
        {
            ObjectParameter delivery_branch_idParameter;
            if (delivery_branch_id.HasValue)
            {
                delivery_branch_idParameter = new ObjectParameter("delivery_branch_id", delivery_branch_id);
            }
            else
            {
                delivery_branch_idParameter = new ObjectParameter("delivery_branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_priority_idParameter;
            if (card_priority_id.HasValue)
            {
                card_priority_idParameter = new ObjectParameter("card_priority_id", card_priority_id);
            }
            else
            {
                card_priority_idParameter = new ObjectParameter("card_priority_id", typeof(global::System.Int32));
            }
    
            ObjectParameter customer_account_numberParameter;
            if (customer_account_number != null)
            {
                customer_account_numberParameter = new ObjectParameter("customer_account_number", customer_account_number);
            }
            else
            {
                customer_account_numberParameter = new ObjectParameter("customer_account_number", typeof(global::System.String));
            }
    
            ObjectParameter domicile_branch_idParameter;
            if (domicile_branch_id.HasValue)
            {
                domicile_branch_idParameter = new ObjectParameter("domicile_branch_id", domicile_branch_id);
            }
            else
            {
                domicile_branch_idParameter = new ObjectParameter("domicile_branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter account_type_idParameter;
            if (account_type_id.HasValue)
            {
                account_type_idParameter = new ObjectParameter("account_type_id", account_type_id);
            }
            else
            {
                account_type_idParameter = new ObjectParameter("account_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_issue_reason_idParameter;
            if (card_issue_reason_id.HasValue)
            {
                card_issue_reason_idParameter = new ObjectParameter("card_issue_reason_id", card_issue_reason_id);
            }
            else
            {
                card_issue_reason_idParameter = new ObjectParameter("card_issue_reason_id", typeof(global::System.Int32));
            }
    
            ObjectParameter customer_first_nameParameter;
            if (customer_first_name != null)
            {
                customer_first_nameParameter = new ObjectParameter("customer_first_name", customer_first_name);
            }
            else
            {
                customer_first_nameParameter = new ObjectParameter("customer_first_name", typeof(global::System.String));
            }
    
            ObjectParameter customer_middle_nameParameter;
            if (customer_middle_name != null)
            {
                customer_middle_nameParameter = new ObjectParameter("customer_middle_name", customer_middle_name);
            }
            else
            {
                customer_middle_nameParameter = new ObjectParameter("customer_middle_name", typeof(global::System.String));
            }
    
            ObjectParameter customer_last_nameParameter;
            if (customer_last_name != null)
            {
                customer_last_nameParameter = new ObjectParameter("customer_last_name", customer_last_name);
            }
            else
            {
                customer_last_nameParameter = new ObjectParameter("customer_last_name", typeof(global::System.String));
            }
    
            ObjectParameter name_on_cardParameter;
            if (name_on_card != null)
            {
                name_on_cardParameter = new ObjectParameter("name_on_card", name_on_card);
            }
            else
            {
                name_on_cardParameter = new ObjectParameter("name_on_card", typeof(global::System.String));
            }
    
            ObjectParameter customer_title_idParameter;
            if (customer_title_id.HasValue)
            {
                customer_title_idParameter = new ObjectParameter("customer_title_id", customer_title_id);
            }
            else
            {
                customer_title_idParameter = new ObjectParameter("customer_title_id", typeof(global::System.Int32));
            }
    
            ObjectParameter currency_idParameter;
            if (currency_id.HasValue)
            {
                currency_idParameter = new ObjectParameter("currency_id", currency_id);
            }
            else
            {
                currency_idParameter = new ObjectParameter("currency_id", typeof(global::System.Int32));
            }
    
            ObjectParameter resident_idParameter;
            if (resident_id.HasValue)
            {
                resident_idParameter = new ObjectParameter("resident_id", resident_id);
            }
            else
            {
                resident_idParameter = new ObjectParameter("resident_id", typeof(global::System.Int32));
            }
    
            ObjectParameter customer_type_idParameter;
            if (customer_type_id.HasValue)
            {
                customer_type_idParameter = new ObjectParameter("customer_type_id", customer_type_id);
            }
            else
            {
                customer_type_idParameter = new ObjectParameter("customer_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter cms_idParameter;
            if (cms_id != null)
            {
                cms_idParameter = new ObjectParameter("cms_id", cms_id);
            }
            else
            {
                cms_idParameter = new ObjectParameter("cms_id", typeof(global::System.String));
            }
    
            ObjectParameter contract_numberParameter;
            if (contract_number != null)
            {
                contract_numberParameter = new ObjectParameter("contract_number", contract_number);
            }
            else
            {
                contract_numberParameter = new ObjectParameter("contract_number", typeof(global::System.String));
            }
    
            ObjectParameter idnumberParameter;
            if (idnumber != null)
            {
                idnumberParameter = new ObjectParameter("idnumber", idnumber);
            }
            else
            {
                idnumberParameter = new ObjectParameter("idnumber", typeof(global::System.String));
            }
    
            ObjectParameter contact_numberParameter;
            if (contact_number != null)
            {
                contact_numberParameter = new ObjectParameter("contact_number", contact_number);
            }
            else
            {
                contact_numberParameter = new ObjectParameter("contact_number", typeof(global::System.String));
            }
    
            ObjectParameter customer_idParameter;
            if (customer_id != null)
            {
                customer_idParameter = new ObjectParameter("customer_id", customer_id);
            }
            else
            {
                customer_idParameter = new ObjectParameter("customer_id", typeof(global::System.String));
            }
    
            ObjectParameter fee_waiver_YNParameter;
            if (fee_waiver_YN.HasValue)
            {
                fee_waiver_YNParameter = new ObjectParameter("fee_waiver_YN", fee_waiver_YN);
            }
            else
            {
                fee_waiver_YNParameter = new ObjectParameter("fee_waiver_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter fee_editable_YNParameter;
            if (fee_editable_YN.HasValue)
            {
                fee_editable_YNParameter = new ObjectParameter("fee_editable_YN", fee_editable_YN);
            }
            else
            {
                fee_editable_YNParameter = new ObjectParameter("fee_editable_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter fee_chargedParameter;
            if (fee_charged.HasValue)
            {
                fee_chargedParameter = new ObjectParameter("fee_charged", fee_charged);
            }
            else
            {
                fee_chargedParameter = new ObjectParameter("fee_charged", typeof(global::System.Decimal));
            }
    
            ObjectParameter fee_overridden_YNParameter;
            if (fee_overridden_YN.HasValue)
            {
                fee_overridden_YNParameter = new ObjectParameter("fee_overridden_YN", fee_overridden_YN);
            }
            else
            {
                fee_overridden_YNParameter = new ObjectParameter("fee_overridden_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter card_issue_method_idParameter;
            if (card_issue_method_id.HasValue)
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", card_issue_method_id);
            }
            else
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", typeof(global::System.Int32));
            }
    
            ObjectParameter cbs_account_typeParameter;
            if (cbs_account_type != null)
            {
                cbs_account_typeParameter = new ObjectParameter("cbs_account_type", cbs_account_type);
            }
            else
            {
                cbs_account_typeParameter = new ObjectParameter("cbs_account_type", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_request_hybrid_card_for_customer", delivery_branch_idParameter, branch_idParameter, product_idParameter, card_priority_idParameter, customer_account_numberParameter, domicile_branch_idParameter, account_type_idParameter, card_issue_reason_idParameter, customer_first_nameParameter, customer_middle_nameParameter, customer_last_nameParameter, name_on_cardParameter, customer_title_idParameter, currency_idParameter, resident_idParameter, customer_type_idParameter, cms_idParameter, contract_numberParameter, idnumberParameter, contact_numberParameter, customer_idParameter, fee_waiver_YNParameter, fee_editable_YNParameter, fee_chargedParameter, fee_overridden_YNParameter, card_issue_method_idParameter, cbs_account_typeParameter, audit_user_idParameter, audit_workstationParameter, request_id, resultCode, new_customer_account_id);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="status_id">No Metadata Documentation available.</param>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<HybridRequestResult> usp_get_operator_hybrid_request_inprogress(Nullable<global::System.Int32> status_id, Nullable<global::System.Int64> user_id, Nullable<global::System.Int32> language_id, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter status_idParameter;
            if (status_id.HasValue)
            {
                status_idParameter = new ObjectParameter("status_id", status_id);
            }
            else
            {
                status_idParameter = new ObjectParameter("status_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<HybridRequestResult>("usp_get_operator_hybrid_request_inprogress", status_idParameter, user_idParameter, language_idParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="request_id">No Metadata Documentation available.</param>
        /// <param name="check_masking">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<RequestDetailResult> usp_get_request(Nullable<global::System.Int64> request_id, Nullable<global::System.Boolean> check_masking, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter request_idParameter;
            if (request_id.HasValue)
            {
                request_idParameter = new ObjectParameter("request_id", request_id);
            }
            else
            {
                request_idParameter = new ObjectParameter("request_id", typeof(global::System.Int64));
            }
    
            ObjectParameter check_maskingParameter;
            if (check_masking.HasValue)
            {
                check_maskingParameter = new ObjectParameter("check_masking", check_masking);
            }
            else
            {
                check_maskingParameter = new ObjectParameter("check_masking", typeof(global::System.Boolean));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<RequestDetailResult>("usp_get_request", request_idParameter, check_maskingParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="request_id">No Metadata Documentation available.</param>
        /// <param name="languageId">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<RequestReferenceHistoryResult> usp_get_request_history_reference(Nullable<global::System.Int32> request_id, Nullable<global::System.Int32> languageId, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter request_idParameter;
            if (request_id.HasValue)
            {
                request_idParameter = new ObjectParameter("request_id", request_id);
            }
            else
            {
                request_idParameter = new ObjectParameter("request_id", typeof(global::System.Int32));
            }
    
            ObjectParameter languageIdParameter;
            if (languageId.HasValue)
            {
                languageIdParameter = new ObjectParameter("languageId", languageId);
            }
            else
            {
                languageIdParameter = new ObjectParameter("languageId", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<RequestReferenceHistoryResult>("usp_get_request_history_reference", request_idParameter, languageIdParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="request_id">No Metadata Documentation available.</param>
        /// <param name="approve">No Metadata Documentation available.</param>
        /// <param name="notes">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="card_issue_method_id">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_request_MakerChecker(Nullable<global::System.Int64> request_id, Nullable<global::System.Boolean> approve, global::System.String notes, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter card_issue_method_id, ObjectParameter resultCode)
        {
            ObjectParameter request_idParameter;
            if (request_id.HasValue)
            {
                request_idParameter = new ObjectParameter("request_id", request_id);
            }
            else
            {
                request_idParameter = new ObjectParameter("request_id", typeof(global::System.Int64));
            }
    
            ObjectParameter approveParameter;
            if (approve.HasValue)
            {
                approveParameter = new ObjectParameter("approve", approve);
            }
            else
            {
                approveParameter = new ObjectParameter("approve", typeof(global::System.Boolean));
            }
    
            ObjectParameter notesParameter;
            if (notes != null)
            {
                notesParameter = new ObjectParameter("notes", notes);
            }
            else
            {
                notesParameter = new ObjectParameter("notes", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_request_MakerChecker", request_idParameter, approveParameter, notesParameter, audit_user_idParameter, audit_workstationParameter, card_issue_method_id, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="request_id">No Metadata Documentation available.</param>
        public ObjectResult<ProductPrintFieldResult> usp_get_product_print_fields_value_byrequest(Nullable<global::System.Int64> request_id)
        {
            ObjectParameter request_idParameter;
            if (request_id.HasValue)
            {
                request_idParameter = new ObjectParameter("request_id", request_id);
            }
            else
            {
                request_idParameter = new ObjectParameter("request_id", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<ProductPrintFieldResult>("usp_get_product_print_fields_value_byrequest", request_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="request_id">No Metadata Documentation available.</param>
        /// <param name="languageId">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<RequestStatusHistoryResult> usp_get_request_history_status(Nullable<global::System.Int32> request_id, Nullable<global::System.Int32> languageId, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter request_idParameter;
            if (request_id.HasValue)
            {
                request_idParameter = new ObjectParameter("request_id", request_id);
            }
            else
            {
                request_idParameter = new ObjectParameter("request_id", typeof(global::System.Int32));
            }
    
            ObjectParameter languageIdParameter;
            if (languageId.HasValue)
            {
                languageIdParameter = new ObjectParameter("languageId", languageId);
            }
            else
            {
                languageIdParameter = new ObjectParameter("languageId", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<RequestStatusHistoryResult>("usp_get_request_history_status", request_idParameter, languageIdParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_issue_method_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="card_priority_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="requests_in_batch">No Metadata Documentation available.</param>
        /// <param name="print_batch_id">No Metadata Documentation available.</param>
        /// <param name="print_batch_ref">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> usp_request_hybrid_create_print_batch(Nullable<global::System.Int32> card_issue_method_id, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> card_priority_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter requests_in_batch, ObjectParameter print_batch_id, ObjectParameter print_batch_ref, ObjectParameter resultCode)
        {
            ObjectParameter card_issue_method_idParameter;
            if (card_issue_method_id.HasValue)
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", card_issue_method_id);
            }
            else
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_priority_idParameter;
            if (card_priority_id.HasValue)
            {
                card_priority_idParameter = new ObjectParameter("card_priority_id", card_priority_id);
            }
            else
            {
                card_priority_idParameter = new ObjectParameter("card_priority_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("usp_request_hybrid_create_print_batch", card_issue_method_idParameter, issuer_idParameter, branch_idParameter, product_idParameter, card_priority_idParameter, audit_user_idParameter, audit_workstationParameter, requests_in_batch, print_batch_id, print_batch_ref, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="print_batch_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<PrintBatchResult> usp_get_print_batch(Nullable<global::System.Int64> print_batch_id, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter print_batch_idParameter;
            if (print_batch_id.HasValue)
            {
                print_batch_idParameter = new ObjectParameter("print_batch_id", print_batch_id);
            }
            else
            {
                print_batch_idParameter = new ObjectParameter("print_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PrintBatchResult>("usp_get_print_batch", print_batch_idParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="print_batch_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<HybridRequestResult> usp_get_print_batch_requests(Nullable<global::System.Int64> print_batch_id, Nullable<global::System.Int32> language_id, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter print_batch_idParameter;
            if (print_batch_id.HasValue)
            {
                print_batch_idParameter = new ObjectParameter("print_batch_id", print_batch_id);
            }
            else
            {
                print_batch_idParameter = new ObjectParameter("print_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<HybridRequestResult>("usp_get_print_batch_requests", print_batch_idParameter, language_idParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="print_batch_id">No Metadata Documentation available.</param>
        /// <param name="print_batch_statuses_id">No Metadata Documentation available.</param>
        /// <param name="new_print_batch_statuses_id">No Metadata Documentation available.</param>
        /// <param name="status_notes">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="autogenerate_dist_batch_id">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public ObjectResult<PrintBatchResult> usp_print_batch_status_change(Nullable<global::System.Int64> print_batch_id, Nullable<global::System.Int32> print_batch_statuses_id, Nullable<global::System.Int32> new_print_batch_statuses_id, global::System.String status_notes, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, Nullable<global::System.Boolean> autogenerate_dist_batch_id, ObjectParameter resultCode)
        {
            ObjectParameter print_batch_idParameter;
            if (print_batch_id.HasValue)
            {
                print_batch_idParameter = new ObjectParameter("print_batch_id", print_batch_id);
            }
            else
            {
                print_batch_idParameter = new ObjectParameter("print_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter print_batch_statuses_idParameter;
            if (print_batch_statuses_id.HasValue)
            {
                print_batch_statuses_idParameter = new ObjectParameter("print_batch_statuses_id", print_batch_statuses_id);
            }
            else
            {
                print_batch_statuses_idParameter = new ObjectParameter("print_batch_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter new_print_batch_statuses_idParameter;
            if (new_print_batch_statuses_id.HasValue)
            {
                new_print_batch_statuses_idParameter = new ObjectParameter("new_print_batch_statuses_id", new_print_batch_statuses_id);
            }
            else
            {
                new_print_batch_statuses_idParameter = new ObjectParameter("new_print_batch_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter status_notesParameter;
            if (status_notes != null)
            {
                status_notesParameter = new ObjectParameter("status_notes", status_notes);
            }
            else
            {
                status_notesParameter = new ObjectParameter("status_notes", typeof(global::System.String));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            ObjectParameter autogenerate_dist_batch_idParameter;
            if (autogenerate_dist_batch_id.HasValue)
            {
                autogenerate_dist_batch_idParameter = new ObjectParameter("autogenerate_dist_batch_id", autogenerate_dist_batch_id);
            }
            else
            {
                autogenerate_dist_batch_idParameter = new ObjectParameter("autogenerate_dist_batch_id", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<PrintBatchResult>("usp_print_batch_status_change", print_batch_idParameter, print_batch_statuses_idParameter, new_print_batch_statuses_idParameter, status_notesParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter, autogenerate_dist_batch_idParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="print_batch_id">No Metadata Documentation available.</param>
        /// <param name="print_batch_statuses_id">No Metadata Documentation available.</param>
        /// <param name="successful">No Metadata Documentation available.</param>
        /// <param name="status_notes">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_print_batch_request_status_change(Nullable<global::System.Int64> print_batch_id, Nullable<global::System.Int32> print_batch_statuses_id, Nullable<global::System.Boolean> successful, global::System.String status_notes, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter print_batch_idParameter;
            if (print_batch_id.HasValue)
            {
                print_batch_idParameter = new ObjectParameter("print_batch_id", print_batch_id);
            }
            else
            {
                print_batch_idParameter = new ObjectParameter("print_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter print_batch_statuses_idParameter;
            if (print_batch_statuses_id.HasValue)
            {
                print_batch_statuses_idParameter = new ObjectParameter("print_batch_statuses_id", print_batch_statuses_id);
            }
            else
            {
                print_batch_statuses_idParameter = new ObjectParameter("print_batch_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter successfulParameter;
            if (successful.HasValue)
            {
                successfulParameter = new ObjectParameter("Successful", successful);
            }
            else
            {
                successfulParameter = new ObjectParameter("Successful", typeof(global::System.Boolean));
            }
    
            ObjectParameter status_notesParameter;
            if (status_notes != null)
            {
                status_notesParameter = new ObjectParameter("status_notes", status_notes);
            }
            else
            {
                status_notesParameter = new ObjectParameter("status_notes", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_print_batch_request_status_change", print_batch_idParameter, print_batch_statuses_idParameter, successfulParameter, status_notesParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="print_batch_id">No Metadata Documentation available.</param>
        /// <param name="languageId">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<PrintBatchHistoryResult> usp_get_print_batch_history(Nullable<global::System.Int64> print_batch_id, Nullable<global::System.Int32> languageId, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter print_batch_idParameter;
            if (print_batch_id.HasValue)
            {
                print_batch_idParameter = new ObjectParameter("print_batch_id", print_batch_id);
            }
            else
            {
                print_batch_idParameter = new ObjectParameter("print_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter languageIdParameter;
            if (languageId.HasValue)
            {
                languageIdParameter = new ObjectParameter("languageId", languageId);
            }
            else
            {
                languageIdParameter = new ObjectParameter("languageId", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PrintBatchHistoryResult>("usp_get_print_batch_history", print_batch_idParameter, languageIdParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="card_issue_method_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="cardcount">No Metadata Documentation available.</param>
        public int usp_get_mainbranch_card_count(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> card_issue_method_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter cardcount)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_issue_method_idParameter;
            if (card_issue_method_id.HasValue)
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", card_issue_method_id);
            }
            else
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_get_mainbranch_card_count", issuer_idParameter, branch_idParameter, product_idParameter, card_issue_method_idParameter, audit_user_idParameter, audit_workstationParameter, cardcount);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_hybrid_request_statues(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_hybrid_request_statues", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_print_batch_statues(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_print_batch_statues", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuerId">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="request_reference">No Metadata Documentation available.</param>
        /// <param name="hybrid_request_statuses_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="card_issue_method_id">No Metadata Documentation available.</param>
        /// <param name="check_masking">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<HybridRequestResult> usp_search_request(Nullable<global::System.Int32> issuerId, Nullable<global::System.Int32> product_id, global::System.String request_reference, Nullable<global::System.Int32> hybrid_request_statuses_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> card_issue_method_id, Nullable<global::System.Boolean> check_masking, Nullable<global::System.Int32> language_id, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuerIdParameter;
            if (issuerId.HasValue)
            {
                issuerIdParameter = new ObjectParameter("issuerId", issuerId);
            }
            else
            {
                issuerIdParameter = new ObjectParameter("issuerId", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter request_referenceParameter;
            if (request_reference != null)
            {
                request_referenceParameter = new ObjectParameter("request_reference", request_reference);
            }
            else
            {
                request_referenceParameter = new ObjectParameter("request_reference", typeof(global::System.String));
            }
    
            ObjectParameter hybrid_request_statuses_idParameter;
            if (hybrid_request_statuses_id.HasValue)
            {
                hybrid_request_statuses_idParameter = new ObjectParameter("hybrid_request_statuses_id", hybrid_request_statuses_id);
            }
            else
            {
                hybrid_request_statuses_idParameter = new ObjectParameter("hybrid_request_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_issue_method_idParameter;
            if (card_issue_method_id.HasValue)
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", card_issue_method_id);
            }
            else
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", typeof(global::System.Int32));
            }
    
            ObjectParameter check_maskingParameter;
            if (check_masking.HasValue)
            {
                check_maskingParameter = new ObjectParameter("check_masking", check_masking);
            }
            else
            {
                check_maskingParameter = new ObjectParameter("check_masking", typeof(global::System.Boolean));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<HybridRequestResult>("usp_search_request", issuerIdParameter, product_idParameter, request_referenceParameter, hybrid_request_statuses_idParameter, branch_idParameter, card_issue_method_idParameter, check_maskingParameter, language_idParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="workstation">No Metadata Documentation available.</param>
        /// <param name="key">No Metadata Documentation available.</param>
        /// <param name="additional_data">No Metadata Documentation available.</param>
        public int usp_insert_workstation_key(global::System.String workstation, global::System.String key, global::System.String additional_data)
        {
            ObjectParameter workstationParameter;
            if (workstation != null)
            {
                workstationParameter = new ObjectParameter("workstation", workstation);
            }
            else
            {
                workstationParameter = new ObjectParameter("workstation", typeof(global::System.String));
            }
    
            ObjectParameter keyParameter;
            if (key != null)
            {
                keyParameter = new ObjectParameter("key", key);
            }
            else
            {
                keyParameter = new ObjectParameter("key", typeof(global::System.String));
            }
    
            ObjectParameter additional_dataParameter;
            if (additional_data != null)
            {
                additional_dataParameter = new ObjectParameter("additional_data", additional_data);
            }
            else
            {
                additional_dataParameter = new ObjectParameter("additional_data", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_insert_workstation_key", workstationParameter, keyParameter, additional_dataParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="workstation">No Metadata Documentation available.</param>
        public ObjectResult<workstationkeys_result> usp_get_workstation_key(global::System.String workstation)
        {
            ObjectParameter workstationParameter;
            if (workstation != null)
            {
                workstationParameter = new ObjectParameter("workstation", workstation);
            }
            else
            {
                workstationParameter = new ObjectParameter("workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<workstationkeys_result>("usp_get_workstation_key", workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="print_batch_id">No Metadata Documentation available.</param>
        /// <param name="new_print_batch_statuses_id">No Metadata Documentation available.</param>
        /// <param name="status_notes">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_print_batch_spoil(Nullable<global::System.Int64> print_batch_id, Nullable<global::System.Int32> new_print_batch_statuses_id, global::System.String status_notes, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter print_batch_idParameter;
            if (print_batch_id.HasValue)
            {
                print_batch_idParameter = new ObjectParameter("print_batch_id", print_batch_id);
            }
            else
            {
                print_batch_idParameter = new ObjectParameter("print_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter new_print_batch_statuses_idParameter;
            if (new_print_batch_statuses_id.HasValue)
            {
                new_print_batch_statuses_idParameter = new ObjectParameter("new_print_batch_statuses_id", new_print_batch_statuses_id);
            }
            else
            {
                new_print_batch_statuses_idParameter = new ObjectParameter("new_print_batch_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter status_notesParameter;
            if (status_notes != null)
            {
                status_notesParameter = new ObjectParameter("status_notes", status_notes);
            }
            else
            {
                status_notesParameter = new ObjectParameter("status_notes", typeof(global::System.String));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_print_batch_spoil", print_batch_idParameter, new_print_batch_statuses_idParameter, status_notesParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="connection_parameter_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<ConnectionParamAdditionalDataResult> usp_get_connection_parameter_additionaldata(Nullable<global::System.Int32> connection_parameter_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter connection_parameter_idParameter;
            if (connection_parameter_id.HasValue)
            {
                connection_parameter_idParameter = new ObjectParameter("connection_parameter_id", connection_parameter_id);
            }
            else
            {
                connection_parameter_idParameter = new ObjectParameter("connection_parameter_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ConnectionParamAdditionalDataResult>("usp_get_connection_parameter_additionaldata", connection_parameter_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="authentication_configuration_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_delete_authentication_configuration(Nullable<global::System.Int32> authentication_configuration_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter authentication_configuration_idParameter;
            if (authentication_configuration_id.HasValue)
            {
                authentication_configuration_idParameter = new ObjectParameter("authentication_configuration_id", authentication_configuration_id);
            }
            else
            {
                authentication_configuration_idParameter = new ObjectParameter("authentication_configuration_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_delete_authentication_configuration", authentication_configuration_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="authentication_configuration_id">No Metadata Documentation available.</param>
        public ObjectResult<auth_configuration_result> usp_get_auth_configuration(Nullable<global::System.Int32> authentication_configuration_id)
        {
            ObjectParameter authentication_configuration_idParameter;
            if (authentication_configuration_id.HasValue)
            {
                authentication_configuration_idParameter = new ObjectParameter("authentication_configuration_id", authentication_configuration_id);
            }
            else
            {
                authentication_configuration_idParameter = new ObjectParameter("authentication_configuration_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<auth_configuration_result>("usp_get_auth_configuration", authentication_configuration_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="authentication_configuration_id">No Metadata Documentation available.</param>
        public ObjectResult<auth_configuration_connectionparams_result> usp_get_auth_configuration_connectionparams(Nullable<global::System.Int32> authentication_configuration_id)
        {
            ObjectParameter authentication_configuration_idParameter;
            if (authentication_configuration_id.HasValue)
            {
                authentication_configuration_idParameter = new ObjectParameter("authentication_configuration_id", authentication_configuration_id);
            }
            else
            {
                authentication_configuration_idParameter = new ObjectParameter("authentication_configuration_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<auth_configuration_connectionparams_result>("usp_get_auth_configuration_connectionparams", authentication_configuration_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="authentication_configuration">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="authentication_configuration_id">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_insert_auth_configuration(global::System.String authentication_configuration, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter authentication_configuration_id, ObjectParameter resultCode)
        {
            ObjectParameter authentication_configurationParameter;
            if (authentication_configuration != null)
            {
                authentication_configurationParameter = new ObjectParameter("authentication_configuration", authentication_configuration);
            }
            else
            {
                authentication_configurationParameter = new ObjectParameter("authentication_configuration", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_insert_auth_configuration", authentication_configurationParameter, audit_user_idParameter, audit_workstationParameter, authentication_configuration_id, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="authentication_configuration_id">No Metadata Documentation available.</param>
        /// <param name="authentication_configuration">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_update_auth_configuration(Nullable<global::System.Int32> authentication_configuration_id, global::System.String authentication_configuration, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter authentication_configuration_idParameter;
            if (authentication_configuration_id.HasValue)
            {
                authentication_configuration_idParameter = new ObjectParameter("authentication_configuration_id", authentication_configuration_id);
            }
            else
            {
                authentication_configuration_idParameter = new ObjectParameter("authentication_configuration_id", typeof(global::System.Int32));
            }
    
            ObjectParameter authentication_configurationParameter;
            if (authentication_configuration != null)
            {
                authentication_configurationParameter = new ObjectParameter("authentication_configuration", authentication_configuration);
            }
            else
            {
                authentication_configurationParameter = new ObjectParameter("authentication_configuration", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_auth_configuration", authentication_configuration_idParameter, authentication_configurationParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        public ObjectResult<auth_configuration_result> usp_get_auth_configuration_list(Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage)
        {
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<auth_configuration_result>("usp_get_auth_configuration_list", pageIndexParameter, rowsPerPageParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="datefrom">No Metadata Documentation available.</param>
        /// <param name="dateto">No Metadata Documentation available.</param>
        /// <param name="threed_batch_statuses_id">No Metadata Documentation available.</param>
        /// <param name="batch_reference">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<ThreedBatchResult> usp_get_threedsecure_batch_list(Nullable<global::System.Int32> issuer_id, Nullable<global::System.DateTime> datefrom, Nullable<global::System.DateTime> dateto, Nullable<global::System.Int32> threed_batch_statuses_id, global::System.String batch_reference, Nullable<global::System.Int32> language_id, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter datefromParameter;
            if (datefrom.HasValue)
            {
                datefromParameter = new ObjectParameter("datefrom", datefrom);
            }
            else
            {
                datefromParameter = new ObjectParameter("datefrom", typeof(global::System.DateTime));
            }
    
            ObjectParameter datetoParameter;
            if (dateto.HasValue)
            {
                datetoParameter = new ObjectParameter("dateto", dateto);
            }
            else
            {
                datetoParameter = new ObjectParameter("dateto", typeof(global::System.DateTime));
            }
    
            ObjectParameter threed_batch_statuses_idParameter;
            if (threed_batch_statuses_id.HasValue)
            {
                threed_batch_statuses_idParameter = new ObjectParameter("threed_batch_statuses_id", threed_batch_statuses_id);
            }
            else
            {
                threed_batch_statuses_idParameter = new ObjectParameter("threed_batch_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter batch_referenceParameter;
            if (batch_reference != null)
            {
                batch_referenceParameter = new ObjectParameter("batch_reference", batch_reference);
            }
            else
            {
                batch_referenceParameter = new ObjectParameter("batch_reference", typeof(global::System.String));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ThreedBatchResult>("usp_get_threedsecure_batch_list", issuer_idParameter, datefromParameter, datetoParameter, threed_batch_statuses_idParameter, batch_referenceParameter, language_idParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="threed_batch_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<ThreedBatchResult> usp_get_threedsecure_batch(Nullable<global::System.Int64> threed_batch_id, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter threed_batch_idParameter;
            if (threed_batch_id.HasValue)
            {
                threed_batch_idParameter = new ObjectParameter("threed_batch_id", threed_batch_id);
            }
            else
            {
                threed_batch_idParameter = new ObjectParameter("threed_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ThreedBatchResult>("usp_get_threedsecure_batch", threed_batch_idParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookup> usp_lang_lookup_Threed_batch_statues(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookup>("usp_lang_lookup_Threed_batch_statues", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="threed_batch_id">No Metadata Documentation available.</param>
        /// <param name="threed_batch_statuses_id">No Metadata Documentation available.</param>
        /// <param name="status_note">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_update_threed_batch_status(Nullable<global::System.Int64> threed_batch_id, Nullable<global::System.Int32> threed_batch_statuses_id, global::System.String status_note, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter threed_batch_idParameter;
            if (threed_batch_id.HasValue)
            {
                threed_batch_idParameter = new ObjectParameter("threed_batch_id", threed_batch_id);
            }
            else
            {
                threed_batch_idParameter = new ObjectParameter("threed_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter threed_batch_statuses_idParameter;
            if (threed_batch_statuses_id.HasValue)
            {
                threed_batch_statuses_idParameter = new ObjectParameter("threed_batch_statuses_id", threed_batch_statuses_id);
            }
            else
            {
                threed_batch_statuses_idParameter = new ObjectParameter("threed_batch_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter status_noteParameter;
            if (status_note != null)
            {
                status_noteParameter = new ObjectParameter("status_note", status_note);
            }
            else
            {
                status_noteParameter = new ObjectParameter("status_note", typeof(global::System.String));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_threed_batch_status", threed_batch_idParameter, threed_batch_statuses_idParameter, status_noteParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pin_reissue_id">No Metadata Documentation available.</param>
        /// <param name="notes">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public ObjectResult<PinReissueResult> usp_pin_reissue_cancel(Nullable<global::System.Int64> pin_reissue_id, global::System.String notes, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter pin_reissue_idParameter;
            if (pin_reissue_id.HasValue)
            {
                pin_reissue_idParameter = new ObjectParameter("pin_reissue_id", pin_reissue_id);
            }
            else
            {
                pin_reissue_idParameter = new ObjectParameter("pin_reissue_id", typeof(global::System.Int64));
            }
    
            ObjectParameter notesParameter;
            if (notes != null)
            {
                notesParameter = new ObjectParameter("notes", notes);
            }
            else
            {
                notesParameter = new ObjectParameter("notes", typeof(global::System.String));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PinReissueResult>("usp_pin_reissue_cancel", pin_reissue_idParameter, notesParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="cbs_account_type">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<accounttypes_mappings_Result> usp_get_product_accounttypes_mappings(Nullable<global::System.Int32> product_id, global::System.String cbs_account_type, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter cbs_account_typeParameter;
            if (cbs_account_type != null)
            {
                cbs_account_typeParameter = new ObjectParameter("cbs_account_type", cbs_account_type);
            }
            else
            {
                cbs_account_typeParameter = new ObjectParameter("cbs_account_type", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<accounttypes_mappings_Result>("usp_get_product_accounttypes_mappings", product_idParameter, cbs_account_typeParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="serial_no">No Metadata Documentation available.</param>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="customer_id">No Metadata Documentation available.</param>
        /// <param name="print_statuses_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="print_job_id">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_create_print_jobs(global::System.String serial_no, Nullable<global::System.Int64> card_id, Nullable<global::System.Int64> customer_id, Nullable<global::System.Int32> print_statuses_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter print_job_id, ObjectParameter resultCode)
        {
            ObjectParameter serial_noParameter;
            if (serial_no != null)
            {
                serial_noParameter = new ObjectParameter("serial_no", serial_no);
            }
            else
            {
                serial_noParameter = new ObjectParameter("serial_no", typeof(global::System.String));
            }
    
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter customer_idParameter;
            if (customer_id.HasValue)
            {
                customer_idParameter = new ObjectParameter("customer_id", customer_id);
            }
            else
            {
                customer_idParameter = new ObjectParameter("customer_id", typeof(global::System.Int64));
            }
    
            ObjectParameter print_statuses_idParameter;
            if (print_statuses_id.HasValue)
            {
                print_statuses_idParameter = new ObjectParameter("print_statuses_id", print_statuses_id);
            }
            else
            {
                print_statuses_idParameter = new ObjectParameter("print_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_create_print_jobs", serial_noParameter, card_idParameter, customer_idParameter, print_statuses_idParameter, audit_user_idParameter, audit_workstationParameter, print_job_id, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="serial_no">No Metadata Documentation available.</param>
        /// <param name="manufacturer">No Metadata Documentation available.</param>
        /// <param name="model">No Metadata Documentation available.</param>
        /// <param name="firmware_version">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="total_prints">No Metadata Documentation available.</param>
        /// <param name="next_clean">No Metadata Documentation available.</param>
        /// <param name="print_job_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="new_printer_id">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_insert_printer(global::System.String serial_no, global::System.String manufacturer, global::System.String model, global::System.String firmware_version, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> total_prints, Nullable<global::System.Int32> next_clean, Nullable<global::System.Int64> print_job_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter new_printer_id, ObjectParameter resultCode)
        {
            ObjectParameter serial_noParameter;
            if (serial_no != null)
            {
                serial_noParameter = new ObjectParameter("serial_no", serial_no);
            }
            else
            {
                serial_noParameter = new ObjectParameter("serial_no", typeof(global::System.String));
            }
    
            ObjectParameter manufacturerParameter;
            if (manufacturer != null)
            {
                manufacturerParameter = new ObjectParameter("manufacturer", manufacturer);
            }
            else
            {
                manufacturerParameter = new ObjectParameter("manufacturer", typeof(global::System.String));
            }
    
            ObjectParameter modelParameter;
            if (model != null)
            {
                modelParameter = new ObjectParameter("model", model);
            }
            else
            {
                modelParameter = new ObjectParameter("model", typeof(global::System.String));
            }
    
            ObjectParameter firmware_versionParameter;
            if (firmware_version != null)
            {
                firmware_versionParameter = new ObjectParameter("firmware_version", firmware_version);
            }
            else
            {
                firmware_versionParameter = new ObjectParameter("firmware_version", typeof(global::System.String));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter total_printsParameter;
            if (total_prints.HasValue)
            {
                total_printsParameter = new ObjectParameter("total_prints", total_prints);
            }
            else
            {
                total_printsParameter = new ObjectParameter("total_prints", typeof(global::System.Int32));
            }
    
            ObjectParameter next_cleanParameter;
            if (next_clean.HasValue)
            {
                next_cleanParameter = new ObjectParameter("next_clean", next_clean);
            }
            else
            {
                next_cleanParameter = new ObjectParameter("next_clean", typeof(global::System.Int32));
            }
    
            ObjectParameter print_job_idParameter;
            if (print_job_id.HasValue)
            {
                print_job_idParameter = new ObjectParameter("print_job_id", print_job_id);
            }
            else
            {
                print_job_idParameter = new ObjectParameter("print_job_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_insert_printer", serial_noParameter, manufacturerParameter, modelParameter, firmware_versionParameter, branch_idParameter, total_printsParameter, next_cleanParameter, print_job_idParameter, audit_user_idParameter, audit_workstationParameter, new_printer_id, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="print_job_id">No Metadata Documentation available.</param>
        /// <param name="print_statuses_id">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_update_print_jobs_status(Nullable<global::System.Int64> print_job_id, Nullable<global::System.Int32> print_statuses_id, global::System.String comments, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter print_job_idParameter;
            if (print_job_id.HasValue)
            {
                print_job_idParameter = new ObjectParameter("print_job_id", print_job_id);
            }
            else
            {
                print_job_idParameter = new ObjectParameter("print_job_id", typeof(global::System.Int64));
            }
    
            ObjectParameter print_statuses_idParameter;
            if (print_statuses_id.HasValue)
            {
                print_statuses_idParameter = new ObjectParameter("print_statuses_id", print_statuses_id);
            }
            else
            {
                print_statuses_idParameter = new ObjectParameter("print_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("comments", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_print_jobs_status", print_job_idParameter, print_statuses_idParameter, commentsParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="serial_no">No Metadata Documentation available.</param>
        /// <param name="total_prints">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_update_printer_prints(global::System.String serial_no, global::System.String total_prints, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter resultCode)
        {
            ObjectParameter serial_noParameter;
            if (serial_no != null)
            {
                serial_noParameter = new ObjectParameter("serial_no", serial_no);
            }
            else
            {
                serial_noParameter = new ObjectParameter("serial_no", typeof(global::System.String));
            }
    
            ObjectParameter total_printsParameter;
            if (total_prints != null)
            {
                total_printsParameter = new ObjectParameter("total_prints", total_prints);
            }
            else
            {
                total_printsParameter = new ObjectParameter("total_prints", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_printer_prints", serial_noParameter, total_printsParameter, audit_user_idParameter, audit_workstationParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="delivery_branch_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="card_priority_id">No Metadata Documentation available.</param>
        /// <param name="customer_account_number">No Metadata Documentation available.</param>
        /// <param name="domicile_branch_id">No Metadata Documentation available.</param>
        /// <param name="account_type_id">No Metadata Documentation available.</param>
        /// <param name="card_issue_reason_id">No Metadata Documentation available.</param>
        /// <param name="customer_first_name">No Metadata Documentation available.</param>
        /// <param name="customer_middle_name">No Metadata Documentation available.</param>
        /// <param name="customer_last_name">No Metadata Documentation available.</param>
        /// <param name="name_on_card">No Metadata Documentation available.</param>
        /// <param name="customer_title_id">No Metadata Documentation available.</param>
        /// <param name="currency_id">No Metadata Documentation available.</param>
        /// <param name="resident_id">No Metadata Documentation available.</param>
        /// <param name="customer_type_id">No Metadata Documentation available.</param>
        /// <param name="cms_id">No Metadata Documentation available.</param>
        /// <param name="contract_number">No Metadata Documentation available.</param>
        /// <param name="idnumber">No Metadata Documentation available.</param>
        /// <param name="contact_number">No Metadata Documentation available.</param>
        /// <param name="customer_email">No Metadata Documentation available.</param>
        /// <param name="customer_id">No Metadata Documentation available.</param>
        /// <param name="fee_waiver_YN">No Metadata Documentation available.</param>
        /// <param name="fee_editable_YN">No Metadata Documentation available.</param>
        /// <param name="fee_charged">No Metadata Documentation available.</param>
        /// <param name="fee_overridden_YN">No Metadata Documentation available.</param>
        /// <param name="card_issue_method_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        /// <param name="print_job_id">No Metadata Documentation available.</param>
        /// <param name="new_customer_account_id">No Metadata Documentation available.</param>
        public int usp_request_instantcard_for_customer(Nullable<global::System.Int32> delivery_branch_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> card_priority_id, global::System.String customer_account_number, Nullable<global::System.Int32> domicile_branch_id, Nullable<global::System.Int32> account_type_id, Nullable<global::System.Int32> card_issue_reason_id, global::System.String customer_first_name, global::System.String customer_middle_name, global::System.String customer_last_name, global::System.String name_on_card, Nullable<global::System.Int32> customer_title_id, Nullable<global::System.Int32> currency_id, Nullable<global::System.Int32> resident_id, Nullable<global::System.Int32> customer_type_id, global::System.String cms_id, global::System.String contract_number, global::System.String idnumber, global::System.String contact_number, global::System.String customer_email, global::System.String customer_id, Nullable<global::System.Boolean> fee_waiver_YN, Nullable<global::System.Boolean> fee_editable_YN, Nullable<global::System.Decimal> fee_charged, Nullable<global::System.Boolean> fee_overridden_YN, Nullable<global::System.Int32> card_issue_method_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, ObjectParameter card_id, ObjectParameter resultCode, ObjectParameter print_job_id, ObjectParameter new_customer_account_id)
        {
            ObjectParameter delivery_branch_idParameter;
            if (delivery_branch_id.HasValue)
            {
                delivery_branch_idParameter = new ObjectParameter("delivery_branch_id", delivery_branch_id);
            }
            else
            {
                delivery_branch_idParameter = new ObjectParameter("delivery_branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_priority_idParameter;
            if (card_priority_id.HasValue)
            {
                card_priority_idParameter = new ObjectParameter("card_priority_id", card_priority_id);
            }
            else
            {
                card_priority_idParameter = new ObjectParameter("card_priority_id", typeof(global::System.Int32));
            }
    
            ObjectParameter customer_account_numberParameter;
            if (customer_account_number != null)
            {
                customer_account_numberParameter = new ObjectParameter("customer_account_number", customer_account_number);
            }
            else
            {
                customer_account_numberParameter = new ObjectParameter("customer_account_number", typeof(global::System.String));
            }
    
            ObjectParameter domicile_branch_idParameter;
            if (domicile_branch_id.HasValue)
            {
                domicile_branch_idParameter = new ObjectParameter("domicile_branch_id", domicile_branch_id);
            }
            else
            {
                domicile_branch_idParameter = new ObjectParameter("domicile_branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter account_type_idParameter;
            if (account_type_id.HasValue)
            {
                account_type_idParameter = new ObjectParameter("account_type_id", account_type_id);
            }
            else
            {
                account_type_idParameter = new ObjectParameter("account_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_issue_reason_idParameter;
            if (card_issue_reason_id.HasValue)
            {
                card_issue_reason_idParameter = new ObjectParameter("card_issue_reason_id", card_issue_reason_id);
            }
            else
            {
                card_issue_reason_idParameter = new ObjectParameter("card_issue_reason_id", typeof(global::System.Int32));
            }
    
            ObjectParameter customer_first_nameParameter;
            if (customer_first_name != null)
            {
                customer_first_nameParameter = new ObjectParameter("customer_first_name", customer_first_name);
            }
            else
            {
                customer_first_nameParameter = new ObjectParameter("customer_first_name", typeof(global::System.String));
            }
    
            ObjectParameter customer_middle_nameParameter;
            if (customer_middle_name != null)
            {
                customer_middle_nameParameter = new ObjectParameter("customer_middle_name", customer_middle_name);
            }
            else
            {
                customer_middle_nameParameter = new ObjectParameter("customer_middle_name", typeof(global::System.String));
            }
    
            ObjectParameter customer_last_nameParameter;
            if (customer_last_name != null)
            {
                customer_last_nameParameter = new ObjectParameter("customer_last_name", customer_last_name);
            }
            else
            {
                customer_last_nameParameter = new ObjectParameter("customer_last_name", typeof(global::System.String));
            }
    
            ObjectParameter name_on_cardParameter;
            if (name_on_card != null)
            {
                name_on_cardParameter = new ObjectParameter("name_on_card", name_on_card);
            }
            else
            {
                name_on_cardParameter = new ObjectParameter("name_on_card", typeof(global::System.String));
            }
    
            ObjectParameter customer_title_idParameter;
            if (customer_title_id.HasValue)
            {
                customer_title_idParameter = new ObjectParameter("customer_title_id", customer_title_id);
            }
            else
            {
                customer_title_idParameter = new ObjectParameter("customer_title_id", typeof(global::System.Int32));
            }
    
            ObjectParameter currency_idParameter;
            if (currency_id.HasValue)
            {
                currency_idParameter = new ObjectParameter("currency_id", currency_id);
            }
            else
            {
                currency_idParameter = new ObjectParameter("currency_id", typeof(global::System.Int32));
            }
    
            ObjectParameter resident_idParameter;
            if (resident_id.HasValue)
            {
                resident_idParameter = new ObjectParameter("resident_id", resident_id);
            }
            else
            {
                resident_idParameter = new ObjectParameter("resident_id", typeof(global::System.Int32));
            }
    
            ObjectParameter customer_type_idParameter;
            if (customer_type_id.HasValue)
            {
                customer_type_idParameter = new ObjectParameter("customer_type_id", customer_type_id);
            }
            else
            {
                customer_type_idParameter = new ObjectParameter("customer_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter cms_idParameter;
            if (cms_id != null)
            {
                cms_idParameter = new ObjectParameter("cms_id", cms_id);
            }
            else
            {
                cms_idParameter = new ObjectParameter("cms_id", typeof(global::System.String));
            }
    
            ObjectParameter contract_numberParameter;
            if (contract_number != null)
            {
                contract_numberParameter = new ObjectParameter("contract_number", contract_number);
            }
            else
            {
                contract_numberParameter = new ObjectParameter("contract_number", typeof(global::System.String));
            }
    
            ObjectParameter idnumberParameter;
            if (idnumber != null)
            {
                idnumberParameter = new ObjectParameter("idnumber", idnumber);
            }
            else
            {
                idnumberParameter = new ObjectParameter("idnumber", typeof(global::System.String));
            }
    
            ObjectParameter contact_numberParameter;
            if (contact_number != null)
            {
                contact_numberParameter = new ObjectParameter("contact_number", contact_number);
            }
            else
            {
                contact_numberParameter = new ObjectParameter("contact_number", typeof(global::System.String));
            }
    
            ObjectParameter customer_emailParameter;
            if (customer_email != null)
            {
                customer_emailParameter = new ObjectParameter("customer_email", customer_email);
            }
            else
            {
                customer_emailParameter = new ObjectParameter("customer_email", typeof(global::System.String));
            }
    
            ObjectParameter customer_idParameter;
            if (customer_id != null)
            {
                customer_idParameter = new ObjectParameter("customer_id", customer_id);
            }
            else
            {
                customer_idParameter = new ObjectParameter("customer_id", typeof(global::System.String));
            }
    
            ObjectParameter fee_waiver_YNParameter;
            if (fee_waiver_YN.HasValue)
            {
                fee_waiver_YNParameter = new ObjectParameter("fee_waiver_YN", fee_waiver_YN);
            }
            else
            {
                fee_waiver_YNParameter = new ObjectParameter("fee_waiver_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter fee_editable_YNParameter;
            if (fee_editable_YN.HasValue)
            {
                fee_editable_YNParameter = new ObjectParameter("fee_editable_YN", fee_editable_YN);
            }
            else
            {
                fee_editable_YNParameter = new ObjectParameter("fee_editable_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter fee_chargedParameter;
            if (fee_charged.HasValue)
            {
                fee_chargedParameter = new ObjectParameter("fee_charged", fee_charged);
            }
            else
            {
                fee_chargedParameter = new ObjectParameter("fee_charged", typeof(global::System.Decimal));
            }
    
            ObjectParameter fee_overridden_YNParameter;
            if (fee_overridden_YN.HasValue)
            {
                fee_overridden_YNParameter = new ObjectParameter("fee_overridden_YN", fee_overridden_YN);
            }
            else
            {
                fee_overridden_YNParameter = new ObjectParameter("fee_overridden_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter card_issue_method_idParameter;
            if (card_issue_method_id.HasValue)
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", card_issue_method_id);
            }
            else
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_request_instantcard_for_customer", delivery_branch_idParameter, branch_idParameter, product_idParameter, card_priority_idParameter, customer_account_numberParameter, domicile_branch_idParameter, account_type_idParameter, card_issue_reason_idParameter, customer_first_nameParameter, customer_middle_nameParameter, customer_last_nameParameter, name_on_cardParameter, customer_title_idParameter, currency_idParameter, resident_idParameter, customer_type_idParameter, cms_idParameter, contract_numberParameter, idnumberParameter, contact_numberParameter, customer_emailParameter, customer_idParameter, fee_waiver_YNParameter, fee_editable_YNParameter, fee_chargedParameter, fee_overridden_YNParameter, card_issue_method_idParameter, audit_user_idParameter, audit_workstationParameter, card_id, resultCode, print_job_id, new_customer_account_id);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="card_number">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public int usp_update_card_details(Nullable<global::System.Int64> card_id, global::System.String card_number, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter card_numberParameter;
            if (card_number != null)
            {
                card_numberParameter = new ObjectParameter("card_number", card_number);
            }
            else
            {
                card_numberParameter = new ObjectParameter("card_number", typeof(global::System.String));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_update_card_details", card_idParameter, card_numberParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="printJobId">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<PrintJobStatus> usp_get_print_job_status(global::System.String printJobId, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter printJobIdParameter;
            if (printJobId != null)
            {
                printJobIdParameter = new ObjectParameter("printJobId", printJobId);
            }
            else
            {
                printJobIdParameter = new ObjectParameter("printJobId", typeof(global::System.String));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PrintJobStatus>("usp_get_print_job_status", printJobIdParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="year">No Metadata Documentation available.</param>
        /// <param name="month">No Metadata Documentation available.</param>
        public ObjectResult<BillingReportResult> usp_get_billing_report(Nullable<global::System.Int32> year, Nullable<global::System.Int32> month)
        {
            ObjectParameter yearParameter;
            if (year.HasValue)
            {
                yearParameter = new ObjectParameter("year", year);
            }
            else
            {
                yearParameter = new ObjectParameter("year", typeof(global::System.Int32));
            }
    
            ObjectParameter monthParameter;
            if (month.HasValue)
            {
                monthParameter = new ObjectParameter("month", month);
            }
            else
            {
                monthParameter = new ObjectParameter("month", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<BillingReportResult>("usp_get_billing_report", yearParameter, monthParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuerId">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="print_batch_reference">No Metadata Documentation available.</param>
        /// <param name="print_batch_statuses_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="card_issue_method_id">No Metadata Documentation available.</param>
        /// <param name="date_start">No Metadata Documentation available.</param>
        /// <param name="date_end">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<PrintBatchResult> usp_get_print_batches_for_user(Nullable<global::System.Int32> issuerId, Nullable<global::System.Int32> product_id, global::System.String print_batch_reference, Nullable<global::System.Int32> print_batch_statuses_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> card_issue_method_id, Nullable<global::System.DateTimeOffset> date_start, Nullable<global::System.DateTimeOffset> date_end, Nullable<global::System.Int32> language_id, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuerIdParameter;
            if (issuerId.HasValue)
            {
                issuerIdParameter = new ObjectParameter("issuerId", issuerId);
            }
            else
            {
                issuerIdParameter = new ObjectParameter("issuerId", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter print_batch_referenceParameter;
            if (print_batch_reference != null)
            {
                print_batch_referenceParameter = new ObjectParameter("print_batch_reference", print_batch_reference);
            }
            else
            {
                print_batch_referenceParameter = new ObjectParameter("print_batch_reference", typeof(global::System.String));
            }
    
            ObjectParameter print_batch_statuses_idParameter;
            if (print_batch_statuses_id.HasValue)
            {
                print_batch_statuses_idParameter = new ObjectParameter("print_batch_statuses_id", print_batch_statuses_id);
            }
            else
            {
                print_batch_statuses_idParameter = new ObjectParameter("print_batch_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_issue_method_idParameter;
            if (card_issue_method_id.HasValue)
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", card_issue_method_id);
            }
            else
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", typeof(global::System.Int32));
            }
    
            ObjectParameter date_startParameter;
            if (date_start.HasValue)
            {
                date_startParameter = new ObjectParameter("date_start", date_start);
            }
            else
            {
                date_startParameter = new ObjectParameter("date_start", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter date_endParameter;
            if (date_end.HasValue)
            {
                date_endParameter = new ObjectParameter("date_end", date_end);
            }
            else
            {
                date_endParameter = new ObjectParameter("date_end", typeof(global::System.DateTimeOffset));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PrintBatchResult>("usp_get_print_batches_for_user", issuerIdParameter, product_idParameter, print_batch_referenceParameter, print_batch_statuses_idParameter, branch_idParameter, card_issue_method_idParameter, date_startParameter, date_endParameter, language_idParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="print_batch_id">No Metadata Documentation available.</param>
        /// <param name="new_print_batch_statuses_id">No Metadata Documentation available.</param>
        /// <param name="status_notes">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="autogenerate_dist_batch_id">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        public int usp_print_batch_status_uploadtocms(Nullable<global::System.Int64> print_batch_id, Nullable<global::System.Int32> new_print_batch_statuses_id, global::System.String status_notes, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, Nullable<global::System.Boolean> autogenerate_dist_batch_id, ObjectParameter resultCode)
        {
            ObjectParameter print_batch_idParameter;
            if (print_batch_id.HasValue)
            {
                print_batch_idParameter = new ObjectParameter("print_batch_id", print_batch_id);
            }
            else
            {
                print_batch_idParameter = new ObjectParameter("print_batch_id", typeof(global::System.Int64));
            }
    
            ObjectParameter new_print_batch_statuses_idParameter;
            if (new_print_batch_statuses_id.HasValue)
            {
                new_print_batch_statuses_idParameter = new ObjectParameter("new_print_batch_statuses_id", new_print_batch_statuses_id);
            }
            else
            {
                new_print_batch_statuses_idParameter = new ObjectParameter("new_print_batch_statuses_id", typeof(global::System.Int32));
            }
    
            ObjectParameter status_notesParameter;
            if (status_notes != null)
            {
                status_notesParameter = new ObjectParameter("status_notes", status_notes);
            }
            else
            {
                status_notesParameter = new ObjectParameter("status_notes", typeof(global::System.String));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            ObjectParameter autogenerate_dist_batch_idParameter;
            if (autogenerate_dist_batch_id.HasValue)
            {
                autogenerate_dist_batch_idParameter = new ObjectParameter("autogenerate_dist_batch_id", autogenerate_dist_batch_id);
            }
            else
            {
                autogenerate_dist_batch_idParameter = new ObjectParameter("autogenerate_dist_batch_id", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction("usp_print_batch_status_uploadtocms", print_batch_idParameter, new_print_batch_statuses_idParameter, status_notesParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter, autogenerate_dist_batch_idParameter, resultCode);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="delivery_branch_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="card_priority_id">No Metadata Documentation available.</param>
        /// <param name="customer_account_number">No Metadata Documentation available.</param>
        /// <param name="domicile_branch_id">No Metadata Documentation available.</param>
        /// <param name="account_type_id">No Metadata Documentation available.</param>
        /// <param name="card_issue_reason_id">No Metadata Documentation available.</param>
        /// <param name="customer_first_name">No Metadata Documentation available.</param>
        /// <param name="customer_middle_name">No Metadata Documentation available.</param>
        /// <param name="customer_last_name">No Metadata Documentation available.</param>
        /// <param name="name_on_card">No Metadata Documentation available.</param>
        /// <param name="customer_title_id">No Metadata Documentation available.</param>
        /// <param name="currency_id">No Metadata Documentation available.</param>
        /// <param name="resident_id">No Metadata Documentation available.</param>
        /// <param name="customer_type_id">No Metadata Documentation available.</param>
        /// <param name="cms_id">No Metadata Documentation available.</param>
        /// <param name="contract_number">No Metadata Documentation available.</param>
        /// <param name="idnumber">No Metadata Documentation available.</param>
        /// <param name="contact_number">No Metadata Documentation available.</param>
        /// <param name="customer_id">No Metadata Documentation available.</param>
        /// <param name="fee_waiver_YN">No Metadata Documentation available.</param>
        /// <param name="fee_editable_YN">No Metadata Documentation available.</param>
        /// <param name="fee_charged">No Metadata Documentation available.</param>
        /// <param name="vat">No Metadata Documentation available.</param>
        /// <param name="vat_charged">No Metadata Documentation available.</param>
        /// <param name="total_charged">No Metadata Documentation available.</param>
        /// <param name="fee_overridden_YN">No Metadata Documentation available.</param>
        /// <param name="card_issue_method_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        /// <param name="customer_email">No Metadata Documentation available.</param>
        /// <param name="renewal_detail_id">No Metadata Documentation available.</param>
        /// <param name="cbs_account_type">No Metadata Documentation available.</param>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="resultCode">No Metadata Documentation available.</param>
        /// <param name="new_customer_account_id">No Metadata Documentation available.</param>
        public int usp_request_card_for_customer(Nullable<global::System.Int32> delivery_branch_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> card_priority_id, global::System.String customer_account_number, Nullable<global::System.Int32> domicile_branch_id, Nullable<global::System.Int32> account_type_id, Nullable<global::System.Int32> card_issue_reason_id, global::System.String customer_first_name, global::System.String customer_middle_name, global::System.String customer_last_name, global::System.String name_on_card, Nullable<global::System.Int32> customer_title_id, Nullable<global::System.Int32> currency_id, Nullable<global::System.Int32> resident_id, Nullable<global::System.Int32> customer_type_id, global::System.String cms_id, global::System.String contract_number, global::System.String idnumber, global::System.String contact_number, global::System.String customer_id, Nullable<global::System.Boolean> fee_waiver_YN, Nullable<global::System.Boolean> fee_editable_YN, Nullable<global::System.Decimal> fee_charged, Nullable<global::System.Decimal> vat, Nullable<global::System.Decimal> vat_charged, Nullable<global::System.Decimal> total_charged, Nullable<global::System.Boolean> fee_overridden_YN, Nullable<global::System.Int32> card_issue_method_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation, global::System.String customer_email, Nullable<global::System.Int64> renewal_detail_id, global::System.String cbs_account_type, ObjectParameter card_id, ObjectParameter resultCode, ObjectParameter new_customer_account_id)
        {
            ObjectParameter delivery_branch_idParameter;
            if (delivery_branch_id.HasValue)
            {
                delivery_branch_idParameter = new ObjectParameter("delivery_branch_id", delivery_branch_id);
            }
            else
            {
                delivery_branch_idParameter = new ObjectParameter("delivery_branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_priority_idParameter;
            if (card_priority_id.HasValue)
            {
                card_priority_idParameter = new ObjectParameter("card_priority_id", card_priority_id);
            }
            else
            {
                card_priority_idParameter = new ObjectParameter("card_priority_id", typeof(global::System.Int32));
            }
    
            ObjectParameter customer_account_numberParameter;
            if (customer_account_number != null)
            {
                customer_account_numberParameter = new ObjectParameter("customer_account_number", customer_account_number);
            }
            else
            {
                customer_account_numberParameter = new ObjectParameter("customer_account_number", typeof(global::System.String));
            }
    
            ObjectParameter domicile_branch_idParameter;
            if (domicile_branch_id.HasValue)
            {
                domicile_branch_idParameter = new ObjectParameter("domicile_branch_id", domicile_branch_id);
            }
            else
            {
                domicile_branch_idParameter = new ObjectParameter("domicile_branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter account_type_idParameter;
            if (account_type_id.HasValue)
            {
                account_type_idParameter = new ObjectParameter("account_type_id", account_type_id);
            }
            else
            {
                account_type_idParameter = new ObjectParameter("account_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_issue_reason_idParameter;
            if (card_issue_reason_id.HasValue)
            {
                card_issue_reason_idParameter = new ObjectParameter("card_issue_reason_id", card_issue_reason_id);
            }
            else
            {
                card_issue_reason_idParameter = new ObjectParameter("card_issue_reason_id", typeof(global::System.Int32));
            }
    
            ObjectParameter customer_first_nameParameter;
            if (customer_first_name != null)
            {
                customer_first_nameParameter = new ObjectParameter("customer_first_name", customer_first_name);
            }
            else
            {
                customer_first_nameParameter = new ObjectParameter("customer_first_name", typeof(global::System.String));
            }
    
            ObjectParameter customer_middle_nameParameter;
            if (customer_middle_name != null)
            {
                customer_middle_nameParameter = new ObjectParameter("customer_middle_name", customer_middle_name);
            }
            else
            {
                customer_middle_nameParameter = new ObjectParameter("customer_middle_name", typeof(global::System.String));
            }
    
            ObjectParameter customer_last_nameParameter;
            if (customer_last_name != null)
            {
                customer_last_nameParameter = new ObjectParameter("customer_last_name", customer_last_name);
            }
            else
            {
                customer_last_nameParameter = new ObjectParameter("customer_last_name", typeof(global::System.String));
            }
    
            ObjectParameter name_on_cardParameter;
            if (name_on_card != null)
            {
                name_on_cardParameter = new ObjectParameter("name_on_card", name_on_card);
            }
            else
            {
                name_on_cardParameter = new ObjectParameter("name_on_card", typeof(global::System.String));
            }
    
            ObjectParameter customer_title_idParameter;
            if (customer_title_id.HasValue)
            {
                customer_title_idParameter = new ObjectParameter("customer_title_id", customer_title_id);
            }
            else
            {
                customer_title_idParameter = new ObjectParameter("customer_title_id", typeof(global::System.Int32));
            }
    
            ObjectParameter currency_idParameter;
            if (currency_id.HasValue)
            {
                currency_idParameter = new ObjectParameter("currency_id", currency_id);
            }
            else
            {
                currency_idParameter = new ObjectParameter("currency_id", typeof(global::System.Int32));
            }
    
            ObjectParameter resident_idParameter;
            if (resident_id.HasValue)
            {
                resident_idParameter = new ObjectParameter("resident_id", resident_id);
            }
            else
            {
                resident_idParameter = new ObjectParameter("resident_id", typeof(global::System.Int32));
            }
    
            ObjectParameter customer_type_idParameter;
            if (customer_type_id.HasValue)
            {
                customer_type_idParameter = new ObjectParameter("customer_type_id", customer_type_id);
            }
            else
            {
                customer_type_idParameter = new ObjectParameter("customer_type_id", typeof(global::System.Int32));
            }
    
            ObjectParameter cms_idParameter;
            if (cms_id != null)
            {
                cms_idParameter = new ObjectParameter("cms_id", cms_id);
            }
            else
            {
                cms_idParameter = new ObjectParameter("cms_id", typeof(global::System.String));
            }
    
            ObjectParameter contract_numberParameter;
            if (contract_number != null)
            {
                contract_numberParameter = new ObjectParameter("contract_number", contract_number);
            }
            else
            {
                contract_numberParameter = new ObjectParameter("contract_number", typeof(global::System.String));
            }
    
            ObjectParameter idnumberParameter;
            if (idnumber != null)
            {
                idnumberParameter = new ObjectParameter("idnumber", idnumber);
            }
            else
            {
                idnumberParameter = new ObjectParameter("idnumber", typeof(global::System.String));
            }
    
            ObjectParameter contact_numberParameter;
            if (contact_number != null)
            {
                contact_numberParameter = new ObjectParameter("contact_number", contact_number);
            }
            else
            {
                contact_numberParameter = new ObjectParameter("contact_number", typeof(global::System.String));
            }
    
            ObjectParameter customer_idParameter;
            if (customer_id != null)
            {
                customer_idParameter = new ObjectParameter("customer_id", customer_id);
            }
            else
            {
                customer_idParameter = new ObjectParameter("customer_id", typeof(global::System.String));
            }
    
            ObjectParameter fee_waiver_YNParameter;
            if (fee_waiver_YN.HasValue)
            {
                fee_waiver_YNParameter = new ObjectParameter("fee_waiver_YN", fee_waiver_YN);
            }
            else
            {
                fee_waiver_YNParameter = new ObjectParameter("fee_waiver_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter fee_editable_YNParameter;
            if (fee_editable_YN.HasValue)
            {
                fee_editable_YNParameter = new ObjectParameter("fee_editable_YN", fee_editable_YN);
            }
            else
            {
                fee_editable_YNParameter = new ObjectParameter("fee_editable_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter fee_chargedParameter;
            if (fee_charged.HasValue)
            {
                fee_chargedParameter = new ObjectParameter("fee_charged", fee_charged);
            }
            else
            {
                fee_chargedParameter = new ObjectParameter("fee_charged", typeof(global::System.Decimal));
            }
    
            ObjectParameter vatParameter;
            if (vat.HasValue)
            {
                vatParameter = new ObjectParameter("vat", vat);
            }
            else
            {
                vatParameter = new ObjectParameter("vat", typeof(global::System.Decimal));
            }
    
            ObjectParameter vat_chargedParameter;
            if (vat_charged.HasValue)
            {
                vat_chargedParameter = new ObjectParameter("vat_charged", vat_charged);
            }
            else
            {
                vat_chargedParameter = new ObjectParameter("vat_charged", typeof(global::System.Decimal));
            }
    
            ObjectParameter total_chargedParameter;
            if (total_charged.HasValue)
            {
                total_chargedParameter = new ObjectParameter("total_charged", total_charged);
            }
            else
            {
                total_chargedParameter = new ObjectParameter("total_charged", typeof(global::System.Decimal));
            }
    
            ObjectParameter fee_overridden_YNParameter;
            if (fee_overridden_YN.HasValue)
            {
                fee_overridden_YNParameter = new ObjectParameter("fee_overridden_YN", fee_overridden_YN);
            }
            else
            {
                fee_overridden_YNParameter = new ObjectParameter("fee_overridden_YN", typeof(global::System.Boolean));
            }
    
            ObjectParameter card_issue_method_idParameter;
            if (card_issue_method_id.HasValue)
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", card_issue_method_id);
            }
            else
            {
                card_issue_method_idParameter = new ObjectParameter("card_issue_method_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            ObjectParameter customer_emailParameter;
            if (customer_email != null)
            {
                customer_emailParameter = new ObjectParameter("customer_email", customer_email);
            }
            else
            {
                customer_emailParameter = new ObjectParameter("customer_email", typeof(global::System.String));
            }
    
            ObjectParameter renewal_detail_idParameter;
            if (renewal_detail_id.HasValue)
            {
                renewal_detail_idParameter = new ObjectParameter("renewal_detail_id", renewal_detail_id);
            }
            else
            {
                renewal_detail_idParameter = new ObjectParameter("renewal_detail_id", typeof(global::System.Int64));
            }
    
            ObjectParameter cbs_account_typeParameter;
            if (cbs_account_type != null)
            {
                cbs_account_typeParameter = new ObjectParameter("cbs_account_type", cbs_account_type);
            }
            else
            {
                cbs_account_typeParameter = new ObjectParameter("cbs_account_type", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_request_card_for_customer", delivery_branch_idParameter, branch_idParameter, product_idParameter, card_priority_idParameter, customer_account_numberParameter, domicile_branch_idParameter, account_type_idParameter, card_issue_reason_idParameter, customer_first_nameParameter, customer_middle_nameParameter, customer_last_nameParameter, name_on_cardParameter, customer_title_idParameter, currency_idParameter, resident_idParameter, customer_type_idParameter, cms_idParameter, contract_numberParameter, idnumberParameter, contact_numberParameter, customer_idParameter, fee_waiver_YNParameter, fee_editable_YNParameter, fee_chargedParameter, vatParameter, vat_chargedParameter, total_chargedParameter, fee_overridden_YNParameter, card_issue_method_idParameter, audit_user_idParameter, audit_workstationParameter, customer_emailParameter, renewal_detail_idParameter, cbs_account_typeParameter, card_id, resultCode, new_customer_account_id);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<LangLookupChar> usp_lang_lookup_gender(Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LangLookupChar>("usp_lang_lookup_gender", language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="cardrefno">No Metadata Documentation available.</param>
        /// <param name="customeraccountno">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="card_Priority">No Metadata Documentation available.</param>
        /// <param name="card_issuemethod">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<CustomercardsearchResult> usp_get_customercardsearch_list_activation(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, global::System.String cardrefno, global::System.String customeraccountno, Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> card_Priority, Nullable<global::System.Int32> card_issuemethod, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter cardrefnoParameter;
            if (cardrefno != null)
            {
                cardrefnoParameter = new ObjectParameter("cardrefno", cardrefno);
            }
            else
            {
                cardrefnoParameter = new ObjectParameter("cardrefno", typeof(global::System.String));
            }
    
            ObjectParameter customeraccountnoParameter;
            if (customeraccountno != null)
            {
                customeraccountnoParameter = new ObjectParameter("customeraccountno", customeraccountno);
            }
            else
            {
                customeraccountnoParameter = new ObjectParameter("customeraccountno", typeof(global::System.String));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_PriorityParameter;
            if (card_Priority.HasValue)
            {
                card_PriorityParameter = new ObjectParameter("card_Priority", card_Priority);
            }
            else
            {
                card_PriorityParameter = new ObjectParameter("card_Priority", typeof(global::System.Int32));
            }
    
            ObjectParameter card_issuemethodParameter;
            if (card_issuemethod.HasValue)
            {
                card_issuemethodParameter = new ObjectParameter("card_issuemethod", card_issuemethod);
            }
            else
            {
                card_issuemethodParameter = new ObjectParameter("card_issuemethod", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<CustomercardsearchResult>("usp_get_customercardsearch_list_activation", issuer_idParameter, branch_idParameter, cardrefnoParameter, customeraccountnoParameter, product_idParameter, card_PriorityParameter, card_issuemethodParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="cardrefno">No Metadata Documentation available.</param>
        /// <param name="customeraccountno">No Metadata Documentation available.</param>
        /// <param name="product_id">No Metadata Documentation available.</param>
        /// <param name="card_Priority">No Metadata Documentation available.</param>
        /// <param name="card_issuemethod">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="rowsPerPage">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<CustomercardsearchResult> usp_get_customercardsearch_list_renewal(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, global::System.String cardrefno, global::System.String customeraccountno, Nullable<global::System.Int32> product_id, Nullable<global::System.Int32> card_Priority, Nullable<global::System.Int32> card_issuemethod, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> rowsPerPage, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter cardrefnoParameter;
            if (cardrefno != null)
            {
                cardrefnoParameter = new ObjectParameter("cardrefno", cardrefno);
            }
            else
            {
                cardrefnoParameter = new ObjectParameter("cardrefno", typeof(global::System.String));
            }
    
            ObjectParameter customeraccountnoParameter;
            if (customeraccountno != null)
            {
                customeraccountnoParameter = new ObjectParameter("customeraccountno", customeraccountno);
            }
            else
            {
                customeraccountnoParameter = new ObjectParameter("customeraccountno", typeof(global::System.String));
            }
    
            ObjectParameter product_idParameter;
            if (product_id.HasValue)
            {
                product_idParameter = new ObjectParameter("product_id", product_id);
            }
            else
            {
                product_idParameter = new ObjectParameter("product_id", typeof(global::System.Int32));
            }
    
            ObjectParameter card_PriorityParameter;
            if (card_Priority.HasValue)
            {
                card_PriorityParameter = new ObjectParameter("card_Priority", card_Priority);
            }
            else
            {
                card_PriorityParameter = new ObjectParameter("card_Priority", typeof(global::System.Int32));
            }
    
            ObjectParameter card_issuemethodParameter;
            if (card_issuemethod.HasValue)
            {
                card_issuemethodParameter = new ObjectParameter("card_issuemethod", card_issuemethod);
            }
            else
            {
                card_issuemethodParameter = new ObjectParameter("card_issuemethod", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter rowsPerPageParameter;
            if (rowsPerPage.HasValue)
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", rowsPerPage);
            }
            else
            {
                rowsPerPageParameter = new ObjectParameter("RowsPerPage", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<CustomercardsearchResult>("usp_get_customercardsearch_list_renewal", issuer_idParameter, branch_idParameter, cardrefnoParameter, customeraccountnoParameter, product_idParameter, card_PriorityParameter, card_issuemethodParameter, pageIndexParameter, rowsPerPageParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="card_id">No Metadata Documentation available.</param>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="workStation">No Metadata Documentation available.</param>
        public int usp_activate_card(Nullable<global::System.Int64> card_id, Nullable<global::System.Int64> user_id, global::System.String workStation)
        {
            ObjectParameter card_idParameter;
            if (card_id.HasValue)
            {
                card_idParameter = new ObjectParameter("card_id", card_id);
            }
            else
            {
                card_idParameter = new ObjectParameter("card_id", typeof(global::System.Int64));
            }
    
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter workStationParameter;
            if (workStation != null)
            {
                workStationParameter = new ObjectParameter("workStation", workStation);
            }
            else
            {
                workStationParameter = new ObjectParameter("workStation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_activate_card", card_idParameter, user_idParameter, workStationParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="indigo_databaseModel", Name="branch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class branch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new branch object.
        /// </summary>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        /// <param name="branch_status_id">Initial value of the branch_status_id property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        public static branch Createbranch(global::System.Int32 branch_id, global::System.Int32 branch_status_id, global::System.Int32 issuer_id, global::System.String branch_code, global::System.String branch_name)
        {
            branch branch = new branch();
            branch.branch_id = branch_id;
            branch.branch_status_id = branch_status_id;
            branch.issuer_id = issuer_id;
            branch.branch_code = branch_code;
            branch.branch_name = branch_name;
            return branch;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                if (_branch_id != value)
                {
                    Onbranch_idChanging(value);
                    ReportPropertyChanging("branch_id");
                    _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                    ReportPropertyChanged("branch_id");
                    Onbranch_idChanged();
                }
            }
        }
        private global::System.Int32 _branch_id;
        partial void Onbranch_idChanging(global::System.Int32 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_status_id
        {
            get
            {
                return _branch_status_id;
            }
            set
            {
                Onbranch_status_idChanging(value);
                ReportPropertyChanging("branch_status_id");
                _branch_status_id = StructuralObject.SetValidValue(value, "branch_status_id");
                ReportPropertyChanged("branch_status_id");
                Onbranch_status_idChanged();
            }
        }
        private global::System.Int32 _branch_status_id;
        partial void Onbranch_status_idChanging(global::System.Int32 value);
        partial void Onbranch_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String location
        {
            get
            {
                return _location;
            }
            set
            {
                OnlocationChanging(value);
                ReportPropertyChanging("location");
                _location = StructuralObject.SetValidValue(value, true, "location");
                ReportPropertyChanged("location");
                OnlocationChanged();
            }
        }
        private global::System.String _location;
        partial void OnlocationChanging(global::System.String value);
        partial void OnlocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contact_person
        {
            get
            {
                return _contact_person;
            }
            set
            {
                Oncontact_personChanging(value);
                ReportPropertyChanging("contact_person");
                _contact_person = StructuralObject.SetValidValue(value, true, "contact_person");
                ReportPropertyChanged("contact_person");
                Oncontact_personChanged();
            }
        }
        private global::System.String _contact_person;
        partial void Oncontact_personChanging(global::System.String value);
        partial void Oncontact_personChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contact_email
        {
            get
            {
                return _contact_email;
            }
            set
            {
                Oncontact_emailChanging(value);
                ReportPropertyChanging("contact_email");
                _contact_email = StructuralObject.SetValidValue(value, true, "contact_email");
                ReportPropertyChanged("contact_email");
                Oncontact_emailChanged();
            }
        }
        private global::System.String _contact_email;
        partial void Oncontact_emailChanging(global::System.String value);
        partial void Oncontact_emailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_centre
        {
            get
            {
                return _card_centre;
            }
            set
            {
                Oncard_centreChanging(value);
                ReportPropertyChanging("card_centre");
                _card_centre = StructuralObject.SetValidValue(value, true, "card_centre");
                ReportPropertyChanged("card_centre");
                Oncard_centreChanged();
            }
        }
        private global::System.String _card_centre;
        partial void Oncard_centreChanging(global::System.String value);
        partial void Oncard_centreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String emp_branch_code
        {
            get
            {
                return _emp_branch_code;
            }
            set
            {
                Onemp_branch_codeChanging(value);
                ReportPropertyChanging("emp_branch_code");
                _emp_branch_code = StructuralObject.SetValidValue(value, true, "emp_branch_code");
                ReportPropertyChanged("emp_branch_code");
                Onemp_branch_codeChanged();
            }
        }
        private global::System.String _emp_branch_code;
        partial void Onemp_branch_codeChanging(global::System.String value);
        partial void Onemp_branch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> branch_type_id
        {
            get
            {
                return _branch_type_id;
            }
            set
            {
                Onbranch_type_idChanging(value);
                ReportPropertyChanging("branch_type_id");
                _branch_type_id = StructuralObject.SetValidValue(value, "branch_type_id");
                ReportPropertyChanged("branch_type_id");
                Onbranch_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _branch_type_id;
        partial void Onbranch_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onbranch_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> main_branch_id
        {
            get
            {
                return _main_branch_id;
            }
            set
            {
                Onmain_branch_idChanging(value);
                ReportPropertyChanging("main_branch_id");
                _main_branch_id = StructuralObject.SetValidValue(value, "main_branch_id");
                ReportPropertyChanged("main_branch_id");
                Onmain_branch_idChanged();
            }
        }
        private Nullable<global::System.Int32> _main_branch_id;
        partial void Onmain_branch_idChanging(Nullable<global::System.Int32> value);
        partial void Onmain_branch_idChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("indigo_databaseModel", "FK_branch_issuer", "issuer")]
        public issuer issuer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<issuer>("indigo_databaseModel.FK_branch_issuer", "issuer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<issuer>("indigo_databaseModel.FK_branch_issuer", "issuer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<issuer> issuerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<issuer>("indigo_databaseModel.FK_branch_issuer", "issuer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<issuer>("indigo_databaseModel.FK_branch_issuer", "issuer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="indigo_databaseModel", Name="branch_card_codes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class branch_card_codes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new branch_card_codes object.
        /// </summary>
        /// <param name="branch_card_code_id">Initial value of the branch_card_code_id property.</param>
        /// <param name="branch_card_code_type_id">Initial value of the branch_card_code_type_id property.</param>
        /// <param name="branch_card_code_name">Initial value of the branch_card_code_name property.</param>
        /// <param name="branch_card_code_enabled">Initial value of the branch_card_code_enabled property.</param>
        /// <param name="spoil_only">Initial value of the spoil_only property.</param>
        /// <param name="is_exception">Initial value of the is_exception property.</param>
        public static branch_card_codes Createbranch_card_codes(global::System.Int32 branch_card_code_id, global::System.Int32 branch_card_code_type_id, global::System.String branch_card_code_name, global::System.Boolean branch_card_code_enabled, global::System.Boolean spoil_only, global::System.Boolean is_exception)
        {
            branch_card_codes branch_card_codes = new branch_card_codes();
            branch_card_codes.branch_card_code_id = branch_card_code_id;
            branch_card_codes.branch_card_code_type_id = branch_card_code_type_id;
            branch_card_codes.branch_card_code_name = branch_card_code_name;
            branch_card_codes.branch_card_code_enabled = branch_card_code_enabled;
            branch_card_codes.spoil_only = spoil_only;
            branch_card_codes.is_exception = is_exception;
            return branch_card_codes;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_card_code_id
        {
            get
            {
                return _branch_card_code_id;
            }
            set
            {
                if (_branch_card_code_id != value)
                {
                    Onbranch_card_code_idChanging(value);
                    ReportPropertyChanging("branch_card_code_id");
                    _branch_card_code_id = StructuralObject.SetValidValue(value, "branch_card_code_id");
                    ReportPropertyChanged("branch_card_code_id");
                    Onbranch_card_code_idChanged();
                }
            }
        }
        private global::System.Int32 _branch_card_code_id;
        partial void Onbranch_card_code_idChanging(global::System.Int32 value);
        partial void Onbranch_card_code_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_card_code_type_id
        {
            get
            {
                return _branch_card_code_type_id;
            }
            set
            {
                Onbranch_card_code_type_idChanging(value);
                ReportPropertyChanging("branch_card_code_type_id");
                _branch_card_code_type_id = StructuralObject.SetValidValue(value, "branch_card_code_type_id");
                ReportPropertyChanged("branch_card_code_type_id");
                Onbranch_card_code_type_idChanged();
            }
        }
        private global::System.Int32 _branch_card_code_type_id;
        partial void Onbranch_card_code_type_idChanging(global::System.Int32 value);
        partial void Onbranch_card_code_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_card_code_name
        {
            get
            {
                return _branch_card_code_name;
            }
            set
            {
                Onbranch_card_code_nameChanging(value);
                ReportPropertyChanging("branch_card_code_name");
                _branch_card_code_name = StructuralObject.SetValidValue(value, false, "branch_card_code_name");
                ReportPropertyChanged("branch_card_code_name");
                Onbranch_card_code_nameChanged();
            }
        }
        private global::System.String _branch_card_code_name;
        partial void Onbranch_card_code_nameChanging(global::System.String value);
        partial void Onbranch_card_code_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean branch_card_code_enabled
        {
            get
            {
                return _branch_card_code_enabled;
            }
            set
            {
                Onbranch_card_code_enabledChanging(value);
                ReportPropertyChanging("branch_card_code_enabled");
                _branch_card_code_enabled = StructuralObject.SetValidValue(value, "branch_card_code_enabled");
                ReportPropertyChanged("branch_card_code_enabled");
                Onbranch_card_code_enabledChanged();
            }
        }
        private global::System.Boolean _branch_card_code_enabled;
        partial void Onbranch_card_code_enabledChanging(global::System.Boolean value);
        partial void Onbranch_card_code_enabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean spoil_only
        {
            get
            {
                return _spoil_only;
            }
            set
            {
                Onspoil_onlyChanging(value);
                ReportPropertyChanging("spoil_only");
                _spoil_only = StructuralObject.SetValidValue(value, "spoil_only");
                ReportPropertyChanged("spoil_only");
                Onspoil_onlyChanged();
            }
        }
        private global::System.Boolean _spoil_only;
        partial void Onspoil_onlyChanging(global::System.Boolean value);
        partial void Onspoil_onlyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean is_exception
        {
            get
            {
                return _is_exception;
            }
            set
            {
                Onis_exceptionChanging(value);
                ReportPropertyChanging("is_exception");
                _is_exception = StructuralObject.SetValidValue(value, "is_exception");
                ReportPropertyChanged("is_exception");
                Onis_exceptionChanged();
            }
        }
        private global::System.Boolean _is_exception;
        partial void Onis_exceptionChanging(global::System.Boolean value);
        partial void Onis_exceptionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="indigo_databaseModel", Name="card_priority")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class card_priority : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new card_priority object.
        /// </summary>
        /// <param name="card_priority_id">Initial value of the card_priority_id property.</param>
        /// <param name="card_priority_order">Initial value of the card_priority_order property.</param>
        /// <param name="card_priority_name">Initial value of the card_priority_name property.</param>
        /// <param name="default_selection">Initial value of the default_selection property.</param>
        public static card_priority Createcard_priority(global::System.Int32 card_priority_id, global::System.Int32 card_priority_order, global::System.String card_priority_name, global::System.Boolean default_selection)
        {
            card_priority card_priority = new card_priority();
            card_priority.card_priority_id = card_priority_id;
            card_priority.card_priority_order = card_priority_order;
            card_priority.card_priority_name = card_priority_name;
            card_priority.default_selection = default_selection;
            return card_priority;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_priority_id
        {
            get
            {
                return _card_priority_id;
            }
            set
            {
                if (_card_priority_id != value)
                {
                    Oncard_priority_idChanging(value);
                    ReportPropertyChanging("card_priority_id");
                    _card_priority_id = StructuralObject.SetValidValue(value, "card_priority_id");
                    ReportPropertyChanged("card_priority_id");
                    Oncard_priority_idChanged();
                }
            }
        }
        private global::System.Int32 _card_priority_id;
        partial void Oncard_priority_idChanging(global::System.Int32 value);
        partial void Oncard_priority_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_priority_order
        {
            get
            {
                return _card_priority_order;
            }
            set
            {
                Oncard_priority_orderChanging(value);
                ReportPropertyChanging("card_priority_order");
                _card_priority_order = StructuralObject.SetValidValue(value, "card_priority_order");
                ReportPropertyChanged("card_priority_order");
                Oncard_priority_orderChanged();
            }
        }
        private global::System.Int32 _card_priority_order;
        partial void Oncard_priority_orderChanging(global::System.Int32 value);
        partial void Oncard_priority_orderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String card_priority_name
        {
            get
            {
                return _card_priority_name;
            }
            set
            {
                Oncard_priority_nameChanging(value);
                ReportPropertyChanging("card_priority_name");
                _card_priority_name = StructuralObject.SetValidValue(value, false, "card_priority_name");
                ReportPropertyChanged("card_priority_name");
                Oncard_priority_nameChanged();
            }
        }
        private global::System.String _card_priority_name;
        partial void Oncard_priority_nameChanging(global::System.String value);
        partial void Oncard_priority_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean default_selection
        {
            get
            {
                return _default_selection;
            }
            set
            {
                Ondefault_selectionChanging(value);
                ReportPropertyChanging("default_selection");
                _default_selection = StructuralObject.SetValidValue(value, "default_selection");
                ReportPropertyChanged("default_selection");
                Ondefault_selectionChanged();
            }
        }
        private global::System.Boolean _default_selection;
        partial void Ondefault_selectionChanging(global::System.Boolean value);
        partial void Ondefault_selectionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="indigo_databaseModel", Name="country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new country object.
        /// </summary>
        /// <param name="country_id">Initial value of the country_id property.</param>
        /// <param name="country_name">Initial value of the country_name property.</param>
        /// <param name="country_code">Initial value of the country_code property.</param>
        public static country Createcountry(global::System.Int32 country_id, global::System.String country_name, global::System.String country_code)
        {
            country country = new country();
            country.country_id = country_id;
            country.country_name = country_name;
            country.country_code = country_code;
            return country;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 country_id
        {
            get
            {
                return _country_id;
            }
            set
            {
                if (_country_id != value)
                {
                    Oncountry_idChanging(value);
                    ReportPropertyChanging("country_id");
                    _country_id = StructuralObject.SetValidValue(value, "country_id");
                    ReportPropertyChanged("country_id");
                    Oncountry_idChanged();
                }
            }
        }
        private global::System.Int32 _country_id;
        partial void Oncountry_idChanging(global::System.Int32 value);
        partial void Oncountry_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String country_name
        {
            get
            {
                return _country_name;
            }
            set
            {
                Oncountry_nameChanging(value);
                ReportPropertyChanging("country_name");
                _country_name = StructuralObject.SetValidValue(value, false, "country_name");
                ReportPropertyChanged("country_name");
                Oncountry_nameChanged();
            }
        }
        private global::System.String _country_name;
        partial void Oncountry_nameChanging(global::System.String value);
        partial void Oncountry_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String country_code
        {
            get
            {
                return _country_code;
            }
            set
            {
                Oncountry_codeChanging(value);
                ReportPropertyChanging("country_code");
                _country_code = StructuralObject.SetValidValue(value, false, "country_code");
                ReportPropertyChanged("country_code");
                Oncountry_codeChanged();
            }
        }
        private global::System.String _country_code;
        partial void Oncountry_codeChanging(global::System.String value);
        partial void Oncountry_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String country_capital_city
        {
            get
            {
                return _country_capital_city;
            }
            set
            {
                Oncountry_capital_cityChanging(value);
                ReportPropertyChanging("country_capital_city");
                _country_capital_city = StructuralObject.SetValidValue(value, true, "country_capital_city");
                ReportPropertyChanged("country_capital_city");
                Oncountry_capital_cityChanged();
            }
        }
        private global::System.String _country_capital_city;
        partial void Oncountry_capital_cityChanging(global::System.String value);
        partial void Oncountry_capital_cityChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="indigo_databaseModel", Name="file_history")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class file_history : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new file_history object.
        /// </summary>
        /// <param name="file_id">Initial value of the file_id property.</param>
        /// <param name="file_status_id">Initial value of the file_status_id property.</param>
        /// <param name="file_type_id">Initial value of the file_type_id property.</param>
        /// <param name="name_of_file">Initial value of the name_of_file property.</param>
        /// <param name="file_created_date">Initial value of the file_created_date property.</param>
        /// <param name="file_size">Initial value of the file_size property.</param>
        /// <param name="load_date">Initial value of the load_date property.</param>
        /// <param name="file_directory">Initial value of the file_directory property.</param>
        /// <param name="file_load_id">Initial value of the file_load_id property.</param>
        public static file_history Createfile_history(global::System.Int64 file_id, global::System.Int32 file_status_id, global::System.Int32 file_type_id, global::System.String name_of_file, global::System.DateTimeOffset file_created_date, global::System.Int32 file_size, global::System.DateTimeOffset load_date, global::System.String file_directory, global::System.Int32 file_load_id)
        {
            file_history file_history = new file_history();
            file_history.file_id = file_id;
            file_history.file_status_id = file_status_id;
            file_history.file_type_id = file_type_id;
            file_history.name_of_file = name_of_file;
            file_history.file_created_date = file_created_date;
            file_history.file_size = file_size;
            file_history.load_date = load_date;
            file_history.file_directory = file_directory;
            file_history.file_load_id = file_load_id;
            return file_history;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 file_id
        {
            get
            {
                return _file_id;
            }
            set
            {
                if (_file_id != value)
                {
                    Onfile_idChanging(value);
                    ReportPropertyChanging("file_id");
                    _file_id = StructuralObject.SetValidValue(value, "file_id");
                    ReportPropertyChanged("file_id");
                    Onfile_idChanged();
                }
            }
        }
        private global::System.Int64 _file_id;
        partial void Onfile_idChanging(global::System.Int64 value);
        partial void Onfile_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private Nullable<global::System.Int32> _issuer_id;
        partial void Onissuer_idChanging(Nullable<global::System.Int32> value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 file_status_id
        {
            get
            {
                return _file_status_id;
            }
            set
            {
                Onfile_status_idChanging(value);
                ReportPropertyChanging("file_status_id");
                _file_status_id = StructuralObject.SetValidValue(value, "file_status_id");
                ReportPropertyChanged("file_status_id");
                Onfile_status_idChanged();
            }
        }
        private global::System.Int32 _file_status_id;
        partial void Onfile_status_idChanging(global::System.Int32 value);
        partial void Onfile_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 file_type_id
        {
            get
            {
                return _file_type_id;
            }
            set
            {
                Onfile_type_idChanging(value);
                ReportPropertyChanging("file_type_id");
                _file_type_id = StructuralObject.SetValidValue(value, "file_type_id");
                ReportPropertyChanged("file_type_id");
                Onfile_type_idChanged();
            }
        }
        private global::System.Int32 _file_type_id;
        partial void Onfile_type_idChanging(global::System.Int32 value);
        partial void Onfile_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name_of_file
        {
            get
            {
                return _name_of_file;
            }
            set
            {
                Onname_of_fileChanging(value);
                ReportPropertyChanging("name_of_file");
                _name_of_file = StructuralObject.SetValidValue(value, false, "name_of_file");
                ReportPropertyChanged("name_of_file");
                Onname_of_fileChanged();
            }
        }
        private global::System.String _name_of_file;
        partial void Onname_of_fileChanging(global::System.String value);
        partial void Onname_of_fileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset file_created_date
        {
            get
            {
                return _file_created_date;
            }
            set
            {
                Onfile_created_dateChanging(value);
                ReportPropertyChanging("file_created_date");
                _file_created_date = StructuralObject.SetValidValue(value, "file_created_date");
                ReportPropertyChanged("file_created_date");
                Onfile_created_dateChanged();
            }
        }
        private global::System.DateTimeOffset _file_created_date;
        partial void Onfile_created_dateChanging(global::System.DateTimeOffset value);
        partial void Onfile_created_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 file_size
        {
            get
            {
                return _file_size;
            }
            set
            {
                Onfile_sizeChanging(value);
                ReportPropertyChanging("file_size");
                _file_size = StructuralObject.SetValidValue(value, "file_size");
                ReportPropertyChanged("file_size");
                Onfile_sizeChanged();
            }
        }
        private global::System.Int32 _file_size;
        partial void Onfile_sizeChanging(global::System.Int32 value);
        partial void Onfile_sizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset load_date
        {
            get
            {
                return _load_date;
            }
            set
            {
                Onload_dateChanging(value);
                ReportPropertyChanging("load_date");
                _load_date = StructuralObject.SetValidValue(value, "load_date");
                ReportPropertyChanged("load_date");
                Onload_dateChanged();
            }
        }
        private global::System.DateTimeOffset _load_date;
        partial void Onload_dateChanging(global::System.DateTimeOffset value);
        partial void Onload_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String file_directory
        {
            get
            {
                return _file_directory;
            }
            set
            {
                Onfile_directoryChanging(value);
                ReportPropertyChanging("file_directory");
                _file_directory = StructuralObject.SetValidValue(value, false, "file_directory");
                ReportPropertyChanged("file_directory");
                Onfile_directoryChanged();
            }
        }
        private global::System.String _file_directory;
        partial void Onfile_directoryChanging(global::System.String value);
        partial void Onfile_directoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> number_successful_records
        {
            get
            {
                return _number_successful_records;
            }
            set
            {
                Onnumber_successful_recordsChanging(value);
                ReportPropertyChanging("number_successful_records");
                _number_successful_records = StructuralObject.SetValidValue(value, "number_successful_records");
                ReportPropertyChanged("number_successful_records");
                Onnumber_successful_recordsChanged();
            }
        }
        private Nullable<global::System.Int32> _number_successful_records;
        partial void Onnumber_successful_recordsChanging(Nullable<global::System.Int32> value);
        partial void Onnumber_successful_recordsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> number_failed_records
        {
            get
            {
                return _number_failed_records;
            }
            set
            {
                Onnumber_failed_recordsChanging(value);
                ReportPropertyChanging("number_failed_records");
                _number_failed_records = StructuralObject.SetValidValue(value, "number_failed_records");
                ReportPropertyChanged("number_failed_records");
                Onnumber_failed_recordsChanged();
            }
        }
        private Nullable<global::System.Int32> _number_failed_records;
        partial void Onnumber_failed_recordsChanging(Nullable<global::System.Int32> value);
        partial void Onnumber_failed_recordsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String file_load_comments
        {
            get
            {
                return _file_load_comments;
            }
            set
            {
                Onfile_load_commentsChanging(value);
                ReportPropertyChanging("file_load_comments");
                _file_load_comments = StructuralObject.SetValidValue(value, true, "file_load_comments");
                ReportPropertyChanged("file_load_comments");
                Onfile_load_commentsChanged();
            }
        }
        private global::System.String _file_load_comments;
        partial void Onfile_load_commentsChanging(global::System.String value);
        partial void Onfile_load_commentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 file_load_id
        {
            get
            {
                return _file_load_id;
            }
            set
            {
                Onfile_load_idChanging(value);
                ReportPropertyChanging("file_load_id");
                _file_load_id = StructuralObject.SetValidValue(value, "file_load_id");
                ReportPropertyChanged("file_load_id");
                Onfile_load_idChanged();
            }
        }
        private global::System.Int32 _file_load_id;
        partial void Onfile_load_idChanging(global::System.Int32 value);
        partial void Onfile_load_idChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("indigo_databaseModel", "FK_file_history_issuer", "issuer")]
        public issuer issuer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<issuer>("indigo_databaseModel.FK_file_history_issuer", "issuer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<issuer>("indigo_databaseModel.FK_file_history_issuer", "issuer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<issuer> issuerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<issuer>("indigo_databaseModel.FK_file_history_issuer", "issuer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<issuer>("indigo_databaseModel.FK_file_history_issuer", "issuer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("indigo_databaseModel", "FK_file_history_file_history", "file_types")]
        public file_types file_types
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<file_types>("indigo_databaseModel.FK_file_history_file_history", "file_types").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<file_types>("indigo_databaseModel.FK_file_history_file_history", "file_types").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<file_types> file_typesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<file_types>("indigo_databaseModel.FK_file_history_file_history", "file_types");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<file_types>("indigo_databaseModel.FK_file_history_file_history", "file_types", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("indigo_databaseModel", "FK_file_history_file_statuses", "file_statuses")]
        public file_statuses file_statuses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<file_statuses>("indigo_databaseModel.FK_file_history_file_statuses", "file_statuses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<file_statuses>("indigo_databaseModel.FK_file_history_file_statuses", "file_statuses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<file_statuses> file_statusesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<file_statuses>("indigo_databaseModel.FK_file_history_file_statuses", "file_statuses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<file_statuses>("indigo_databaseModel.FK_file_history_file_statuses", "file_statuses", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="indigo_databaseModel", Name="file_statuses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class file_statuses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new file_statuses object.
        /// </summary>
        /// <param name="file_status_id">Initial value of the file_status_id property.</param>
        /// <param name="file_status">Initial value of the file_status property.</param>
        public static file_statuses Createfile_statuses(global::System.Int32 file_status_id, global::System.String file_status)
        {
            file_statuses file_statuses = new file_statuses();
            file_statuses.file_status_id = file_status_id;
            file_statuses.file_status = file_status;
            return file_statuses;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 file_status_id
        {
            get
            {
                return _file_status_id;
            }
            set
            {
                if (_file_status_id != value)
                {
                    Onfile_status_idChanging(value);
                    ReportPropertyChanging("file_status_id");
                    _file_status_id = StructuralObject.SetValidValue(value, "file_status_id");
                    ReportPropertyChanged("file_status_id");
                    Onfile_status_idChanged();
                }
            }
        }
        private global::System.Int32 _file_status_id;
        partial void Onfile_status_idChanging(global::System.Int32 value);
        partial void Onfile_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String file_status
        {
            get
            {
                return _file_status;
            }
            set
            {
                Onfile_statusChanging(value);
                ReportPropertyChanging("file_status");
                _file_status = StructuralObject.SetValidValue(value, false, "file_status");
                ReportPropertyChanged("file_status");
                Onfile_statusChanged();
            }
        }
        private global::System.String _file_status;
        partial void Onfile_statusChanging(global::System.String value);
        partial void Onfile_statusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("indigo_databaseModel", "FK_file_history_file_statuses", "file_history")]
        public EntityCollection<file_history> file_history
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<file_history>("indigo_databaseModel.FK_file_history_file_statuses", "file_history");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<file_history>("indigo_databaseModel.FK_file_history_file_statuses", "file_history", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="indigo_databaseModel", Name="file_types")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class file_types : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new file_types object.
        /// </summary>
        /// <param name="file_type_id">Initial value of the file_type_id property.</param>
        /// <param name="file_type">Initial value of the file_type property.</param>
        public static file_types Createfile_types(global::System.Int32 file_type_id, global::System.String file_type)
        {
            file_types file_types = new file_types();
            file_types.file_type_id = file_type_id;
            file_types.file_type = file_type;
            return file_types;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 file_type_id
        {
            get
            {
                return _file_type_id;
            }
            set
            {
                if (_file_type_id != value)
                {
                    Onfile_type_idChanging(value);
                    ReportPropertyChanging("file_type_id");
                    _file_type_id = StructuralObject.SetValidValue(value, "file_type_id");
                    ReportPropertyChanged("file_type_id");
                    Onfile_type_idChanged();
                }
            }
        }
        private global::System.Int32 _file_type_id;
        partial void Onfile_type_idChanging(global::System.Int32 value);
        partial void Onfile_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String file_type
        {
            get
            {
                return _file_type;
            }
            set
            {
                Onfile_typeChanging(value);
                ReportPropertyChanging("file_type");
                _file_type = StructuralObject.SetValidValue(value, false, "file_type");
                ReportPropertyChanged("file_type");
                Onfile_typeChanged();
            }
        }
        private global::System.String _file_type;
        partial void Onfile_typeChanging(global::System.String value);
        partial void Onfile_typeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("indigo_databaseModel", "FK_file_history_file_history", "file_history")]
        public EntityCollection<file_history> file_history
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<file_history>("indigo_databaseModel.FK_file_history_file_history", "file_history");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<file_history>("indigo_databaseModel.FK_file_history_file_history", "file_history", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="indigo_databaseModel", Name="interface_type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class interface_type : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new interface_type object.
        /// </summary>
        /// <param name="interface_type_id">Initial value of the interface_type_id property.</param>
        /// <param name="interface_type_name">Initial value of the interface_type_name property.</param>
        public static interface_type Createinterface_type(global::System.Int32 interface_type_id, global::System.String interface_type_name)
        {
            interface_type interface_type = new interface_type();
            interface_type.interface_type_id = interface_type_id;
            interface_type.interface_type_name = interface_type_name;
            return interface_type;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 interface_type_id
        {
            get
            {
                return _interface_type_id;
            }
            set
            {
                if (_interface_type_id != value)
                {
                    Oninterface_type_idChanging(value);
                    ReportPropertyChanging("interface_type_id");
                    _interface_type_id = StructuralObject.SetValidValue(value, "interface_type_id");
                    ReportPropertyChanged("interface_type_id");
                    Oninterface_type_idChanged();
                }
            }
        }
        private global::System.Int32 _interface_type_id;
        partial void Oninterface_type_idChanging(global::System.Int32 value);
        partial void Oninterface_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String interface_type_name
        {
            get
            {
                return _interface_type_name;
            }
            set
            {
                Oninterface_type_nameChanging(value);
                ReportPropertyChanging("interface_type_name");
                _interface_type_name = StructuralObject.SetValidValue(value, false, "interface_type_name");
                ReportPropertyChanged("interface_type_name");
                Oninterface_type_nameChanged();
            }
        }
        private global::System.String _interface_type_name;
        partial void Oninterface_type_nameChanging(global::System.String value);
        partial void Oninterface_type_nameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("indigo_databaseModel", "FK_issuer_interface_interface_type", "issuer_interface")]
        public EntityCollection<issuer_interface> issuer_interface
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<issuer_interface>("indigo_databaseModel.FK_issuer_interface_interface_type", "issuer_interface");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<issuer_interface>("indigo_databaseModel.FK_issuer_interface_interface_type", "issuer_interface", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="indigo_databaseModel", Name="issuer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class issuer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new issuer object.
        /// </summary>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="issuer_status_id">Initial value of the issuer_status_id property.</param>
        /// <param name="country_id">Initial value of the country_id property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="instant_card_issue_YN">Initial value of the instant_card_issue_YN property.</param>
        /// <param name="maker_checker_YN">Initial value of the maker_checker_YN property.</param>
        /// <param name="card_ref_preference">Initial value of the card_ref_preference property.</param>
        /// <param name="classic_card_issue_YN">Initial value of the classic_card_issue_YN property.</param>
        /// <param name="enable_instant_pin_YN">Initial value of the enable_instant_pin_YN property.</param>
        /// <param name="authorise_pin_issue_YN">Initial value of the authorise_pin_issue_YN property.</param>
        /// <param name="authorise_pin_reissue_YN">Initial value of the authorise_pin_reissue_YN property.</param>
        /// <param name="back_office_pin_auth_YN">Initial value of the back_office_pin_auth_YN property.</param>
        /// <param name="remote_token">Initial value of the remote_token property.</param>
        public static issuer Createissuer(global::System.Int32 issuer_id, global::System.Int32 issuer_status_id, global::System.Int32 country_id, global::System.String issuer_name, global::System.String issuer_code, global::System.Boolean instant_card_issue_YN, global::System.Boolean maker_checker_YN, global::System.Boolean card_ref_preference, global::System.Boolean classic_card_issue_YN, global::System.Boolean enable_instant_pin_YN, global::System.Boolean authorise_pin_issue_YN, global::System.Boolean authorise_pin_reissue_YN, global::System.Boolean back_office_pin_auth_YN, global::System.Guid remote_token)
        {
            issuer issuer = new issuer();
            issuer.issuer_id = issuer_id;
            issuer.issuer_status_id = issuer_status_id;
            issuer.country_id = country_id;
            issuer.issuer_name = issuer_name;
            issuer.issuer_code = issuer_code;
            issuer.instant_card_issue_YN = instant_card_issue_YN;
            issuer.maker_checker_YN = maker_checker_YN;
            issuer.card_ref_preference = card_ref_preference;
            issuer.classic_card_issue_YN = classic_card_issue_YN;
            issuer.enable_instant_pin_YN = enable_instant_pin_YN;
            issuer.authorise_pin_issue_YN = authorise_pin_issue_YN;
            issuer.authorise_pin_reissue_YN = authorise_pin_reissue_YN;
            issuer.back_office_pin_auth_YN = back_office_pin_auth_YN;
            issuer.remote_token = remote_token;
            return issuer;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                if (_issuer_id != value)
                {
                    Onissuer_idChanging(value);
                    ReportPropertyChanging("issuer_id");
                    _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                    ReportPropertyChanged("issuer_id");
                    Onissuer_idChanged();
                }
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_status_id
        {
            get
            {
                return _issuer_status_id;
            }
            set
            {
                Onissuer_status_idChanging(value);
                ReportPropertyChanging("issuer_status_id");
                _issuer_status_id = StructuralObject.SetValidValue(value, "issuer_status_id");
                ReportPropertyChanged("issuer_status_id");
                Onissuer_status_idChanged();
            }
        }
        private global::System.Int32 _issuer_status_id;
        partial void Onissuer_status_idChanging(global::System.Int32 value);
        partial void Onissuer_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 country_id
        {
            get
            {
                return _country_id;
            }
            set
            {
                Oncountry_idChanging(value);
                ReportPropertyChanging("country_id");
                _country_id = StructuralObject.SetValidValue(value, "country_id");
                ReportPropertyChanged("country_id");
                Oncountry_idChanged();
            }
        }
        private global::System.Int32 _country_id;
        partial void Oncountry_idChanging(global::System.Int32 value);
        partial void Oncountry_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean instant_card_issue_YN
        {
            get
            {
                return _instant_card_issue_YN;
            }
            set
            {
                Oninstant_card_issue_YNChanging(value);
                ReportPropertyChanging("instant_card_issue_YN");
                _instant_card_issue_YN = StructuralObject.SetValidValue(value, "instant_card_issue_YN");
                ReportPropertyChanged("instant_card_issue_YN");
                Oninstant_card_issue_YNChanged();
            }
        }
        private global::System.Boolean _instant_card_issue_YN;
        partial void Oninstant_card_issue_YNChanging(global::System.Boolean value);
        partial void Oninstant_card_issue_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean maker_checker_YN
        {
            get
            {
                return _maker_checker_YN;
            }
            set
            {
                Onmaker_checker_YNChanging(value);
                ReportPropertyChanging("maker_checker_YN");
                _maker_checker_YN = StructuralObject.SetValidValue(value, "maker_checker_YN");
                ReportPropertyChanged("maker_checker_YN");
                Onmaker_checker_YNChanged();
            }
        }
        private global::System.Boolean _maker_checker_YN;
        partial void Onmaker_checker_YNChanging(global::System.Boolean value);
        partial void Onmaker_checker_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String license_file
        {
            get
            {
                return _license_file;
            }
            set
            {
                Onlicense_fileChanging(value);
                ReportPropertyChanging("license_file");
                _license_file = StructuralObject.SetValidValue(value, true, "license_file");
                ReportPropertyChanged("license_file");
                Onlicense_fileChanged();
            }
        }
        private global::System.String _license_file;
        partial void Onlicense_fileChanging(global::System.String value);
        partial void Onlicense_fileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String license_key
        {
            get
            {
                return _license_key;
            }
            set
            {
                Onlicense_keyChanging(value);
                ReportPropertyChanging("license_key");
                _license_key = StructuralObject.SetValidValue(value, true, "license_key");
                ReportPropertyChanged("license_key");
                Onlicense_keyChanged();
            }
        }
        private global::System.String _license_key;
        partial void Onlicense_keyChanging(global::System.String value);
        partial void Onlicense_keyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> language_id
        {
            get
            {
                return _language_id;
            }
            set
            {
                Onlanguage_idChanging(value);
                ReportPropertyChanging("language_id");
                _language_id = StructuralObject.SetValidValue(value, "language_id");
                ReportPropertyChanged("language_id");
                Onlanguage_idChanged();
            }
        }
        private Nullable<global::System.Int32> _language_id;
        partial void Onlanguage_idChanging(Nullable<global::System.Int32> value);
        partial void Onlanguage_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean card_ref_preference
        {
            get
            {
                return _card_ref_preference;
            }
            set
            {
                Oncard_ref_preferenceChanging(value);
                ReportPropertyChanging("card_ref_preference");
                _card_ref_preference = StructuralObject.SetValidValue(value, "card_ref_preference");
                ReportPropertyChanged("card_ref_preference");
                Oncard_ref_preferenceChanged();
            }
        }
        private global::System.Boolean _card_ref_preference;
        partial void Oncard_ref_preferenceChanging(global::System.Boolean value);
        partial void Oncard_ref_preferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean classic_card_issue_YN
        {
            get
            {
                return _classic_card_issue_YN;
            }
            set
            {
                Onclassic_card_issue_YNChanging(value);
                ReportPropertyChanging("classic_card_issue_YN");
                _classic_card_issue_YN = StructuralObject.SetValidValue(value, "classic_card_issue_YN");
                ReportPropertyChanged("classic_card_issue_YN");
                Onclassic_card_issue_YNChanged();
            }
        }
        private global::System.Boolean _classic_card_issue_YN;
        partial void Onclassic_card_issue_YNChanging(global::System.Boolean value);
        partial void Onclassic_card_issue_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean enable_instant_pin_YN
        {
            get
            {
                return _enable_instant_pin_YN;
            }
            set
            {
                Onenable_instant_pin_YNChanging(value);
                ReportPropertyChanging("enable_instant_pin_YN");
                _enable_instant_pin_YN = StructuralObject.SetValidValue(value, "enable_instant_pin_YN");
                ReportPropertyChanged("enable_instant_pin_YN");
                Onenable_instant_pin_YNChanged();
            }
        }
        private global::System.Boolean _enable_instant_pin_YN;
        partial void Onenable_instant_pin_YNChanging(global::System.Boolean value);
        partial void Onenable_instant_pin_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean authorise_pin_issue_YN
        {
            get
            {
                return _authorise_pin_issue_YN;
            }
            set
            {
                Onauthorise_pin_issue_YNChanging(value);
                ReportPropertyChanging("authorise_pin_issue_YN");
                _authorise_pin_issue_YN = StructuralObject.SetValidValue(value, "authorise_pin_issue_YN");
                ReportPropertyChanged("authorise_pin_issue_YN");
                Onauthorise_pin_issue_YNChanged();
            }
        }
        private global::System.Boolean _authorise_pin_issue_YN;
        partial void Onauthorise_pin_issue_YNChanging(global::System.Boolean value);
        partial void Onauthorise_pin_issue_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean authorise_pin_reissue_YN
        {
            get
            {
                return _authorise_pin_reissue_YN;
            }
            set
            {
                Onauthorise_pin_reissue_YNChanging(value);
                ReportPropertyChanging("authorise_pin_reissue_YN");
                _authorise_pin_reissue_YN = StructuralObject.SetValidValue(value, "authorise_pin_reissue_YN");
                ReportPropertyChanged("authorise_pin_reissue_YN");
                Onauthorise_pin_reissue_YNChanged();
            }
        }
        private global::System.Boolean _authorise_pin_reissue_YN;
        partial void Onauthorise_pin_reissue_YNChanging(global::System.Boolean value);
        partial void Onauthorise_pin_reissue_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean back_office_pin_auth_YN
        {
            get
            {
                return _back_office_pin_auth_YN;
            }
            set
            {
                Onback_office_pin_auth_YNChanging(value);
                ReportPropertyChanging("back_office_pin_auth_YN");
                _back_office_pin_auth_YN = StructuralObject.SetValidValue(value, "back_office_pin_auth_YN");
                ReportPropertyChanged("back_office_pin_auth_YN");
                Onback_office_pin_auth_YNChanged();
            }
        }
        private global::System.Boolean _back_office_pin_auth_YN;
        partial void Onback_office_pin_auth_YNChanging(global::System.Boolean value);
        partial void Onback_office_pin_auth_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid remote_token
        {
            get
            {
                return _remote_token;
            }
            set
            {
                Onremote_tokenChanging(value);
                ReportPropertyChanging("remote_token");
                _remote_token = StructuralObject.SetValidValue(value, "remote_token");
                ReportPropertyChanged("remote_token");
                Onremote_tokenChanged();
            }
        }
        private global::System.Guid _remote_token;
        partial void Onremote_tokenChanging(global::System.Guid value);
        partial void Onremote_tokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> remote_token_expiry
        {
            get
            {
                return _remote_token_expiry;
            }
            set
            {
                Onremote_token_expiryChanging(value);
                ReportPropertyChanging("remote_token_expiry");
                _remote_token_expiry = StructuralObject.SetValidValue(value, "remote_token_expiry");
                ReportPropertyChanged("remote_token_expiry");
                Onremote_token_expiryChanged();
            }
        }
        private Nullable<global::System.DateTime> _remote_token_expiry;
        partial void Onremote_token_expiryChanging(Nullable<global::System.DateTime> value);
        partial void Onremote_token_expiryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> allow_branches_to_search_cards
        {
            get
            {
                return _allow_branches_to_search_cards;
            }
            set
            {
                Onallow_branches_to_search_cardsChanging(value);
                ReportPropertyChanging("allow_branches_to_search_cards");
                _allow_branches_to_search_cards = StructuralObject.SetValidValue(value, "allow_branches_to_search_cards");
                ReportPropertyChanged("allow_branches_to_search_cards");
                Onallow_branches_to_search_cardsChanged();
            }
        }
        private Nullable<global::System.Boolean> _allow_branches_to_search_cards;
        partial void Onallow_branches_to_search_cardsChanging(Nullable<global::System.Boolean> value);
        partial void Onallow_branches_to_search_cardsChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("indigo_databaseModel", "FK_issuer_interface_issuer", "issuer_interface")]
        public EntityCollection<issuer_interface> issuer_interface
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<issuer_interface>("indigo_databaseModel.FK_issuer_interface_issuer", "issuer_interface");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<issuer_interface>("indigo_databaseModel.FK_issuer_interface_issuer", "issuer_interface", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("indigo_databaseModel", "FK_user_group_issuer", "user_group")]
        public EntityCollection<user_group> user_group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<user_group>("indigo_databaseModel.FK_user_group_issuer", "user_group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<user_group>("indigo_databaseModel.FK_user_group_issuer", "user_group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("indigo_databaseModel", "FK_issuer_has_languages", "language")]
        public language language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<language>("indigo_databaseModel.FK_issuer_has_languages", "language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<language>("indigo_databaseModel.FK_issuer_has_languages", "language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<language> languageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<language>("indigo_databaseModel.FK_issuer_has_languages", "language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<language>("indigo_databaseModel.FK_issuer_has_languages", "language", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("indigo_databaseModel", "FK_file_history_issuer", "file_history")]
        public EntityCollection<file_history> file_history
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<file_history>("indigo_databaseModel.FK_file_history_issuer", "file_history");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<file_history>("indigo_databaseModel.FK_file_history_issuer", "file_history", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("indigo_databaseModel", "FK_branch_issuer", "branch")]
        public EntityCollection<branch> branches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<branch>("indigo_databaseModel.FK_branch_issuer", "branch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<branch>("indigo_databaseModel.FK_branch_issuer", "branch", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="indigo_databaseModel", Name="issuer_interface")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class issuer_interface : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new issuer_interface object.
        /// </summary>
        /// <param name="interface_type_id">Initial value of the interface_type_id property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="connection_parameter_id">Initial value of the connection_parameter_id property.</param>
        /// <param name="interface_area">Initial value of the interface_area property.</param>
        public static issuer_interface Createissuer_interface(global::System.Int32 interface_type_id, global::System.Int32 issuer_id, global::System.Int32 connection_parameter_id, global::System.Int32 interface_area)
        {
            issuer_interface issuer_interface = new issuer_interface();
            issuer_interface.interface_type_id = interface_type_id;
            issuer_interface.issuer_id = issuer_id;
            issuer_interface.connection_parameter_id = connection_parameter_id;
            issuer_interface.interface_area = interface_area;
            return issuer_interface;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 interface_type_id
        {
            get
            {
                return _interface_type_id;
            }
            set
            {
                if (_interface_type_id != value)
                {
                    Oninterface_type_idChanging(value);
                    ReportPropertyChanging("interface_type_id");
                    _interface_type_id = StructuralObject.SetValidValue(value, "interface_type_id");
                    ReportPropertyChanged("interface_type_id");
                    Oninterface_type_idChanged();
                }
            }
        }
        private global::System.Int32 _interface_type_id;
        partial void Oninterface_type_idChanging(global::System.Int32 value);
        partial void Oninterface_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                if (_issuer_id != value)
                {
                    Onissuer_idChanging(value);
                    ReportPropertyChanging("issuer_id");
                    _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                    ReportPropertyChanged("issuer_id");
                    Onissuer_idChanged();
                }
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 connection_parameter_id
        {
            get
            {
                return _connection_parameter_id;
            }
            set
            {
                Onconnection_parameter_idChanging(value);
                ReportPropertyChanging("connection_parameter_id");
                _connection_parameter_id = StructuralObject.SetValidValue(value, "connection_parameter_id");
                ReportPropertyChanged("connection_parameter_id");
                Onconnection_parameter_idChanged();
            }
        }
        private global::System.Int32 _connection_parameter_id;
        partial void Onconnection_parameter_idChanging(global::System.Int32 value);
        partial void Onconnection_parameter_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 interface_area
        {
            get
            {
                return _interface_area;
            }
            set
            {
                if (_interface_area != value)
                {
                    Oninterface_areaChanging(value);
                    ReportPropertyChanging("interface_area");
                    _interface_area = StructuralObject.SetValidValue(value, "interface_area");
                    ReportPropertyChanged("interface_area");
                    Oninterface_areaChanged();
                }
            }
        }
        private global::System.Int32 _interface_area;
        partial void Oninterface_areaChanging(global::System.Int32 value);
        partial void Oninterface_areaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String interface_guid
        {
            get
            {
                return _interface_guid;
            }
            set
            {
                Oninterface_guidChanging(value);
                ReportPropertyChanging("interface_guid");
                _interface_guid = StructuralObject.SetValidValue(value, true, "interface_guid");
                ReportPropertyChanged("interface_guid");
                Oninterface_guidChanged();
            }
        }
        private global::System.String _interface_guid;
        partial void Oninterface_guidChanging(global::System.String value);
        partial void Oninterface_guidChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("indigo_databaseModel", "FK_issuer_interface_issuer", "issuer")]
        public issuer issuer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<issuer>("indigo_databaseModel.FK_issuer_interface_issuer", "issuer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<issuer>("indigo_databaseModel.FK_issuer_interface_issuer", "issuer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<issuer> issuerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<issuer>("indigo_databaseModel.FK_issuer_interface_issuer", "issuer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<issuer>("indigo_databaseModel.FK_issuer_interface_issuer", "issuer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("indigo_databaseModel", "FK_issuer_interface_interface_type", "interface_type")]
        public interface_type interface_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<interface_type>("indigo_databaseModel.FK_issuer_interface_interface_type", "interface_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<interface_type>("indigo_databaseModel.FK_issuer_interface_interface_type", "interface_type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<interface_type> interface_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<interface_type>("indigo_databaseModel.FK_issuer_interface_interface_type", "interface_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<interface_type>("indigo_databaseModel.FK_issuer_interface_interface_type", "interface_type", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="indigo_databaseModel", Name="Issuer_product_font")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Issuer_product_font : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Issuer_product_font object.
        /// </summary>
        /// <param name="font_id">Initial value of the font_id property.</param>
        /// <param name="font_name">Initial value of the font_name property.</param>
        public static Issuer_product_font CreateIssuer_product_font(global::System.Int32 font_id, global::System.String font_name)
        {
            Issuer_product_font issuer_product_font = new Issuer_product_font();
            issuer_product_font.font_id = font_id;
            issuer_product_font.font_name = font_name;
            return issuer_product_font;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 font_id
        {
            get
            {
                return _font_id;
            }
            set
            {
                if (_font_id != value)
                {
                    Onfont_idChanging(value);
                    ReportPropertyChanging("font_id");
                    _font_id = StructuralObject.SetValidValue(value, "font_id");
                    ReportPropertyChanged("font_id");
                    Onfont_idChanged();
                }
            }
        }
        private global::System.Int32 _font_id;
        partial void Onfont_idChanging(global::System.Int32 value);
        partial void Onfont_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String font_name
        {
            get
            {
                return _font_name;
            }
            set
            {
                Onfont_nameChanging(value);
                ReportPropertyChanging("font_name");
                _font_name = StructuralObject.SetValidValue(value, false, "font_name");
                ReportPropertyChanged("font_name");
                Onfont_nameChanged();
            }
        }
        private global::System.String _font_name;
        partial void Onfont_nameChanging(global::System.String value);
        partial void Onfont_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String resource_path
        {
            get
            {
                return _resource_path;
            }
            set
            {
                Onresource_pathChanging(value);
                ReportPropertyChanging("resource_path");
                _resource_path = StructuralObject.SetValidValue(value, true, "resource_path");
                ReportPropertyChanged("resource_path");
                Onresource_pathChanged();
            }
        }
        private global::System.String _resource_path;
        partial void Onresource_pathChanging(global::System.String value);
        partial void Onresource_pathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DeletedYN
        {
            get
            {
                return _DeletedYN;
            }
            set
            {
                OnDeletedYNChanging(value);
                ReportPropertyChanging("DeletedYN");
                _DeletedYN = StructuralObject.SetValidValue(value, "DeletedYN");
                ReportPropertyChanged("DeletedYN");
                OnDeletedYNChanged();
            }
        }
        private Nullable<global::System.Boolean> _DeletedYN;
        partial void OnDeletedYNChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedYNChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("indigo_databaseModel", "FK_Issuer_product_font_Issuer_product_font", "Issuer_product_font1")]
        public Issuer_product_font Issuer_product_font1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issuer_product_font>("indigo_databaseModel.FK_Issuer_product_font_Issuer_product_font", "Issuer_product_font1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issuer_product_font>("indigo_databaseModel.FK_Issuer_product_font_Issuer_product_font", "Issuer_product_font1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Issuer_product_font> Issuer_product_font1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issuer_product_font>("indigo_databaseModel.FK_Issuer_product_font_Issuer_product_font", "Issuer_product_font1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Issuer_product_font>("indigo_databaseModel.FK_Issuer_product_font_Issuer_product_font", "Issuer_product_font1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("indigo_databaseModel", "FK_Issuer_product_font_Issuer_product_font", "Issuer_product_font")]
        public Issuer_product_font Issuer_product_font2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issuer_product_font>("indigo_databaseModel.FK_Issuer_product_font_Issuer_product_font", "Issuer_product_font").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issuer_product_font>("indigo_databaseModel.FK_Issuer_product_font_Issuer_product_font", "Issuer_product_font").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Issuer_product_font> Issuer_product_font2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issuer_product_font>("indigo_databaseModel.FK_Issuer_product_font_Issuer_product_font", "Issuer_product_font");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Issuer_product_font>("indigo_databaseModel.FK_Issuer_product_font_Issuer_product_font", "Issuer_product_font", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="indigo_databaseModel", Name="language")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class language : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new language object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="language_name">Initial value of the language_name property.</param>
        /// <param name="language_name_fr">Initial value of the language_name_fr property.</param>
        /// <param name="language_name_pt">Initial value of the language_name_pt property.</param>
        /// <param name="language_name_sp">Initial value of the language_name_sp property.</param>
        public static language Createlanguage(global::System.Int32 id, global::System.String language_name, global::System.String language_name_fr, global::System.String language_name_pt, global::System.String language_name_sp)
        {
            language language = new language();
            language.id = id;
            language.language_name = language_name;
            language.language_name_fr = language_name_fr;
            language.language_name_pt = language_name_pt;
            language.language_name_sp = language_name_sp;
            return language;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String language_name
        {
            get
            {
                return _language_name;
            }
            set
            {
                Onlanguage_nameChanging(value);
                ReportPropertyChanging("language_name");
                _language_name = StructuralObject.SetValidValue(value, false, "language_name");
                ReportPropertyChanged("language_name");
                Onlanguage_nameChanged();
            }
        }
        private global::System.String _language_name;
        partial void Onlanguage_nameChanging(global::System.String value);
        partial void Onlanguage_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String language_name_fr
        {
            get
            {
                return _language_name_fr;
            }
            set
            {
                Onlanguage_name_frChanging(value);
                ReportPropertyChanging("language_name_fr");
                _language_name_fr = StructuralObject.SetValidValue(value, false, "language_name_fr");
                ReportPropertyChanged("language_name_fr");
                Onlanguage_name_frChanged();
            }
        }
        private global::System.String _language_name_fr;
        partial void Onlanguage_name_frChanging(global::System.String value);
        partial void Onlanguage_name_frChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String language_name_pt
        {
            get
            {
                return _language_name_pt;
            }
            set
            {
                Onlanguage_name_ptChanging(value);
                ReportPropertyChanging("language_name_pt");
                _language_name_pt = StructuralObject.SetValidValue(value, false, "language_name_pt");
                ReportPropertyChanged("language_name_pt");
                Onlanguage_name_ptChanged();
            }
        }
        private global::System.String _language_name_pt;
        partial void Onlanguage_name_ptChanging(global::System.String value);
        partial void Onlanguage_name_ptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String language_name_sp
        {
            get
            {
                return _language_name_sp;
            }
            set
            {
                Onlanguage_name_spChanging(value);
                ReportPropertyChanging("language_name_sp");
                _language_name_sp = StructuralObject.SetValidValue(value, false, "language_name_sp");
                ReportPropertyChanged("language_name_sp");
                Onlanguage_name_spChanged();
            }
        }
        private global::System.String _language_name_sp;
        partial void Onlanguage_name_spChanging(global::System.String value);
        partial void Onlanguage_name_spChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("indigo_databaseModel", "FK_issuer_has_languages", "issuer")]
        public EntityCollection<issuer> issuers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<issuer>("indigo_databaseModel.FK_issuer_has_languages", "issuer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<issuer>("indigo_databaseModel.FK_issuer_has_languages", "issuer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="indigo_databaseModel", Name="user")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class user : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new user object.
        /// </summary>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="user_status_id">Initial value of the user_status_id property.</param>
        /// <param name="user_gender_id">Initial value of the user_gender_id property.</param>
        /// <param name="username">Initial value of the username property.</param>
        /// <param name="first_name">Initial value of the first_name property.</param>
        /// <param name="last_name">Initial value of the last_name property.</param>
        /// <param name="password">Initial value of the password property.</param>
        /// <param name="user_email">Initial value of the user_email property.</param>
        /// <param name="online">Initial value of the online property.</param>
        public static user Createuser(global::System.Int64 user_id, global::System.Int32 user_status_id, global::System.Int32 user_gender_id, global::System.Byte[] username, global::System.Byte[] first_name, global::System.Byte[] last_name, global::System.Byte[] password, global::System.String user_email, global::System.Boolean online)
        {
            user user = new user();
            user.user_id = user_id;
            user.user_status_id = user_status_id;
            user.user_gender_id = user_gender_id;
            user.username = username;
            user.first_name = first_name;
            user.last_name = last_name;
            user.password = password;
            user.user_email = user_email;
            user.online = online;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                if (_user_id != value)
                {
                    Onuser_idChanging(value);
                    ReportPropertyChanging("user_id");
                    _user_id = StructuralObject.SetValidValue(value, "user_id");
                    ReportPropertyChanged("user_id");
                    Onuser_idChanged();
                }
            }
        }
        private global::System.Int64 _user_id;
        partial void Onuser_idChanging(global::System.Int64 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_status_id
        {
            get
            {
                return _user_status_id;
            }
            set
            {
                Onuser_status_idChanging(value);
                ReportPropertyChanging("user_status_id");
                _user_status_id = StructuralObject.SetValidValue(value, "user_status_id");
                ReportPropertyChanged("user_status_id");
                Onuser_status_idChanged();
            }
        }
        private global::System.Int32 _user_status_id;
        partial void Onuser_status_idChanging(global::System.Int32 value);
        partial void Onuser_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_gender_id
        {
            get
            {
                return _user_gender_id;
            }
            set
            {
                Onuser_gender_idChanging(value);
                ReportPropertyChanging("user_gender_id");
                _user_gender_id = StructuralObject.SetValidValue(value, "user_gender_id");
                ReportPropertyChanged("user_gender_id");
                Onuser_gender_idChanged();
            }
        }
        private global::System.Int32 _user_gender_id;
        partial void Onuser_gender_idChanging(global::System.Int32 value);
        partial void Onuser_gender_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] username
        {
            get
            {
                return StructuralObject.GetValidValue(_username);
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, false, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.Byte[] _username;
        partial void OnusernameChanging(global::System.Byte[] value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] first_name
        {
            get
            {
                return StructuralObject.GetValidValue(_first_name);
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, false, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.Byte[] _first_name;
        partial void Onfirst_nameChanging(global::System.Byte[] value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] last_name
        {
            get
            {
                return StructuralObject.GetValidValue(_last_name);
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, false, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.Byte[] _last_name;
        partial void Onlast_nameChanging(global::System.Byte[] value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] password
        {
            get
            {
                return StructuralObject.GetValidValue(_password);
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false, "password");
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.Byte[] _password;
        partial void OnpasswordChanging(global::System.Byte[] value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_email
        {
            get
            {
                return _user_email;
            }
            set
            {
                Onuser_emailChanging(value);
                ReportPropertyChanging("user_email");
                _user_email = StructuralObject.SetValidValue(value, false, "user_email");
                ReportPropertyChanged("user_email");
                Onuser_emailChanged();
            }
        }
        private global::System.String _user_email;
        partial void Onuser_emailChanging(global::System.String value);
        partial void Onuser_emailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean online
        {
            get
            {
                return _online;
            }
            set
            {
                OnonlineChanging(value);
                ReportPropertyChanging("online");
                _online = StructuralObject.SetValidValue(value, "online");
                ReportPropertyChanged("online");
                OnonlineChanged();
            }
        }
        private global::System.Boolean _online;
        partial void OnonlineChanging(global::System.Boolean value);
        partial void OnonlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] employee_id
        {
            get
            {
                return StructuralObject.GetValidValue(_employee_id);
            }
            set
            {
                Onemployee_idChanging(value);
                ReportPropertyChanging("employee_id");
                _employee_id = StructuralObject.SetValidValue(value, true, "employee_id");
                ReportPropertyChanged("employee_id");
                Onemployee_idChanged();
            }
        }
        private global::System.Byte[] _employee_id;
        partial void Onemployee_idChanging(global::System.Byte[] value);
        partial void Onemployee_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> last_login_date
        {
            get
            {
                return _last_login_date;
            }
            set
            {
                Onlast_login_dateChanging(value);
                ReportPropertyChanging("last_login_date");
                _last_login_date = StructuralObject.SetValidValue(value, "last_login_date");
                ReportPropertyChanged("last_login_date");
                Onlast_login_dateChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _last_login_date;
        partial void Onlast_login_dateChanging(Nullable<global::System.DateTimeOffset> value);
        partial void Onlast_login_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> last_login_attempt
        {
            get
            {
                return _last_login_attempt;
            }
            set
            {
                Onlast_login_attemptChanging(value);
                ReportPropertyChanging("last_login_attempt");
                _last_login_attempt = StructuralObject.SetValidValue(value, "last_login_attempt");
                ReportPropertyChanged("last_login_attempt");
                Onlast_login_attemptChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _last_login_attempt;
        partial void Onlast_login_attemptChanging(Nullable<global::System.DateTimeOffset> value);
        partial void Onlast_login_attemptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> number_of_incorrect_logins
        {
            get
            {
                return _number_of_incorrect_logins;
            }
            set
            {
                Onnumber_of_incorrect_loginsChanging(value);
                ReportPropertyChanging("number_of_incorrect_logins");
                _number_of_incorrect_logins = StructuralObject.SetValidValue(value, "number_of_incorrect_logins");
                ReportPropertyChanged("number_of_incorrect_logins");
                Onnumber_of_incorrect_loginsChanged();
            }
        }
        private Nullable<global::System.Int32> _number_of_incorrect_logins;
        partial void Onnumber_of_incorrect_loginsChanging(Nullable<global::System.Int32> value);
        partial void Onnumber_of_incorrect_loginsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> last_password_changed_date
        {
            get
            {
                return _last_password_changed_date;
            }
            set
            {
                Onlast_password_changed_dateChanging(value);
                ReportPropertyChanging("last_password_changed_date");
                _last_password_changed_date = StructuralObject.SetValidValue(value, "last_password_changed_date");
                ReportPropertyChanged("last_password_changed_date");
                Onlast_password_changed_dateChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _last_password_changed_date;
        partial void Onlast_password_changed_dateChanging(Nullable<global::System.DateTimeOffset> value);
        partial void Onlast_password_changed_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String workstation
        {
            get
            {
                return _workstation;
            }
            set
            {
                OnworkstationChanging(value);
                ReportPropertyChanging("workstation");
                _workstation = StructuralObject.SetValidValue(value, true, "workstation");
                ReportPropertyChanged("workstation");
                OnworkstationChanged();
            }
        }
        private global::System.String _workstation;
        partial void OnworkstationChanging(global::System.String value);
        partial void OnworkstationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> language_id
        {
            get
            {
                return _language_id;
            }
            set
            {
                Onlanguage_idChanging(value);
                ReportPropertyChanging("language_id");
                _language_id = StructuralObject.SetValidValue(value, "language_id");
                ReportPropertyChanged("language_id");
                Onlanguage_idChanged();
            }
        }
        private Nullable<global::System.Int32> _language_id;
        partial void Onlanguage_idChanging(Nullable<global::System.Int32> value);
        partial void Onlanguage_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] username_index
        {
            get
            {
                return StructuralObject.GetValidValue(_username_index);
            }
            set
            {
                Onusername_indexChanging(value);
                ReportPropertyChanging("username_index");
                _username_index = StructuralObject.SetValidValue(value, true, "username_index");
                ReportPropertyChanged("username_index");
                Onusername_indexChanged();
            }
        }
        private global::System.Byte[] _username_index;
        partial void Onusername_indexChanging(global::System.Byte[] value);
        partial void Onusername_indexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] instant_authorisation_pin
        {
            get
            {
                return StructuralObject.GetValidValue(_instant_authorisation_pin);
            }
            set
            {
                Oninstant_authorisation_pinChanging(value);
                ReportPropertyChanging("instant_authorisation_pin");
                _instant_authorisation_pin = StructuralObject.SetValidValue(value, true, "instant_authorisation_pin");
                ReportPropertyChanged("instant_authorisation_pin");
                Oninstant_authorisation_pinChanged();
            }
        }
        private global::System.Byte[] _instant_authorisation_pin;
        partial void Oninstant_authorisation_pinChanging(global::System.Byte[] value);
        partial void Oninstant_authorisation_pinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> last_authorisation_pin_changed_date
        {
            get
            {
                return _last_authorisation_pin_changed_date;
            }
            set
            {
                Onlast_authorisation_pin_changed_dateChanging(value);
                ReportPropertyChanging("last_authorisation_pin_changed_date");
                _last_authorisation_pin_changed_date = StructuralObject.SetValidValue(value, "last_authorisation_pin_changed_date");
                ReportPropertyChanged("last_authorisation_pin_changed_date");
                Onlast_authorisation_pin_changed_dateChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _last_authorisation_pin_changed_date;
        partial void Onlast_authorisation_pin_changed_dateChanging(Nullable<global::System.DateTimeOffset> value);
        partial void Onlast_authorisation_pin_changed_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String time_zone_utcoffset
        {
            get
            {
                return _time_zone_utcoffset;
            }
            set
            {
                Ontime_zone_utcoffsetChanging(value);
                ReportPropertyChanging("time_zone_utcoffset");
                _time_zone_utcoffset = StructuralObject.SetValidValue(value, true, "time_zone_utcoffset");
                ReportPropertyChanged("time_zone_utcoffset");
                Ontime_zone_utcoffsetChanged();
            }
        }
        private global::System.String _time_zone_utcoffset;
        partial void Ontime_zone_utcoffsetChanging(global::System.String value);
        partial void Ontime_zone_utcoffsetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String time_zone_id
        {
            get
            {
                return _time_zone_id;
            }
            set
            {
                Ontime_zone_idChanging(value);
                ReportPropertyChanging("time_zone_id");
                _time_zone_id = StructuralObject.SetValidValue(value, true, "time_zone_id");
                ReportPropertyChanged("time_zone_id");
                Ontime_zone_idChanged();
            }
        }
        private global::System.String _time_zone_id;
        partial void Ontime_zone_idChanging(global::System.String value);
        partial void Ontime_zone_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> useradmin_user_id
        {
            get
            {
                return _useradmin_user_id;
            }
            set
            {
                Onuseradmin_user_idChanging(value);
                ReportPropertyChanging("useradmin_user_id");
                _useradmin_user_id = StructuralObject.SetValidValue(value, "useradmin_user_id");
                ReportPropertyChanged("useradmin_user_id");
                Onuseradmin_user_idChanged();
            }
        }
        private Nullable<global::System.Int64> _useradmin_user_id;
        partial void Onuseradmin_user_idChanging(Nullable<global::System.Int64> value);
        partial void Onuseradmin_user_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> record_datetime
        {
            get
            {
                return _record_datetime;
            }
            set
            {
                Onrecord_datetimeChanging(value);
                ReportPropertyChanging("record_datetime");
                _record_datetime = StructuralObject.SetValidValue(value, "record_datetime");
                ReportPropertyChanged("record_datetime");
                Onrecord_datetimeChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _record_datetime;
        partial void Onrecord_datetimeChanging(Nullable<global::System.DateTimeOffset> value);
        partial void Onrecord_datetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> approved_user_id
        {
            get
            {
                return _approved_user_id;
            }
            set
            {
                Onapproved_user_idChanging(value);
                ReportPropertyChanging("approved_user_id");
                _approved_user_id = StructuralObject.SetValidValue(value, "approved_user_id");
                ReportPropertyChanged("approved_user_id");
                Onapproved_user_idChanged();
            }
        }
        private Nullable<global::System.Int64> _approved_user_id;
        partial void Onapproved_user_idChanging(Nullable<global::System.Int64> value);
        partial void Onapproved_user_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> approved_datetime
        {
            get
            {
                return _approved_datetime;
            }
            set
            {
                Onapproved_datetimeChanging(value);
                ReportPropertyChanging("approved_datetime");
                _approved_datetime = StructuralObject.SetValidValue(value, "approved_datetime");
                ReportPropertyChanged("approved_datetime");
                Onapproved_datetimeChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _approved_datetime;
        partial void Onapproved_datetimeChanging(Nullable<global::System.DateTimeOffset> value);
        partial void Onapproved_datetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> authentication_configuration_id
        {
            get
            {
                return _authentication_configuration_id;
            }
            set
            {
                Onauthentication_configuration_idChanging(value);
                ReportPropertyChanging("authentication_configuration_id");
                _authentication_configuration_id = StructuralObject.SetValidValue(value, "authentication_configuration_id");
                ReportPropertyChanged("authentication_configuration_id");
                Onauthentication_configuration_idChanged();
            }
        }
        private Nullable<global::System.Int32> _authentication_configuration_id;
        partial void Onauthentication_configuration_idChanging(Nullable<global::System.Int32> value);
        partial void Onauthentication_configuration_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="indigo_databaseModel", Name="user_group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class user_group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new user_group object.
        /// </summary>
        /// <param name="user_group_id">Initial value of the user_group_id property.</param>
        /// <param name="user_role_id">Initial value of the user_role_id property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="can_create">Initial value of the can_create property.</param>
        /// <param name="can_read">Initial value of the can_read property.</param>
        /// <param name="can_update">Initial value of the can_update property.</param>
        /// <param name="can_delete">Initial value of the can_delete property.</param>
        /// <param name="all_branch_access">Initial value of the all_branch_access property.</param>
        /// <param name="user_group_name">Initial value of the user_group_name property.</param>
        /// <param name="mask_screen_pan">Initial value of the mask_screen_pan property.</param>
        /// <param name="mask_report_pan">Initial value of the mask_report_pan property.</param>
        public static user_group Createuser_group(global::System.Int32 user_group_id, global::System.Int32 user_role_id, global::System.Int32 issuer_id, global::System.Boolean can_create, global::System.Boolean can_read, global::System.Boolean can_update, global::System.Boolean can_delete, global::System.Boolean all_branch_access, global::System.String user_group_name, global::System.Boolean mask_screen_pan, global::System.Boolean mask_report_pan)
        {
            user_group user_group = new user_group();
            user_group.user_group_id = user_group_id;
            user_group.user_role_id = user_role_id;
            user_group.issuer_id = issuer_id;
            user_group.can_create = can_create;
            user_group.can_read = can_read;
            user_group.can_update = can_update;
            user_group.can_delete = can_delete;
            user_group.all_branch_access = all_branch_access;
            user_group.user_group_name = user_group_name;
            user_group.mask_screen_pan = mask_screen_pan;
            user_group.mask_report_pan = mask_report_pan;
            return user_group;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_group_id
        {
            get
            {
                return _user_group_id;
            }
            set
            {
                if (_user_group_id != value)
                {
                    Onuser_group_idChanging(value);
                    ReportPropertyChanging("user_group_id");
                    _user_group_id = StructuralObject.SetValidValue(value, "user_group_id");
                    ReportPropertyChanged("user_group_id");
                    Onuser_group_idChanged();
                }
            }
        }
        private global::System.Int32 _user_group_id;
        partial void Onuser_group_idChanging(global::System.Int32 value);
        partial void Onuser_group_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_role_id
        {
            get
            {
                return _user_role_id;
            }
            set
            {
                Onuser_role_idChanging(value);
                ReportPropertyChanging("user_role_id");
                _user_role_id = StructuralObject.SetValidValue(value, "user_role_id");
                ReportPropertyChanged("user_role_id");
                Onuser_role_idChanged();
            }
        }
        private global::System.Int32 _user_role_id;
        partial void Onuser_role_idChanging(global::System.Int32 value);
        partial void Onuser_role_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean can_create
        {
            get
            {
                return _can_create;
            }
            set
            {
                Oncan_createChanging(value);
                ReportPropertyChanging("can_create");
                _can_create = StructuralObject.SetValidValue(value, "can_create");
                ReportPropertyChanged("can_create");
                Oncan_createChanged();
            }
        }
        private global::System.Boolean _can_create;
        partial void Oncan_createChanging(global::System.Boolean value);
        partial void Oncan_createChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean can_read
        {
            get
            {
                return _can_read;
            }
            set
            {
                Oncan_readChanging(value);
                ReportPropertyChanging("can_read");
                _can_read = StructuralObject.SetValidValue(value, "can_read");
                ReportPropertyChanged("can_read");
                Oncan_readChanged();
            }
        }
        private global::System.Boolean _can_read;
        partial void Oncan_readChanging(global::System.Boolean value);
        partial void Oncan_readChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean can_update
        {
            get
            {
                return _can_update;
            }
            set
            {
                Oncan_updateChanging(value);
                ReportPropertyChanging("can_update");
                _can_update = StructuralObject.SetValidValue(value, "can_update");
                ReportPropertyChanged("can_update");
                Oncan_updateChanged();
            }
        }
        private global::System.Boolean _can_update;
        partial void Oncan_updateChanging(global::System.Boolean value);
        partial void Oncan_updateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean can_delete
        {
            get
            {
                return _can_delete;
            }
            set
            {
                Oncan_deleteChanging(value);
                ReportPropertyChanging("can_delete");
                _can_delete = StructuralObject.SetValidValue(value, "can_delete");
                ReportPropertyChanged("can_delete");
                Oncan_deleteChanged();
            }
        }
        private global::System.Boolean _can_delete;
        partial void Oncan_deleteChanging(global::System.Boolean value);
        partial void Oncan_deleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean all_branch_access
        {
            get
            {
                return _all_branch_access;
            }
            set
            {
                Onall_branch_accessChanging(value);
                ReportPropertyChanging("all_branch_access");
                _all_branch_access = StructuralObject.SetValidValue(value, "all_branch_access");
                ReportPropertyChanged("all_branch_access");
                Onall_branch_accessChanged();
            }
        }
        private global::System.Boolean _all_branch_access;
        partial void Onall_branch_accessChanging(global::System.Boolean value);
        partial void Onall_branch_accessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_group_name
        {
            get
            {
                return _user_group_name;
            }
            set
            {
                Onuser_group_nameChanging(value);
                ReportPropertyChanging("user_group_name");
                _user_group_name = StructuralObject.SetValidValue(value, false, "user_group_name");
                ReportPropertyChanged("user_group_name");
                Onuser_group_nameChanged();
            }
        }
        private global::System.String _user_group_name;
        partial void Onuser_group_nameChanging(global::System.String value);
        partial void Onuser_group_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean mask_screen_pan
        {
            get
            {
                return _mask_screen_pan;
            }
            set
            {
                Onmask_screen_panChanging(value);
                ReportPropertyChanging("mask_screen_pan");
                _mask_screen_pan = StructuralObject.SetValidValue(value, "mask_screen_pan");
                ReportPropertyChanged("mask_screen_pan");
                Onmask_screen_panChanged();
            }
        }
        private global::System.Boolean _mask_screen_pan;
        partial void Onmask_screen_panChanging(global::System.Boolean value);
        partial void Onmask_screen_panChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean mask_report_pan
        {
            get
            {
                return _mask_report_pan;
            }
            set
            {
                Onmask_report_panChanging(value);
                ReportPropertyChanging("mask_report_pan");
                _mask_report_pan = StructuralObject.SetValidValue(value, "mask_report_pan");
                ReportPropertyChanged("mask_report_pan");
                Onmask_report_panChanged();
            }
        }
        private global::System.Boolean _mask_report_pan;
        partial void Onmask_report_panChanging(global::System.Boolean value);
        partial void Onmask_report_panChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("indigo_databaseModel", "FK_user_group_issuer", "issuer")]
        public issuer issuer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<issuer>("indigo_databaseModel.FK_user_group_issuer", "issuer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<issuer>("indigo_databaseModel.FK_user_group_issuer", "issuer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<issuer> issuerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<issuer>("indigo_databaseModel.FK_user_group_issuer", "issuer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<issuer>("indigo_databaseModel.FK_user_group_issuer", "issuer", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="accounttypes_mappings_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class accounttypes_mappings_Result : ComplexObject
    {
        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cbs_account_type
        {
            get
            {
                return _cbs_account_type;
            }
            set
            {
                Oncbs_account_typeChanging(value);
                ReportPropertyChanging("cbs_account_type");
                _cbs_account_type = StructuralObject.SetValidValue(value, true, "cbs_account_type");
                ReportPropertyChanged("cbs_account_type");
                Oncbs_account_typeChanged();
            }
        }
        private global::System.String _cbs_account_type;
        partial void Oncbs_account_typeChanging(global::System.String value);
        partial void Oncbs_account_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cms_account_type
        {
            get
            {
                return _cms_account_type;
            }
            set
            {
                Oncms_account_typeChanging(value);
                ReportPropertyChanging("cms_account_type");
                _cms_account_type = StructuralObject.SetValidValue(value, true, "cms_account_type");
                ReportPropertyChanged("cms_account_type");
                Oncms_account_typeChanged();
            }
        }
        private global::System.String _cms_account_type;
        partial void Oncms_account_typeChanging(global::System.String value);
        partial void Oncms_account_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String indigo_account_type
        {
            get
            {
                return _indigo_account_type;
            }
            set
            {
                Onindigo_account_typeChanging(value);
                ReportPropertyChanging("indigo_account_type");
                _indigo_account_type = StructuralObject.SetValidValue(value, true, "indigo_account_type");
                ReportPropertyChanged("indigo_account_type");
                Onindigo_account_typeChanged();
            }
        }
        private global::System.String _indigo_account_type;
        partial void Onindigo_account_typeChanging(global::System.String value);
        partial void Onindigo_account_typeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="auth_configuration_connectionparams_result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class auth_configuration_connectionparams_result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new auth_configuration_connectionparams_result object.
        /// </summary>
        /// <param name="authentication_configuration_id">Initial value of the authentication_configuration_id property.</param>
        public static auth_configuration_connectionparams_result Createauth_configuration_connectionparams_result(global::System.Int32 authentication_configuration_id)
        {
            auth_configuration_connectionparams_result auth_configuration_connectionparams_result = new auth_configuration_connectionparams_result();
            auth_configuration_connectionparams_result.authentication_configuration_id = authentication_configuration_id;
            return auth_configuration_connectionparams_result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 authentication_configuration_id
        {
            get
            {
                return _authentication_configuration_id;
            }
            set
            {
                Onauthentication_configuration_idChanging(value);
                ReportPropertyChanging("authentication_configuration_id");
                _authentication_configuration_id = StructuralObject.SetValidValue(value, "authentication_configuration_id");
                ReportPropertyChanged("authentication_configuration_id");
                Onauthentication_configuration_idChanged();
            }
        }
        private global::System.Int32 _authentication_configuration_id;
        partial void Onauthentication_configuration_idChanging(global::System.Int32 value);
        partial void Onauthentication_configuration_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> auth_type_id
        {
            get
            {
                return _auth_type_id;
            }
            set
            {
                Onauth_type_idChanging(value);
                ReportPropertyChanging("auth_type_id");
                _auth_type_id = StructuralObject.SetValidValue(value, "auth_type_id");
                ReportPropertyChanged("auth_type_id");
                Onauth_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _auth_type_id;
        partial void Onauth_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onauth_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String interface_guid
        {
            get
            {
                return _interface_guid;
            }
            set
            {
                Oninterface_guidChanging(value);
                ReportPropertyChanging("interface_guid");
                _interface_guid = StructuralObject.SetValidValue(value, true, "interface_guid");
                ReportPropertyChanged("interface_guid");
                Oninterface_guidChanged();
            }
        }
        private global::System.String _interface_guid;
        partial void Oninterface_guidChanging(global::System.String value);
        partial void Oninterface_guidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> connection_parameter_id
        {
            get
            {
                return _connection_parameter_id;
            }
            set
            {
                Onconnection_parameter_idChanging(value);
                ReportPropertyChanging("connection_parameter_id");
                _connection_parameter_id = StructuralObject.SetValidValue(value, "connection_parameter_id");
                ReportPropertyChanged("connection_parameter_id");
                Onconnection_parameter_idChanged();
            }
        }
        private Nullable<global::System.Int32> _connection_parameter_id;
        partial void Onconnection_parameter_idChanging(Nullable<global::System.Int32> value);
        partial void Onconnection_parameter_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String external_interface_id
        {
            get
            {
                return _external_interface_id;
            }
            set
            {
                Onexternal_interface_idChanging(value);
                ReportPropertyChanging("external_interface_id");
                _external_interface_id = StructuralObject.SetValidValue(value, true, "external_interface_id");
                ReportPropertyChanged("external_interface_id");
                Onexternal_interface_idChanged();
            }
        }
        private global::System.String _external_interface_id;
        partial void Onexternal_interface_idChanging(global::System.String value);
        partial void Onexternal_interface_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> connection_parameter_type_id
        {
            get
            {
                return _connection_parameter_type_id;
            }
            set
            {
                Onconnection_parameter_type_idChanging(value);
                ReportPropertyChanging("connection_parameter_type_id");
                _connection_parameter_type_id = StructuralObject.SetValidValue(value, "connection_parameter_type_id");
                ReportPropertyChanged("connection_parameter_type_id");
                Onconnection_parameter_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _connection_parameter_type_id;
        partial void Onconnection_parameter_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onconnection_parameter_type_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="auth_configuration_result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class auth_configuration_result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new auth_configuration_result object.
        /// </summary>
        /// <param name="authentication_configuration_id">Initial value of the authentication_configuration_id property.</param>
        /// <param name="authentication_configuration">Initial value of the authentication_configuration property.</param>
        public static auth_configuration_result Createauth_configuration_result(global::System.Int32 authentication_configuration_id, global::System.String authentication_configuration)
        {
            auth_configuration_result auth_configuration_result = new auth_configuration_result();
            auth_configuration_result.authentication_configuration_id = authentication_configuration_id;
            auth_configuration_result.authentication_configuration = authentication_configuration;
            return auth_configuration_result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 authentication_configuration_id
        {
            get
            {
                return _authentication_configuration_id;
            }
            set
            {
                Onauthentication_configuration_idChanging(value);
                ReportPropertyChanging("authentication_configuration_id");
                _authentication_configuration_id = StructuralObject.SetValidValue(value, "authentication_configuration_id");
                ReportPropertyChanged("authentication_configuration_id");
                Onauthentication_configuration_idChanged();
            }
        }
        private global::System.Int32 _authentication_configuration_id;
        partial void Onauthentication_configuration_idChanging(global::System.Int32 value);
        partial void Onauthentication_configuration_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String authentication_configuration
        {
            get
            {
                return _authentication_configuration;
            }
            set
            {
                Onauthentication_configurationChanging(value);
                ReportPropertyChanging("authentication_configuration");
                _authentication_configuration = StructuralObject.SetValidValue(value, false, "authentication_configuration");
                ReportPropertyChanged("authentication_configuration");
                Onauthentication_configurationChanged();
            }
        }
        private global::System.String _authentication_configuration;
        partial void Onauthentication_configurationChanging(global::System.String value);
        partial void Onauthentication_configurationChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="AuthenticationtypesResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class AuthenticationtypesResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuthenticationtypesResult object.
        /// </summary>
        /// <param name="auth_type_id">Initial value of the auth_type_id property.</param>
        /// <param name="auth_type_name">Initial value of the auth_type_name property.</param>
        public static AuthenticationtypesResult CreateAuthenticationtypesResult(global::System.Int32 auth_type_id, global::System.String auth_type_name)
        {
            AuthenticationtypesResult authenticationtypesResult = new AuthenticationtypesResult();
            authenticationtypesResult.auth_type_id = auth_type_id;
            authenticationtypesResult.auth_type_name = auth_type_name;
            return authenticationtypesResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 auth_type_id
        {
            get
            {
                return _auth_type_id;
            }
            set
            {
                Onauth_type_idChanging(value);
                ReportPropertyChanging("auth_type_id");
                _auth_type_id = StructuralObject.SetValidValue(value, "auth_type_id");
                ReportPropertyChanged("auth_type_id");
                Onauth_type_idChanged();
            }
        }
        private global::System.Int32 _auth_type_id;
        partial void Onauth_type_idChanging(global::System.Int32 value);
        partial void Onauth_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String auth_type_name
        {
            get
            {
                return _auth_type_name;
            }
            set
            {
                Onauth_type_nameChanging(value);
                ReportPropertyChanging("auth_type_name");
                _auth_type_name = StructuralObject.SetValidValue(value, false, "auth_type_name");
                ReportPropertyChanged("auth_type_name");
                Onauth_type_nameChanged();
            }
        }
        private global::System.String _auth_type_name;
        partial void Onauth_type_nameChanging(global::System.String value);
        partial void Onauth_type_nameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="AuthPasscodeResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class AuthPasscodeResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuthPasscodeResult object.
        /// </summary>
        /// <param name="user_id">Initial value of the user_id property.</param>
        public static AuthPasscodeResult CreateAuthPasscodeResult(global::System.Int64 user_id)
        {
            AuthPasscodeResult authPasscodeResult = new AuthPasscodeResult();
            authPasscodeResult.user_id = user_id;
            return authPasscodeResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value, "user_id");
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int64 _user_id;
        partial void Onuser_idChanging(global::System.Int64 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String instant_authorisation_pin
        {
            get
            {
                return _instant_authorisation_pin;
            }
            set
            {
                Oninstant_authorisation_pinChanging(value);
                ReportPropertyChanging("instant_authorisation_pin");
                _instant_authorisation_pin = StructuralObject.SetValidValue(value, true, "instant_authorisation_pin");
                ReportPropertyChanged("instant_authorisation_pin");
                Oninstant_authorisation_pinChanged();
            }
        }
        private global::System.String _instant_authorisation_pin;
        partial void Oninstant_authorisation_pinChanging(global::System.String value);
        partial void Oninstant_authorisation_pinChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="BatchCardDetailsPagedResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class BatchCardDetailsPagedResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BatchCardDetailsPagedResult object.
        /// </summary>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        /// <param name="card_id">Initial value of the card_id property.</param>
        /// <param name="card_issue_method_id">Initial value of the card_issue_method_id property.</param>
        /// <param name="card_priority_id">Initial value of the card_priority_id property.</param>
        /// <param name="card_sequence">Initial value of the card_sequence property.</param>
        /// <param name="product_id">Initial value of the product_id property.</param>
        /// <param name="dist_batch_id">Initial value of the dist_batch_id property.</param>
        /// <param name="dist_card_status_id">Initial value of the dist_card_status_id property.</param>
        /// <param name="dist_card_status_name">Initial value of the dist_card_status_name property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        /// <param name="product_code">Initial value of the product_code property.</param>
        /// <param name="product_name">Initial value of the product_name property.</param>
        /// <param name="product_bin_code">Initial value of the product_bin_code property.</param>
        /// <param name="src1_id">Initial value of the src1_id property.</param>
        /// <param name="src2_id">Initial value of the src2_id property.</param>
        /// <param name="src3_id">Initial value of the src3_id property.</param>
        /// <param name="pan_length">Initial value of the pan_length property.</param>
        public static BatchCardDetailsPagedResult CreateBatchCardDetailsPagedResult(global::System.Int32 branch_id, global::System.Int64 card_id, global::System.Int32 card_issue_method_id, global::System.Int32 card_priority_id, global::System.Int32 card_sequence, global::System.Int32 product_id, global::System.Int64 dist_batch_id, global::System.Int32 dist_card_status_id, global::System.String dist_card_status_name, global::System.Int32 issuer_id, global::System.String issuer_code, global::System.String issuer_name, global::System.String branch_code, global::System.String branch_name, global::System.String product_code, global::System.String product_name, global::System.String product_bin_code, global::System.Int32 src1_id, global::System.Int32 src2_id, global::System.Int32 src3_id, global::System.Int16 pan_length)
        {
            BatchCardDetailsPagedResult batchCardDetailsPagedResult = new BatchCardDetailsPagedResult();
            batchCardDetailsPagedResult.branch_id = branch_id;
            batchCardDetailsPagedResult.card_id = card_id;
            batchCardDetailsPagedResult.card_issue_method_id = card_issue_method_id;
            batchCardDetailsPagedResult.card_priority_id = card_priority_id;
            batchCardDetailsPagedResult.card_sequence = card_sequence;
            batchCardDetailsPagedResult.product_id = product_id;
            batchCardDetailsPagedResult.dist_batch_id = dist_batch_id;
            batchCardDetailsPagedResult.dist_card_status_id = dist_card_status_id;
            batchCardDetailsPagedResult.dist_card_status_name = dist_card_status_name;
            batchCardDetailsPagedResult.issuer_id = issuer_id;
            batchCardDetailsPagedResult.issuer_code = issuer_code;
            batchCardDetailsPagedResult.issuer_name = issuer_name;
            batchCardDetailsPagedResult.branch_code = branch_code;
            batchCardDetailsPagedResult.branch_name = branch_name;
            batchCardDetailsPagedResult.product_code = product_code;
            batchCardDetailsPagedResult.product_name = product_name;
            batchCardDetailsPagedResult.product_bin_code = product_bin_code;
            batchCardDetailsPagedResult.src1_id = src1_id;
            batchCardDetailsPagedResult.src2_id = src2_id;
            batchCardDetailsPagedResult.src3_id = src3_id;
            batchCardDetailsPagedResult.pan_length = pan_length;
            return batchCardDetailsPagedResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int32 _branch_id;
        partial void Onbranch_idChanging(global::System.Int32 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 card_id
        {
            get
            {
                return _card_id;
            }
            set
            {
                Oncard_idChanging(value);
                ReportPropertyChanging("card_id");
                _card_id = StructuralObject.SetValidValue(value, "card_id");
                ReportPropertyChanged("card_id");
                Oncard_idChanged();
            }
        }
        private global::System.Int64 _card_id;
        partial void Oncard_idChanging(global::System.Int64 value);
        partial void Oncard_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_method_id
        {
            get
            {
                return _card_issue_method_id;
            }
            set
            {
                Oncard_issue_method_idChanging(value);
                ReportPropertyChanging("card_issue_method_id");
                _card_issue_method_id = StructuralObject.SetValidValue(value, "card_issue_method_id");
                ReportPropertyChanged("card_issue_method_id");
                Oncard_issue_method_idChanged();
            }
        }
        private global::System.Int32 _card_issue_method_id;
        partial void Oncard_issue_method_idChanging(global::System.Int32 value);
        partial void Oncard_issue_method_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_priority_id
        {
            get
            {
                return _card_priority_id;
            }
            set
            {
                Oncard_priority_idChanging(value);
                ReportPropertyChanging("card_priority_id");
                _card_priority_id = StructuralObject.SetValidValue(value, "card_priority_id");
                ReportPropertyChanged("card_priority_id");
                Oncard_priority_idChanged();
            }
        }
        private global::System.Int32 _card_priority_id;
        partial void Oncard_priority_idChanging(global::System.Int32 value);
        partial void Oncard_priority_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_request_reference
        {
            get
            {
                return _card_request_reference;
            }
            set
            {
                Oncard_request_referenceChanging(value);
                ReportPropertyChanging("card_request_reference");
                _card_request_reference = StructuralObject.SetValidValue(value, true, "card_request_reference");
                ReportPropertyChanged("card_request_reference");
                Oncard_request_referenceChanged();
            }
        }
        private global::System.String _card_request_reference;
        partial void Oncard_request_referenceChanging(global::System.String value);
        partial void Oncard_request_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_sequence
        {
            get
            {
                return _card_sequence;
            }
            set
            {
                Oncard_sequenceChanging(value);
                ReportPropertyChanging("card_sequence");
                _card_sequence = StructuralObject.SetValidValue(value, "card_sequence");
                ReportPropertyChanged("card_sequence");
                Oncard_sequenceChanged();
            }
        }
        private global::System.Int32 _card_sequence;
        partial void Oncard_sequenceChanging(global::System.Int32 value);
        partial void Oncard_sequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private global::System.Int32 _product_id;
        partial void Onproduct_idChanging(global::System.Int32 value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> card_activation_date
        {
            get
            {
                return _card_activation_date;
            }
            set
            {
                Oncard_activation_dateChanging(value);
                ReportPropertyChanging("card_activation_date");
                _card_activation_date = StructuralObject.SetValidValue(value, "card_activation_date");
                ReportPropertyChanged("card_activation_date");
                Oncard_activation_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _card_activation_date;
        partial void Oncard_activation_dateChanging(Nullable<global::System.DateTime> value);
        partial void Oncard_activation_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> card_expiry_date
        {
            get
            {
                return _card_expiry_date;
            }
            set
            {
                Oncard_expiry_dateChanging(value);
                ReportPropertyChanging("card_expiry_date");
                _card_expiry_date = StructuralObject.SetValidValue(value, "card_expiry_date");
                ReportPropertyChanged("card_expiry_date");
                Oncard_expiry_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _card_expiry_date;
        partial void Oncard_expiry_dateChanging(Nullable<global::System.DateTime> value);
        partial void Oncard_expiry_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> card_production_date
        {
            get
            {
                return _card_production_date;
            }
            set
            {
                Oncard_production_dateChanging(value);
                ReportPropertyChanging("card_production_date");
                _card_production_date = StructuralObject.SetValidValue(value, "card_production_date");
                ReportPropertyChanged("card_production_date");
                Oncard_production_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _card_production_date;
        partial void Oncard_production_dateChanging(Nullable<global::System.DateTime> value);
        partial void Oncard_production_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String pvv
        {
            get
            {
                return _pvv;
            }
            set
            {
                OnpvvChanging(value);
                ReportPropertyChanging("pvv");
                _pvv = StructuralObject.SetValidValue(value, true, "pvv");
                ReportPropertyChanged("pvv");
                OnpvvChanged();
            }
        }
        private global::System.String _pvv;
        partial void OnpvvChanging(global::System.String value);
        partial void OnpvvChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 dist_batch_id
        {
            get
            {
                return _dist_batch_id;
            }
            set
            {
                Ondist_batch_idChanging(value);
                ReportPropertyChanging("dist_batch_id");
                _dist_batch_id = StructuralObject.SetValidValue(value, "dist_batch_id");
                ReportPropertyChanged("dist_batch_id");
                Ondist_batch_idChanged();
            }
        }
        private global::System.Int64 _dist_batch_id;
        partial void Ondist_batch_idChanging(global::System.Int64 value);
        partial void Ondist_batch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dist_card_status_id
        {
            get
            {
                return _dist_card_status_id;
            }
            set
            {
                Ondist_card_status_idChanging(value);
                ReportPropertyChanging("dist_card_status_id");
                _dist_card_status_id = StructuralObject.SetValidValue(value, "dist_card_status_id");
                ReportPropertyChanged("dist_card_status_id");
                Ondist_card_status_idChanged();
            }
        }
        private global::System.Int32 _dist_card_status_id;
        partial void Ondist_card_status_idChanging(global::System.Int32 value);
        partial void Ondist_card_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String dist_card_status_name
        {
            get
            {
                return _dist_card_status_name;
            }
            set
            {
                Ondist_card_status_nameChanging(value);
                ReportPropertyChanging("dist_card_status_name");
                _dist_card_status_name = StructuralObject.SetValidValue(value, false, "dist_card_status_name");
                ReportPropertyChanged("dist_card_status_name");
                Ondist_card_status_nameChanged();
            }
        }
        private global::System.String _dist_card_status_name;
        partial void Ondist_card_status_nameChanging(global::System.String value);
        partial void Ondist_card_status_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> account_type_id
        {
            get
            {
                return _account_type_id;
            }
            set
            {
                Onaccount_type_idChanging(value);
                ReportPropertyChanging("account_type_id");
                _account_type_id = StructuralObject.SetValidValue(value, "account_type_id");
                ReportPropertyChanged("account_type_id");
                Onaccount_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _account_type_id;
        partial void Onaccount_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onaccount_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cms_id
        {
            get
            {
                return _cms_id;
            }
            set
            {
                Oncms_idChanging(value);
                ReportPropertyChanging("cms_id");
                _cms_id = StructuralObject.SetValidValue(value, true, "cms_id");
                ReportPropertyChanged("cms_id");
                Oncms_idChanged();
            }
        }
        private global::System.String _cms_id;
        partial void Oncms_idChanging(global::System.String value);
        partial void Oncms_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contract_number
        {
            get
            {
                return _contract_number;
            }
            set
            {
                Oncontract_numberChanging(value);
                ReportPropertyChanging("contract_number");
                _contract_number = StructuralObject.SetValidValue(value, true, "contract_number");
                ReportPropertyChanged("contract_number");
                Oncontract_numberChanged();
            }
        }
        private global::System.String _contract_number;
        partial void Oncontract_numberChanging(global::System.String value);
        partial void Oncontract_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> currency_id
        {
            get
            {
                return _currency_id;
            }
            set
            {
                Oncurrency_idChanging(value);
                ReportPropertyChanging("currency_id");
                _currency_id = StructuralObject.SetValidValue(value, "currency_id");
                ReportPropertyChanged("currency_id");
                Oncurrency_idChanged();
            }
        }
        private Nullable<global::System.Int32> _currency_id;
        partial void Oncurrency_idChanging(Nullable<global::System.Int32> value);
        partial void Oncurrency_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> customer_account_id
        {
            get
            {
                return _customer_account_id;
            }
            set
            {
                Oncustomer_account_idChanging(value);
                ReportPropertyChanging("customer_account_id");
                _customer_account_id = StructuralObject.SetValidValue(value, "customer_account_id");
                ReportPropertyChanged("customer_account_id");
                Oncustomer_account_idChanged();
            }
        }
        private Nullable<global::System.Int64> _customer_account_id;
        partial void Oncustomer_account_idChanging(Nullable<global::System.Int64> value);
        partial void Oncustomer_account_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_account_number
        {
            get
            {
                return _customer_account_number;
            }
            set
            {
                Oncustomer_account_numberChanging(value);
                ReportPropertyChanging("customer_account_number");
                _customer_account_number = StructuralObject.SetValidValue(value, true, "customer_account_number");
                ReportPropertyChanged("customer_account_number");
                Oncustomer_account_numberChanged();
            }
        }
        private global::System.String _customer_account_number;
        partial void Oncustomer_account_numberChanging(global::System.String value);
        partial void Oncustomer_account_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_first_name
        {
            get
            {
                return _customer_first_name;
            }
            set
            {
                Oncustomer_first_nameChanging(value);
                ReportPropertyChanging("customer_first_name");
                _customer_first_name = StructuralObject.SetValidValue(value, true, "customer_first_name");
                ReportPropertyChanged("customer_first_name");
                Oncustomer_first_nameChanged();
            }
        }
        private global::System.String _customer_first_name;
        partial void Oncustomer_first_nameChanging(global::System.String value);
        partial void Oncustomer_first_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_last_name
        {
            get
            {
                return _customer_last_name;
            }
            set
            {
                Oncustomer_last_nameChanging(value);
                ReportPropertyChanging("customer_last_name");
                _customer_last_name = StructuralObject.SetValidValue(value, true, "customer_last_name");
                ReportPropertyChanged("customer_last_name");
                Oncustomer_last_nameChanged();
            }
        }
        private global::System.String _customer_last_name;
        partial void Oncustomer_last_nameChanging(global::System.String value);
        partial void Oncustomer_last_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_middle_name
        {
            get
            {
                return _customer_middle_name;
            }
            set
            {
                Oncustomer_middle_nameChanging(value);
                ReportPropertyChanging("customer_middle_name");
                _customer_middle_name = StructuralObject.SetValidValue(value, true, "customer_middle_name");
                ReportPropertyChanged("customer_middle_name");
                Oncustomer_middle_nameChanged();
            }
        }
        private global::System.String _customer_middle_name;
        partial void Oncustomer_middle_nameChanging(global::System.String value);
        partial void Oncustomer_middle_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name_on_card
        {
            get
            {
                return _name_on_card;
            }
            set
            {
                Onname_on_cardChanging(value);
                ReportPropertyChanging("name_on_card");
                _name_on_card = StructuralObject.SetValidValue(value, true, "name_on_card");
                ReportPropertyChanged("name_on_card");
                Onname_on_cardChanged();
            }
        }
        private global::System.String _name_on_card;
        partial void Onname_on_cardChanging(global::System.String value);
        partial void Onname_on_cardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Id_number
        {
            get
            {
                return _Id_number;
            }
            set
            {
                OnId_numberChanging(value);
                ReportPropertyChanging("Id_number");
                _Id_number = StructuralObject.SetValidValue(value, true, "Id_number");
                ReportPropertyChanged("Id_number");
                OnId_numberChanged();
            }
        }
        private global::System.String _Id_number;
        partial void OnId_numberChanging(global::System.String value);
        partial void OnId_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contact_number
        {
            get
            {
                return _contact_number;
            }
            set
            {
                Oncontact_numberChanging(value);
                ReportPropertyChanging("contact_number");
                _contact_number = StructuralObject.SetValidValue(value, true, "contact_number");
                ReportPropertyChanged("contact_number");
                Oncontact_numberChanged();
            }
        }
        private global::System.String _contact_number;
        partial void Oncontact_numberChanging(global::System.String value);
        partial void Oncontact_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                OnCustomerIdChanging(value);
                ReportPropertyChanging("CustomerId");
                _CustomerId = StructuralObject.SetValidValue(value, true, "CustomerId");
                ReportPropertyChanged("CustomerId");
                OnCustomerIdChanged();
            }
        }
        private global::System.String _CustomerId;
        partial void OnCustomerIdChanging(global::System.String value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> customer_title_id
        {
            get
            {
                return _customer_title_id;
            }
            set
            {
                Oncustomer_title_idChanging(value);
                ReportPropertyChanging("customer_title_id");
                _customer_title_id = StructuralObject.SetValidValue(value, "customer_title_id");
                ReportPropertyChanged("customer_title_id");
                Oncustomer_title_idChanged();
            }
        }
        private Nullable<global::System.Int32> _customer_title_id;
        partial void Oncustomer_title_idChanging(Nullable<global::System.Int32> value);
        partial void Oncustomer_title_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> customer_type_id
        {
            get
            {
                return _customer_type_id;
            }
            set
            {
                Oncustomer_type_idChanging(value);
                ReportPropertyChanging("customer_type_id");
                _customer_type_id = StructuralObject.SetValidValue(value, "customer_type_id");
                ReportPropertyChanged("customer_type_id");
                Oncustomer_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _customer_type_id;
        partial void Oncustomer_type_idChanging(Nullable<global::System.Int32> value);
        partial void Oncustomer_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date_issued
        {
            get
            {
                return _date_issued;
            }
            set
            {
                Ondate_issuedChanging(value);
                ReportPropertyChanging("date_issued");
                _date_issued = StructuralObject.SetValidValue(value, "date_issued");
                ReportPropertyChanged("date_issued");
                Ondate_issuedChanged();
            }
        }
        private Nullable<global::System.DateTime> _date_issued;
        partial void Ondate_issuedChanging(Nullable<global::System.DateTime> value);
        partial void Ondate_issuedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> resident_id
        {
            get
            {
                return _resident_id;
            }
            set
            {
                Onresident_idChanging(value);
                ReportPropertyChanging("resident_id");
                _resident_id = StructuralObject.SetValidValue(value, "resident_id");
                ReportPropertyChanged("resident_id");
                Onresident_idChanged();
            }
        }
        private Nullable<global::System.Int32> _resident_id;
        partial void Onresident_idChanging(Nullable<global::System.Int32> value);
        partial void Onresident_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value, "user_id");
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private Nullable<global::System.Int64> _user_id;
        partial void Onuser_idChanging(Nullable<global::System.Int64> value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_code
        {
            get
            {
                return _product_code;
            }
            set
            {
                Onproduct_codeChanging(value);
                ReportPropertyChanging("product_code");
                _product_code = StructuralObject.SetValidValue(value, false, "product_code");
                ReportPropertyChanged("product_code");
                Onproduct_codeChanged();
            }
        }
        private global::System.String _product_code;
        partial void Onproduct_codeChanging(global::System.String value);
        partial void Onproduct_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_name
        {
            get
            {
                return _product_name;
            }
            set
            {
                Onproduct_nameChanging(value);
                ReportPropertyChanging("product_name");
                _product_name = StructuralObject.SetValidValue(value, false, "product_name");
                ReportPropertyChanged("product_name");
                Onproduct_nameChanged();
            }
        }
        private global::System.String _product_name;
        partial void Onproduct_nameChanging(global::System.String value);
        partial void Onproduct_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_bin_code
        {
            get
            {
                return _product_bin_code;
            }
            set
            {
                Onproduct_bin_codeChanging(value);
                ReportPropertyChanging("product_bin_code");
                _product_bin_code = StructuralObject.SetValidValue(value, false, "product_bin_code");
                ReportPropertyChanged("product_bin_code");
                Onproduct_bin_codeChanged();
            }
        }
        private global::System.String _product_bin_code;
        partial void Onproduct_bin_codeChanging(global::System.String value);
        partial void Onproduct_bin_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 src1_id
        {
            get
            {
                return _src1_id;
            }
            set
            {
                Onsrc1_idChanging(value);
                ReportPropertyChanging("src1_id");
                _src1_id = StructuralObject.SetValidValue(value, "src1_id");
                ReportPropertyChanged("src1_id");
                Onsrc1_idChanged();
            }
        }
        private global::System.Int32 _src1_id;
        partial void Onsrc1_idChanging(global::System.Int32 value);
        partial void Onsrc1_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 src2_id
        {
            get
            {
                return _src2_id;
            }
            set
            {
                Onsrc2_idChanging(value);
                ReportPropertyChanging("src2_id");
                _src2_id = StructuralObject.SetValidValue(value, "src2_id");
                ReportPropertyChanged("src2_id");
                Onsrc2_idChanged();
            }
        }
        private global::System.Int32 _src2_id;
        partial void Onsrc2_idChanging(global::System.Int32 value);
        partial void Onsrc2_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 src3_id
        {
            get
            {
                return _src3_id;
            }
            set
            {
                Onsrc3_idChanging(value);
                ReportPropertyChanging("src3_id");
                _src3_id = StructuralObject.SetValidValue(value, "src3_id");
                ReportPropertyChanged("src3_id");
                Onsrc3_idChanged();
            }
        }
        private global::System.Int32 _src3_id;
        partial void Onsrc3_idChanging(global::System.Int32 value);
        partial void Onsrc3_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PVKI
        {
            get
            {
                return _PVKI;
            }
            set
            {
                OnPVKIChanging(value);
                ReportPropertyChanging("PVKI");
                _PVKI = StructuralObject.SetValidValue(value, "PVKI");
                ReportPropertyChanged("PVKI");
                OnPVKIChanged();
            }
        }
        private Nullable<global::System.Int32> _PVKI;
        partial void OnPVKIChanging(Nullable<global::System.Int32> value);
        partial void OnPVKIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PVK
        {
            get
            {
                return _PVK;
            }
            set
            {
                OnPVKChanging(value);
                ReportPropertyChanging("PVK");
                _PVK = StructuralObject.SetValidValue(value, true, "PVK");
                ReportPropertyChanged("PVK");
                OnPVKChanged();
            }
        }
        private global::System.String _PVK;
        partial void OnPVKChanging(global::System.String value);
        partial void OnPVKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CVKA
        {
            get
            {
                return _CVKA;
            }
            set
            {
                OnCVKAChanging(value);
                ReportPropertyChanging("CVKA");
                _CVKA = StructuralObject.SetValidValue(value, true, "CVKA");
                ReportPropertyChanged("CVKA");
                OnCVKAChanged();
            }
        }
        private global::System.String _CVKA;
        partial void OnCVKAChanging(global::System.String value);
        partial void OnCVKAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CVKB
        {
            get
            {
                return _CVKB;
            }
            set
            {
                OnCVKBChanging(value);
                ReportPropertyChanging("CVKB");
                _CVKB = StructuralObject.SetValidValue(value, true, "CVKB");
                ReportPropertyChanged("CVKB");
                OnCVKBChanged();
            }
        }
        private global::System.String _CVKB;
        partial void OnCVKBChanging(global::System.String value);
        partial void OnCVKBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> expiry_months
        {
            get
            {
                return _expiry_months;
            }
            set
            {
                Onexpiry_monthsChanging(value);
                ReportPropertyChanging("expiry_months");
                _expiry_months = StructuralObject.SetValidValue(value, "expiry_months");
                ReportPropertyChanged("expiry_months");
                Onexpiry_monthsChanged();
            }
        }
        private Nullable<global::System.Int32> _expiry_months;
        partial void Onexpiry_monthsChanging(Nullable<global::System.Int32> value);
        partial void Onexpiry_monthsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String sub_product_code
        {
            get
            {
                return _sub_product_code;
            }
            set
            {
                Onsub_product_codeChanging(value);
                ReportPropertyChanging("sub_product_code");
                _sub_product_code = StructuralObject.SetValidValue(value, true, "sub_product_code");
                ReportPropertyChanged("sub_product_code");
                Onsub_product_codeChanged();
            }
        }
        private global::System.String _sub_product_code;
        partial void Onsub_product_codeChanging(global::System.String value);
        partial void Onsub_product_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_reference_number
        {
            get
            {
                return _card_reference_number;
            }
            set
            {
                Oncard_reference_numberChanging(value);
                ReportPropertyChanging("card_reference_number");
                _card_reference_number = StructuralObject.SetValidValue(value, true, "card_reference_number");
                ReportPropertyChanged("card_reference_number");
                Oncard_reference_numberChanged();
            }
        }
        private global::System.String _card_reference_number;
        partial void Oncard_reference_numberChanging(global::System.String value);
        partial void Oncard_reference_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 pan_length
        {
            get
            {
                return _pan_length;
            }
            set
            {
                Onpan_lengthChanging(value);
                ReportPropertyChanging("pan_length");
                _pan_length = StructuralObject.SetValidValue(value, "pan_length");
                ReportPropertyChanged("pan_length");
                Onpan_lengthChanged();
            }
        }
        private global::System.Int16 _pan_length;
        partial void Onpan_lengthChanging(global::System.Int16 value);
        partial void Onpan_lengthChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="BillingReportResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class BillingReportResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BillingReportResult object.
        /// </summary>
        /// <param name="branch">Initial value of the branch property.</param>
        /// <param name="last_4_digits">Initial value of the last_4_digits property.</param>
        /// <param name="account_number">Initial value of the account_number property.</param>
        /// <param name="customer_first_name">Initial value of the customer_first_name property.</param>
        /// <param name="customer_middle_name">Initial value of the customer_middle_name property.</param>
        /// <param name="customer_last_name">Initial value of the customer_last_name property.</param>
        public static BillingReportResult CreateBillingReportResult(global::System.String branch, global::System.String last_4_digits, global::System.String account_number, global::System.String customer_first_name, global::System.String customer_middle_name, global::System.String customer_last_name)
        {
            BillingReportResult billingReportResult = new BillingReportResult();
            billingReportResult.branch = branch;
            billingReportResult.last_4_digits = last_4_digits;
            billingReportResult.account_number = account_number;
            billingReportResult.customer_first_name = customer_first_name;
            billingReportResult.customer_middle_name = customer_middle_name;
            billingReportResult.customer_last_name = customer_last_name;
            return billingReportResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> issued_year
        {
            get
            {
                return _issued_year;
            }
            set
            {
                Onissued_yearChanging(value);
                ReportPropertyChanging("issued_year");
                _issued_year = StructuralObject.SetValidValue(value, "issued_year");
                ReportPropertyChanged("issued_year");
                Onissued_yearChanged();
            }
        }
        private Nullable<global::System.Int32> _issued_year;
        partial void Onissued_yearChanging(Nullable<global::System.Int32> value);
        partial void Onissued_yearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> issued_month
        {
            get
            {
                return _issued_month;
            }
            set
            {
                Onissued_monthChanging(value);
                ReportPropertyChanging("issued_month");
                _issued_month = StructuralObject.SetValidValue(value, "issued_month");
                ReportPropertyChanged("issued_month");
                Onissued_monthChanged();
            }
        }
        private Nullable<global::System.Int32> _issued_month;
        partial void Onissued_monthChanging(Nullable<global::System.Int32> value);
        partial void Onissued_monthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch
        {
            get
            {
                return _branch;
            }
            set
            {
                OnbranchChanging(value);
                ReportPropertyChanging("branch");
                _branch = StructuralObject.SetValidValue(value, false, "branch");
                ReportPropertyChanged("branch");
                OnbranchChanged();
            }
        }
        private global::System.String _branch;
        partial void OnbranchChanging(global::System.String value);
        partial void OnbranchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String last_4_digits
        {
            get
            {
                return _last_4_digits;
            }
            set
            {
                Onlast_4_digitsChanging(value);
                ReportPropertyChanging("last_4_digits");
                _last_4_digits = StructuralObject.SetValidValue(value, false, "last_4_digits");
                ReportPropertyChanged("last_4_digits");
                Onlast_4_digitsChanged();
            }
        }
        private global::System.String _last_4_digits;
        partial void Onlast_4_digitsChanging(global::System.String value);
        partial void Onlast_4_digitsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String account_number
        {
            get
            {
                return _account_number;
            }
            set
            {
                Onaccount_numberChanging(value);
                ReportPropertyChanging("account_number");
                _account_number = StructuralObject.SetValidValue(value, false, "account_number");
                ReportPropertyChanged("account_number");
                Onaccount_numberChanged();
            }
        }
        private global::System.String _account_number;
        partial void Onaccount_numberChanging(global::System.String value);
        partial void Onaccount_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String customer_first_name
        {
            get
            {
                return _customer_first_name;
            }
            set
            {
                Oncustomer_first_nameChanging(value);
                ReportPropertyChanging("customer_first_name");
                _customer_first_name = StructuralObject.SetValidValue(value, false, "customer_first_name");
                ReportPropertyChanged("customer_first_name");
                Oncustomer_first_nameChanged();
            }
        }
        private global::System.String _customer_first_name;
        partial void Oncustomer_first_nameChanging(global::System.String value);
        partial void Oncustomer_first_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String customer_middle_name
        {
            get
            {
                return _customer_middle_name;
            }
            set
            {
                Oncustomer_middle_nameChanging(value);
                ReportPropertyChanging("customer_middle_name");
                _customer_middle_name = StructuralObject.SetValidValue(value, false, "customer_middle_name");
                ReportPropertyChanged("customer_middle_name");
                Oncustomer_middle_nameChanged();
            }
        }
        private global::System.String _customer_middle_name;
        partial void Oncustomer_middle_nameChanging(global::System.String value);
        partial void Oncustomer_middle_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String customer_last_name
        {
            get
            {
                return _customer_last_name;
            }
            set
            {
                Oncustomer_last_nameChanging(value);
                ReportPropertyChanging("customer_last_name");
                _customer_last_name = StructuralObject.SetValidValue(value, false, "customer_last_name");
                ReportPropertyChanged("customer_last_name");
                Oncustomer_last_nameChanged();
            }
        }
        private global::System.String _customer_last_name;
        partial void Oncustomer_last_nameChanging(global::System.String value);
        partial void Oncustomer_last_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String current_status
        {
            get
            {
                return _current_status;
            }
            set
            {
                Oncurrent_statusChanging(value);
                ReportPropertyChanging("current_status");
                _current_status = StructuralObject.SetValidValue(value, true, "current_status");
                ReportPropertyChanged("current_status");
                Oncurrent_statusChanged();
            }
        }
        private global::System.String _current_status;
        partial void Oncurrent_statusChanging(global::System.String value);
        partial void Oncurrent_statusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> status_date
        {
            get
            {
                return _status_date;
            }
            set
            {
                Onstatus_dateChanging(value);
                ReportPropertyChanging("status_date");
                _status_date = StructuralObject.SetValidValue(value, "status_date");
                ReportPropertyChanged("status_date");
                Onstatus_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _status_date;
        partial void Onstatus_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onstatus_dateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="BranchesResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class BranchesResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BranchesResult object.
        /// </summary>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        /// <param name="branch_status_id">Initial value of the branch_status_id property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="branch_status">Initial value of the branch_status property.</param>
        public static BranchesResult CreateBranchesResult(global::System.String branch_code, global::System.String branch_name, global::System.Int32 branch_id, global::System.Int32 branch_status_id, global::System.Int32 issuer_id, global::System.String branch_status)
        {
            BranchesResult branchesResult = new BranchesResult();
            branchesResult.branch_code = branch_code;
            branchesResult.branch_name = branch_name;
            branchesResult.branch_id = branch_id;
            branchesResult.branch_status_id = branch_status_id;
            branchesResult.issuer_id = issuer_id;
            branchesResult.branch_status = branch_status;
            return branchesResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int32 _branch_id;
        partial void Onbranch_idChanging(global::System.Int32 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_status_id
        {
            get
            {
                return _branch_status_id;
            }
            set
            {
                Onbranch_status_idChanging(value);
                ReportPropertyChanging("branch_status_id");
                _branch_status_id = StructuralObject.SetValidValue(value, "branch_status_id");
                ReportPropertyChanged("branch_status_id");
                Onbranch_status_idChanged();
            }
        }
        private global::System.Int32 _branch_status_id;
        partial void Onbranch_status_idChanging(global::System.Int32 value);
        partial void Onbranch_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_status
        {
            get
            {
                return _branch_status;
            }
            set
            {
                Onbranch_statusChanging(value);
                ReportPropertyChanging("branch_status");
                _branch_status = StructuralObject.SetValidValue(value, false, "branch_status");
                ReportPropertyChanged("branch_status");
                Onbranch_statusChanged();
            }
        }
        private global::System.String _branch_status;
        partial void Onbranch_statusChanging(global::System.String value);
        partial void Onbranch_statusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> branch_type_id
        {
            get
            {
                return _branch_type_id;
            }
            set
            {
                Onbranch_type_idChanging(value);
                ReportPropertyChanging("branch_type_id");
                _branch_type_id = StructuralObject.SetValidValue(value, "branch_type_id");
                ReportPropertyChanged("branch_type_id");
                Onbranch_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _branch_type_id;
        partial void Onbranch_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onbranch_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> main_branch_id
        {
            get
            {
                return _main_branch_id;
            }
            set
            {
                Onmain_branch_idChanging(value);
                ReportPropertyChanging("main_branch_id");
                _main_branch_id = StructuralObject.SetValidValue(value, "main_branch_id");
                ReportPropertyChanged("main_branch_id");
                Onmain_branch_idChanged();
            }
        }
        private Nullable<global::System.Int32> _main_branch_id;
        partial void Onmain_branch_idChanging(Nullable<global::System.Int32> value);
        partial void Onmain_branch_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="BranchIdResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class BranchIdResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BranchIdResult object.
        /// </summary>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        public static BranchIdResult CreateBranchIdResult(global::System.Int32 branch_id)
        {
            BranchIdResult branchIdResult = new BranchIdResult();
            branchIdResult.branch_id = branch_id;
            return branchIdResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int32 _branch_id;
        partial void Onbranch_idChanging(global::System.Int32 value);
        partial void Onbranch_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="BranchLoadCardCountResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class BranchLoadCardCountResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BranchLoadCardCountResult object.
        /// </summary>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        public static BranchLoadCardCountResult CreateBranchLoadCardCountResult(global::System.Int32 branch_id, global::System.String branch_name, global::System.String branch_code)
        {
            BranchLoadCardCountResult branchLoadCardCountResult = new BranchLoadCardCountResult();
            branchLoadCardCountResult.branch_id = branch_id;
            branchLoadCardCountResult.branch_name = branch_name;
            branchLoadCardCountResult.branch_code = branch_code;
            return branchLoadCardCountResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int32 _branch_id;
        partial void Onbranch_idChanging(global::System.Int32 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CardCount
        {
            get
            {
                return _CardCount;
            }
            set
            {
                OnCardCountChanging(value);
                ReportPropertyChanging("CardCount");
                _CardCount = StructuralObject.SetValidValue(value, "CardCount");
                ReportPropertyChanged("CardCount");
                OnCardCountChanged();
            }
        }
        private Nullable<global::System.Int32> _CardCount;
        partial void OnCardCountChanging(Nullable<global::System.Int32> value);
        partial void OnCardCountChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="card_request_result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class card_request_result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new card_request_result object.
        /// </summary>
        /// <param name="product_name">Initial value of the product_name property.</param>
        /// <param name="card_priority_name">Initial value of the card_priority_name property.</param>
        /// <param name="card_priority_id">Initial value of the card_priority_id property.</param>
        /// <param name="product_id">Initial value of the product_id property.</param>
        public static card_request_result Createcard_request_result(global::System.String product_name, global::System.String card_priority_name, global::System.Int32 card_priority_id, global::System.Int32 product_id)
        {
            card_request_result card_request_result = new card_request_result();
            card_request_result.product_name = product_name;
            card_request_result.card_priority_name = card_priority_name;
            card_request_result.card_priority_id = card_priority_id;
            card_request_result.product_id = product_id;
            return card_request_result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_name
        {
            get
            {
                return _product_name;
            }
            set
            {
                Onproduct_nameChanging(value);
                ReportPropertyChanging("product_name");
                _product_name = StructuralObject.SetValidValue(value, false, "product_name");
                ReportPropertyChanged("product_name");
                Onproduct_nameChanged();
            }
        }
        private global::System.String _product_name;
        partial void Onproduct_nameChanging(global::System.String value);
        partial void Onproduct_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String card_priority_name
        {
            get
            {
                return _card_priority_name;
            }
            set
            {
                Oncard_priority_nameChanging(value);
                ReportPropertyChanging("card_priority_name");
                _card_priority_name = StructuralObject.SetValidValue(value, false, "card_priority_name");
                ReportPropertyChanged("card_priority_name");
                Oncard_priority_nameChanged();
            }
        }
        private global::System.String _card_priority_name;
        partial void Oncard_priority_nameChanging(global::System.String value);
        partial void Oncard_priority_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cardscount
        {
            get
            {
                return _cardscount;
            }
            set
            {
                OncardscountChanging(value);
                ReportPropertyChanging("cardscount");
                _cardscount = StructuralObject.SetValidValue(value, "cardscount");
                ReportPropertyChanged("cardscount");
                OncardscountChanged();
            }
        }
        private Nullable<global::System.Int32> _cardscount;
        partial void OncardscountChanging(Nullable<global::System.Int32> value);
        partial void OncardscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_priority_id
        {
            get
            {
                return _card_priority_id;
            }
            set
            {
                Oncard_priority_idChanging(value);
                ReportPropertyChanging("card_priority_id");
                _card_priority_id = StructuralObject.SetValidValue(value, "card_priority_id");
                ReportPropertyChanged("card_priority_id");
                Oncard_priority_idChanged();
            }
        }
        private global::System.Int32 _card_priority_id;
        partial void Oncard_priority_idChanging(global::System.Int32 value);
        partial void Oncard_priority_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private global::System.Int32 _product_id;
        partial void Onproduct_idChanging(global::System.Int32 value);
        partial void Onproduct_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="CardDetailResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class CardDetailResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CardDetailResult object.
        /// </summary>
        /// <param name="card_id">Initial value of the card_id property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        /// <param name="instant_card_issue_YN">Initial value of the instant_card_issue_YN property.</param>
        /// <param name="pin_mailer_printing_YN">Initial value of the pin_mailer_printing_YN property.</param>
        /// <param name="font_name">Initial value of the font_name property.</param>
        /// <param name="product_id">Initial value of the product_id property.</param>
        /// <param name="product_name">Initial value of the product_name property.</param>
        /// <param name="product_code">Initial value of the product_code property.</param>
        /// <param name="card_priority_id">Initial value of the card_priority_id property.</param>
        /// <param name="card_priority_name">Initial value of the card_priority_name property.</param>
        /// <param name="card_issue_method_id">Initial value of the card_issue_method_id property.</param>
        /// <param name="card_issue_method_name">Initial value of the card_issue_method_name property.</param>
        /// <param name="maker_checker_YN">Initial value of the maker_checker_YN property.</param>
        /// <param name="authorise_pin_issue_YN">Initial value of the authorise_pin_issue_YN property.</param>
        /// <param name="enable_instant_pin_YN">Initial value of the enable_instant_pin_YN property.</param>
        /// <param name="enable_instant_pin_YN_issuer">Initial value of the enable_instant_pin_YN_issuer property.</param>
        /// <param name="pin_mailer_reprint_YN">Initial value of the pin_mailer_reprint_YN property.</param>
        /// <param name="card_ref_preference">Initial value of the card_ref_preference property.</param>
        /// <param name="back_office_pin_auth_YN">Initial value of the back_office_pin_auth_YN property.</param>
        /// <param name="country_id">Initial value of the country_id property.</param>
        /// <param name="country_code">Initial value of the country_code property.</param>
        /// <param name="country_name">Initial value of the country_name property.</param>
        /// <param name="product_bin_code">Initial value of the product_bin_code property.</param>
        /// <param name="delivery_branch_code">Initial value of the delivery_branch_code property.</param>
        /// <param name="delivery_branch_name">Initial value of the delivery_branch_name property.</param>
        /// <param name="charge_fee_to_issuing_branch_YN">Initial value of the charge_fee_to_issuing_branch_YN property.</param>
        /// <param name="print_issue_card_YN">Initial value of the print_issue_card_YN property.</param>
        /// <param name="allow_manual_uploaded_YN">Initial value of the allow_manual_uploaded_YN property.</param>
        /// <param name="allow_reupload_YN">Initial value of the allow_reupload_YN property.</param>
        /// <param name="cbs_account_type">Initial value of the cbs_account_type property.</param>
        /// <param name="card_sequence">Initial value of the card_sequence property.</param>
        public static CardDetailResult CreateCardDetailResult(global::System.Int64 card_id, global::System.String issuer_name, global::System.String issuer_code, global::System.Int32 issuer_id, global::System.String branch_name, global::System.String branch_code, global::System.Int32 branch_id, global::System.Boolean instant_card_issue_YN, global::System.Boolean pin_mailer_printing_YN, global::System.String font_name, global::System.Int32 product_id, global::System.String product_name, global::System.String product_code, global::System.Int32 card_priority_id, global::System.String card_priority_name, global::System.Int32 card_issue_method_id, global::System.String card_issue_method_name, global::System.Boolean maker_checker_YN, global::System.Boolean authorise_pin_issue_YN, global::System.Boolean enable_instant_pin_YN, global::System.Boolean enable_instant_pin_YN_issuer, global::System.Boolean pin_mailer_reprint_YN, global::System.Boolean card_ref_preference, global::System.Boolean back_office_pin_auth_YN, global::System.Int32 country_id, global::System.String country_code, global::System.String country_name, global::System.String product_bin_code, global::System.String delivery_branch_code, global::System.String delivery_branch_name, global::System.Boolean charge_fee_to_issuing_branch_YN, global::System.Boolean print_issue_card_YN, global::System.Boolean allow_manual_uploaded_YN, global::System.Boolean allow_reupload_YN, global::System.String cbs_account_type, global::System.Int32 card_sequence)
        {
            CardDetailResult cardDetailResult = new CardDetailResult();
            cardDetailResult.card_id = card_id;
            cardDetailResult.issuer_name = issuer_name;
            cardDetailResult.issuer_code = issuer_code;
            cardDetailResult.issuer_id = issuer_id;
            cardDetailResult.branch_name = branch_name;
            cardDetailResult.branch_code = branch_code;
            cardDetailResult.branch_id = branch_id;
            cardDetailResult.instant_card_issue_YN = instant_card_issue_YN;
            cardDetailResult.pin_mailer_printing_YN = pin_mailer_printing_YN;
            cardDetailResult.font_name = font_name;
            cardDetailResult.product_id = product_id;
            cardDetailResult.product_name = product_name;
            cardDetailResult.product_code = product_code;
            cardDetailResult.card_priority_id = card_priority_id;
            cardDetailResult.card_priority_name = card_priority_name;
            cardDetailResult.card_issue_method_id = card_issue_method_id;
            cardDetailResult.card_issue_method_name = card_issue_method_name;
            cardDetailResult.maker_checker_YN = maker_checker_YN;
            cardDetailResult.authorise_pin_issue_YN = authorise_pin_issue_YN;
            cardDetailResult.enable_instant_pin_YN = enable_instant_pin_YN;
            cardDetailResult.enable_instant_pin_YN_issuer = enable_instant_pin_YN_issuer;
            cardDetailResult.pin_mailer_reprint_YN = pin_mailer_reprint_YN;
            cardDetailResult.card_ref_preference = card_ref_preference;
            cardDetailResult.back_office_pin_auth_YN = back_office_pin_auth_YN;
            cardDetailResult.country_id = country_id;
            cardDetailResult.country_code = country_code;
            cardDetailResult.country_name = country_name;
            cardDetailResult.product_bin_code = product_bin_code;
            cardDetailResult.delivery_branch_code = delivery_branch_code;
            cardDetailResult.delivery_branch_name = delivery_branch_name;
            cardDetailResult.charge_fee_to_issuing_branch_YN = charge_fee_to_issuing_branch_YN;
            cardDetailResult.print_issue_card_YN = print_issue_card_YN;
            cardDetailResult.allow_manual_uploaded_YN = allow_manual_uploaded_YN;
            cardDetailResult.allow_reupload_YN = allow_reupload_YN;
            cardDetailResult.cbs_account_type = cbs_account_type;
            cardDetailResult.card_sequence = card_sequence;
            return cardDetailResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 card_id
        {
            get
            {
                return _card_id;
            }
            set
            {
                Oncard_idChanging(value);
                ReportPropertyChanging("card_id");
                _card_id = StructuralObject.SetValidValue(value, "card_id");
                ReportPropertyChanged("card_id");
                Oncard_idChanged();
            }
        }
        private global::System.Int64 _card_id;
        partial void Oncard_idChanging(global::System.Int64 value);
        partial void Oncard_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int32 _branch_id;
        partial void Onbranch_idChanging(global::System.Int32 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String load_card_status
        {
            get
            {
                return _load_card_status;
            }
            set
            {
                Onload_card_statusChanging(value);
                ReportPropertyChanging("load_card_status");
                _load_card_status = StructuralObject.SetValidValue(value, true, "load_card_status");
                ReportPropertyChanged("load_card_status");
                Onload_card_statusChanged();
            }
        }
        private global::System.String _load_card_status;
        partial void Onload_card_statusChanging(global::System.String value);
        partial void Onload_card_statusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String load_batch_reference
        {
            get
            {
                return _load_batch_reference;
            }
            set
            {
                Onload_batch_referenceChanging(value);
                ReportPropertyChanging("load_batch_reference");
                _load_batch_reference = StructuralObject.SetValidValue(value, true, "load_batch_reference");
                ReportPropertyChanged("load_batch_reference");
                Onload_batch_referenceChanged();
            }
        }
        private global::System.String _load_batch_reference;
        partial void Onload_batch_referenceChanging(global::System.String value);
        partial void Onload_batch_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String dist_card_status_name
        {
            get
            {
                return _dist_card_status_name;
            }
            set
            {
                Ondist_card_status_nameChanging(value);
                ReportPropertyChanging("dist_card_status_name");
                _dist_card_status_name = StructuralObject.SetValidValue(value, true, "dist_card_status_name");
                ReportPropertyChanged("dist_card_status_name");
                Ondist_card_status_nameChanged();
            }
        }
        private global::System.String _dist_card_status_name;
        partial void Ondist_card_status_nameChanging(global::System.String value);
        partial void Ondist_card_status_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String dist_batch_reference
        {
            get
            {
                return _dist_batch_reference;
            }
            set
            {
                Ondist_batch_referenceChanging(value);
                ReportPropertyChanging("dist_batch_reference");
                _dist_batch_reference = StructuralObject.SetValidValue(value, true, "dist_batch_reference");
                ReportPropertyChanged("dist_batch_reference");
                Ondist_batch_referenceChanged();
            }
        }
        private global::System.String _dist_batch_reference;
        partial void Ondist_batch_referenceChanging(global::System.String value);
        partial void Ondist_batch_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> branch_card_statuses_id
        {
            get
            {
                return _branch_card_statuses_id;
            }
            set
            {
                Onbranch_card_statuses_idChanging(value);
                ReportPropertyChanging("branch_card_statuses_id");
                _branch_card_statuses_id = StructuralObject.SetValidValue(value, "branch_card_statuses_id");
                ReportPropertyChanged("branch_card_statuses_id");
                Onbranch_card_statuses_idChanged();
            }
        }
        private Nullable<global::System.Int32> _branch_card_statuses_id;
        partial void Onbranch_card_statuses_idChanging(Nullable<global::System.Int32> value);
        partial void Onbranch_card_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> status_date
        {
            get
            {
                return _status_date;
            }
            set
            {
                Onstatus_dateChanging(value);
                ReportPropertyChanging("status_date");
                _status_date = StructuralObject.SetValidValue(value, "status_date");
                ReportPropertyChanged("status_date");
                Onstatus_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _status_date;
        partial void Onstatus_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onstatus_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branch_card_statuses_name
        {
            get
            {
                return _branch_card_statuses_name;
            }
            set
            {
                Onbranch_card_statuses_nameChanging(value);
                ReportPropertyChanging("branch_card_statuses_name");
                _branch_card_statuses_name = StructuralObject.SetValidValue(value, true, "branch_card_statuses_name");
                ReportPropertyChanged("branch_card_statuses_name");
                Onbranch_card_statuses_nameChanged();
            }
        }
        private global::System.String _branch_card_statuses_name;
        partial void Onbranch_card_statuses_nameChanging(global::System.String value);
        partial void Onbranch_card_statuses_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> branch_card_code_type_id
        {
            get
            {
                return _branch_card_code_type_id;
            }
            set
            {
                Onbranch_card_code_type_idChanging(value);
                ReportPropertyChanging("branch_card_code_type_id");
                _branch_card_code_type_id = StructuralObject.SetValidValue(value, "branch_card_code_type_id");
                ReportPropertyChanged("branch_card_code_type_id");
                Onbranch_card_code_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _branch_card_code_type_id;
        partial void Onbranch_card_code_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onbranch_card_code_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branch_card_code_name
        {
            get
            {
                return _branch_card_code_name;
            }
            set
            {
                Onbranch_card_code_nameChanging(value);
                ReportPropertyChanging("branch_card_code_name");
                _branch_card_code_name = StructuralObject.SetValidValue(value, true, "branch_card_code_name");
                ReportPropertyChanged("branch_card_code_name");
                Onbranch_card_code_nameChanged();
            }
        }
        private global::System.String _branch_card_code_name;
        partial void Onbranch_card_code_nameChanging(global::System.String value);
        partial void Onbranch_card_code_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> spoil_only
        {
            get
            {
                return _spoil_only;
            }
            set
            {
                Onspoil_onlyChanging(value);
                ReportPropertyChanging("spoil_only");
                _spoil_only = StructuralObject.SetValidValue(value, "spoil_only");
                ReportPropertyChanged("spoil_only");
                Onspoil_onlyChanged();
            }
        }
        private Nullable<global::System.Boolean> _spoil_only;
        partial void Onspoil_onlyChanging(Nullable<global::System.Boolean> value);
        partial void Onspoil_onlyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String @operator
        {
            get
            {
                return _operator;
            }
            set
            {
                OnoperatorChanging(value);
                ReportPropertyChanging("operator");
                _operator = StructuralObject.SetValidValue(value, true, "operator");
                ReportPropertyChanged("operator");
                OnoperatorChanged();
            }
        }
        private global::System.String _operator;
        partial void OnoperatorChanging(global::System.String value);
        partial void OnoperatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> customer_account_id
        {
            get
            {
                return _customer_account_id;
            }
            set
            {
                Oncustomer_account_idChanging(value);
                ReportPropertyChanging("customer_account_id");
                _customer_account_id = StructuralObject.SetValidValue(value, "customer_account_id");
                ReportPropertyChanged("customer_account_id");
                Oncustomer_account_idChanged();
            }
        }
        private Nullable<global::System.Int64> _customer_account_id;
        partial void Oncustomer_account_idChanging(Nullable<global::System.Int64> value);
        partial void Oncustomer_account_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_account_number
        {
            get
            {
                return _customer_account_number;
            }
            set
            {
                Oncustomer_account_numberChanging(value);
                ReportPropertyChanging("customer_account_number");
                _customer_account_number = StructuralObject.SetValidValue(value, true, "customer_account_number");
                ReportPropertyChanged("customer_account_number");
                Oncustomer_account_numberChanged();
            }
        }
        private global::System.String _customer_account_number;
        partial void Oncustomer_account_numberChanging(global::System.String value);
        partial void Oncustomer_account_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> card_issue_reason_id
        {
            get
            {
                return _card_issue_reason_id;
            }
            set
            {
                Oncard_issue_reason_idChanging(value);
                ReportPropertyChanging("card_issue_reason_id");
                _card_issue_reason_id = StructuralObject.SetValidValue(value, "card_issue_reason_id");
                ReportPropertyChanged("card_issue_reason_id");
                Oncard_issue_reason_idChanged();
            }
        }
        private Nullable<global::System.Int32> _card_issue_reason_id;
        partial void Oncard_issue_reason_idChanging(Nullable<global::System.Int32> value);
        partial void Oncard_issue_reason_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_issuer_reason_name
        {
            get
            {
                return _card_issuer_reason_name;
            }
            set
            {
                Oncard_issuer_reason_nameChanging(value);
                ReportPropertyChanging("card_issuer_reason_name");
                _card_issuer_reason_name = StructuralObject.SetValidValue(value, true, "card_issuer_reason_name");
                ReportPropertyChanged("card_issuer_reason_name");
                Oncard_issuer_reason_nameChanged();
            }
        }
        private global::System.String _card_issuer_reason_name;
        partial void Oncard_issuer_reason_nameChanging(global::System.String value);
        partial void Oncard_issuer_reason_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_account_type_name
        {
            get
            {
                return _customer_account_type_name;
            }
            set
            {
                Oncustomer_account_type_nameChanging(value);
                ReportPropertyChanging("customer_account_type_name");
                _customer_account_type_name = StructuralObject.SetValidValue(value, true, "customer_account_type_name");
                ReportPropertyChanged("customer_account_type_name");
                Oncustomer_account_type_nameChanged();
            }
        }
        private global::System.String _customer_account_type_name;
        partial void Oncustomer_account_type_nameChanging(global::System.String value);
        partial void Oncustomer_account_type_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_first_name
        {
            get
            {
                return _customer_first_name;
            }
            set
            {
                Oncustomer_first_nameChanging(value);
                ReportPropertyChanging("customer_first_name");
                _customer_first_name = StructuralObject.SetValidValue(value, true, "customer_first_name");
                ReportPropertyChanged("customer_first_name");
                Oncustomer_first_nameChanged();
            }
        }
        private global::System.String _customer_first_name;
        partial void Oncustomer_first_nameChanging(global::System.String value);
        partial void Oncustomer_first_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_middle_name
        {
            get
            {
                return _customer_middle_name;
            }
            set
            {
                Oncustomer_middle_nameChanging(value);
                ReportPropertyChanging("customer_middle_name");
                _customer_middle_name = StructuralObject.SetValidValue(value, true, "customer_middle_name");
                ReportPropertyChanged("customer_middle_name");
                Oncustomer_middle_nameChanged();
            }
        }
        private global::System.String _customer_middle_name;
        partial void Oncustomer_middle_nameChanging(global::System.String value);
        partial void Oncustomer_middle_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_last_name
        {
            get
            {
                return _customer_last_name;
            }
            set
            {
                Oncustomer_last_nameChanging(value);
                ReportPropertyChanging("customer_last_name");
                _customer_last_name = StructuralObject.SetValidValue(value, true, "customer_last_name");
                ReportPropertyChanged("customer_last_name");
                Oncustomer_last_nameChanged();
            }
        }
        private global::System.String _customer_last_name;
        partial void Oncustomer_last_nameChanging(global::System.String value);
        partial void Oncustomer_last_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date_issued
        {
            get
            {
                return _date_issued;
            }
            set
            {
                Ondate_issuedChanging(value);
                ReportPropertyChanging("date_issued");
                _date_issued = StructuralObject.SetValidValue(value, "date_issued");
                ReportPropertyChanged("date_issued");
                Ondate_issuedChanged();
            }
        }
        private Nullable<global::System.DateTime> _date_issued;
        partial void Ondate_issuedChanging(Nullable<global::System.DateTime> value);
        partial void Ondate_issuedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name_on_card
        {
            get
            {
                return _name_on_card;
            }
            set
            {
                Onname_on_cardChanging(value);
                ReportPropertyChanging("name_on_card");
                _name_on_card = StructuralObject.SetValidValue(value, true, "name_on_card");
                ReportPropertyChanged("name_on_card");
                Onname_on_cardChanged();
            }
        }
        private global::System.String _name_on_card;
        partial void Onname_on_cardChanging(global::System.String value);
        partial void Onname_on_cardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value, "user_id");
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private Nullable<global::System.Int64> _user_id;
        partial void Onuser_idChanging(Nullable<global::System.Int64> value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_first_name
        {
            get
            {
                return _user_first_name;
            }
            set
            {
                Onuser_first_nameChanging(value);
                ReportPropertyChanging("user_first_name");
                _user_first_name = StructuralObject.SetValidValue(value, true, "user_first_name");
                ReportPropertyChanged("user_first_name");
                Onuser_first_nameChanged();
            }
        }
        private global::System.String _user_first_name;
        partial void Onuser_first_nameChanging(global::System.String value);
        partial void Onuser_first_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_last_name
        {
            get
            {
                return _user_last_name;
            }
            set
            {
                Onuser_last_nameChanging(value);
                ReportPropertyChanging("user_last_name");
                _user_last_name = StructuralObject.SetValidValue(value, true, "user_last_name");
                ReportPropertyChanged("user_last_name");
                Onuser_last_nameChanged();
            }
        }
        private global::System.String _user_last_name;
        partial void Onuser_last_nameChanging(global::System.String value);
        partial void Onuser_last_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cms_id
        {
            get
            {
                return _cms_id;
            }
            set
            {
                Oncms_idChanging(value);
                ReportPropertyChanging("cms_id");
                _cms_id = StructuralObject.SetValidValue(value, true, "cms_id");
                ReportPropertyChanged("cms_id");
                Oncms_idChanged();
            }
        }
        private global::System.String _cms_id;
        partial void Oncms_idChanging(global::System.String value);
        partial void Oncms_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> currency_id
        {
            get
            {
                return _currency_id;
            }
            set
            {
                Oncurrency_idChanging(value);
                ReportPropertyChanging("currency_id");
                _currency_id = StructuralObject.SetValidValue(value, "currency_id");
                ReportPropertyChanged("currency_id");
                Oncurrency_idChanged();
            }
        }
        private Nullable<global::System.Int32> _currency_id;
        partial void Oncurrency_idChanging(Nullable<global::System.Int32> value);
        partial void Oncurrency_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> resident_id
        {
            get
            {
                return _resident_id;
            }
            set
            {
                Onresident_idChanging(value);
                ReportPropertyChanging("resident_id");
                _resident_id = StructuralObject.SetValidValue(value, "resident_id");
                ReportPropertyChanged("resident_id");
                Onresident_idChanged();
            }
        }
        private Nullable<global::System.Int32> _resident_id;
        partial void Onresident_idChanging(Nullable<global::System.Int32> value);
        partial void Onresident_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> customer_type_id
        {
            get
            {
                return _customer_type_id;
            }
            set
            {
                Oncustomer_type_idChanging(value);
                ReportPropertyChanging("customer_type_id");
                _customer_type_id = StructuralObject.SetValidValue(value, "customer_type_id");
                ReportPropertyChanged("customer_type_id");
                Oncustomer_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _customer_type_id;
        partial void Oncustomer_type_idChanging(Nullable<global::System.Int32> value);
        partial void Oncustomer_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean instant_card_issue_YN
        {
            get
            {
                return _instant_card_issue_YN;
            }
            set
            {
                Oninstant_card_issue_YNChanging(value);
                ReportPropertyChanging("instant_card_issue_YN");
                _instant_card_issue_YN = StructuralObject.SetValidValue(value, "instant_card_issue_YN");
                ReportPropertyChanged("instant_card_issue_YN");
                Oninstant_card_issue_YNChanged();
            }
        }
        private global::System.Boolean _instant_card_issue_YN;
        partial void Oninstant_card_issue_YNChanging(global::System.Boolean value);
        partial void Oninstant_card_issue_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean pin_mailer_printing_YN
        {
            get
            {
                return _pin_mailer_printing_YN;
            }
            set
            {
                Onpin_mailer_printing_YNChanging(value);
                ReportPropertyChanging("pin_mailer_printing_YN");
                _pin_mailer_printing_YN = StructuralObject.SetValidValue(value, "pin_mailer_printing_YN");
                ReportPropertyChanged("pin_mailer_printing_YN");
                Onpin_mailer_printing_YNChanged();
            }
        }
        private global::System.Boolean _pin_mailer_printing_YN;
        partial void Onpin_mailer_printing_YNChanging(global::System.Boolean value);
        partial void Onpin_mailer_printing_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contract_number
        {
            get
            {
                return _contract_number;
            }
            set
            {
                Oncontract_numberChanging(value);
                ReportPropertyChanging("contract_number");
                _contract_number = StructuralObject.SetValidValue(value, true, "contract_number");
                ReportPropertyChanged("contract_number");
                Oncontract_numberChanged();
            }
        }
        private global::System.String _contract_number;
        partial void Oncontract_numberChanging(global::System.String value);
        partial void Oncontract_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Name_on_card_font_size
        {
            get
            {
                return _Name_on_card_font_size;
            }
            set
            {
                OnName_on_card_font_sizeChanging(value);
                ReportPropertyChanging("Name_on_card_font_size");
                _Name_on_card_font_size = StructuralObject.SetValidValue(value, "Name_on_card_font_size");
                ReportPropertyChanged("Name_on_card_font_size");
                OnName_on_card_font_sizeChanged();
            }
        }
        private Nullable<global::System.Int32> _Name_on_card_font_size;
        partial void OnName_on_card_font_sizeChanging(Nullable<global::System.Int32> value);
        partial void OnName_on_card_font_sizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> name_on_card_left
        {
            get
            {
                return _name_on_card_left;
            }
            set
            {
                Onname_on_card_leftChanging(value);
                ReportPropertyChanging("name_on_card_left");
                _name_on_card_left = StructuralObject.SetValidValue(value, "name_on_card_left");
                ReportPropertyChanged("name_on_card_left");
                Onname_on_card_leftChanged();
            }
        }
        private Nullable<global::System.Decimal> _name_on_card_left;
        partial void Onname_on_card_leftChanging(Nullable<global::System.Decimal> value);
        partial void Onname_on_card_leftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> name_on_card_top
        {
            get
            {
                return _name_on_card_top;
            }
            set
            {
                Onname_on_card_topChanging(value);
                ReportPropertyChanging("name_on_card_top");
                _name_on_card_top = StructuralObject.SetValidValue(value, "name_on_card_top");
                ReportPropertyChanged("name_on_card_top");
                Onname_on_card_topChanged();
            }
        }
        private Nullable<global::System.Decimal> _name_on_card_top;
        partial void Onname_on_card_topChanging(Nullable<global::System.Decimal> value);
        partial void Onname_on_card_topChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String font_name
        {
            get
            {
                return _font_name;
            }
            set
            {
                Onfont_nameChanging(value);
                ReportPropertyChanging("font_name");
                _font_name = StructuralObject.SetValidValue(value, false, "font_name");
                ReportPropertyChanged("font_name");
                Onfont_nameChanged();
            }
        }
        private global::System.String _font_name;
        partial void Onfont_nameChanging(global::System.String value);
        partial void Onfont_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private global::System.Int32 _product_id;
        partial void Onproduct_idChanging(global::System.Int32 value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_name
        {
            get
            {
                return _product_name;
            }
            set
            {
                Onproduct_nameChanging(value);
                ReportPropertyChanging("product_name");
                _product_name = StructuralObject.SetValidValue(value, false, "product_name");
                ReportPropertyChanged("product_name");
                Onproduct_nameChanged();
            }
        }
        private global::System.String _product_name;
        partial void Onproduct_nameChanging(global::System.String value);
        partial void Onproduct_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_code
        {
            get
            {
                return _product_code;
            }
            set
            {
                Onproduct_codeChanging(value);
                ReportPropertyChanging("product_code");
                _product_code = StructuralObject.SetValidValue(value, false, "product_code");
                ReportPropertyChanged("product_code");
                Onproduct_codeChanged();
            }
        }
        private global::System.String _product_code;
        partial void Onproduct_codeChanging(global::System.String value);
        partial void Onproduct_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> account_type_id
        {
            get
            {
                return _account_type_id;
            }
            set
            {
                Onaccount_type_idChanging(value);
                ReportPropertyChanging("account_type_id");
                _account_type_id = StructuralObject.SetValidValue(value, "account_type_id");
                ReportPropertyChanged("account_type_id");
                Onaccount_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _account_type_id;
        partial void Onaccount_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onaccount_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> customer_title_id
        {
            get
            {
                return _customer_title_id;
            }
            set
            {
                Oncustomer_title_idChanging(value);
                ReportPropertyChanging("customer_title_id");
                _customer_title_id = StructuralObject.SetValidValue(value, "customer_title_id");
                ReportPropertyChanged("customer_title_id");
                Oncustomer_title_idChanged();
            }
        }
        private Nullable<global::System.Int32> _customer_title_id;
        partial void Oncustomer_title_idChanging(Nullable<global::System.Int32> value);
        partial void Oncustomer_title_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_title_name
        {
            get
            {
                return _customer_title_name;
            }
            set
            {
                Oncustomer_title_nameChanging(value);
                ReportPropertyChanging("customer_title_name");
                _customer_title_name = StructuralObject.SetValidValue(value, true, "customer_title_name");
                ReportPropertyChanged("customer_title_name");
                Oncustomer_title_nameChanged();
            }
        }
        private global::System.String _customer_title_name;
        partial void Oncustomer_title_nameChanging(global::System.String value);
        partial void Oncustomer_title_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_residency_name
        {
            get
            {
                return _customer_residency_name;
            }
            set
            {
                Oncustomer_residency_nameChanging(value);
                ReportPropertyChanging("customer_residency_name");
                _customer_residency_name = StructuralObject.SetValidValue(value, true, "customer_residency_name");
                ReportPropertyChanged("customer_residency_name");
                Oncustomer_residency_nameChanged();
            }
        }
        private global::System.String _customer_residency_name;
        partial void Oncustomer_residency_nameChanging(global::System.String value);
        partial void Oncustomer_residency_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_type_name
        {
            get
            {
                return _customer_type_name;
            }
            set
            {
                Oncustomer_type_nameChanging(value);
                ReportPropertyChanging("customer_type_name");
                _customer_type_name = StructuralObject.SetValidValue(value, true, "customer_type_name");
                ReportPropertyChanged("customer_type_name");
                Oncustomer_type_nameChanged();
            }
        }
        private global::System.String _customer_type_name;
        partial void Oncustomer_type_nameChanging(global::System.String value);
        partial void Oncustomer_type_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_request_reference
        {
            get
            {
                return _card_request_reference;
            }
            set
            {
                Oncard_request_referenceChanging(value);
                ReportPropertyChanging("card_request_reference");
                _card_request_reference = StructuralObject.SetValidValue(value, true, "card_request_reference");
                ReportPropertyChanged("card_request_reference");
                Oncard_request_referenceChanged();
            }
        }
        private global::System.String _card_request_reference;
        partial void Oncard_request_referenceChanging(global::System.String value);
        partial void Oncard_request_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_priority_id
        {
            get
            {
                return _card_priority_id;
            }
            set
            {
                Oncard_priority_idChanging(value);
                ReportPropertyChanging("card_priority_id");
                _card_priority_id = StructuralObject.SetValidValue(value, "card_priority_id");
                ReportPropertyChanged("card_priority_id");
                Oncard_priority_idChanged();
            }
        }
        private global::System.Int32 _card_priority_id;
        partial void Oncard_priority_idChanging(global::System.Int32 value);
        partial void Oncard_priority_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String card_priority_name
        {
            get
            {
                return _card_priority_name;
            }
            set
            {
                Oncard_priority_nameChanging(value);
                ReportPropertyChanging("card_priority_name");
                _card_priority_name = StructuralObject.SetValidValue(value, false, "card_priority_name");
                ReportPropertyChanged("card_priority_name");
                Oncard_priority_nameChanged();
            }
        }
        private global::System.String _card_priority_name;
        partial void Oncard_priority_nameChanging(global::System.String value);
        partial void Oncard_priority_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_method_id
        {
            get
            {
                return _card_issue_method_id;
            }
            set
            {
                Oncard_issue_method_idChanging(value);
                ReportPropertyChanging("card_issue_method_id");
                _card_issue_method_id = StructuralObject.SetValidValue(value, "card_issue_method_id");
                ReportPropertyChanged("card_issue_method_id");
                Oncard_issue_method_idChanged();
            }
        }
        private global::System.Int32 _card_issue_method_id;
        partial void Oncard_issue_method_idChanging(global::System.Int32 value);
        partial void Oncard_issue_method_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String card_issue_method_name
        {
            get
            {
                return _card_issue_method_name;
            }
            set
            {
                Oncard_issue_method_nameChanging(value);
                ReportPropertyChanging("card_issue_method_name");
                _card_issue_method_name = StructuralObject.SetValidValue(value, false, "card_issue_method_name");
                ReportPropertyChanged("card_issue_method_name");
                Oncard_issue_method_nameChanged();
            }
        }
        private global::System.String _card_issue_method_name;
        partial void Oncard_issue_method_nameChanging(global::System.String value);
        partial void Oncard_issue_method_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean maker_checker_YN
        {
            get
            {
                return _maker_checker_YN;
            }
            set
            {
                Onmaker_checker_YNChanging(value);
                ReportPropertyChanging("maker_checker_YN");
                _maker_checker_YN = StructuralObject.SetValidValue(value, "maker_checker_YN");
                ReportPropertyChanged("maker_checker_YN");
                Onmaker_checker_YNChanged();
            }
        }
        private global::System.Boolean _maker_checker_YN;
        partial void Onmaker_checker_YNChanging(global::System.Boolean value);
        partial void Onmaker_checker_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String id_number
        {
            get
            {
                return _id_number;
            }
            set
            {
                Onid_numberChanging(value);
                ReportPropertyChanging("id_number");
                _id_number = StructuralObject.SetValidValue(value, true, "id_number");
                ReportPropertyChanged("id_number");
                Onid_numberChanged();
            }
        }
        private global::System.String _id_number;
        partial void Onid_numberChanging(global::System.String value);
        partial void Onid_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contact_number
        {
            get
            {
                return _contact_number;
            }
            set
            {
                Oncontact_numberChanging(value);
                ReportPropertyChanging("contact_number");
                _contact_number = StructuralObject.SetValidValue(value, true, "contact_number");
                ReportPropertyChanged("contact_number");
                Oncontact_numberChanged();
            }
        }
        private global::System.String _contact_number;
        partial void Oncontact_numberChanging(global::System.String value);
        partial void Oncontact_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comments
        {
            get
            {
                return _comments;
            }
            set
            {
                OncommentsChanging(value);
                ReportPropertyChanging("comments");
                _comments = StructuralObject.SetValidValue(value, true, "comments");
                ReportPropertyChanged("comments");
                OncommentsChanged();
            }
        }
        private global::System.String _comments;
        partial void OncommentsChanging(global::System.String value);
        partial void OncommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean authorise_pin_issue_YN
        {
            get
            {
                return _authorise_pin_issue_YN;
            }
            set
            {
                Onauthorise_pin_issue_YNChanging(value);
                ReportPropertyChanging("authorise_pin_issue_YN");
                _authorise_pin_issue_YN = StructuralObject.SetValidValue(value, "authorise_pin_issue_YN");
                ReportPropertyChanged("authorise_pin_issue_YN");
                Onauthorise_pin_issue_YNChanged();
            }
        }
        private global::System.Boolean _authorise_pin_issue_YN;
        partial void Onauthorise_pin_issue_YNChanging(global::System.Boolean value);
        partial void Onauthorise_pin_issue_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean enable_instant_pin_YN
        {
            get
            {
                return _enable_instant_pin_YN;
            }
            set
            {
                Onenable_instant_pin_YNChanging(value);
                ReportPropertyChanging("enable_instant_pin_YN");
                _enable_instant_pin_YN = StructuralObject.SetValidValue(value, "enable_instant_pin_YN");
                ReportPropertyChanged("enable_instant_pin_YN");
                Onenable_instant_pin_YNChanged();
            }
        }
        private global::System.Boolean _enable_instant_pin_YN;
        partial void Onenable_instant_pin_YNChanging(global::System.Boolean value);
        partial void Onenable_instant_pin_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean enable_instant_pin_YN_issuer
        {
            get
            {
                return _enable_instant_pin_YN_issuer;
            }
            set
            {
                Onenable_instant_pin_YN_issuerChanging(value);
                ReportPropertyChanging("enable_instant_pin_YN_issuer");
                _enable_instant_pin_YN_issuer = StructuralObject.SetValidValue(value, "enable_instant_pin_YN_issuer");
                ReportPropertyChanged("enable_instant_pin_YN_issuer");
                Onenable_instant_pin_YN_issuerChanged();
            }
        }
        private global::System.Boolean _enable_instant_pin_YN_issuer;
        partial void Onenable_instant_pin_YN_issuerChanging(global::System.Boolean value);
        partial void Onenable_instant_pin_YN_issuerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> pin_mailer_reprint_status_id
        {
            get
            {
                return _pin_mailer_reprint_status_id;
            }
            set
            {
                Onpin_mailer_reprint_status_idChanging(value);
                ReportPropertyChanging("pin_mailer_reprint_status_id");
                _pin_mailer_reprint_status_id = StructuralObject.SetValidValue(value, "pin_mailer_reprint_status_id");
                ReportPropertyChanged("pin_mailer_reprint_status_id");
                Onpin_mailer_reprint_status_idChanged();
            }
        }
        private Nullable<global::System.Int32> _pin_mailer_reprint_status_id;
        partial void Onpin_mailer_reprint_status_idChanging(Nullable<global::System.Int32> value);
        partial void Onpin_mailer_reprint_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String pin_mailer_reprint_status_name
        {
            get
            {
                return _pin_mailer_reprint_status_name;
            }
            set
            {
                Onpin_mailer_reprint_status_nameChanging(value);
                ReportPropertyChanging("pin_mailer_reprint_status_name");
                _pin_mailer_reprint_status_name = StructuralObject.SetValidValue(value, true, "pin_mailer_reprint_status_name");
                ReportPropertyChanged("pin_mailer_reprint_status_name");
                Onpin_mailer_reprint_status_nameChanged();
            }
        }
        private global::System.String _pin_mailer_reprint_status_name;
        partial void Onpin_mailer_reprint_status_nameChanging(global::System.String value);
        partial void Onpin_mailer_reprint_status_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean pin_mailer_reprint_YN
        {
            get
            {
                return _pin_mailer_reprint_YN;
            }
            set
            {
                Onpin_mailer_reprint_YNChanging(value);
                ReportPropertyChanging("pin_mailer_reprint_YN");
                _pin_mailer_reprint_YN = StructuralObject.SetValidValue(value, "pin_mailer_reprint_YN");
                ReportPropertyChanged("pin_mailer_reprint_YN");
                Onpin_mailer_reprint_YNChanged();
            }
        }
        private global::System.Boolean _pin_mailer_reprint_YN;
        partial void Onpin_mailer_reprint_YNChanging(global::System.Boolean value);
        partial void Onpin_mailer_reprint_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> fee_charged
        {
            get
            {
                return _fee_charged;
            }
            set
            {
                Onfee_chargedChanging(value);
                ReportPropertyChanging("fee_charged");
                _fee_charged = StructuralObject.SetValidValue(value, "fee_charged");
                ReportPropertyChanged("fee_charged");
                Onfee_chargedChanged();
            }
        }
        private Nullable<global::System.Decimal> _fee_charged;
        partial void Onfee_chargedChanging(Nullable<global::System.Decimal> value);
        partial void Onfee_chargedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> fee_waiver_YN
        {
            get
            {
                return _fee_waiver_YN;
            }
            set
            {
                Onfee_waiver_YNChanging(value);
                ReportPropertyChanging("fee_waiver_YN");
                _fee_waiver_YN = StructuralObject.SetValidValue(value, "fee_waiver_YN");
                ReportPropertyChanged("fee_waiver_YN");
                Onfee_waiver_YNChanged();
            }
        }
        private Nullable<global::System.Boolean> _fee_waiver_YN;
        partial void Onfee_waiver_YNChanging(Nullable<global::System.Boolean> value);
        partial void Onfee_waiver_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> fee_editable_YN
        {
            get
            {
                return _fee_editable_YN;
            }
            set
            {
                Onfee_editable_YNChanging(value);
                ReportPropertyChanging("fee_editable_YN");
                _fee_editable_YN = StructuralObject.SetValidValue(value, "fee_editable_YN");
                ReportPropertyChanged("fee_editable_YN");
                Onfee_editable_YNChanged();
            }
        }
        private Nullable<global::System.Boolean> _fee_editable_YN;
        partial void Onfee_editable_YNChanging(Nullable<global::System.Boolean> value);
        partial void Onfee_editable_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> fee_overridden_YN
        {
            get
            {
                return _fee_overridden_YN;
            }
            set
            {
                Onfee_overridden_YNChanging(value);
                ReportPropertyChanging("fee_overridden_YN");
                _fee_overridden_YN = StructuralObject.SetValidValue(value, "fee_overridden_YN");
                ReportPropertyChanged("fee_overridden_YN");
                Onfee_overridden_YNChanged();
            }
        }
        private Nullable<global::System.Boolean> _fee_overridden_YN;
        partial void Onfee_overridden_YNChanging(Nullable<global::System.Boolean> value);
        partial void Onfee_overridden_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_reference_number
        {
            get
            {
                return _fee_reference_number;
            }
            set
            {
                Onfee_reference_numberChanging(value);
                ReportPropertyChanging("fee_reference_number");
                _fee_reference_number = StructuralObject.SetValidValue(value, true, "fee_reference_number");
                ReportPropertyChanged("fee_reference_number");
                Onfee_reference_numberChanged();
            }
        }
        private global::System.String _fee_reference_number;
        partial void Onfee_reference_numberChanging(global::System.String value);
        partial void Onfee_reference_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_reversal_ref_number
        {
            get
            {
                return _fee_reversal_ref_number;
            }
            set
            {
                Onfee_reversal_ref_numberChanging(value);
                ReportPropertyChanging("fee_reversal_ref_number");
                _fee_reversal_ref_number = StructuralObject.SetValidValue(value, true, "fee_reversal_ref_number");
                ReportPropertyChanged("fee_reversal_ref_number");
                Onfee_reversal_ref_numberChanged();
            }
        }
        private global::System.String _fee_reversal_ref_number;
        partial void Onfee_reversal_ref_numberChanging(global::System.String value);
        partial void Onfee_reversal_ref_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean card_ref_preference
        {
            get
            {
                return _card_ref_preference;
            }
            set
            {
                Oncard_ref_preferenceChanging(value);
                ReportPropertyChanging("card_ref_preference");
                _card_ref_preference = StructuralObject.SetValidValue(value, "card_ref_preference");
                ReportPropertyChanged("card_ref_preference");
                Oncard_ref_preferenceChanged();
            }
        }
        private global::System.Boolean _card_ref_preference;
        partial void Oncard_ref_preferenceChanging(global::System.Boolean value);
        partial void Oncard_ref_preferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> domicile_branch_id
        {
            get
            {
                return _domicile_branch_id;
            }
            set
            {
                Ondomicile_branch_idChanging(value);
                ReportPropertyChanging("domicile_branch_id");
                _domicile_branch_id = StructuralObject.SetValidValue(value, "domicile_branch_id");
                ReportPropertyChanged("domicile_branch_id");
                Ondomicile_branch_idChanged();
            }
        }
        private Nullable<global::System.Int32> _domicile_branch_id;
        partial void Ondomicile_branch_idChanging(Nullable<global::System.Int32> value);
        partial void Ondomicile_branch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String domicile_branch_code
        {
            get
            {
                return _domicile_branch_code;
            }
            set
            {
                Ondomicile_branch_codeChanging(value);
                ReportPropertyChanging("domicile_branch_code");
                _domicile_branch_code = StructuralObject.SetValidValue(value, true, "domicile_branch_code");
                ReportPropertyChanged("domicile_branch_code");
                Ondomicile_branch_codeChanged();
            }
        }
        private global::System.String _domicile_branch_code;
        partial void Ondomicile_branch_codeChanging(global::System.String value);
        partial void Ondomicile_branch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String domicile_branch_name
        {
            get
            {
                return _domicile_branch_name;
            }
            set
            {
                Ondomicile_branch_nameChanging(value);
                ReportPropertyChanging("domicile_branch_name");
                _domicile_branch_name = StructuralObject.SetValidValue(value, true, "domicile_branch_name");
                ReportPropertyChanged("domicile_branch_name");
                Ondomicile_branch_nameChanged();
            }
        }
        private global::System.String _domicile_branch_name;
        partial void Ondomicile_branch_nameChanging(global::System.String value);
        partial void Ondomicile_branch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean back_office_pin_auth_YN
        {
            get
            {
                return _back_office_pin_auth_YN;
            }
            set
            {
                Onback_office_pin_auth_YNChanging(value);
                ReportPropertyChanging("back_office_pin_auth_YN");
                _back_office_pin_auth_YN = StructuralObject.SetValidValue(value, "back_office_pin_auth_YN");
                ReportPropertyChanged("back_office_pin_auth_YN");
                Onback_office_pin_auth_YNChanged();
            }
        }
        private global::System.Boolean _back_office_pin_auth_YN;
        partial void Onback_office_pin_auth_YNChanging(global::System.Boolean value);
        partial void Onback_office_pin_auth_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> pin_selected
        {
            get
            {
                return _pin_selected;
            }
            set
            {
                Onpin_selectedChanging(value);
                ReportPropertyChanging("pin_selected");
                _pin_selected = StructuralObject.SetValidValue(value, "pin_selected");
                ReportPropertyChanged("pin_selected");
                Onpin_selectedChanged();
            }
        }
        private Nullable<global::System.Boolean> _pin_selected;
        partial void Onpin_selectedChanging(Nullable<global::System.Boolean> value);
        partial void Onpin_selectedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String pvv
        {
            get
            {
                return _pvv;
            }
            set
            {
                OnpvvChanging(value);
                ReportPropertyChanging("pvv");
                _pvv = StructuralObject.SetValidValue(value, true, "pvv");
                ReportPropertyChanged("pvv");
                OnpvvChanged();
            }
        }
        private global::System.String _pvv;
        partial void OnpvvChanging(global::System.String value);
        partial void OnpvvChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String currency_code
        {
            get
            {
                return _currency_code;
            }
            set
            {
                Oncurrency_codeChanging(value);
                ReportPropertyChanging("currency_code");
                _currency_code = StructuralObject.SetValidValue(value, true, "currency_code");
                ReportPropertyChanged("currency_code");
                Oncurrency_codeChanged();
            }
        }
        private global::System.String _currency_code;
        partial void Oncurrency_codeChanging(global::System.String value);
        partial void Oncurrency_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String iso_4217_numeric_code
        {
            get
            {
                return _iso_4217_numeric_code;
            }
            set
            {
                Oniso_4217_numeric_codeChanging(value);
                ReportPropertyChanging("iso_4217_numeric_code");
                _iso_4217_numeric_code = StructuralObject.SetValidValue(value, true, "iso_4217_numeric_code");
                ReportPropertyChanged("iso_4217_numeric_code");
                Oniso_4217_numeric_codeChanged();
            }
        }
        private global::System.String _iso_4217_numeric_code;
        partial void Oniso_4217_numeric_codeChanging(global::System.String value);
        partial void Oniso_4217_numeric_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 country_id
        {
            get
            {
                return _country_id;
            }
            set
            {
                Oncountry_idChanging(value);
                ReportPropertyChanging("country_id");
                _country_id = StructuralObject.SetValidValue(value, "country_id");
                ReportPropertyChanged("country_id");
                Oncountry_idChanged();
            }
        }
        private global::System.Int32 _country_id;
        partial void Oncountry_idChanging(global::System.Int32 value);
        partial void Oncountry_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String country_code
        {
            get
            {
                return _country_code;
            }
            set
            {
                Oncountry_codeChanging(value);
                ReportPropertyChanging("country_code");
                _country_code = StructuralObject.SetValidValue(value, false, "country_code");
                ReportPropertyChanged("country_code");
                Oncountry_codeChanged();
            }
        }
        private global::System.String _country_code;
        partial void Oncountry_codeChanging(global::System.String value);
        partial void Oncountry_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String country_name
        {
            get
            {
                return _country_name;
            }
            set
            {
                Oncountry_nameChanging(value);
                ReportPropertyChanging("country_name");
                _country_name = StructuralObject.SetValidValue(value, false, "country_name");
                ReportPropertyChanged("country_name");
                Oncountry_nameChanged();
            }
        }
        private global::System.String _country_name;
        partial void Oncountry_nameChanging(global::System.String value);
        partial void Oncountry_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String country_capital_city
        {
            get
            {
                return _country_capital_city;
            }
            set
            {
                Oncountry_capital_cityChanging(value);
                ReportPropertyChanging("country_capital_city");
                _country_capital_city = StructuralObject.SetValidValue(value, true, "country_capital_city");
                ReportPropertyChanged("country_capital_city");
                Oncountry_capital_cityChanged();
            }
        }
        private global::System.String _country_capital_city;
        partial void Oncountry_capital_cityChanging(global::System.String value);
        partial void Oncountry_capital_cityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_bin_code
        {
            get
            {
                return _product_bin_code;
            }
            set
            {
                Onproduct_bin_codeChanging(value);
                ReportPropertyChanging("product_bin_code");
                _product_bin_code = StructuralObject.SetValidValue(value, false, "product_bin_code");
                ReportPropertyChanged("product_bin_code");
                Onproduct_bin_codeChanged();
            }
        }
        private global::System.String _product_bin_code;
        partial void Onproduct_bin_codeChanging(global::System.String value);
        partial void Onproduct_bin_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String sub_product_code
        {
            get
            {
                return _sub_product_code;
            }
            set
            {
                Onsub_product_codeChanging(value);
                ReportPropertyChanging("sub_product_code");
                _sub_product_code = StructuralObject.SetValidValue(value, true, "sub_product_code");
                ReportPropertyChanged("sub_product_code");
                Onsub_product_codeChanged();
            }
        }
        private global::System.String _sub_product_code;
        partial void Onsub_product_codeChanging(global::System.String value);
        partial void Onsub_product_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usr_field_name_1
        {
            get
            {
                return _usr_field_name_1;
            }
            set
            {
                Onusr_field_name_1Changing(value);
                ReportPropertyChanging("usr_field_name_1");
                _usr_field_name_1 = StructuralObject.SetValidValue(value, true, "usr_field_name_1");
                ReportPropertyChanged("usr_field_name_1");
                Onusr_field_name_1Changed();
            }
        }
        private global::System.String _usr_field_name_1;
        partial void Onusr_field_name_1Changing(global::System.String value);
        partial void Onusr_field_name_1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usr_field_val_1
        {
            get
            {
                return _usr_field_val_1;
            }
            set
            {
                Onusr_field_val_1Changing(value);
                ReportPropertyChanging("usr_field_val_1");
                _usr_field_val_1 = StructuralObject.SetValidValue(value, true, "usr_field_val_1");
                ReportPropertyChanged("usr_field_val_1");
                Onusr_field_val_1Changed();
            }
        }
        private global::System.String _usr_field_val_1;
        partial void Onusr_field_val_1Changing(global::System.String value);
        partial void Onusr_field_val_1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usr_field_name_2
        {
            get
            {
                return _usr_field_name_2;
            }
            set
            {
                Onusr_field_name_2Changing(value);
                ReportPropertyChanging("usr_field_name_2");
                _usr_field_name_2 = StructuralObject.SetValidValue(value, true, "usr_field_name_2");
                ReportPropertyChanged("usr_field_name_2");
                Onusr_field_name_2Changed();
            }
        }
        private global::System.String _usr_field_name_2;
        partial void Onusr_field_name_2Changing(global::System.String value);
        partial void Onusr_field_name_2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usr_field_val_2
        {
            get
            {
                return _usr_field_val_2;
            }
            set
            {
                Onusr_field_val_2Changing(value);
                ReportPropertyChanging("usr_field_val_2");
                _usr_field_val_2 = StructuralObject.SetValidValue(value, true, "usr_field_val_2");
                ReportPropertyChanged("usr_field_val_2");
                Onusr_field_val_2Changed();
            }
        }
        private global::System.String _usr_field_val_2;
        partial void Onusr_field_val_2Changing(global::System.String value);
        partial void Onusr_field_val_2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> is_base_currency
        {
            get
            {
                return _is_base_currency;
            }
            set
            {
                Onis_base_currencyChanging(value);
                ReportPropertyChanging("is_base_currency");
                _is_base_currency = StructuralObject.SetValidValue(value, "is_base_currency");
                ReportPropertyChanged("is_base_currency");
                Onis_base_currencyChanged();
            }
        }
        private Nullable<global::System.Boolean> _is_base_currency;
        partial void Onis_base_currencyChanging(Nullable<global::System.Boolean> value);
        partial void Onis_base_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String delivery_branch_code
        {
            get
            {
                return _delivery_branch_code;
            }
            set
            {
                Ondelivery_branch_codeChanging(value);
                ReportPropertyChanging("delivery_branch_code");
                _delivery_branch_code = StructuralObject.SetValidValue(value, false, "delivery_branch_code");
                ReportPropertyChanged("delivery_branch_code");
                Ondelivery_branch_codeChanged();
            }
        }
        private global::System.String _delivery_branch_code;
        partial void Ondelivery_branch_codeChanging(global::System.String value);
        partial void Ondelivery_branch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String delivery_branch_name
        {
            get
            {
                return _delivery_branch_name;
            }
            set
            {
                Ondelivery_branch_nameChanging(value);
                ReportPropertyChanging("delivery_branch_name");
                _delivery_branch_name = StructuralObject.SetValidValue(value, false, "delivery_branch_name");
                ReportPropertyChanged("delivery_branch_name");
                Ondelivery_branch_nameChanged();
            }
        }
        private global::System.String _delivery_branch_name;
        partial void Ondelivery_branch_nameChanging(global::System.String value);
        partial void Ondelivery_branch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean charge_fee_to_issuing_branch_YN
        {
            get
            {
                return _charge_fee_to_issuing_branch_YN;
            }
            set
            {
                Oncharge_fee_to_issuing_branch_YNChanging(value);
                ReportPropertyChanging("charge_fee_to_issuing_branch_YN");
                _charge_fee_to_issuing_branch_YN = StructuralObject.SetValidValue(value, "charge_fee_to_issuing_branch_YN");
                ReportPropertyChanged("charge_fee_to_issuing_branch_YN");
                Oncharge_fee_to_issuing_branch_YNChanged();
            }
        }
        private global::System.Boolean _charge_fee_to_issuing_branch_YN;
        partial void Oncharge_fee_to_issuing_branch_YNChanging(global::System.Boolean value);
        partial void Oncharge_fee_to_issuing_branch_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean print_issue_card_YN
        {
            get
            {
                return _print_issue_card_YN;
            }
            set
            {
                Onprint_issue_card_YNChanging(value);
                ReportPropertyChanging("print_issue_card_YN");
                _print_issue_card_YN = StructuralObject.SetValidValue(value, "print_issue_card_YN");
                ReportPropertyChanged("print_issue_card_YN");
                Onprint_issue_card_YNChanged();
            }
        }
        private global::System.Boolean _print_issue_card_YN;
        partial void Onprint_issue_card_YNChanging(global::System.Boolean value);
        partial void Onprint_issue_card_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                OnCustomerIdChanging(value);
                ReportPropertyChanging("CustomerId");
                _CustomerId = StructuralObject.SetValidValue(value, true, "CustomerId");
                ReportPropertyChanged("CustomerId");
                OnCustomerIdChanged();
            }
        }
        private global::System.String _CustomerId;
        partial void OnCustomerIdChanging(global::System.String value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> vat
        {
            get
            {
                return _vat;
            }
            set
            {
                OnvatChanging(value);
                ReportPropertyChanging("vat");
                _vat = StructuralObject.SetValidValue(value, "vat");
                ReportPropertyChanged("vat");
                OnvatChanged();
            }
        }
        private Nullable<global::System.Decimal> _vat;
        partial void OnvatChanging(Nullable<global::System.Decimal> value);
        partial void OnvatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> vat_charged
        {
            get
            {
                return _vat_charged;
            }
            set
            {
                Onvat_chargedChanging(value);
                ReportPropertyChanging("vat_charged");
                _vat_charged = StructuralObject.SetValidValue(value, "vat_charged");
                ReportPropertyChanged("vat_charged");
                Onvat_chargedChanged();
            }
        }
        private Nullable<global::System.Decimal> _vat_charged;
        partial void Onvat_chargedChanging(Nullable<global::System.Decimal> value);
        partial void Onvat_chargedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> total_charged
        {
            get
            {
                return _total_charged;
            }
            set
            {
                Ontotal_chargedChanging(value);
                ReportPropertyChanging("total_charged");
                _total_charged = StructuralObject.SetValidValue(value, "total_charged");
                ReportPropertyChanged("total_charged");
                Ontotal_chargedChanged();
            }
        }
        private Nullable<global::System.Decimal> _total_charged;
        partial void Ontotal_chargedChanging(Nullable<global::System.Decimal> value);
        partial void Ontotal_chargedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_account_no
        {
            get
            {
                return _fee_revenue_account_no;
            }
            set
            {
                Onfee_revenue_account_noChanging(value);
                ReportPropertyChanging("fee_revenue_account_no");
                _fee_revenue_account_no = StructuralObject.SetValidValue(value, true, "fee_revenue_account_no");
                ReportPropertyChanged("fee_revenue_account_no");
                Onfee_revenue_account_noChanged();
            }
        }
        private global::System.String _fee_revenue_account_no;
        partial void Onfee_revenue_account_noChanging(global::System.String value);
        partial void Onfee_revenue_account_noChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> fee_revenue_account_type_id
        {
            get
            {
                return _fee_revenue_account_type_id;
            }
            set
            {
                Onfee_revenue_account_type_idChanging(value);
                ReportPropertyChanging("fee_revenue_account_type_id");
                _fee_revenue_account_type_id = StructuralObject.SetValidValue(value, "fee_revenue_account_type_id");
                ReportPropertyChanged("fee_revenue_account_type_id");
                Onfee_revenue_account_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _fee_revenue_account_type_id;
        partial void Onfee_revenue_account_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onfee_revenue_account_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_branch_code
        {
            get
            {
                return _fee_revenue_branch_code;
            }
            set
            {
                Onfee_revenue_branch_codeChanging(value);
                ReportPropertyChanging("fee_revenue_branch_code");
                _fee_revenue_branch_code = StructuralObject.SetValidValue(value, true, "fee_revenue_branch_code");
                ReportPropertyChanged("fee_revenue_branch_code");
                Onfee_revenue_branch_codeChanged();
            }
        }
        private global::System.String _fee_revenue_branch_code;
        partial void Onfee_revenue_branch_codeChanging(global::System.String value);
        partial void Onfee_revenue_branch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_narration_en
        {
            get
            {
                return _fee_revenue_narration_en;
            }
            set
            {
                Onfee_revenue_narration_enChanging(value);
                ReportPropertyChanging("fee_revenue_narration_en");
                _fee_revenue_narration_en = StructuralObject.SetValidValue(value, true, "fee_revenue_narration_en");
                ReportPropertyChanged("fee_revenue_narration_en");
                Onfee_revenue_narration_enChanged();
            }
        }
        private global::System.String _fee_revenue_narration_en;
        partial void Onfee_revenue_narration_enChanging(global::System.String value);
        partial void Onfee_revenue_narration_enChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_narration_fr
        {
            get
            {
                return _fee_revenue_narration_fr;
            }
            set
            {
                Onfee_revenue_narration_frChanging(value);
                ReportPropertyChanging("fee_revenue_narration_fr");
                _fee_revenue_narration_fr = StructuralObject.SetValidValue(value, true, "fee_revenue_narration_fr");
                ReportPropertyChanged("fee_revenue_narration_fr");
                Onfee_revenue_narration_frChanged();
            }
        }
        private global::System.String _fee_revenue_narration_fr;
        partial void Onfee_revenue_narration_frChanging(global::System.String value);
        partial void Onfee_revenue_narration_frChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_narration_pt
        {
            get
            {
                return _fee_revenue_narration_pt;
            }
            set
            {
                Onfee_revenue_narration_ptChanging(value);
                ReportPropertyChanging("fee_revenue_narration_pt");
                _fee_revenue_narration_pt = StructuralObject.SetValidValue(value, true, "fee_revenue_narration_pt");
                ReportPropertyChanged("fee_revenue_narration_pt");
                Onfee_revenue_narration_ptChanged();
            }
        }
        private global::System.String _fee_revenue_narration_pt;
        partial void Onfee_revenue_narration_ptChanging(global::System.String value);
        partial void Onfee_revenue_narration_ptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_narration_es
        {
            get
            {
                return _fee_revenue_narration_es;
            }
            set
            {
                Onfee_revenue_narration_esChanging(value);
                ReportPropertyChanging("fee_revenue_narration_es");
                _fee_revenue_narration_es = StructuralObject.SetValidValue(value, true, "fee_revenue_narration_es");
                ReportPropertyChanged("fee_revenue_narration_es");
                Onfee_revenue_narration_esChanged();
            }
        }
        private global::System.String _fee_revenue_narration_es;
        partial void Onfee_revenue_narration_esChanging(global::System.String value);
        partial void Onfee_revenue_narration_esChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String vat_account_no
        {
            get
            {
                return _vat_account_no;
            }
            set
            {
                Onvat_account_noChanging(value);
                ReportPropertyChanging("vat_account_no");
                _vat_account_no = StructuralObject.SetValidValue(value, true, "vat_account_no");
                ReportPropertyChanged("vat_account_no");
                Onvat_account_noChanged();
            }
        }
        private global::System.String _vat_account_no;
        partial void Onvat_account_noChanging(global::System.String value);
        partial void Onvat_account_noChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> vat_account_type_id
        {
            get
            {
                return _vat_account_type_id;
            }
            set
            {
                Onvat_account_type_idChanging(value);
                ReportPropertyChanging("vat_account_type_id");
                _vat_account_type_id = StructuralObject.SetValidValue(value, "vat_account_type_id");
                ReportPropertyChanged("vat_account_type_id");
                Onvat_account_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _vat_account_type_id;
        partial void Onvat_account_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onvat_account_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String vat_account_branch_code
        {
            get
            {
                return _vat_account_branch_code;
            }
            set
            {
                Onvat_account_branch_codeChanging(value);
                ReportPropertyChanging("vat_account_branch_code");
                _vat_account_branch_code = StructuralObject.SetValidValue(value, true, "vat_account_branch_code");
                ReportPropertyChanged("vat_account_branch_code");
                Onvat_account_branch_codeChanged();
            }
        }
        private global::System.String _vat_account_branch_code;
        partial void Onvat_account_branch_codeChanging(global::System.String value);
        partial void Onvat_account_branch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String vat_narration_en
        {
            get
            {
                return _vat_narration_en;
            }
            set
            {
                Onvat_narration_enChanging(value);
                ReportPropertyChanging("vat_narration_en");
                _vat_narration_en = StructuralObject.SetValidValue(value, true, "vat_narration_en");
                ReportPropertyChanged("vat_narration_en");
                Onvat_narration_enChanged();
            }
        }
        private global::System.String _vat_narration_en;
        partial void Onvat_narration_enChanging(global::System.String value);
        partial void Onvat_narration_enChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String vat_narration_fr
        {
            get
            {
                return _vat_narration_fr;
            }
            set
            {
                Onvat_narration_frChanging(value);
                ReportPropertyChanging("vat_narration_fr");
                _vat_narration_fr = StructuralObject.SetValidValue(value, true, "vat_narration_fr");
                ReportPropertyChanged("vat_narration_fr");
                Onvat_narration_frChanged();
            }
        }
        private global::System.String _vat_narration_fr;
        partial void Onvat_narration_frChanging(global::System.String value);
        partial void Onvat_narration_frChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String vat_narration_pt
        {
            get
            {
                return _vat_narration_pt;
            }
            set
            {
                Onvat_narration_ptChanging(value);
                ReportPropertyChanging("vat_narration_pt");
                _vat_narration_pt = StructuralObject.SetValidValue(value, true, "vat_narration_pt");
                ReportPropertyChanged("vat_narration_pt");
                Onvat_narration_ptChanged();
            }
        }
        private global::System.String _vat_narration_pt;
        partial void Onvat_narration_ptChanging(global::System.String value);
        partial void Onvat_narration_ptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String vat_narration_es
        {
            get
            {
                return _vat_narration_es;
            }
            set
            {
                Onvat_narration_esChanging(value);
                ReportPropertyChanging("vat_narration_es");
                _vat_narration_es = StructuralObject.SetValidValue(value, true, "vat_narration_es");
                ReportPropertyChanged("vat_narration_es");
                Onvat_narration_esChanged();
            }
        }
        private global::System.String _vat_narration_es;
        partial void Onvat_narration_esChanging(global::System.String value);
        partial void Onvat_narration_esChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> language_id
        {
            get
            {
                return _language_id;
            }
            set
            {
                Onlanguage_idChanging(value);
                ReportPropertyChanging("language_id");
                _language_id = StructuralObject.SetValidValue(value, "language_id");
                ReportPropertyChanged("language_id");
                Onlanguage_idChanged();
            }
        }
        private Nullable<global::System.Int32> _language_id;
        partial void Onlanguage_idChanging(Nullable<global::System.Int32> value);
        partial void Onlanguage_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean allow_manual_uploaded_YN
        {
            get
            {
                return _allow_manual_uploaded_YN;
            }
            set
            {
                Onallow_manual_uploaded_YNChanging(value);
                ReportPropertyChanging("allow_manual_uploaded_YN");
                _allow_manual_uploaded_YN = StructuralObject.SetValidValue(value, "allow_manual_uploaded_YN");
                ReportPropertyChanged("allow_manual_uploaded_YN");
                Onallow_manual_uploaded_YNChanged();
            }
        }
        private global::System.Boolean _allow_manual_uploaded_YN;
        partial void Onallow_manual_uploaded_YNChanging(global::System.Boolean value);
        partial void Onallow_manual_uploaded_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean allow_reupload_YN
        {
            get
            {
                return _allow_reupload_YN;
            }
            set
            {
                Onallow_reupload_YNChanging(value);
                ReportPropertyChanging("allow_reupload_YN");
                _allow_reupload_YN = StructuralObject.SetValidValue(value, "allow_reupload_YN");
                ReportPropertyChanged("allow_reupload_YN");
                Onallow_reupload_YNChanged();
            }
        }
        private global::System.Boolean _allow_reupload_YN;
        partial void Onallow_reupload_YNChanging(global::System.Boolean value);
        partial void Onallow_reupload_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cms_account_type
        {
            get
            {
                return _cms_account_type;
            }
            set
            {
                Oncms_account_typeChanging(value);
                ReportPropertyChanging("cms_account_type");
                _cms_account_type = StructuralObject.SetValidValue(value, true, "cms_account_type");
                ReportPropertyChanged("cms_account_type");
                Oncms_account_typeChanged();
            }
        }
        private global::System.String _cms_account_type;
        partial void Oncms_account_typeChanging(global::System.String value);
        partial void Oncms_account_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cbs_account_type
        {
            get
            {
                return _cbs_account_type;
            }
            set
            {
                Oncbs_account_typeChanging(value);
                ReportPropertyChanging("cbs_account_type");
                _cbs_account_type = StructuralObject.SetValidValue(value, false, "cbs_account_type");
                ReportPropertyChanged("cbs_account_type");
                Oncbs_account_typeChanged();
            }
        }
        private global::System.String _cbs_account_type;
        partial void Oncbs_account_typeChanging(global::System.String value);
        partial void Oncbs_account_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_account_pin
        {
            get
            {
                return _customer_account_pin;
            }
            set
            {
                Oncustomer_account_pinChanging(value);
                ReportPropertyChanging("customer_account_pin");
                _customer_account_pin = StructuralObject.SetValidValue(value, true, "customer_account_pin");
                ReportPropertyChanged("customer_account_pin");
                Oncustomer_account_pinChanged();
            }
        }
        private global::System.String _customer_account_pin;
        partial void Oncustomer_account_pinChanging(global::System.String value);
        partial void Oncustomer_account_pinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_email
        {
            get
            {
                return _customer_email;
            }
            set
            {
                Oncustomer_emailChanging(value);
                ReportPropertyChanging("customer_email");
                _customer_email = StructuralObject.SetValidValue(value, true, "customer_email");
                ReportPropertyChanged("customer_email");
                Oncustomer_emailChanged();
            }
        }
        private global::System.String _customer_email;
        partial void Oncustomer_emailChanging(global::System.String value);
        partial void Oncustomer_emailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> renewal_detail_id
        {
            get
            {
                return _renewal_detail_id;
            }
            set
            {
                Onrenewal_detail_idChanging(value);
                ReportPropertyChanging("renewal_detail_id");
                _renewal_detail_id = StructuralObject.SetValidValue(value, "renewal_detail_id");
                ReportPropertyChanged("renewal_detail_id");
                Onrenewal_detail_idChanged();
            }
        }
        private Nullable<global::System.Int64> _renewal_detail_id;
        partial void Onrenewal_detail_idChanging(Nullable<global::System.Int64> value);
        partial void Onrenewal_detail_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_sequence
        {
            get
            {
                return _card_sequence;
            }
            set
            {
                Oncard_sequenceChanging(value);
                ReportPropertyChanging("card_sequence");
                _card_sequence = StructuralObject.SetValidValue(value, "card_sequence");
                ReportPropertyChanged("card_sequence");
                Oncard_sequenceChanged();
            }
        }
        private global::System.Int32 _card_sequence;
        partial void Oncard_sequenceChanging(global::System.Int32 value);
        partial void Oncard_sequenceChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="CardHistoryReference")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class CardHistoryReference : ComplexObject
    {
        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branch_card_statuses_name
        {
            get
            {
                return _branch_card_statuses_name;
            }
            set
            {
                Onbranch_card_statuses_nameChanging(value);
                ReportPropertyChanging("branch_card_statuses_name");
                _branch_card_statuses_name = StructuralObject.SetValidValue(value, true, "branch_card_statuses_name");
                ReportPropertyChanged("branch_card_statuses_name");
                Onbranch_card_statuses_nameChanged();
            }
        }
        private global::System.String _branch_card_statuses_name;
        partial void Onbranch_card_statuses_nameChanging(global::System.String value);
        partial void Onbranch_card_statuses_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> status_date
        {
            get
            {
                return _status_date;
            }
            set
            {
                Onstatus_dateChanging(value);
                ReportPropertyChanging("status_date");
                _status_date = StructuralObject.SetValidValue(value, "status_date");
                ReportPropertyChanged("status_date");
                Onstatus_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _status_date;
        partial void Onstatus_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onstatus_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="CardHistoryStatus")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class CardHistoryStatus : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CardHistoryStatus object.
        /// </summary>
        /// <param name="dist_batch_reference">Initial value of the dist_batch_reference property.</param>
        /// <param name="dist_batch_id">Initial value of the dist_batch_id property.</param>
        public static CardHistoryStatus CreateCardHistoryStatus(global::System.String dist_batch_reference, global::System.Int64 dist_batch_id)
        {
            CardHistoryStatus cardHistoryStatus = new CardHistoryStatus();
            cardHistoryStatus.dist_batch_reference = dist_batch_reference;
            cardHistoryStatus.dist_batch_id = dist_batch_id;
            return cardHistoryStatus;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String dist_batch_reference
        {
            get
            {
                return _dist_batch_reference;
            }
            set
            {
                Ondist_batch_referenceChanging(value);
                ReportPropertyChanging("dist_batch_reference");
                _dist_batch_reference = StructuralObject.SetValidValue(value, false, "dist_batch_reference");
                ReportPropertyChanged("dist_batch_reference");
                Ondist_batch_referenceChanged();
            }
        }
        private global::System.String _dist_batch_reference;
        partial void Ondist_batch_referenceChanging(global::System.String value);
        partial void Ondist_batch_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String dist_batch_type_name
        {
            get
            {
                return _dist_batch_type_name;
            }
            set
            {
                Ondist_batch_type_nameChanging(value);
                ReportPropertyChanging("dist_batch_type_name");
                _dist_batch_type_name = StructuralObject.SetValidValue(value, true, "dist_batch_type_name");
                ReportPropertyChanged("dist_batch_type_name");
                Ondist_batch_type_nameChanged();
            }
        }
        private global::System.String _dist_batch_type_name;
        partial void Ondist_batch_type_nameChanging(global::System.String value);
        partial void Ondist_batch_type_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 dist_batch_id
        {
            get
            {
                return _dist_batch_id;
            }
            set
            {
                Ondist_batch_idChanging(value);
                ReportPropertyChanging("dist_batch_id");
                _dist_batch_id = StructuralObject.SetValidValue(value, "dist_batch_id");
                ReportPropertyChanged("dist_batch_id");
                Ondist_batch_idChanged();
            }
        }
        private global::System.Int64 _dist_batch_id;
        partial void Ondist_batch_idChanging(global::System.Int64 value);
        partial void Ondist_batch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date_created
        {
            get
            {
                return _date_created;
            }
            set
            {
                Ondate_createdChanging(value);
                ReportPropertyChanging("date_created");
                _date_created = StructuralObject.SetValidValue(value, "date_created");
                ReportPropertyChanged("date_created");
                Ondate_createdChanged();
            }
        }
        private Nullable<global::System.DateTime> _date_created;
        partial void Ondate_createdChanging(Nullable<global::System.DateTime> value);
        partial void Ondate_createdChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="CardSearchResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class CardSearchResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CardSearchResult object.
        /// </summary>
        /// <param name="card_id">Initial value of the card_id property.</param>
        /// <param name="product_id">Initial value of the product_id property.</param>
        /// <param name="card_issue_method_id">Initial value of the card_issue_method_id property.</param>
        /// <param name="card_priority_id">Initial value of the card_priority_id property.</param>
        /// <param name="branch_card_statuses_id">Initial value of the branch_card_statuses_id property.</param>
        /// <param name="current_card_status">Initial value of the current_card_status property.</param>
        /// <param name="product_bin_code">Initial value of the product_bin_code property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        public static CardSearchResult CreateCardSearchResult(global::System.Int64 card_id, global::System.Int32 product_id, global::System.Int32 card_issue_method_id, global::System.Int32 card_priority_id, global::System.Int32 branch_card_statuses_id, global::System.String current_card_status, global::System.String product_bin_code, global::System.Int32 issuer_id, global::System.String issuer_name, global::System.String branch_name, global::System.String issuer_code, global::System.String branch_code, global::System.Int32 branch_id)
        {
            CardSearchResult cardSearchResult = new CardSearchResult();
            cardSearchResult.card_id = card_id;
            cardSearchResult.product_id = product_id;
            cardSearchResult.card_issue_method_id = card_issue_method_id;
            cardSearchResult.card_priority_id = card_priority_id;
            cardSearchResult.branch_card_statuses_id = branch_card_statuses_id;
            cardSearchResult.current_card_status = current_card_status;
            cardSearchResult.product_bin_code = product_bin_code;
            cardSearchResult.issuer_id = issuer_id;
            cardSearchResult.issuer_name = issuer_name;
            cardSearchResult.branch_name = branch_name;
            cardSearchResult.issuer_code = issuer_code;
            cardSearchResult.branch_code = branch_code;
            cardSearchResult.branch_id = branch_id;
            return cardSearchResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 card_id
        {
            get
            {
                return _card_id;
            }
            set
            {
                Oncard_idChanging(value);
                ReportPropertyChanging("card_id");
                _card_id = StructuralObject.SetValidValue(value, "card_id");
                ReportPropertyChanged("card_id");
                Oncard_idChanged();
            }
        }
        private global::System.Int64 _card_id;
        partial void Oncard_idChanging(global::System.Int64 value);
        partial void Oncard_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_request_reference
        {
            get
            {
                return _card_request_reference;
            }
            set
            {
                Oncard_request_referenceChanging(value);
                ReportPropertyChanging("card_request_reference");
                _card_request_reference = StructuralObject.SetValidValue(value, true, "card_request_reference");
                ReportPropertyChanged("card_request_reference");
                Oncard_request_referenceChanged();
            }
        }
        private global::System.String _card_request_reference;
        partial void Oncard_request_referenceChanging(global::System.String value);
        partial void Oncard_request_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private global::System.Int32 _product_id;
        partial void Onproduct_idChanging(global::System.Int32 value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_method_id
        {
            get
            {
                return _card_issue_method_id;
            }
            set
            {
                Oncard_issue_method_idChanging(value);
                ReportPropertyChanging("card_issue_method_id");
                _card_issue_method_id = StructuralObject.SetValidValue(value, "card_issue_method_id");
                ReportPropertyChanged("card_issue_method_id");
                Oncard_issue_method_idChanged();
            }
        }
        private global::System.Int32 _card_issue_method_id;
        partial void Oncard_issue_method_idChanging(global::System.Int32 value);
        partial void Oncard_issue_method_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_priority_id
        {
            get
            {
                return _card_priority_id;
            }
            set
            {
                Oncard_priority_idChanging(value);
                ReportPropertyChanging("card_priority_id");
                _card_priority_id = StructuralObject.SetValidValue(value, "card_priority_id");
                ReportPropertyChanged("card_priority_id");
                Oncard_priority_idChanged();
            }
        }
        private global::System.Int32 _card_priority_id;
        partial void Oncard_priority_idChanging(global::System.Int32 value);
        partial void Oncard_priority_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_card_statuses_id
        {
            get
            {
                return _branch_card_statuses_id;
            }
            set
            {
                Onbranch_card_statuses_idChanging(value);
                ReportPropertyChanging("branch_card_statuses_id");
                _branch_card_statuses_id = StructuralObject.SetValidValue(value, "branch_card_statuses_id");
                ReportPropertyChanged("branch_card_statuses_id");
                Onbranch_card_statuses_idChanged();
            }
        }
        private global::System.Int32 _branch_card_statuses_id;
        partial void Onbranch_card_statuses_idChanging(global::System.Int32 value);
        partial void Onbranch_card_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String current_card_status
        {
            get
            {
                return _current_card_status;
            }
            set
            {
                Oncurrent_card_statusChanging(value);
                ReportPropertyChanging("current_card_status");
                _current_card_status = StructuralObject.SetValidValue(value, false, "current_card_status");
                ReportPropertyChanged("current_card_status");
                Oncurrent_card_statusChanged();
            }
        }
        private global::System.String _current_card_status;
        partial void Oncurrent_card_statusChanging(global::System.String value);
        partial void Oncurrent_card_statusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> operator_user_id
        {
            get
            {
                return _operator_user_id;
            }
            set
            {
                Onoperator_user_idChanging(value);
                ReportPropertyChanging("operator_user_id");
                _operator_user_id = StructuralObject.SetValidValue(value, "operator_user_id");
                ReportPropertyChanged("operator_user_id");
                Onoperator_user_idChanged();
            }
        }
        private Nullable<global::System.Int64> _operator_user_id;
        partial void Onoperator_user_idChanging(Nullable<global::System.Int64> value);
        partial void Onoperator_user_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> status_date
        {
            get
            {
                return _status_date;
            }
            set
            {
                Onstatus_dateChanging(value);
                ReportPropertyChanging("status_date");
                _status_date = StructuralObject.SetValidValue(value, "status_date");
                ReportPropertyChanged("status_date");
                Onstatus_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _status_date;
        partial void Onstatus_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onstatus_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String operator_username
        {
            get
            {
                return _operator_username;
            }
            set
            {
                Onoperator_usernameChanging(value);
                ReportPropertyChanging("operator_username");
                _operator_username = StructuralObject.SetValidValue(value, true, "operator_username");
                ReportPropertyChanged("operator_username");
                Onoperator_usernameChanged();
            }
        }
        private global::System.String _operator_username;
        partial void Onoperator_usernameChanging(global::System.String value);
        partial void Onoperator_usernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_bin_code
        {
            get
            {
                return _product_bin_code;
            }
            set
            {
                Onproduct_bin_codeChanging(value);
                ReportPropertyChanging("product_bin_code");
                _product_bin_code = StructuralObject.SetValidValue(value, false, "product_bin_code");
                ReportPropertyChanged("product_bin_code");
                Onproduct_bin_codeChanged();
            }
        }
        private global::System.String _product_bin_code;
        partial void Onproduct_bin_codeChanging(global::System.String value);
        partial void Onproduct_bin_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int32 _branch_id;
        partial void Onbranch_idChanging(global::System.Int32 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comments
        {
            get
            {
                return _comments;
            }
            set
            {
                OncommentsChanging(value);
                ReportPropertyChanging("comments");
                _comments = StructuralObject.SetValidValue(value, true, "comments");
                ReportPropertyChanged("comments");
                OncommentsChanged();
            }
        }
        private global::System.String _comments;
        partial void OncommentsChanging(global::System.String value);
        partial void OncommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String sub_product_code
        {
            get
            {
                return _sub_product_code;
            }
            set
            {
                Onsub_product_codeChanging(value);
                ReportPropertyChanging("sub_product_code");
                _sub_product_code = StructuralObject.SetValidValue(value, true, "sub_product_code");
                ReportPropertyChanged("sub_product_code");
                Onsub_product_codeChanged();
            }
        }
        private global::System.String _sub_product_code;
        partial void Onsub_product_codeChanging(global::System.String value);
        partial void Onsub_product_codeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="CmsParametersResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class CmsParametersResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CmsParametersResult object.
        /// </summary>
        /// <param name="bANK_C">Initial value of the BANK_C property.</param>
        /// <param name="gROUPC">Initial value of the GROUPC property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="sTAT_CHANGE">Initial value of the STAT_CHANGE property.</param>
        /// <param name="lIM_INTR">Initial value of the LIM_INTR property.</param>
        /// <param name="nON_REDUCE_BAL">Initial value of the NON_REDUCE_BAL property.</param>
        /// <param name="cRD">Initial value of the CRD property.</param>
        /// <param name="cYCLE">Initial value of the CYCLE property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        /// <param name="product_code">Initial value of the product_code property.</param>
        /// <param name="product_bin_code">Initial value of the product_bin_code property.</param>
        /// <param name="cOND_SET">Initial value of the COND_SET property.</param>
        /// <param name="country_code">Initial value of the country_code property.</param>
        /// <param name="dEST_ACCNT_TYPE">Initial value of the DEST_ACCNT_TYPE property.</param>
        /// <param name="rEP_LANG">Initial value of the REP_LANG property.</param>
        public static CmsParametersResult CreateCmsParametersResult(global::System.String bANK_C, global::System.String gROUPC, global::System.Int32 issuer_id, global::System.String sTAT_CHANGE, global::System.Decimal lIM_INTR, global::System.Decimal nON_REDUCE_BAL, global::System.Decimal cRD, global::System.String cYCLE, global::System.String branch_code, global::System.String product_code, global::System.String product_bin_code, global::System.String cOND_SET, global::System.String country_code, global::System.Int32 dEST_ACCNT_TYPE, global::System.String rEP_LANG)
        {
            CmsParametersResult cmsParametersResult = new CmsParametersResult();
            cmsParametersResult.BANK_C = bANK_C;
            cmsParametersResult.GROUPC = gROUPC;
            cmsParametersResult.issuer_id = issuer_id;
            cmsParametersResult.STAT_CHANGE = sTAT_CHANGE;
            cmsParametersResult.LIM_INTR = lIM_INTR;
            cmsParametersResult.NON_REDUCE_BAL = nON_REDUCE_BAL;
            cmsParametersResult.CRD = cRD;
            cmsParametersResult.CYCLE = cYCLE;
            cmsParametersResult.branch_code = branch_code;
            cmsParametersResult.product_code = product_code;
            cmsParametersResult.product_bin_code = product_bin_code;
            cmsParametersResult.COND_SET = cOND_SET;
            cmsParametersResult.country_code = country_code;
            cmsParametersResult.DEST_ACCNT_TYPE = dEST_ACCNT_TYPE;
            cmsParametersResult.REP_LANG = rEP_LANG;
            return cmsParametersResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BANK_C
        {
            get
            {
                return _BANK_C;
            }
            set
            {
                OnBANK_CChanging(value);
                ReportPropertyChanging("BANK_C");
                _BANK_C = StructuralObject.SetValidValue(value, false, "BANK_C");
                ReportPropertyChanged("BANK_C");
                OnBANK_CChanged();
            }
        }
        private global::System.String _BANK_C;
        partial void OnBANK_CChanging(global::System.String value);
        partial void OnBANK_CChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GROUPC
        {
            get
            {
                return _GROUPC;
            }
            set
            {
                OnGROUPCChanging(value);
                ReportPropertyChanging("GROUPC");
                _GROUPC = StructuralObject.SetValidValue(value, false, "GROUPC");
                ReportPropertyChanged("GROUPC");
                OnGROUPCChanged();
            }
        }
        private global::System.String _GROUPC;
        partial void OnGROUPCChanging(global::System.String value);
        partial void OnGROUPCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String STAT_CHANGE
        {
            get
            {
                return _STAT_CHANGE;
            }
            set
            {
                OnSTAT_CHANGEChanging(value);
                ReportPropertyChanging("STAT_CHANGE");
                _STAT_CHANGE = StructuralObject.SetValidValue(value, false, "STAT_CHANGE");
                ReportPropertyChanged("STAT_CHANGE");
                OnSTAT_CHANGEChanged();
            }
        }
        private global::System.String _STAT_CHANGE;
        partial void OnSTAT_CHANGEChanging(global::System.String value);
        partial void OnSTAT_CHANGEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LIM_INTR
        {
            get
            {
                return _LIM_INTR;
            }
            set
            {
                OnLIM_INTRChanging(value);
                ReportPropertyChanging("LIM_INTR");
                _LIM_INTR = StructuralObject.SetValidValue(value, "LIM_INTR");
                ReportPropertyChanged("LIM_INTR");
                OnLIM_INTRChanged();
            }
        }
        private global::System.Decimal _LIM_INTR;
        partial void OnLIM_INTRChanging(global::System.Decimal value);
        partial void OnLIM_INTRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal NON_REDUCE_BAL
        {
            get
            {
                return _NON_REDUCE_BAL;
            }
            set
            {
                OnNON_REDUCE_BALChanging(value);
                ReportPropertyChanging("NON_REDUCE_BAL");
                _NON_REDUCE_BAL = StructuralObject.SetValidValue(value, "NON_REDUCE_BAL");
                ReportPropertyChanged("NON_REDUCE_BAL");
                OnNON_REDUCE_BALChanged();
            }
        }
        private global::System.Decimal _NON_REDUCE_BAL;
        partial void OnNON_REDUCE_BALChanging(global::System.Decimal value);
        partial void OnNON_REDUCE_BALChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CRD
        {
            get
            {
                return _CRD;
            }
            set
            {
                OnCRDChanging(value);
                ReportPropertyChanging("CRD");
                _CRD = StructuralObject.SetValidValue(value, "CRD");
                ReportPropertyChanged("CRD");
                OnCRDChanged();
            }
        }
        private global::System.Decimal _CRD;
        partial void OnCRDChanging(global::System.Decimal value);
        partial void OnCRDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CYCLE
        {
            get
            {
                return _CYCLE;
            }
            set
            {
                OnCYCLEChanging(value);
                ReportPropertyChanging("CYCLE");
                _CYCLE = StructuralObject.SetValidValue(value, false, "CYCLE");
                ReportPropertyChanged("CYCLE");
                OnCYCLEChanged();
            }
        }
        private global::System.String _CYCLE;
        partial void OnCYCLEChanging(global::System.String value);
        partial void OnCYCLEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_code
        {
            get
            {
                return _product_code;
            }
            set
            {
                Onproduct_codeChanging(value);
                ReportPropertyChanging("product_code");
                _product_code = StructuralObject.SetValidValue(value, false, "product_code");
                ReportPropertyChanged("product_code");
                Onproduct_codeChanged();
            }
        }
        private global::System.String _product_code;
        partial void Onproduct_codeChanging(global::System.String value);
        partial void Onproduct_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_bin_code
        {
            get
            {
                return _product_bin_code;
            }
            set
            {
                Onproduct_bin_codeChanging(value);
                ReportPropertyChanging("product_bin_code");
                _product_bin_code = StructuralObject.SetValidValue(value, false, "product_bin_code");
                ReportPropertyChanged("product_bin_code");
                Onproduct_bin_codeChanged();
            }
        }
        private global::System.String _product_bin_code;
        partial void Onproduct_bin_codeChanging(global::System.String value);
        partial void Onproduct_bin_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COND_SET
        {
            get
            {
                return _COND_SET;
            }
            set
            {
                OnCOND_SETChanging(value);
                ReportPropertyChanging("COND_SET");
                _COND_SET = StructuralObject.SetValidValue(value, false, "COND_SET");
                ReportPropertyChanged("COND_SET");
                OnCOND_SETChanged();
            }
        }
        private global::System.String _COND_SET;
        partial void OnCOND_SETChanging(global::System.String value);
        partial void OnCOND_SETChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String country_code
        {
            get
            {
                return _country_code;
            }
            set
            {
                Oncountry_codeChanging(value);
                ReportPropertyChanging("country_code");
                _country_code = StructuralObject.SetValidValue(value, false, "country_code");
                ReportPropertyChanged("country_code");
                Oncountry_codeChanged();
            }
        }
        private global::System.String _country_code;
        partial void Oncountry_codeChanging(global::System.String value);
        partial void Oncountry_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String country_capital_city
        {
            get
            {
                return _country_capital_city;
            }
            set
            {
                Oncountry_capital_cityChanging(value);
                ReportPropertyChanging("country_capital_city");
                _country_capital_city = StructuralObject.SetValidValue(value, true, "country_capital_city");
                ReportPropertyChanged("country_capital_city");
                Oncountry_capital_cityChanged();
            }
        }
        private global::System.String _country_capital_city;
        partial void Oncountry_capital_cityChanging(global::System.String value);
        partial void Oncountry_capital_cityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DEST_ACCNT_TYPE
        {
            get
            {
                return _DEST_ACCNT_TYPE;
            }
            set
            {
                OnDEST_ACCNT_TYPEChanging(value);
                ReportPropertyChanging("DEST_ACCNT_TYPE");
                _DEST_ACCNT_TYPE = StructuralObject.SetValidValue(value, "DEST_ACCNT_TYPE");
                ReportPropertyChanged("DEST_ACCNT_TYPE");
                OnDEST_ACCNT_TYPEChanged();
            }
        }
        private global::System.Int32 _DEST_ACCNT_TYPE;
        partial void OnDEST_ACCNT_TYPEChanging(global::System.Int32 value);
        partial void OnDEST_ACCNT_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String REP_LANG
        {
            get
            {
                return _REP_LANG;
            }
            set
            {
                OnREP_LANGChanging(value);
                ReportPropertyChanging("REP_LANG");
                _REP_LANG = StructuralObject.SetValidValue(value, false, "REP_LANG");
                ReportPropertyChanged("REP_LANG");
                OnREP_LANGChanged();
            }
        }
        private global::System.String _REP_LANG;
        partial void OnREP_LANGChanging(global::System.String value);
        partial void OnREP_LANGChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="ConnectionParamAdditionalDataResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ConnectionParamAdditionalDataResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConnectionParamAdditionalDataResult object.
        /// </summary>
        /// <param name="connection_parameter_id">Initial value of the connection_parameter_id property.</param>
        public static ConnectionParamAdditionalDataResult CreateConnectionParamAdditionalDataResult(global::System.Int32 connection_parameter_id)
        {
            ConnectionParamAdditionalDataResult connectionParamAdditionalDataResult = new ConnectionParamAdditionalDataResult();
            connectionParamAdditionalDataResult.connection_parameter_id = connection_parameter_id;
            return connectionParamAdditionalDataResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 connection_parameter_id
        {
            get
            {
                return _connection_parameter_id;
            }
            set
            {
                Onconnection_parameter_idChanging(value);
                ReportPropertyChanging("connection_parameter_id");
                _connection_parameter_id = StructuralObject.SetValidValue(value, "connection_parameter_id");
                ReportPropertyChanged("connection_parameter_id");
                Onconnection_parameter_idChanged();
            }
        }
        private global::System.Int32 _connection_parameter_id;
        partial void Onconnection_parameter_idChanging(global::System.Int32 value);
        partial void Onconnection_parameter_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String key
        {
            get
            {
                return _key;
            }
            set
            {
                OnkeyChanging(value);
                ReportPropertyChanging("key");
                _key = StructuralObject.SetValidValue(value, true, "key");
                ReportPropertyChanged("key");
                OnkeyChanged();
            }
        }
        private global::System.String _key;
        partial void OnkeyChanging(global::System.String value);
        partial void OnkeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, true, "value");
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.String _value;
        partial void OnvalueChanging(global::System.String value);
        partial void OnvalueChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="ConnectionParamsResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ConnectionParamsResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConnectionParamsResult object.
        /// </summary>
        /// <param name="connection_parameter_id">Initial value of the connection_parameter_id property.</param>
        /// <param name="connection_name">Initial value of the connection_name property.</param>
        /// <param name="address">Initial value of the address property.</param>
        /// <param name="port">Initial value of the port property.</param>
        /// <param name="path">Initial value of the path property.</param>
        /// <param name="auth_type">Initial value of the auth_type property.</param>
        /// <param name="connection_parameter_type_id">Initial value of the connection_parameter_type_id property.</param>
        public static ConnectionParamsResult CreateConnectionParamsResult(global::System.Int32 connection_parameter_id, global::System.String connection_name, global::System.String address, global::System.Int32 port, global::System.String path, global::System.Int32 auth_type, global::System.Int32 connection_parameter_type_id)
        {
            ConnectionParamsResult connectionParamsResult = new ConnectionParamsResult();
            connectionParamsResult.connection_parameter_id = connection_parameter_id;
            connectionParamsResult.connection_name = connection_name;
            connectionParamsResult.address = address;
            connectionParamsResult.port = port;
            connectionParamsResult.path = path;
            connectionParamsResult.auth_type = auth_type;
            connectionParamsResult.connection_parameter_type_id = connection_parameter_type_id;
            return connectionParamsResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 connection_parameter_id
        {
            get
            {
                return _connection_parameter_id;
            }
            set
            {
                Onconnection_parameter_idChanging(value);
                ReportPropertyChanging("connection_parameter_id");
                _connection_parameter_id = StructuralObject.SetValidValue(value, "connection_parameter_id");
                ReportPropertyChanged("connection_parameter_id");
                Onconnection_parameter_idChanged();
            }
        }
        private global::System.Int32 _connection_parameter_id;
        partial void Onconnection_parameter_idChanging(global::System.Int32 value);
        partial void Onconnection_parameter_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String connection_name
        {
            get
            {
                return _connection_name;
            }
            set
            {
                Onconnection_nameChanging(value);
                ReportPropertyChanging("connection_name");
                _connection_name = StructuralObject.SetValidValue(value, false, "connection_name");
                ReportPropertyChanged("connection_name");
                Onconnection_nameChanged();
            }
        }
        private global::System.String _connection_name;
        partial void Onconnection_nameChanging(global::System.String value);
        partial void Onconnection_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String address
        {
            get
            {
                return _address;
            }
            set
            {
                OnaddressChanging(value);
                ReportPropertyChanging("address");
                _address = StructuralObject.SetValidValue(value, false, "address");
                ReportPropertyChanged("address");
                OnaddressChanged();
            }
        }
        private global::System.String _address;
        partial void OnaddressChanging(global::System.String value);
        partial void OnaddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 port
        {
            get
            {
                return _port;
            }
            set
            {
                OnportChanging(value);
                ReportPropertyChanging("port");
                _port = StructuralObject.SetValidValue(value, "port");
                ReportPropertyChanged("port");
                OnportChanged();
            }
        }
        private global::System.Int32 _port;
        partial void OnportChanging(global::System.Int32 value);
        partial void OnportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String path
        {
            get
            {
                return _path;
            }
            set
            {
                OnpathChanging(value);
                ReportPropertyChanging("path");
                _path = StructuralObject.SetValidValue(value, false, "path");
                ReportPropertyChanged("path");
                OnpathChanged();
            }
        }
        private global::System.String _path;
        partial void OnpathChanging(global::System.String value);
        partial void OnpathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> protocol
        {
            get
            {
                return _protocol;
            }
            set
            {
                OnprotocolChanging(value);
                ReportPropertyChanging("protocol");
                _protocol = StructuralObject.SetValidValue(value, "protocol");
                ReportPropertyChanged("protocol");
                OnprotocolChanged();
            }
        }
        private Nullable<global::System.Int32> _protocol;
        partial void OnprotocolChanging(Nullable<global::System.Int32> value);
        partial void OnprotocolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 auth_type
        {
            get
            {
                return _auth_type;
            }
            set
            {
                Onauth_typeChanging(value);
                ReportPropertyChanging("auth_type");
                _auth_type = StructuralObject.SetValidValue(value, "auth_type");
                ReportPropertyChanged("auth_type");
                Onauth_typeChanged();
            }
        }
        private global::System.Int32 _auth_type;
        partial void Onauth_typeChanging(global::System.Int32 value);
        partial void Onauth_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, true, "password");
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> header_length
        {
            get
            {
                return _header_length;
            }
            set
            {
                Onheader_lengthChanging(value);
                ReportPropertyChanging("header_length");
                _header_length = StructuralObject.SetValidValue(value, "header_length");
                ReportPropertyChanged("header_length");
                Onheader_lengthChanged();
            }
        }
        private Nullable<global::System.Int32> _header_length;
        partial void Onheader_lengthChanging(Nullable<global::System.Int32> value);
        partial void Onheader_lengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String identification
        {
            get
            {
                return _identification;
            }
            set
            {
                OnidentificationChanging(value);
                ReportPropertyChanging("identification");
                _identification = StructuralObject.SetValidValue(value, true, "identification");
                ReportPropertyChanged("identification");
                OnidentificationChanged();
            }
        }
        private global::System.String _identification;
        partial void OnidentificationChanging(global::System.String value);
        partial void OnidentificationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 connection_parameter_type_id
        {
            get
            {
                return _connection_parameter_type_id;
            }
            set
            {
                Onconnection_parameter_type_idChanging(value);
                ReportPropertyChanging("connection_parameter_type_id");
                _connection_parameter_type_id = StructuralObject.SetValidValue(value, "connection_parameter_type_id");
                ReportPropertyChanged("connection_parameter_type_id");
                Onconnection_parameter_type_idChanged();
            }
        }
        private global::System.Int32 _connection_parameter_type_id;
        partial void Onconnection_parameter_type_idChanging(global::System.Int32 value);
        partial void Onconnection_parameter_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> timeout_milli
        {
            get
            {
                return _timeout_milli;
            }
            set
            {
                Ontimeout_milliChanging(value);
                ReportPropertyChanging("timeout_milli");
                _timeout_milli = StructuralObject.SetValidValue(value, "timeout_milli");
                ReportPropertyChanged("timeout_milli");
                Ontimeout_milliChanged();
            }
        }
        private Nullable<global::System.Int32> _timeout_milli;
        partial void Ontimeout_milliChanging(Nullable<global::System.Int32> value);
        partial void Ontimeout_milliChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> buffer_size
        {
            get
            {
                return _buffer_size;
            }
            set
            {
                Onbuffer_sizeChanging(value);
                ReportPropertyChanging("buffer_size");
                _buffer_size = StructuralObject.SetValidValue(value, "buffer_size");
                ReportPropertyChanged("buffer_size");
                Onbuffer_sizeChanged();
            }
        }
        private Nullable<global::System.Int32> _buffer_size;
        partial void Onbuffer_sizeChanging(Nullable<global::System.Int32> value);
        partial void Onbuffer_sizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String doc_type
        {
            get
            {
                return _doc_type;
            }
            set
            {
                Ondoc_typeChanging(value);
                ReportPropertyChanging("doc_type");
                _doc_type = StructuralObject.SetValidValue(value, true, "doc_type");
                ReportPropertyChanged("doc_type");
                Ondoc_typeChanged();
            }
        }
        private global::System.String _doc_type;
        partial void Ondoc_typeChanging(global::System.String value);
        partial void Ondoc_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name_of_file
        {
            get
            {
                return _name_of_file;
            }
            set
            {
                Onname_of_fileChanging(value);
                ReportPropertyChanging("name_of_file");
                _name_of_file = StructuralObject.SetValidValue(value, true, "name_of_file");
                ReportPropertyChanged("name_of_file");
                Onname_of_fileChanged();
            }
        }
        private global::System.String _name_of_file;
        partial void Onname_of_fileChanging(global::System.String value);
        partial void Onname_of_fileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> file_delete_YN
        {
            get
            {
                return _file_delete_YN;
            }
            set
            {
                Onfile_delete_YNChanging(value);
                ReportPropertyChanging("file_delete_YN");
                _file_delete_YN = StructuralObject.SetValidValue(value, "file_delete_YN");
                ReportPropertyChanged("file_delete_YN");
                Onfile_delete_YNChanged();
            }
        }
        private Nullable<global::System.Boolean> _file_delete_YN;
        partial void Onfile_delete_YNChanging(Nullable<global::System.Boolean> value);
        partial void Onfile_delete_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> file_encryption_type_id
        {
            get
            {
                return _file_encryption_type_id;
            }
            set
            {
                Onfile_encryption_type_idChanging(value);
                ReportPropertyChanging("file_encryption_type_id");
                _file_encryption_type_id = StructuralObject.SetValidValue(value, "file_encryption_type_id");
                ReportPropertyChanged("file_encryption_type_id");
                Onfile_encryption_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _file_encryption_type_id;
        partial void Onfile_encryption_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onfile_encryption_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> duplicate_file_check_YN
        {
            get
            {
                return _duplicate_file_check_YN;
            }
            set
            {
                Onduplicate_file_check_YNChanging(value);
                ReportPropertyChanging("duplicate_file_check_YN");
                _duplicate_file_check_YN = StructuralObject.SetValidValue(value, "duplicate_file_check_YN");
                ReportPropertyChanged("duplicate_file_check_YN");
                Onduplicate_file_check_YNChanged();
            }
        }
        private Nullable<global::System.Boolean> _duplicate_file_check_YN;
        partial void Onduplicate_file_check_YNChanging(Nullable<global::System.Boolean> value);
        partial void Onduplicate_file_check_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String private_key
        {
            get
            {
                return _private_key;
            }
            set
            {
                Onprivate_keyChanging(value);
                ReportPropertyChanging("private_key");
                _private_key = StructuralObject.SetValidValue(value, true, "private_key");
                ReportPropertyChanged("private_key");
                Onprivate_keyChanged();
            }
        }
        private global::System.String _private_key;
        partial void Onprivate_keyChanging(global::System.String value);
        partial void Onprivate_keyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String public_key
        {
            get
            {
                return _public_key;
            }
            set
            {
                Onpublic_keyChanging(value);
                ReportPropertyChanging("public_key");
                _public_key = StructuralObject.SetValidValue(value, true, "public_key");
                ReportPropertyChanged("public_key");
                Onpublic_keyChanged();
            }
        }
        private global::System.String _public_key;
        partial void Onpublic_keyChanging(global::System.String value);
        partial void Onpublic_keyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String domain_name
        {
            get
            {
                return _domain_name;
            }
            set
            {
                Ondomain_nameChanging(value);
                ReportPropertyChanging("domain_name");
                _domain_name = StructuralObject.SetValidValue(value, true, "domain_name");
                ReportPropertyChanged("domain_name");
                Ondomain_nameChanged();
            }
        }
        private global::System.String _domain_name;
        partial void Ondomain_nameChanging(global::System.String value);
        partial void Ondomain_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> is_external_auth
        {
            get
            {
                return _is_external_auth;
            }
            set
            {
                Onis_external_authChanging(value);
                ReportPropertyChanging("is_external_auth");
                _is_external_auth = StructuralObject.SetValidValue(value, "is_external_auth");
                ReportPropertyChanged("is_external_auth");
                Onis_external_authChanged();
            }
        }
        private Nullable<global::System.Boolean> _is_external_auth;
        partial void Onis_external_authChanging(Nullable<global::System.Boolean> value);
        partial void Onis_external_authChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> remote_port
        {
            get
            {
                return _remote_port;
            }
            set
            {
                Onremote_portChanging(value);
                ReportPropertyChanging("remote_port");
                _remote_port = StructuralObject.SetValidValue(value, "remote_port");
                ReportPropertyChanged("remote_port");
                Onremote_portChanged();
            }
        }
        private Nullable<global::System.Int32> _remote_port;
        partial void Onremote_portChanging(Nullable<global::System.Int32> value);
        partial void Onremote_portChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String remote_username
        {
            get
            {
                return _remote_username;
            }
            set
            {
                Onremote_usernameChanging(value);
                ReportPropertyChanging("remote_username");
                _remote_username = StructuralObject.SetValidValue(value, true, "remote_username");
                ReportPropertyChanged("remote_username");
                Onremote_usernameChanged();
            }
        }
        private global::System.String _remote_username;
        partial void Onremote_usernameChanging(global::System.String value);
        partial void Onremote_usernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String remote_password
        {
            get
            {
                return _remote_password;
            }
            set
            {
                Onremote_passwordChanging(value);
                ReportPropertyChanging("remote_password");
                _remote_password = StructuralObject.SetValidValue(value, true, "remote_password");
                ReportPropertyChanged("remote_password");
                Onremote_passwordChanged();
            }
        }
        private global::System.String _remote_password;
        partial void Onremote_passwordChanging(global::System.String value);
        partial void Onremote_passwordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String nonce
        {
            get
            {
                return _nonce;
            }
            set
            {
                OnnonceChanging(value);
                ReportPropertyChanging("nonce");
                _nonce = StructuralObject.SetValidValue(value, true, "nonce");
                ReportPropertyChanged("nonce");
                OnnonceChanged();
            }
        }
        private global::System.String _nonce;
        partial void OnnonceChanging(global::System.String value);
        partial void OnnonceChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="CreatedExportBatchResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class CreatedExportBatchResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CreatedExportBatchResult object.
        /// </summary>
        /// <param name="export_batch_id">Initial value of the export_batch_id property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="batch_reference">Initial value of the batch_reference property.</param>
        /// <param name="date_created">Initial value of the date_created property.</param>
        /// <param name="no_cards">Initial value of the no_cards property.</param>
        public static CreatedExportBatchResult CreateCreatedExportBatchResult(global::System.Int64 export_batch_id, global::System.Int32 issuer_id, global::System.String batch_reference, global::System.DateTimeOffset date_created, global::System.Int32 no_cards)
        {
            CreatedExportBatchResult createdExportBatchResult = new CreatedExportBatchResult();
            createdExportBatchResult.export_batch_id = export_batch_id;
            createdExportBatchResult.issuer_id = issuer_id;
            createdExportBatchResult.batch_reference = batch_reference;
            createdExportBatchResult.date_created = date_created;
            createdExportBatchResult.no_cards = no_cards;
            return createdExportBatchResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 export_batch_id
        {
            get
            {
                return _export_batch_id;
            }
            set
            {
                Onexport_batch_idChanging(value);
                ReportPropertyChanging("export_batch_id");
                _export_batch_id = StructuralObject.SetValidValue(value, "export_batch_id");
                ReportPropertyChanged("export_batch_id");
                Onexport_batch_idChanged();
            }
        }
        private global::System.Int64 _export_batch_id;
        partial void Onexport_batch_idChanging(global::System.Int64 value);
        partial void Onexport_batch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String batch_reference
        {
            get
            {
                return _batch_reference;
            }
            set
            {
                Onbatch_referenceChanging(value);
                ReportPropertyChanging("batch_reference");
                _batch_reference = StructuralObject.SetValidValue(value, false, "batch_reference");
                ReportPropertyChanged("batch_reference");
                Onbatch_referenceChanged();
            }
        }
        private global::System.String _batch_reference;
        partial void Onbatch_referenceChanging(global::System.String value);
        partial void Onbatch_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset date_created
        {
            get
            {
                return _date_created;
            }
            set
            {
                Ondate_createdChanging(value);
                ReportPropertyChanging("date_created");
                _date_created = StructuralObject.SetValidValue(value, "date_created");
                ReportPropertyChanged("date_created");
                Ondate_createdChanged();
            }
        }
        private global::System.DateTimeOffset _date_created;
        partial void Ondate_createdChanging(global::System.DateTimeOffset value);
        partial void Ondate_createdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 no_cards
        {
            get
            {
                return _no_cards;
            }
            set
            {
                Onno_cardsChanging(value);
                ReportPropertyChanging("no_cards");
                _no_cards = StructuralObject.SetValidValue(value, "no_cards");
                ReportPropertyChanged("no_cards");
                Onno_cardsChanged();
            }
        }
        private global::System.Int32 _no_cards;
        partial void Onno_cardsChanging(global::System.Int32 value);
        partial void Onno_cardsChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="CustomerAccountResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class CustomerAccountResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerAccountResult object.
        /// </summary>
        /// <param name="customer_account_id">Initial value of the customer_account_id property.</param>
        /// <param name="card_issue_reason_id">Initial value of the card_issue_reason_id property.</param>
        /// <param name="card_issuer_reason_name">Initial value of the card_issuer_reason_name property.</param>
        /// <param name="customer_account_type_id">Initial value of the customer_account_type_id property.</param>
        /// <param name="customer_account_type_name">Initial value of the customer_account_type_name property.</param>
        /// <param name="customer_title">Initial value of the customer_title property.</param>
        /// <param name="date_issued">Initial value of the date_issued property.</param>
        /// <param name="user_id">Initial value of the user_id property.</param>
        public static CustomerAccountResult CreateCustomerAccountResult(global::System.Int64 customer_account_id, global::System.Int32 card_issue_reason_id, global::System.String card_issuer_reason_name, global::System.Int32 customer_account_type_id, global::System.String customer_account_type_name, global::System.String customer_title, global::System.DateTime date_issued, global::System.Int64 user_id)
        {
            CustomerAccountResult customerAccountResult = new CustomerAccountResult();
            customerAccountResult.customer_account_id = customer_account_id;
            customerAccountResult.card_issue_reason_id = card_issue_reason_id;
            customerAccountResult.card_issuer_reason_name = card_issuer_reason_name;
            customerAccountResult.customer_account_type_id = customer_account_type_id;
            customerAccountResult.customer_account_type_name = customer_account_type_name;
            customerAccountResult.customer_title = customer_title;
            customerAccountResult.date_issued = date_issued;
            customerAccountResult.user_id = user_id;
            return customerAccountResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 customer_account_id
        {
            get
            {
                return _customer_account_id;
            }
            set
            {
                Oncustomer_account_idChanging(value);
                ReportPropertyChanging("customer_account_id");
                _customer_account_id = StructuralObject.SetValidValue(value, "customer_account_id");
                ReportPropertyChanged("customer_account_id");
                Oncustomer_account_idChanged();
            }
        }
        private global::System.Int64 _customer_account_id;
        partial void Oncustomer_account_idChanging(global::System.Int64 value);
        partial void Oncustomer_account_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_account_number
        {
            get
            {
                return _customer_account_number;
            }
            set
            {
                Oncustomer_account_numberChanging(value);
                ReportPropertyChanging("customer_account_number");
                _customer_account_number = StructuralObject.SetValidValue(value, true, "customer_account_number");
                ReportPropertyChanged("customer_account_number");
                Oncustomer_account_numberChanged();
            }
        }
        private global::System.String _customer_account_number;
        partial void Oncustomer_account_numberChanging(global::System.String value);
        partial void Oncustomer_account_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_reason_id
        {
            get
            {
                return _card_issue_reason_id;
            }
            set
            {
                Oncard_issue_reason_idChanging(value);
                ReportPropertyChanging("card_issue_reason_id");
                _card_issue_reason_id = StructuralObject.SetValidValue(value, "card_issue_reason_id");
                ReportPropertyChanged("card_issue_reason_id");
                Oncard_issue_reason_idChanged();
            }
        }
        private global::System.Int32 _card_issue_reason_id;
        partial void Oncard_issue_reason_idChanging(global::System.Int32 value);
        partial void Oncard_issue_reason_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String card_issuer_reason_name
        {
            get
            {
                return _card_issuer_reason_name;
            }
            set
            {
                Oncard_issuer_reason_nameChanging(value);
                ReportPropertyChanging("card_issuer_reason_name");
                _card_issuer_reason_name = StructuralObject.SetValidValue(value, false, "card_issuer_reason_name");
                ReportPropertyChanged("card_issuer_reason_name");
                Oncard_issuer_reason_nameChanged();
            }
        }
        private global::System.String _card_issuer_reason_name;
        partial void Oncard_issuer_reason_nameChanging(global::System.String value);
        partial void Oncard_issuer_reason_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 customer_account_type_id
        {
            get
            {
                return _customer_account_type_id;
            }
            set
            {
                Oncustomer_account_type_idChanging(value);
                ReportPropertyChanging("customer_account_type_id");
                _customer_account_type_id = StructuralObject.SetValidValue(value, "customer_account_type_id");
                ReportPropertyChanged("customer_account_type_id");
                Oncustomer_account_type_idChanged();
            }
        }
        private global::System.Int32 _customer_account_type_id;
        partial void Oncustomer_account_type_idChanging(global::System.Int32 value);
        partial void Oncustomer_account_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String customer_account_type_name
        {
            get
            {
                return _customer_account_type_name;
            }
            set
            {
                Oncustomer_account_type_nameChanging(value);
                ReportPropertyChanging("customer_account_type_name");
                _customer_account_type_name = StructuralObject.SetValidValue(value, false, "customer_account_type_name");
                ReportPropertyChanged("customer_account_type_name");
                Oncustomer_account_type_nameChanged();
            }
        }
        private global::System.String _customer_account_type_name;
        partial void Oncustomer_account_type_nameChanging(global::System.String value);
        partial void Oncustomer_account_type_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_first_name
        {
            get
            {
                return _customer_first_name;
            }
            set
            {
                Oncustomer_first_nameChanging(value);
                ReportPropertyChanging("customer_first_name");
                _customer_first_name = StructuralObject.SetValidValue(value, true, "customer_first_name");
                ReportPropertyChanged("customer_first_name");
                Oncustomer_first_nameChanged();
            }
        }
        private global::System.String _customer_first_name;
        partial void Oncustomer_first_nameChanging(global::System.String value);
        partial void Oncustomer_first_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_last_name
        {
            get
            {
                return _customer_last_name;
            }
            set
            {
                Oncustomer_last_nameChanging(value);
                ReportPropertyChanging("customer_last_name");
                _customer_last_name = StructuralObject.SetValidValue(value, true, "customer_last_name");
                ReportPropertyChanged("customer_last_name");
                Oncustomer_last_nameChanged();
            }
        }
        private global::System.String _customer_last_name;
        partial void Oncustomer_last_nameChanging(global::System.String value);
        partial void Oncustomer_last_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String customer_title
        {
            get
            {
                return _customer_title;
            }
            set
            {
                Oncustomer_titleChanging(value);
                ReportPropertyChanging("customer_title");
                _customer_title = StructuralObject.SetValidValue(value, false, "customer_title");
                ReportPropertyChanged("customer_title");
                Oncustomer_titleChanged();
            }
        }
        private global::System.String _customer_title;
        partial void Oncustomer_titleChanging(global::System.String value);
        partial void Oncustomer_titleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date_issued
        {
            get
            {
                return _date_issued;
            }
            set
            {
                Ondate_issuedChanging(value);
                ReportPropertyChanging("date_issued");
                _date_issued = StructuralObject.SetValidValue(value, "date_issued");
                ReportPropertyChanged("date_issued");
                Ondate_issuedChanged();
            }
        }
        private global::System.DateTime _date_issued;
        partial void Ondate_issuedChanging(global::System.DateTime value);
        partial void Ondate_issuedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name_on_card
        {
            get
            {
                return _name_on_card;
            }
            set
            {
                Onname_on_cardChanging(value);
                ReportPropertyChanging("name_on_card");
                _name_on_card = StructuralObject.SetValidValue(value, true, "name_on_card");
                ReportPropertyChanged("name_on_card");
                Onname_on_cardChanged();
            }
        }
        private global::System.String _name_on_card;
        partial void Onname_on_cardChanging(global::System.String value);
        partial void Onname_on_cardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value, "user_id");
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int64 _user_id;
        partial void Onuser_idChanging(global::System.Int64 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_first_name
        {
            get
            {
                return _user_first_name;
            }
            set
            {
                Onuser_first_nameChanging(value);
                ReportPropertyChanging("user_first_name");
                _user_first_name = StructuralObject.SetValidValue(value, true, "user_first_name");
                ReportPropertyChanged("user_first_name");
                Onuser_first_nameChanged();
            }
        }
        private global::System.String _user_first_name;
        partial void Onuser_first_nameChanging(global::System.String value);
        partial void Onuser_first_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_last_name
        {
            get
            {
                return _user_last_name;
            }
            set
            {
                Onuser_last_nameChanging(value);
                ReportPropertyChanging("user_last_name");
                _user_last_name = StructuralObject.SetValidValue(value, true, "user_last_name");
                ReportPropertyChanged("user_last_name");
                Onuser_last_nameChanged();
            }
        }
        private global::System.String _user_last_name;
        partial void Onuser_last_nameChanging(global::System.String value);
        partial void Onuser_last_nameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="CustomercardsearchResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class CustomercardsearchResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomercardsearchResult object.
        /// </summary>
        /// <param name="product_name">Initial value of the product_name property.</param>
        /// <param name="card_id">Initial value of the card_id property.</param>
        public static CustomercardsearchResult CreateCustomercardsearchResult(global::System.String product_name, global::System.Int64 card_id)
        {
            CustomercardsearchResult customercardsearchResult = new CustomercardsearchResult();
            customercardsearchResult.product_name = product_name;
            customercardsearchResult.card_id = card_id;
            return customercardsearchResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_name
        {
            get
            {
                return _product_name;
            }
            set
            {
                Onproduct_nameChanging(value);
                ReportPropertyChanging("product_name");
                _product_name = StructuralObject.SetValidValue(value, false, "product_name");
                ReportPropertyChanged("product_name");
                Onproduct_nameChanged();
            }
        }
        private global::System.String _product_name;
        partial void Onproduct_nameChanging(global::System.String value);
        partial void Onproduct_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, true, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, true, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 card_id
        {
            get
            {
                return _card_id;
            }
            set
            {
                Oncard_idChanging(value);
                ReportPropertyChanging("card_id");
                _card_id = StructuralObject.SetValidValue(value, "card_id");
                ReportPropertyChanged("card_id");
                Oncard_idChanged();
            }
        }
        private global::System.Int64 _card_id;
        partial void Oncard_idChanging(global::System.Int64 value);
        partial void Oncard_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String account_number
        {
            get
            {
                return _account_number;
            }
            set
            {
                Onaccount_numberChanging(value);
                ReportPropertyChanging("account_number");
                _account_number = StructuralObject.SetValidValue(value, true, "account_number");
                ReportPropertyChanged("account_number");
                Onaccount_numberChanged();
            }
        }
        private global::System.String _account_number;
        partial void Onaccount_numberChanging(global::System.String value);
        partial void Onaccount_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_reference_number
        {
            get
            {
                return _card_reference_number;
            }
            set
            {
                Oncard_reference_numberChanging(value);
                ReportPropertyChanging("card_reference_number");
                _card_reference_number = StructuralObject.SetValidValue(value, true, "card_reference_number");
                ReportPropertyChanged("card_reference_number");
                Oncard_reference_numberChanged();
            }
        }
        private global::System.String _card_reference_number;
        partial void Oncard_reference_numberChanging(global::System.String value);
        partial void Oncard_reference_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> renewal_detail_id
        {
            get
            {
                return _renewal_detail_id;
            }
            set
            {
                Onrenewal_detail_idChanging(value);
                ReportPropertyChanging("renewal_detail_id");
                _renewal_detail_id = StructuralObject.SetValidValue(value, "renewal_detail_id");
                ReportPropertyChanged("renewal_detail_id");
                Onrenewal_detail_idChanged();
            }
        }
        private Nullable<global::System.Int64> _renewal_detail_id;
        partial void Onrenewal_detail_idChanging(Nullable<global::System.Int64> value);
        partial void Onrenewal_detail_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="CustomerDetailsResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class CustomerDetailsResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerDetailsResult object.
        /// </summary>
        /// <param name="customer_account_id">Initial value of the customer_account_id property.</param>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="card_id">Initial value of the card_id property.</param>
        /// <param name="card_issue_reason_id">Initial value of the card_issue_reason_id property.</param>
        /// <param name="account_type_id">Initial value of the account_type_id property.</param>
        /// <param name="currency_id">Initial value of the currency_id property.</param>
        /// <param name="resident_id">Initial value of the resident_id property.</param>
        /// <param name="customer_type_id">Initial value of the customer_type_id property.</param>
        /// <param name="domicile_branch_id">Initial value of the domicile_branch_id property.</param>
        public static CustomerDetailsResult CreateCustomerDetailsResult(global::System.Int64 customer_account_id, global::System.Int64 user_id, global::System.Int64 card_id, global::System.Int32 card_issue_reason_id, global::System.Int32 account_type_id, global::System.Int32 currency_id, global::System.Int32 resident_id, global::System.Int32 customer_type_id, global::System.Int32 domicile_branch_id)
        {
            CustomerDetailsResult customerDetailsResult = new CustomerDetailsResult();
            customerDetailsResult.customer_account_id = customer_account_id;
            customerDetailsResult.user_id = user_id;
            customerDetailsResult.card_id = card_id;
            customerDetailsResult.card_issue_reason_id = card_issue_reason_id;
            customerDetailsResult.account_type_id = account_type_id;
            customerDetailsResult.currency_id = currency_id;
            customerDetailsResult.resident_id = resident_id;
            customerDetailsResult.customer_type_id = customer_type_id;
            customerDetailsResult.domicile_branch_id = domicile_branch_id;
            return customerDetailsResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 customer_account_id
        {
            get
            {
                return _customer_account_id;
            }
            set
            {
                Oncustomer_account_idChanging(value);
                ReportPropertyChanging("customer_account_id");
                _customer_account_id = StructuralObject.SetValidValue(value, "customer_account_id");
                ReportPropertyChanged("customer_account_id");
                Oncustomer_account_idChanged();
            }
        }
        private global::System.Int64 _customer_account_id;
        partial void Oncustomer_account_idChanging(global::System.Int64 value);
        partial void Oncustomer_account_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value, "user_id");
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int64 _user_id;
        partial void Onuser_idChanging(global::System.Int64 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 card_id
        {
            get
            {
                return _card_id;
            }
            set
            {
                Oncard_idChanging(value);
                ReportPropertyChanging("card_id");
                _card_id = StructuralObject.SetValidValue(value, "card_id");
                ReportPropertyChanged("card_id");
                Oncard_idChanged();
            }
        }
        private global::System.Int64 _card_id;
        partial void Oncard_idChanging(global::System.Int64 value);
        partial void Oncard_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_reason_id
        {
            get
            {
                return _card_issue_reason_id;
            }
            set
            {
                Oncard_issue_reason_idChanging(value);
                ReportPropertyChanging("card_issue_reason_id");
                _card_issue_reason_id = StructuralObject.SetValidValue(value, "card_issue_reason_id");
                ReportPropertyChanged("card_issue_reason_id");
                Oncard_issue_reason_idChanged();
            }
        }
        private global::System.Int32 _card_issue_reason_id;
        partial void Oncard_issue_reason_idChanging(global::System.Int32 value);
        partial void Oncard_issue_reason_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 account_type_id
        {
            get
            {
                return _account_type_id;
            }
            set
            {
                Onaccount_type_idChanging(value);
                ReportPropertyChanging("account_type_id");
                _account_type_id = StructuralObject.SetValidValue(value, "account_type_id");
                ReportPropertyChanged("account_type_id");
                Onaccount_type_idChanged();
            }
        }
        private global::System.Int32 _account_type_id;
        partial void Onaccount_type_idChanging(global::System.Int32 value);
        partial void Onaccount_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 currency_id
        {
            get
            {
                return _currency_id;
            }
            set
            {
                Oncurrency_idChanging(value);
                ReportPropertyChanging("currency_id");
                _currency_id = StructuralObject.SetValidValue(value, "currency_id");
                ReportPropertyChanged("currency_id");
                Oncurrency_idChanged();
            }
        }
        private global::System.Int32 _currency_id;
        partial void Oncurrency_idChanging(global::System.Int32 value);
        partial void Oncurrency_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 resident_id
        {
            get
            {
                return _resident_id;
            }
            set
            {
                Onresident_idChanging(value);
                ReportPropertyChanging("resident_id");
                _resident_id = StructuralObject.SetValidValue(value, "resident_id");
                ReportPropertyChanged("resident_id");
                Onresident_idChanged();
            }
        }
        private global::System.Int32 _resident_id;
        partial void Onresident_idChanging(global::System.Int32 value);
        partial void Onresident_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 customer_type_id
        {
            get
            {
                return _customer_type_id;
            }
            set
            {
                Oncustomer_type_idChanging(value);
                ReportPropertyChanging("customer_type_id");
                _customer_type_id = StructuralObject.SetValidValue(value, "customer_type_id");
                ReportPropertyChanged("customer_type_id");
                Oncustomer_type_idChanged();
            }
        }
        private global::System.Int32 _customer_type_id;
        partial void Oncustomer_type_idChanging(global::System.Int32 value);
        partial void Oncustomer_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_account_number
        {
            get
            {
                return _customer_account_number;
            }
            set
            {
                Oncustomer_account_numberChanging(value);
                ReportPropertyChanging("customer_account_number");
                _customer_account_number = StructuralObject.SetValidValue(value, true, "customer_account_number");
                ReportPropertyChanged("customer_account_number");
                Oncustomer_account_numberChanged();
            }
        }
        private global::System.String _customer_account_number;
        partial void Oncustomer_account_numberChanging(global::System.String value);
        partial void Oncustomer_account_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_first_name
        {
            get
            {
                return _customer_first_name;
            }
            set
            {
                Oncustomer_first_nameChanging(value);
                ReportPropertyChanging("customer_first_name");
                _customer_first_name = StructuralObject.SetValidValue(value, true, "customer_first_name");
                ReportPropertyChanged("customer_first_name");
                Oncustomer_first_nameChanged();
            }
        }
        private global::System.String _customer_first_name;
        partial void Oncustomer_first_nameChanging(global::System.String value);
        partial void Oncustomer_first_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_middle_name
        {
            get
            {
                return _customer_middle_name;
            }
            set
            {
                Oncustomer_middle_nameChanging(value);
                ReportPropertyChanging("customer_middle_name");
                _customer_middle_name = StructuralObject.SetValidValue(value, true, "customer_middle_name");
                ReportPropertyChanged("customer_middle_name");
                Oncustomer_middle_nameChanged();
            }
        }
        private global::System.String _customer_middle_name;
        partial void Oncustomer_middle_nameChanging(global::System.String value);
        partial void Oncustomer_middle_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_last_name
        {
            get
            {
                return _customer_last_name;
            }
            set
            {
                Oncustomer_last_nameChanging(value);
                ReportPropertyChanging("customer_last_name");
                _customer_last_name = StructuralObject.SetValidValue(value, true, "customer_last_name");
                ReportPropertyChanged("customer_last_name");
                Oncustomer_last_nameChanged();
            }
        }
        private global::System.String _customer_last_name;
        partial void Oncustomer_last_nameChanging(global::System.String value);
        partial void Oncustomer_last_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name_on_card
        {
            get
            {
                return _name_on_card;
            }
            set
            {
                Onname_on_cardChanging(value);
                ReportPropertyChanging("name_on_card");
                _name_on_card = StructuralObject.SetValidValue(value, true, "name_on_card");
                ReportPropertyChanged("name_on_card");
                Onname_on_cardChanged();
            }
        }
        private global::System.String _name_on_card;
        partial void Onname_on_cardChanging(global::System.String value);
        partial void Onname_on_cardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date_issued
        {
            get
            {
                return _date_issued;
            }
            set
            {
                Ondate_issuedChanging(value);
                ReportPropertyChanging("date_issued");
                _date_issued = StructuralObject.SetValidValue(value, "date_issued");
                ReportPropertyChanged("date_issued");
                Ondate_issuedChanged();
            }
        }
        private Nullable<global::System.DateTime> _date_issued;
        partial void Ondate_issuedChanging(Nullable<global::System.DateTime> value);
        partial void Ondate_issuedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cms_id
        {
            get
            {
                return _cms_id;
            }
            set
            {
                Oncms_idChanging(value);
                ReportPropertyChanging("cms_id");
                _cms_id = StructuralObject.SetValidValue(value, true, "cms_id");
                ReportPropertyChanged("cms_id");
                Oncms_idChanged();
            }
        }
        private global::System.String _cms_id;
        partial void Oncms_idChanging(global::System.String value);
        partial void Oncms_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contract_number
        {
            get
            {
                return _contract_number;
            }
            set
            {
                Oncontract_numberChanging(value);
                ReportPropertyChanging("contract_number");
                _contract_number = StructuralObject.SetValidValue(value, true, "contract_number");
                ReportPropertyChanged("contract_number");
                Oncontract_numberChanged();
            }
        }
        private global::System.String _contract_number;
        partial void Oncontract_numberChanging(global::System.String value);
        partial void Oncontract_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> customer_title_id
        {
            get
            {
                return _customer_title_id;
            }
            set
            {
                Oncustomer_title_idChanging(value);
                ReportPropertyChanging("customer_title_id");
                _customer_title_id = StructuralObject.SetValidValue(value, "customer_title_id");
                ReportPropertyChanged("customer_title_id");
                Oncustomer_title_idChanged();
            }
        }
        private Nullable<global::System.Int32> _customer_title_id;
        partial void Oncustomer_title_idChanging(Nullable<global::System.Int32> value);
        partial void Oncustomer_title_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Id_number
        {
            get
            {
                return _Id_number;
            }
            set
            {
                OnId_numberChanging(value);
                ReportPropertyChanging("Id_number");
                _Id_number = StructuralObject.SetValidValue(value, true, "Id_number");
                ReportPropertyChanged("Id_number");
                OnId_numberChanged();
            }
        }
        private global::System.String _Id_number;
        partial void OnId_numberChanging(global::System.String value);
        partial void OnId_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contact_number
        {
            get
            {
                return _contact_number;
            }
            set
            {
                Oncontact_numberChanging(value);
                ReportPropertyChanging("contact_number");
                _contact_number = StructuralObject.SetValidValue(value, true, "contact_number");
                ReportPropertyChanged("contact_number");
                Oncontact_numberChanged();
            }
        }
        private global::System.String _contact_number;
        partial void Oncontact_numberChanging(global::System.String value);
        partial void Oncontact_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 domicile_branch_id
        {
            get
            {
                return _domicile_branch_id;
            }
            set
            {
                Ondomicile_branch_idChanging(value);
                ReportPropertyChanging("domicile_branch_id");
                _domicile_branch_id = StructuralObject.SetValidValue(value, "domicile_branch_id");
                ReportPropertyChanged("domicile_branch_id");
                Ondomicile_branch_idChanged();
            }
        }
        private global::System.Int32 _domicile_branch_id;
        partial void Ondomicile_branch_idChanging(global::System.Int32 value);
        partial void Ondomicile_branch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_email
        {
            get
            {
                return _customer_email;
            }
            set
            {
                Oncustomer_emailChanging(value);
                ReportPropertyChanging("customer_email");
                _customer_email = StructuralObject.SetValidValue(value, true, "customer_email");
                ReportPropertyChanged("customer_email");
                Oncustomer_emailChanged();
            }
        }
        private global::System.String _customer_email;
        partial void Oncustomer_emailChanging(global::System.String value);
        partial void Oncustomer_emailChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="decrypted_user")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class decrypted_user : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new decrypted_user object.
        /// </summary>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="user_status_id">Initial value of the user_status_id property.</param>
        /// <param name="online">Initial value of the online property.</param>
        /// <param name="user_email">Initial value of the user_email property.</param>
        public static decrypted_user Createdecrypted_user(global::System.Int64 user_id, global::System.Int32 user_status_id, global::System.Boolean online, global::System.String user_email)
        {
            decrypted_user decrypted_user = new decrypted_user();
            decrypted_user.user_id = user_id;
            decrypted_user.user_status_id = user_status_id;
            decrypted_user.online = online;
            decrypted_user.user_email = user_email;
            return decrypted_user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value, "user_id");
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int64 _user_id;
        partial void Onuser_idChanging(global::System.Int64 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, true, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, true, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String empoyee_id
        {
            get
            {
                return _empoyee_id;
            }
            set
            {
                Onempoyee_idChanging(value);
                ReportPropertyChanging("empoyee_id");
                _empoyee_id = StructuralObject.SetValidValue(value, true, "empoyee_id");
                ReportPropertyChanged("empoyee_id");
                Onempoyee_idChanged();
            }
        }
        private global::System.String _empoyee_id;
        partial void Onempoyee_idChanging(global::System.String value);
        partial void Onempoyee_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_status_id
        {
            get
            {
                return _user_status_id;
            }
            set
            {
                Onuser_status_idChanging(value);
                ReportPropertyChanging("user_status_id");
                _user_status_id = StructuralObject.SetValidValue(value, "user_status_id");
                ReportPropertyChanged("user_status_id");
                Onuser_status_idChanged();
            }
        }
        private global::System.Int32 _user_status_id;
        partial void Onuser_status_idChanging(global::System.Int32 value);
        partial void Onuser_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean online
        {
            get
            {
                return _online;
            }
            set
            {
                OnonlineChanging(value);
                ReportPropertyChanging("online");
                _online = StructuralObject.SetValidValue(value, "online");
                ReportPropertyChanged("online");
                OnonlineChanged();
            }
        }
        private global::System.Boolean _online;
        partial void OnonlineChanging(global::System.Boolean value);
        partial void OnonlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String workstation
        {
            get
            {
                return _workstation;
            }
            set
            {
                OnworkstationChanging(value);
                ReportPropertyChanging("workstation");
                _workstation = StructuralObject.SetValidValue(value, true, "workstation");
                ReportPropertyChanged("workstation");
                OnworkstationChanged();
            }
        }
        private global::System.String _workstation;
        partial void OnworkstationChanging(global::System.String value);
        partial void OnworkstationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_email
        {
            get
            {
                return _user_email;
            }
            set
            {
                Onuser_emailChanging(value);
                ReportPropertyChanging("user_email");
                _user_email = StructuralObject.SetValidValue(value, false, "user_email");
                ReportPropertyChanged("user_email");
                Onuser_emailChanged();
            }
        }
        private global::System.String _user_email;
        partial void Onuser_emailChanging(global::System.String value);
        partial void Onuser_emailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> language_id
        {
            get
            {
                return _language_id;
            }
            set
            {
                Onlanguage_idChanging(value);
                ReportPropertyChanging("language_id");
                _language_id = StructuralObject.SetValidValue(value, "language_id");
                ReportPropertyChanged("language_id");
                Onlanguage_idChanged();
            }
        }
        private Nullable<global::System.Int32> _language_id;
        partial void Onlanguage_idChanging(Nullable<global::System.Int32> value);
        partial void Onlanguage_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> last_password_changed_date
        {
            get
            {
                return _last_password_changed_date;
            }
            set
            {
                Onlast_password_changed_dateChanging(value);
                ReportPropertyChanging("last_password_changed_date");
                _last_password_changed_date = StructuralObject.SetValidValue(value, "last_password_changed_date");
                ReportPropertyChanged("last_password_changed_date");
                Onlast_password_changed_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _last_password_changed_date;
        partial void Onlast_password_changed_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onlast_password_changed_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> number_of_incorrect_logins
        {
            get
            {
                return _number_of_incorrect_logins;
            }
            set
            {
                Onnumber_of_incorrect_loginsChanging(value);
                ReportPropertyChanging("number_of_incorrect_logins");
                _number_of_incorrect_logins = StructuralObject.SetValidValue(value, "number_of_incorrect_logins");
                ReportPropertyChanged("number_of_incorrect_logins");
                Onnumber_of_incorrect_loginsChanged();
            }
        }
        private Nullable<global::System.Int32> _number_of_incorrect_logins;
        partial void Onnumber_of_incorrect_loginsChanging(Nullable<global::System.Int32> value);
        partial void Onnumber_of_incorrect_loginsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> last_login_attempt
        {
            get
            {
                return _last_login_attempt;
            }
            set
            {
                Onlast_login_attemptChanging(value);
                ReportPropertyChanging("last_login_attempt");
                _last_login_attempt = StructuralObject.SetValidValue(value, "last_login_attempt");
                ReportPropertyChanged("last_login_attempt");
                Onlast_login_attemptChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _last_login_attempt;
        partial void Onlast_login_attemptChanging(Nullable<global::System.DateTimeOffset> value);
        partial void Onlast_login_attemptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String time_zone_Id
        {
            get
            {
                return _time_zone_Id;
            }
            set
            {
                Ontime_zone_IdChanging(value);
                ReportPropertyChanging("time_zone_Id");
                _time_zone_Id = StructuralObject.SetValidValue(value, true, "time_zone_Id");
                ReportPropertyChanged("time_zone_Id");
                Ontime_zone_IdChanged();
            }
        }
        private global::System.String _time_zone_Id;
        partial void Ontime_zone_IdChanging(global::System.String value);
        partial void Ontime_zone_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String time_zone_utcoffset
        {
            get
            {
                return _time_zone_utcoffset;
            }
            set
            {
                Ontime_zone_utcoffsetChanging(value);
                ReportPropertyChanging("time_zone_utcoffset");
                _time_zone_utcoffset = StructuralObject.SetValidValue(value, true, "time_zone_utcoffset");
                ReportPropertyChanged("time_zone_utcoffset");
                Ontime_zone_utcoffsetChanged();
            }
        }
        private global::System.String _time_zone_utcoffset;
        partial void Ontime_zone_utcoffsetChanging(global::System.String value);
        partial void Ontime_zone_utcoffsetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> authentication_configuration_id
        {
            get
            {
                return _authentication_configuration_id;
            }
            set
            {
                Onauthentication_configuration_idChanging(value);
                ReportPropertyChanging("authentication_configuration_id");
                _authentication_configuration_id = StructuralObject.SetValidValue(value, "authentication_configuration_id");
                ReportPropertyChanged("authentication_configuration_id");
                Onauthentication_configuration_idChanged();
            }
        }
        private Nullable<global::System.Int32> _authentication_configuration_id;
        partial void Onauthentication_configuration_idChanging(Nullable<global::System.Int32> value);
        partial void Onauthentication_configuration_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="DistBatchCardDetail")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class DistBatchCardDetail : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DistBatchCardDetail object.
        /// </summary>
        /// <param name="dist_card_status_name">Initial value of the dist_card_status_name property.</param>
        /// <param name="product_id">Initial value of the product_id property.</param>
        /// <param name="product_code">Initial value of the product_code property.</param>
        /// <param name="product_name">Initial value of the product_name property.</param>
        /// <param name="product_bin_code">Initial value of the product_bin_code property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="card_id">Initial value of the card_id property.</param>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        /// <param name="card_issue_method_id">Initial value of the card_issue_method_id property.</param>
        /// <param name="card_priority_id">Initial value of the card_priority_id property.</param>
        /// <param name="card_sequence">Initial value of the card_sequence property.</param>
        /// <param name="dist_batch_id">Initial value of the dist_batch_id property.</param>
        /// <param name="dist_card_status_id">Initial value of the dist_card_status_id property.</param>
        /// <param name="src1_id">Initial value of the src1_id property.</param>
        /// <param name="src2_id">Initial value of the src2_id property.</param>
        /// <param name="src3_id">Initial value of the src3_id property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        /// <param name="dist_batch_reference">Initial value of the dist_batch_reference property.</param>
        /// <param name="pan_length">Initial value of the pan_length property.</param>
        public static DistBatchCardDetail CreateDistBatchCardDetail(global::System.String dist_card_status_name, global::System.Int32 product_id, global::System.String product_code, global::System.String product_name, global::System.String product_bin_code, global::System.Int32 issuer_id, global::System.Int64 card_id, global::System.Int32 branch_id, global::System.Int32 card_issue_method_id, global::System.Int32 card_priority_id, global::System.Int32 card_sequence, global::System.Int64 dist_batch_id, global::System.Int32 dist_card_status_id, global::System.Int32 src1_id, global::System.Int32 src2_id, global::System.Int32 src3_id, global::System.String issuer_code, global::System.String issuer_name, global::System.String branch_code, global::System.String branch_name, global::System.String dist_batch_reference, global::System.Int16 pan_length)
        {
            DistBatchCardDetail distBatchCardDetail = new DistBatchCardDetail();
            distBatchCardDetail.dist_card_status_name = dist_card_status_name;
            distBatchCardDetail.product_id = product_id;
            distBatchCardDetail.product_code = product_code;
            distBatchCardDetail.product_name = product_name;
            distBatchCardDetail.product_bin_code = product_bin_code;
            distBatchCardDetail.issuer_id = issuer_id;
            distBatchCardDetail.card_id = card_id;
            distBatchCardDetail.branch_id = branch_id;
            distBatchCardDetail.card_issue_method_id = card_issue_method_id;
            distBatchCardDetail.card_priority_id = card_priority_id;
            distBatchCardDetail.card_sequence = card_sequence;
            distBatchCardDetail.dist_batch_id = dist_batch_id;
            distBatchCardDetail.dist_card_status_id = dist_card_status_id;
            distBatchCardDetail.src1_id = src1_id;
            distBatchCardDetail.src2_id = src2_id;
            distBatchCardDetail.src3_id = src3_id;
            distBatchCardDetail.issuer_code = issuer_code;
            distBatchCardDetail.issuer_name = issuer_name;
            distBatchCardDetail.branch_code = branch_code;
            distBatchCardDetail.branch_name = branch_name;
            distBatchCardDetail.dist_batch_reference = dist_batch_reference;
            distBatchCardDetail.pan_length = pan_length;
            return distBatchCardDetail;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String dist_card_status_name
        {
            get
            {
                return _dist_card_status_name;
            }
            set
            {
                Ondist_card_status_nameChanging(value);
                ReportPropertyChanging("dist_card_status_name");
                _dist_card_status_name = StructuralObject.SetValidValue(value, false, "dist_card_status_name");
                ReportPropertyChanged("dist_card_status_name");
                Ondist_card_status_nameChanged();
            }
        }
        private global::System.String _dist_card_status_name;
        partial void Ondist_card_status_nameChanging(global::System.String value);
        partial void Ondist_card_status_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private global::System.Int32 _product_id;
        partial void Onproduct_idChanging(global::System.Int32 value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_code
        {
            get
            {
                return _product_code;
            }
            set
            {
                Onproduct_codeChanging(value);
                ReportPropertyChanging("product_code");
                _product_code = StructuralObject.SetValidValue(value, false, "product_code");
                ReportPropertyChanged("product_code");
                Onproduct_codeChanged();
            }
        }
        private global::System.String _product_code;
        partial void Onproduct_codeChanging(global::System.String value);
        partial void Onproduct_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_name
        {
            get
            {
                return _product_name;
            }
            set
            {
                Onproduct_nameChanging(value);
                ReportPropertyChanging("product_name");
                _product_name = StructuralObject.SetValidValue(value, false, "product_name");
                ReportPropertyChanged("product_name");
                Onproduct_nameChanged();
            }
        }
        private global::System.String _product_name;
        partial void Onproduct_nameChanging(global::System.String value);
        partial void Onproduct_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_bin_code
        {
            get
            {
                return _product_bin_code;
            }
            set
            {
                Onproduct_bin_codeChanging(value);
                ReportPropertyChanging("product_bin_code");
                _product_bin_code = StructuralObject.SetValidValue(value, false, "product_bin_code");
                ReportPropertyChanged("product_bin_code");
                Onproduct_bin_codeChanged();
            }
        }
        private global::System.String _product_bin_code;
        partial void Onproduct_bin_codeChanging(global::System.String value);
        partial void Onproduct_bin_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> customer_account_id
        {
            get
            {
                return _customer_account_id;
            }
            set
            {
                Oncustomer_account_idChanging(value);
                ReportPropertyChanging("customer_account_id");
                _customer_account_id = StructuralObject.SetValidValue(value, "customer_account_id");
                ReportPropertyChanged("customer_account_id");
                Oncustomer_account_idChanged();
            }
        }
        private Nullable<global::System.Int64> _customer_account_id;
        partial void Oncustomer_account_idChanging(Nullable<global::System.Int64> value);
        partial void Oncustomer_account_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value, "user_id");
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private Nullable<global::System.Int64> _user_id;
        partial void Onuser_idChanging(Nullable<global::System.Int64> value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 card_id
        {
            get
            {
                return _card_id;
            }
            set
            {
                Oncard_idChanging(value);
                ReportPropertyChanging("card_id");
                _card_id = StructuralObject.SetValidValue(value, "card_id");
                ReportPropertyChanged("card_id");
                Oncard_idChanged();
            }
        }
        private global::System.Int64 _card_id;
        partial void Oncard_idChanging(global::System.Int64 value);
        partial void Oncard_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> account_type_id
        {
            get
            {
                return _account_type_id;
            }
            set
            {
                Onaccount_type_idChanging(value);
                ReportPropertyChanging("account_type_id");
                _account_type_id = StructuralObject.SetValidValue(value, "account_type_id");
                ReportPropertyChanged("account_type_id");
                Onaccount_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _account_type_id;
        partial void Onaccount_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onaccount_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> currency_id
        {
            get
            {
                return _currency_id;
            }
            set
            {
                Oncurrency_idChanging(value);
                ReportPropertyChanging("currency_id");
                _currency_id = StructuralObject.SetValidValue(value, "currency_id");
                ReportPropertyChanged("currency_id");
                Oncurrency_idChanged();
            }
        }
        private Nullable<global::System.Int32> _currency_id;
        partial void Oncurrency_idChanging(Nullable<global::System.Int32> value);
        partial void Oncurrency_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> resident_id
        {
            get
            {
                return _resident_id;
            }
            set
            {
                Onresident_idChanging(value);
                ReportPropertyChanging("resident_id");
                _resident_id = StructuralObject.SetValidValue(value, "resident_id");
                ReportPropertyChanged("resident_id");
                Onresident_idChanged();
            }
        }
        private Nullable<global::System.Int32> _resident_id;
        partial void Onresident_idChanging(Nullable<global::System.Int32> value);
        partial void Onresident_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> customer_type_id
        {
            get
            {
                return _customer_type_id;
            }
            set
            {
                Oncustomer_type_idChanging(value);
                ReportPropertyChanging("customer_type_id");
                _customer_type_id = StructuralObject.SetValidValue(value, "customer_type_id");
                ReportPropertyChanged("customer_type_id");
                Oncustomer_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _customer_type_id;
        partial void Oncustomer_type_idChanging(Nullable<global::System.Int32> value);
        partial void Oncustomer_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_account_number
        {
            get
            {
                return _customer_account_number;
            }
            set
            {
                Oncustomer_account_numberChanging(value);
                ReportPropertyChanging("customer_account_number");
                _customer_account_number = StructuralObject.SetValidValue(value, true, "customer_account_number");
                ReportPropertyChanged("customer_account_number");
                Oncustomer_account_numberChanged();
            }
        }
        private global::System.String _customer_account_number;
        partial void Oncustomer_account_numberChanging(global::System.String value);
        partial void Oncustomer_account_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_first_name
        {
            get
            {
                return _customer_first_name;
            }
            set
            {
                Oncustomer_first_nameChanging(value);
                ReportPropertyChanging("customer_first_name");
                _customer_first_name = StructuralObject.SetValidValue(value, true, "customer_first_name");
                ReportPropertyChanged("customer_first_name");
                Oncustomer_first_nameChanged();
            }
        }
        private global::System.String _customer_first_name;
        partial void Oncustomer_first_nameChanging(global::System.String value);
        partial void Oncustomer_first_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_middle_name
        {
            get
            {
                return _customer_middle_name;
            }
            set
            {
                Oncustomer_middle_nameChanging(value);
                ReportPropertyChanging("customer_middle_name");
                _customer_middle_name = StructuralObject.SetValidValue(value, true, "customer_middle_name");
                ReportPropertyChanged("customer_middle_name");
                Oncustomer_middle_nameChanged();
            }
        }
        private global::System.String _customer_middle_name;
        partial void Oncustomer_middle_nameChanging(global::System.String value);
        partial void Oncustomer_middle_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_last_name
        {
            get
            {
                return _customer_last_name;
            }
            set
            {
                Oncustomer_last_nameChanging(value);
                ReportPropertyChanging("customer_last_name");
                _customer_last_name = StructuralObject.SetValidValue(value, true, "customer_last_name");
                ReportPropertyChanged("customer_last_name");
                Oncustomer_last_nameChanged();
            }
        }
        private global::System.String _customer_last_name;
        partial void Oncustomer_last_nameChanging(global::System.String value);
        partial void Oncustomer_last_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name_on_card
        {
            get
            {
                return _name_on_card;
            }
            set
            {
                Onname_on_cardChanging(value);
                ReportPropertyChanging("name_on_card");
                _name_on_card = StructuralObject.SetValidValue(value, true, "name_on_card");
                ReportPropertyChanged("name_on_card");
                Onname_on_cardChanged();
            }
        }
        private global::System.String _name_on_card;
        partial void Onname_on_cardChanging(global::System.String value);
        partial void Onname_on_cardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date_issued
        {
            get
            {
                return _date_issued;
            }
            set
            {
                Ondate_issuedChanging(value);
                ReportPropertyChanging("date_issued");
                _date_issued = StructuralObject.SetValidValue(value, "date_issued");
                ReportPropertyChanged("date_issued");
                Ondate_issuedChanged();
            }
        }
        private Nullable<global::System.DateTime> _date_issued;
        partial void Ondate_issuedChanging(Nullable<global::System.DateTime> value);
        partial void Ondate_issuedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cms_id
        {
            get
            {
                return _cms_id;
            }
            set
            {
                Oncms_idChanging(value);
                ReportPropertyChanging("cms_id");
                _cms_id = StructuralObject.SetValidValue(value, true, "cms_id");
                ReportPropertyChanged("cms_id");
                Oncms_idChanged();
            }
        }
        private global::System.String _cms_id;
        partial void Oncms_idChanging(global::System.String value);
        partial void Oncms_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contract_number
        {
            get
            {
                return _contract_number;
            }
            set
            {
                Oncontract_numberChanging(value);
                ReportPropertyChanging("contract_number");
                _contract_number = StructuralObject.SetValidValue(value, true, "contract_number");
                ReportPropertyChanged("contract_number");
                Oncontract_numberChanged();
            }
        }
        private global::System.String _contract_number;
        partial void Oncontract_numberChanging(global::System.String value);
        partial void Oncontract_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> customer_title_id
        {
            get
            {
                return _customer_title_id;
            }
            set
            {
                Oncustomer_title_idChanging(value);
                ReportPropertyChanging("customer_title_id");
                _customer_title_id = StructuralObject.SetValidValue(value, "customer_title_id");
                ReportPropertyChanged("customer_title_id");
                Oncustomer_title_idChanged();
            }
        }
        private Nullable<global::System.Int32> _customer_title_id;
        partial void Oncustomer_title_idChanging(Nullable<global::System.Int32> value);
        partial void Oncustomer_title_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Id_number
        {
            get
            {
                return _Id_number;
            }
            set
            {
                OnId_numberChanging(value);
                ReportPropertyChanging("Id_number");
                _Id_number = StructuralObject.SetValidValue(value, true, "Id_number");
                ReportPropertyChanged("Id_number");
                OnId_numberChanged();
            }
        }
        private global::System.String _Id_number;
        partial void OnId_numberChanging(global::System.String value);
        partial void OnId_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contact_number
        {
            get
            {
                return _contact_number;
            }
            set
            {
                Oncontact_numberChanging(value);
                ReportPropertyChanging("contact_number");
                _contact_number = StructuralObject.SetValidValue(value, true, "contact_number");
                ReportPropertyChanged("contact_number");
                Oncontact_numberChanged();
            }
        }
        private global::System.String _contact_number;
        partial void Oncontact_numberChanging(global::System.String value);
        partial void Oncontact_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int32 _branch_id;
        partial void Onbranch_idChanging(global::System.Int32 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_method_id
        {
            get
            {
                return _card_issue_method_id;
            }
            set
            {
                Oncard_issue_method_idChanging(value);
                ReportPropertyChanging("card_issue_method_id");
                _card_issue_method_id = StructuralObject.SetValidValue(value, "card_issue_method_id");
                ReportPropertyChanged("card_issue_method_id");
                Oncard_issue_method_idChanged();
            }
        }
        private global::System.Int32 _card_issue_method_id;
        partial void Oncard_issue_method_idChanging(global::System.Int32 value);
        partial void Oncard_issue_method_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_priority_id
        {
            get
            {
                return _card_priority_id;
            }
            set
            {
                Oncard_priority_idChanging(value);
                ReportPropertyChanging("card_priority_id");
                _card_priority_id = StructuralObject.SetValidValue(value, "card_priority_id");
                ReportPropertyChanged("card_priority_id");
                Oncard_priority_idChanged();
            }
        }
        private global::System.Int32 _card_priority_id;
        partial void Oncard_priority_idChanging(global::System.Int32 value);
        partial void Oncard_priority_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_request_reference
        {
            get
            {
                return _card_request_reference;
            }
            set
            {
                Oncard_request_referenceChanging(value);
                ReportPropertyChanging("card_request_reference");
                _card_request_reference = StructuralObject.SetValidValue(value, true, "card_request_reference");
                ReportPropertyChanged("card_request_reference");
                Oncard_request_referenceChanged();
            }
        }
        private global::System.String _card_request_reference;
        partial void Oncard_request_referenceChanging(global::System.String value);
        partial void Oncard_request_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_sequence
        {
            get
            {
                return _card_sequence;
            }
            set
            {
                Oncard_sequenceChanging(value);
                ReportPropertyChanging("card_sequence");
                _card_sequence = StructuralObject.SetValidValue(value, "card_sequence");
                ReportPropertyChanged("card_sequence");
                Oncard_sequenceChanged();
            }
        }
        private global::System.Int32 _card_sequence;
        partial void Oncard_sequenceChanging(global::System.Int32 value);
        partial void Oncard_sequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> card_activation_date
        {
            get
            {
                return _card_activation_date;
            }
            set
            {
                Oncard_activation_dateChanging(value);
                ReportPropertyChanging("card_activation_date");
                _card_activation_date = StructuralObject.SetValidValue(value, "card_activation_date");
                ReportPropertyChanged("card_activation_date");
                Oncard_activation_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _card_activation_date;
        partial void Oncard_activation_dateChanging(Nullable<global::System.DateTime> value);
        partial void Oncard_activation_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> card_expiry_date
        {
            get
            {
                return _card_expiry_date;
            }
            set
            {
                Oncard_expiry_dateChanging(value);
                ReportPropertyChanging("card_expiry_date");
                _card_expiry_date = StructuralObject.SetValidValue(value, "card_expiry_date");
                ReportPropertyChanged("card_expiry_date");
                Oncard_expiry_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _card_expiry_date;
        partial void Oncard_expiry_dateChanging(Nullable<global::System.DateTime> value);
        partial void Oncard_expiry_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> card_production_date
        {
            get
            {
                return _card_production_date;
            }
            set
            {
                Oncard_production_dateChanging(value);
                ReportPropertyChanging("card_production_date");
                _card_production_date = StructuralObject.SetValidValue(value, "card_production_date");
                ReportPropertyChanged("card_production_date");
                Oncard_production_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _card_production_date;
        partial void Oncard_production_dateChanging(Nullable<global::System.DateTime> value);
        partial void Oncard_production_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String pvv
        {
            get
            {
                return _pvv;
            }
            set
            {
                OnpvvChanging(value);
                ReportPropertyChanging("pvv");
                _pvv = StructuralObject.SetValidValue(value, true, "pvv");
                ReportPropertyChanged("pvv");
                OnpvvChanged();
            }
        }
        private global::System.String _pvv;
        partial void OnpvvChanging(global::System.String value);
        partial void OnpvvChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 dist_batch_id
        {
            get
            {
                return _dist_batch_id;
            }
            set
            {
                Ondist_batch_idChanging(value);
                ReportPropertyChanging("dist_batch_id");
                _dist_batch_id = StructuralObject.SetValidValue(value, "dist_batch_id");
                ReportPropertyChanged("dist_batch_id");
                Ondist_batch_idChanged();
            }
        }
        private global::System.Int64 _dist_batch_id;
        partial void Ondist_batch_idChanging(global::System.Int64 value);
        partial void Ondist_batch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dist_card_status_id
        {
            get
            {
                return _dist_card_status_id;
            }
            set
            {
                Ondist_card_status_idChanging(value);
                ReportPropertyChanging("dist_card_status_id");
                _dist_card_status_id = StructuralObject.SetValidValue(value, "dist_card_status_id");
                ReportPropertyChanged("dist_card_status_id");
                Ondist_card_status_idChanged();
            }
        }
        private global::System.Int32 _dist_card_status_id;
        partial void Ondist_card_status_idChanging(global::System.Int32 value);
        partial void Ondist_card_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 src1_id
        {
            get
            {
                return _src1_id;
            }
            set
            {
                Onsrc1_idChanging(value);
                ReportPropertyChanging("src1_id");
                _src1_id = StructuralObject.SetValidValue(value, "src1_id");
                ReportPropertyChanged("src1_id");
                Onsrc1_idChanged();
            }
        }
        private global::System.Int32 _src1_id;
        partial void Onsrc1_idChanging(global::System.Int32 value);
        partial void Onsrc1_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 src2_id
        {
            get
            {
                return _src2_id;
            }
            set
            {
                Onsrc2_idChanging(value);
                ReportPropertyChanging("src2_id");
                _src2_id = StructuralObject.SetValidValue(value, "src2_id");
                ReportPropertyChanged("src2_id");
                Onsrc2_idChanged();
            }
        }
        private global::System.Int32 _src2_id;
        partial void Onsrc2_idChanging(global::System.Int32 value);
        partial void Onsrc2_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 src3_id
        {
            get
            {
                return _src3_id;
            }
            set
            {
                Onsrc3_idChanging(value);
                ReportPropertyChanging("src3_id");
                _src3_id = StructuralObject.SetValidValue(value, "src3_id");
                ReportPropertyChanged("src3_id");
                Onsrc3_idChanged();
            }
        }
        private global::System.Int32 _src3_id;
        partial void Onsrc3_idChanging(global::System.Int32 value);
        partial void Onsrc3_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PVKI
        {
            get
            {
                return _PVKI;
            }
            set
            {
                OnPVKIChanging(value);
                ReportPropertyChanging("PVKI");
                _PVKI = StructuralObject.SetValidValue(value, "PVKI");
                ReportPropertyChanged("PVKI");
                OnPVKIChanged();
            }
        }
        private Nullable<global::System.Int32> _PVKI;
        partial void OnPVKIChanging(Nullable<global::System.Int32> value);
        partial void OnPVKIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PVK
        {
            get
            {
                return _PVK;
            }
            set
            {
                OnPVKChanging(value);
                ReportPropertyChanging("PVK");
                _PVK = StructuralObject.SetValidValue(value, true, "PVK");
                ReportPropertyChanged("PVK");
                OnPVKChanged();
            }
        }
        private global::System.String _PVK;
        partial void OnPVKChanging(global::System.String value);
        partial void OnPVKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CVKA
        {
            get
            {
                return _CVKA;
            }
            set
            {
                OnCVKAChanging(value);
                ReportPropertyChanging("CVKA");
                _CVKA = StructuralObject.SetValidValue(value, true, "CVKA");
                ReportPropertyChanged("CVKA");
                OnCVKAChanged();
            }
        }
        private global::System.String _CVKA;
        partial void OnCVKAChanging(global::System.String value);
        partial void OnCVKAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CVKB
        {
            get
            {
                return _CVKB;
            }
            set
            {
                OnCVKBChanging(value);
                ReportPropertyChanging("CVKB");
                _CVKB = StructuralObject.SetValidValue(value, true, "CVKB");
                ReportPropertyChanged("CVKB");
                OnCVKBChanged();
            }
        }
        private global::System.String _CVKB;
        partial void OnCVKBChanging(global::System.String value);
        partial void OnCVKBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> expiry_months
        {
            get
            {
                return _expiry_months;
            }
            set
            {
                Onexpiry_monthsChanging(value);
                ReportPropertyChanging("expiry_months");
                _expiry_months = StructuralObject.SetValidValue(value, "expiry_months");
                ReportPropertyChanged("expiry_months");
                Onexpiry_monthsChanged();
            }
        }
        private Nullable<global::System.Int32> _expiry_months;
        partial void Onexpiry_monthsChanging(Nullable<global::System.Int32> value);
        partial void Onexpiry_monthsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                OnCustomerIdChanging(value);
                ReportPropertyChanging("CustomerId");
                _CustomerId = StructuralObject.SetValidValue(value, true, "CustomerId");
                ReportPropertyChanged("CustomerId");
                OnCustomerIdChanged();
            }
        }
        private global::System.String _CustomerId;
        partial void OnCustomerIdChanging(global::System.String value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_reference_number
        {
            get
            {
                return _card_reference_number;
            }
            set
            {
                Oncard_reference_numberChanging(value);
                ReportPropertyChanging("card_reference_number");
                _card_reference_number = StructuralObject.SetValidValue(value, true, "card_reference_number");
                ReportPropertyChanged("card_reference_number");
                Oncard_reference_numberChanged();
            }
        }
        private global::System.String _card_reference_number;
        partial void Oncard_reference_numberChanging(global::System.String value);
        partial void Oncard_reference_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String dist_batch_reference
        {
            get
            {
                return _dist_batch_reference;
            }
            set
            {
                Ondist_batch_referenceChanging(value);
                ReportPropertyChanging("dist_batch_reference");
                _dist_batch_reference = StructuralObject.SetValidValue(value, false, "dist_batch_reference");
                ReportPropertyChanged("dist_batch_reference");
                Ondist_batch_referenceChanged();
            }
        }
        private global::System.String _dist_batch_reference;
        partial void Ondist_batch_referenceChanging(global::System.String value);
        partial void Ondist_batch_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String sub_product_code
        {
            get
            {
                return _sub_product_code;
            }
            set
            {
                Onsub_product_codeChanging(value);
                ReportPropertyChanging("sub_product_code");
                _sub_product_code = StructuralObject.SetValidValue(value, true, "sub_product_code");
                ReportPropertyChanged("sub_product_code");
                Onsub_product_codeChanged();
            }
        }
        private global::System.String _sub_product_code;
        partial void Onsub_product_codeChanging(global::System.String value);
        partial void Onsub_product_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 pan_length
        {
            get
            {
                return _pan_length;
            }
            set
            {
                Onpan_lengthChanging(value);
                ReportPropertyChanging("pan_length");
                _pan_length = StructuralObject.SetValidValue(value, "pan_length");
                ReportPropertyChanged("pan_length");
                Onpan_lengthChanged();
            }
        }
        private global::System.Int16 _pan_length;
        partial void Onpan_lengthChanging(global::System.Int16 value);
        partial void Onpan_lengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String delivery_branch_code
        {
            get
            {
                return _delivery_branch_code;
            }
            set
            {
                Ondelivery_branch_codeChanging(value);
                ReportPropertyChanging("delivery_branch_code");
                _delivery_branch_code = StructuralObject.SetValidValue(value, true, "delivery_branch_code");
                ReportPropertyChanged("delivery_branch_code");
                Ondelivery_branch_codeChanged();
            }
        }
        private global::System.String _delivery_branch_code;
        partial void Ondelivery_branch_codeChanging(global::System.String value);
        partial void Ondelivery_branch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String delivery_branch_name
        {
            get
            {
                return _delivery_branch_name;
            }
            set
            {
                Ondelivery_branch_nameChanging(value);
                ReportPropertyChanging("delivery_branch_name");
                _delivery_branch_name = StructuralObject.SetValidValue(value, true, "delivery_branch_name");
                ReportPropertyChanged("delivery_branch_name");
                Ondelivery_branch_nameChanged();
            }
        }
        private global::System.String _delivery_branch_name;
        partial void Ondelivery_branch_nameChanging(global::System.String value);
        partial void Ondelivery_branch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String emp_delivery_branch_code
        {
            get
            {
                return _emp_delivery_branch_code;
            }
            set
            {
                Onemp_delivery_branch_codeChanging(value);
                ReportPropertyChanging("emp_delivery_branch_code");
                _emp_delivery_branch_code = StructuralObject.SetValidValue(value, true, "emp_delivery_branch_code");
                ReportPropertyChanged("emp_delivery_branch_code");
                Onemp_delivery_branch_codeChanged();
            }
        }
        private global::System.String _emp_delivery_branch_code;
        partial void Onemp_delivery_branch_codeChanging(global::System.String value);
        partial void Onemp_delivery_branch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String credit_contract_number
        {
            get
            {
                return _credit_contract_number;
            }
            set
            {
                Oncredit_contract_numberChanging(value);
                ReportPropertyChanging("credit_contract_number");
                _credit_contract_number = StructuralObject.SetValidValue(value, true, "credit_contract_number");
                ReportPropertyChanged("credit_contract_number");
                Oncredit_contract_numberChanged();
            }
        }
        private global::System.String _credit_contract_number;
        partial void Oncredit_contract_numberChanging(global::System.String value);
        partial void Oncredit_contract_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> credit_limit
        {
            get
            {
                return _credit_limit;
            }
            set
            {
                Oncredit_limitChanging(value);
                ReportPropertyChanging("credit_limit");
                _credit_limit = StructuralObject.SetValidValue(value, "credit_limit");
                ReportPropertyChanged("credit_limit");
                Oncredit_limitChanged();
            }
        }
        private Nullable<global::System.Decimal> _credit_limit;
        partial void Oncredit_limitChanging(Nullable<global::System.Decimal> value);
        partial void Oncredit_limitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> credit_limit_approved
        {
            get
            {
                return _credit_limit_approved;
            }
            set
            {
                Oncredit_limit_approvedChanging(value);
                ReportPropertyChanging("credit_limit_approved");
                _credit_limit_approved = StructuralObject.SetValidValue(value, "credit_limit_approved");
                ReportPropertyChanged("credit_limit_approved");
                Oncredit_limit_approvedChanged();
            }
        }
        private Nullable<global::System.Decimal> _credit_limit_approved;
        partial void Oncredit_limit_approvedChanging(Nullable<global::System.Decimal> value);
        partial void Oncredit_limit_approvedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_email
        {
            get
            {
                return _customer_email;
            }
            set
            {
                Oncustomer_emailChanging(value);
                ReportPropertyChanging("customer_email");
                _customer_email = StructuralObject.SetValidValue(value, true, "customer_email");
                ReportPropertyChanged("customer_email");
                Oncustomer_emailChanged();
            }
        }
        private global::System.String _customer_email;
        partial void Oncustomer_emailChanging(global::System.String value);
        partial void Oncustomer_emailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> card_issue_reason_id
        {
            get
            {
                return _card_issue_reason_id;
            }
            set
            {
                Oncard_issue_reason_idChanging(value);
                ReportPropertyChanging("card_issue_reason_id");
                _card_issue_reason_id = StructuralObject.SetValidValue(value, "card_issue_reason_id");
                ReportPropertyChanged("card_issue_reason_id");
                Oncard_issue_reason_idChanged();
            }
        }
        private Nullable<global::System.Int32> _card_issue_reason_id;
        partial void Oncard_issue_reason_idChanging(Nullable<global::System.Int32> value);
        partial void Oncard_issue_reason_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="DistBatchHistoryResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class DistBatchHistoryResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DistBatchHistoryResult object.
        /// </summary>
        /// <param name="dist_batch_reference">Initial value of the dist_batch_reference property.</param>
        /// <param name="no_cards">Initial value of the no_cards property.</param>
        /// <param name="dist_batch_status_name">Initial value of the dist_batch_status_name property.</param>
        public static DistBatchHistoryResult CreateDistBatchHistoryResult(global::System.String dist_batch_reference, global::System.Int32 no_cards, global::System.String dist_batch_status_name)
        {
            DistBatchHistoryResult distBatchHistoryResult = new DistBatchHistoryResult();
            distBatchHistoryResult.dist_batch_reference = dist_batch_reference;
            distBatchHistoryResult.no_cards = no_cards;
            distBatchHistoryResult.dist_batch_status_name = dist_batch_status_name;
            return distBatchHistoryResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String dist_batch_reference
        {
            get
            {
                return _dist_batch_reference;
            }
            set
            {
                Ondist_batch_referenceChanging(value);
                ReportPropertyChanging("dist_batch_reference");
                _dist_batch_reference = StructuralObject.SetValidValue(value, false, "dist_batch_reference");
                ReportPropertyChanged("dist_batch_reference");
                Ondist_batch_referenceChanged();
            }
        }
        private global::System.String _dist_batch_reference;
        partial void Ondist_batch_referenceChanging(global::System.String value);
        partial void Ondist_batch_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 no_cards
        {
            get
            {
                return _no_cards;
            }
            set
            {
                Onno_cardsChanging(value);
                ReportPropertyChanging("no_cards");
                _no_cards = StructuralObject.SetValidValue(value, "no_cards");
                ReportPropertyChanged("no_cards");
                Onno_cardsChanged();
            }
        }
        private global::System.Int32 _no_cards;
        partial void Onno_cardsChanging(global::System.Int32 value);
        partial void Onno_cardsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> status_date
        {
            get
            {
                return _status_date;
            }
            set
            {
                Onstatus_dateChanging(value);
                ReportPropertyChanging("status_date");
                _status_date = StructuralObject.SetValidValue(value, "status_date");
                ReportPropertyChanged("status_date");
                Onstatus_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _status_date;
        partial void Onstatus_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onstatus_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String status_notes
        {
            get
            {
                return _status_notes;
            }
            set
            {
                Onstatus_notesChanging(value);
                ReportPropertyChanging("status_notes");
                _status_notes = StructuralObject.SetValidValue(value, true, "status_notes");
                ReportPropertyChanged("status_notes");
                Onstatus_notesChanged();
            }
        }
        private global::System.String _status_notes;
        partial void Onstatus_notesChanging(global::System.String value);
        partial void Onstatus_notesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String dist_batch_status_name
        {
            get
            {
                return _dist_batch_status_name;
            }
            set
            {
                Ondist_batch_status_nameChanging(value);
                ReportPropertyChanging("dist_batch_status_name");
                _dist_batch_status_name = StructuralObject.SetValidValue(value, false, "dist_batch_status_name");
                ReportPropertyChanged("dist_batch_status_name");
                Ondist_batch_status_nameChanged();
            }
        }
        private global::System.String _dist_batch_status_name;
        partial void Ondist_batch_status_nameChanging(global::System.String value);
        partial void Ondist_batch_status_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, true, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, true, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, true, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, true, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="DistBatchResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class DistBatchResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DistBatchResult object.
        /// </summary>
        /// <param name="tOTAL_PAGES">Initial value of the TOTAL_PAGES property.</param>
        /// <param name="tOTAL_ROWS">Initial value of the TOTAL_ROWS property.</param>
        /// <param name="dist_batch_id">Initial value of the dist_batch_id property.</param>
        /// <param name="dist_batch_reference">Initial value of the dist_batch_reference property.</param>
        /// <param name="no_cards">Initial value of the no_cards property.</param>
        /// <param name="dist_batch_statuses_id">Initial value of the dist_batch_statuses_id property.</param>
        /// <param name="dist_batch_status_name">Initial value of the dist_batch_status_name property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="card_issue_method_name">Initial value of the card_issue_method_name property.</param>
        /// <param name="card_issue_method_id">Initial value of the card_issue_method_id property.</param>
        /// <param name="dist_batch_type_id">Initial value of the dist_batch_type_id property.</param>
        /// <param name="product_name">Initial value of the product_name property.</param>
        public static DistBatchResult CreateDistBatchResult(global::System.Int32 tOTAL_PAGES, global::System.Int32 tOTAL_ROWS, global::System.Int64 dist_batch_id, global::System.String dist_batch_reference, global::System.Int32 no_cards, global::System.Int32 dist_batch_statuses_id, global::System.String dist_batch_status_name, global::System.String issuer_name, global::System.String issuer_code, global::System.String branch_name, global::System.String branch_code, global::System.Int32 issuer_id, global::System.String card_issue_method_name, global::System.Int32 card_issue_method_id, global::System.Int32 dist_batch_type_id, global::System.String product_name)
        {
            DistBatchResult distBatchResult = new DistBatchResult();
            distBatchResult.TOTAL_PAGES = tOTAL_PAGES;
            distBatchResult.TOTAL_ROWS = tOTAL_ROWS;
            distBatchResult.dist_batch_id = dist_batch_id;
            distBatchResult.dist_batch_reference = dist_batch_reference;
            distBatchResult.no_cards = no_cards;
            distBatchResult.dist_batch_statuses_id = dist_batch_statuses_id;
            distBatchResult.dist_batch_status_name = dist_batch_status_name;
            distBatchResult.issuer_name = issuer_name;
            distBatchResult.issuer_code = issuer_code;
            distBatchResult.branch_name = branch_name;
            distBatchResult.branch_code = branch_code;
            distBatchResult.issuer_id = issuer_id;
            distBatchResult.card_issue_method_name = card_issue_method_name;
            distBatchResult.card_issue_method_id = card_issue_method_id;
            distBatchResult.dist_batch_type_id = dist_batch_type_id;
            distBatchResult.product_name = product_name;
            return distBatchResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private global::System.Int32 _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(global::System.Int32 value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private global::System.Int32 _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(global::System.Int32 value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 dist_batch_id
        {
            get
            {
                return _dist_batch_id;
            }
            set
            {
                Ondist_batch_idChanging(value);
                ReportPropertyChanging("dist_batch_id");
                _dist_batch_id = StructuralObject.SetValidValue(value, "dist_batch_id");
                ReportPropertyChanged("dist_batch_id");
                Ondist_batch_idChanged();
            }
        }
        private global::System.Int64 _dist_batch_id;
        partial void Ondist_batch_idChanging(global::System.Int64 value);
        partial void Ondist_batch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date_created
        {
            get
            {
                return _date_created;
            }
            set
            {
                Ondate_createdChanging(value);
                ReportPropertyChanging("date_created");
                _date_created = StructuralObject.SetValidValue(value, "date_created");
                ReportPropertyChanged("date_created");
                Ondate_createdChanged();
            }
        }
        private Nullable<global::System.DateTime> _date_created;
        partial void Ondate_createdChanging(Nullable<global::System.DateTime> value);
        partial void Ondate_createdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String dist_batch_reference
        {
            get
            {
                return _dist_batch_reference;
            }
            set
            {
                Ondist_batch_referenceChanging(value);
                ReportPropertyChanging("dist_batch_reference");
                _dist_batch_reference = StructuralObject.SetValidValue(value, false, "dist_batch_reference");
                ReportPropertyChanged("dist_batch_reference");
                Ondist_batch_referenceChanged();
            }
        }
        private global::System.String _dist_batch_reference;
        partial void Ondist_batch_referenceChanging(global::System.String value);
        partial void Ondist_batch_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 no_cards
        {
            get
            {
                return _no_cards;
            }
            set
            {
                Onno_cardsChanging(value);
                ReportPropertyChanging("no_cards");
                _no_cards = StructuralObject.SetValidValue(value, "no_cards");
                ReportPropertyChanged("no_cards");
                Onno_cardsChanged();
            }
        }
        private global::System.Int32 _no_cards;
        partial void Onno_cardsChanging(global::System.Int32 value);
        partial void Onno_cardsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String status_notes
        {
            get
            {
                return _status_notes;
            }
            set
            {
                Onstatus_notesChanging(value);
                ReportPropertyChanging("status_notes");
                _status_notes = StructuralObject.SetValidValue(value, true, "status_notes");
                ReportPropertyChanged("status_notes");
                Onstatus_notesChanged();
            }
        }
        private global::System.String _status_notes;
        partial void Onstatus_notesChanging(global::System.String value);
        partial void Onstatus_notesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dist_batch_statuses_id
        {
            get
            {
                return _dist_batch_statuses_id;
            }
            set
            {
                Ondist_batch_statuses_idChanging(value);
                ReportPropertyChanging("dist_batch_statuses_id");
                _dist_batch_statuses_id = StructuralObject.SetValidValue(value, "dist_batch_statuses_id");
                ReportPropertyChanged("dist_batch_statuses_id");
                Ondist_batch_statuses_idChanged();
            }
        }
        private global::System.Int32 _dist_batch_statuses_id;
        partial void Ondist_batch_statuses_idChanging(global::System.Int32 value);
        partial void Ondist_batch_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String dist_batch_status_name
        {
            get
            {
                return _dist_batch_status_name;
            }
            set
            {
                Ondist_batch_status_nameChanging(value);
                ReportPropertyChanging("dist_batch_status_name");
                _dist_batch_status_name = StructuralObject.SetValidValue(value, false, "dist_batch_status_name");
                ReportPropertyChanged("dist_batch_status_name");
                Ondist_batch_status_nameChanged();
            }
        }
        private global::System.String _dist_batch_status_name;
        partial void Ondist_batch_status_nameChanging(global::System.String value);
        partial void Ondist_batch_status_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String card_issue_method_name
        {
            get
            {
                return _card_issue_method_name;
            }
            set
            {
                Oncard_issue_method_nameChanging(value);
                ReportPropertyChanging("card_issue_method_name");
                _card_issue_method_name = StructuralObject.SetValidValue(value, false, "card_issue_method_name");
                ReportPropertyChanged("card_issue_method_name");
                Oncard_issue_method_nameChanged();
            }
        }
        private global::System.String _card_issue_method_name;
        partial void Oncard_issue_method_nameChanging(global::System.String value);
        partial void Oncard_issue_method_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> flow_dist_batch_statuses_id
        {
            get
            {
                return _flow_dist_batch_statuses_id;
            }
            set
            {
                Onflow_dist_batch_statuses_idChanging(value);
                ReportPropertyChanging("flow_dist_batch_statuses_id");
                _flow_dist_batch_statuses_id = StructuralObject.SetValidValue(value, "flow_dist_batch_statuses_id");
                ReportPropertyChanged("flow_dist_batch_statuses_id");
                Onflow_dist_batch_statuses_idChanged();
            }
        }
        private Nullable<global::System.Int32> _flow_dist_batch_statuses_id;
        partial void Onflow_dist_batch_statuses_idChanging(Nullable<global::System.Int32> value);
        partial void Onflow_dist_batch_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> flow_dist_batch_type_id
        {
            get
            {
                return _flow_dist_batch_type_id;
            }
            set
            {
                Onflow_dist_batch_type_idChanging(value);
                ReportPropertyChanging("flow_dist_batch_type_id");
                _flow_dist_batch_type_id = StructuralObject.SetValidValue(value, "flow_dist_batch_type_id");
                ReportPropertyChanged("flow_dist_batch_type_id");
                Onflow_dist_batch_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _flow_dist_batch_type_id;
        partial void Onflow_dist_batch_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onflow_dist_batch_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> user_role_id
        {
            get
            {
                return _user_role_id;
            }
            set
            {
                Onuser_role_idChanging(value);
                ReportPropertyChanging("user_role_id");
                _user_role_id = StructuralObject.SetValidValue(value, "user_role_id");
                ReportPropertyChanged("user_role_id");
                Onuser_role_idChanged();
            }
        }
        private Nullable<global::System.Int32> _user_role_id;
        partial void Onuser_role_idChanging(Nullable<global::System.Int32> value);
        partial void Onuser_role_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_method_id
        {
            get
            {
                return _card_issue_method_id;
            }
            set
            {
                Oncard_issue_method_idChanging(value);
                ReportPropertyChanging("card_issue_method_id");
                _card_issue_method_id = StructuralObject.SetValidValue(value, "card_issue_method_id");
                ReportPropertyChanged("card_issue_method_id");
                Oncard_issue_method_idChanged();
            }
        }
        private global::System.Int32 _card_issue_method_id;
        partial void Oncard_issue_method_idChanging(global::System.Int32 value);
        partial void Oncard_issue_method_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dist_batch_type_id
        {
            get
            {
                return _dist_batch_type_id;
            }
            set
            {
                Ondist_batch_type_idChanging(value);
                ReportPropertyChanging("dist_batch_type_id");
                _dist_batch_type_id = StructuralObject.SetValidValue(value, "dist_batch_type_id");
                ReportPropertyChanged("dist_batch_type_id");
                Ondist_batch_type_idChanged();
            }
        }
        private global::System.Int32 _dist_batch_type_id;
        partial void Ondist_batch_type_idChanging(global::System.Int32 value);
        partial void Ondist_batch_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> reject_dist_batch_statuses_id
        {
            get
            {
                return _reject_dist_batch_statuses_id;
            }
            set
            {
                Onreject_dist_batch_statuses_idChanging(value);
                ReportPropertyChanging("reject_dist_batch_statuses_id");
                _reject_dist_batch_statuses_id = StructuralObject.SetValidValue(value, "reject_dist_batch_statuses_id");
                ReportPropertyChanged("reject_dist_batch_statuses_id");
                Onreject_dist_batch_statuses_idChanged();
            }
        }
        private Nullable<global::System.Int32> _reject_dist_batch_statuses_id;
        partial void Onreject_dist_batch_statuses_idChanging(Nullable<global::System.Int32> value);
        partial void Onreject_dist_batch_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_name
        {
            get
            {
                return _product_name;
            }
            set
            {
                Onproduct_nameChanging(value);
                ReportPropertyChanging("product_name");
                _product_name = StructuralObject.SetValidValue(value, false, "product_name");
                ReportPropertyChanged("product_name");
                Onproduct_nameChanged();
            }
        }
        private global::System.String _product_name;
        partial void Onproduct_nameChanging(global::System.String value);
        partial void Onproduct_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> dist_batch_status_flow_id
        {
            get
            {
                return _dist_batch_status_flow_id;
            }
            set
            {
                Ondist_batch_status_flow_idChanging(value);
                ReportPropertyChanging("dist_batch_status_flow_id");
                _dist_batch_status_flow_id = StructuralObject.SetValidValue(value, "dist_batch_status_flow_id");
                ReportPropertyChanged("dist_batch_status_flow_id");
                Ondist_batch_status_flow_idChanged();
            }
        }
        private Nullable<global::System.Int32> _dist_batch_status_flow_id;
        partial void Ondist_batch_status_flow_idChanging(Nullable<global::System.Int32> value);
        partial void Ondist_batch_status_flow_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="DistCardResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class DistCardResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DistCardResult object.
        /// </summary>
        /// <param name="dist_card_status_name">Initial value of the dist_card_status_name property.</param>
        /// <param name="origin_branch_code">Initial value of the origin_branch_code property.</param>
        /// <param name="origin_branch_name">Initial value of the origin_branch_name property.</param>
        public static DistCardResult CreateDistCardResult(global::System.String dist_card_status_name, global::System.String origin_branch_code, global::System.String origin_branch_name)
        {
            DistCardResult distCardResult = new DistCardResult();
            distCardResult.dist_card_status_name = dist_card_status_name;
            distCardResult.origin_branch_code = origin_branch_code;
            distCardResult.origin_branch_name = origin_branch_name;
            return distCardResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String dist_card_status_name
        {
            get
            {
                return _dist_card_status_name;
            }
            set
            {
                Ondist_card_status_nameChanging(value);
                ReportPropertyChanging("dist_card_status_name");
                _dist_card_status_name = StructuralObject.SetValidValue(value, false, "dist_card_status_name");
                ReportPropertyChanged("dist_card_status_name");
                Ondist_card_status_nameChanged();
            }
        }
        private global::System.String _dist_card_status_name;
        partial void Ondist_card_status_nameChanging(global::System.String value);
        partial void Ondist_card_status_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_reference_number
        {
            get
            {
                return _card_reference_number;
            }
            set
            {
                Oncard_reference_numberChanging(value);
                ReportPropertyChanging("card_reference_number");
                _card_reference_number = StructuralObject.SetValidValue(value, true, "card_reference_number");
                ReportPropertyChanged("card_reference_number");
                Oncard_reference_numberChanged();
            }
        }
        private global::System.String _card_reference_number;
        partial void Oncard_reference_numberChanging(global::System.String value);
        partial void Oncard_reference_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String origin_branch_code
        {
            get
            {
                return _origin_branch_code;
            }
            set
            {
                Onorigin_branch_codeChanging(value);
                ReportPropertyChanging("origin_branch_code");
                _origin_branch_code = StructuralObject.SetValidValue(value, false, "origin_branch_code");
                ReportPropertyChanged("origin_branch_code");
                Onorigin_branch_codeChanged();
            }
        }
        private global::System.String _origin_branch_code;
        partial void Onorigin_branch_codeChanging(global::System.String value);
        partial void Onorigin_branch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String origin_branch_name
        {
            get
            {
                return _origin_branch_name;
            }
            set
            {
                Onorigin_branch_nameChanging(value);
                ReportPropertyChanging("origin_branch_name");
                _origin_branch_name = StructuralObject.SetValidValue(value, false, "origin_branch_name");
                ReportPropertyChanged("origin_branch_name");
                Onorigin_branch_nameChanged();
            }
        }
        private global::System.String _origin_branch_name;
        partial void Onorigin_branch_nameChanging(global::System.String value);
        partial void Onorigin_branch_nameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="DistStatusResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class DistStatusResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DistStatusResult object.
        /// </summary>
        /// <param name="dist_batch_id">Initial value of the dist_batch_id property.</param>
        /// <param name="dist_batch_reference">Initial value of the dist_batch_reference property.</param>
        public static DistStatusResult CreateDistStatusResult(global::System.Int64 dist_batch_id, global::System.String dist_batch_reference)
        {
            DistStatusResult distStatusResult = new DistStatusResult();
            distStatusResult.dist_batch_id = dist_batch_id;
            distStatusResult.dist_batch_reference = dist_batch_reference;
            return distStatusResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 dist_batch_id
        {
            get
            {
                return _dist_batch_id;
            }
            set
            {
                Ondist_batch_idChanging(value);
                ReportPropertyChanging("dist_batch_id");
                _dist_batch_id = StructuralObject.SetValidValue(value, "dist_batch_id");
                ReportPropertyChanged("dist_batch_id");
                Ondist_batch_idChanged();
            }
        }
        private global::System.Int64 _dist_batch_id;
        partial void Ondist_batch_idChanging(global::System.Int64 value);
        partial void Ondist_batch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date_created
        {
            get
            {
                return _date_created;
            }
            set
            {
                Ondate_createdChanging(value);
                ReportPropertyChanging("date_created");
                _date_created = StructuralObject.SetValidValue(value, "date_created");
                ReportPropertyChanged("date_created");
                Ondate_createdChanged();
            }
        }
        private Nullable<global::System.DateTime> _date_created;
        partial void Ondate_createdChanging(Nullable<global::System.DateTime> value);
        partial void Ondate_createdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String dist_batch_reference
        {
            get
            {
                return _dist_batch_reference;
            }
            set
            {
                Ondist_batch_referenceChanging(value);
                ReportPropertyChanging("dist_batch_reference");
                _dist_batch_reference = StructuralObject.SetValidValue(value, false, "dist_batch_reference");
                ReportPropertyChanged("dist_batch_reference");
                Ondist_batch_referenceChanged();
            }
        }
        private global::System.String _dist_batch_reference;
        partial void Ondist_batch_referenceChanging(global::System.String value);
        partial void Ondist_batch_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cards_count
        {
            get
            {
                return _cards_count;
            }
            set
            {
                Oncards_countChanging(value);
                ReportPropertyChanging("cards_count");
                _cards_count = StructuralObject.SetValidValue(value, "cards_count");
                ReportPropertyChanged("cards_count");
                Oncards_countChanged();
            }
        }
        private Nullable<global::System.Int32> _cards_count;
        partial void Oncards_countChanging(Nullable<global::System.Int32> value);
        partial void Oncards_countChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="ExportBatchCardDetailsResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ExportBatchCardDetailsResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExportBatchCardDetailsResult object.
        /// </summary>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        /// <param name="card_id">Initial value of the card_id property.</param>
        /// <param name="card_issue_method_id">Initial value of the card_issue_method_id property.</param>
        /// <param name="card_priority_id">Initial value of the card_priority_id property.</param>
        /// <param name="card_sequence">Initial value of the card_sequence property.</param>
        /// <param name="product_id">Initial value of the product_id property.</param>
        /// <param name="dist_card_status_id">Initial value of the dist_card_status_id property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        /// <param name="product_code">Initial value of the product_code property.</param>
        /// <param name="product_name">Initial value of the product_name property.</param>
        /// <param name="product_bin_code">Initial value of the product_bin_code property.</param>
        /// <param name="src1_id">Initial value of the src1_id property.</param>
        /// <param name="src2_id">Initial value of the src2_id property.</param>
        /// <param name="src3_id">Initial value of the src3_id property.</param>
        /// <param name="pan_length">Initial value of the pan_length property.</param>
        public static ExportBatchCardDetailsResult CreateExportBatchCardDetailsResult(global::System.Int32 branch_id, global::System.Int64 card_id, global::System.Int32 card_issue_method_id, global::System.Int32 card_priority_id, global::System.Int32 card_sequence, global::System.Int32 product_id, global::System.Int32 dist_card_status_id, global::System.Int32 issuer_id, global::System.String issuer_code, global::System.String issuer_name, global::System.String branch_code, global::System.String branch_name, global::System.String product_code, global::System.String product_name, global::System.String product_bin_code, global::System.Int32 src1_id, global::System.Int32 src2_id, global::System.Int32 src3_id, global::System.Int16 pan_length)
        {
            ExportBatchCardDetailsResult exportBatchCardDetailsResult = new ExportBatchCardDetailsResult();
            exportBatchCardDetailsResult.branch_id = branch_id;
            exportBatchCardDetailsResult.card_id = card_id;
            exportBatchCardDetailsResult.card_issue_method_id = card_issue_method_id;
            exportBatchCardDetailsResult.card_priority_id = card_priority_id;
            exportBatchCardDetailsResult.card_sequence = card_sequence;
            exportBatchCardDetailsResult.product_id = product_id;
            exportBatchCardDetailsResult.dist_card_status_id = dist_card_status_id;
            exportBatchCardDetailsResult.issuer_id = issuer_id;
            exportBatchCardDetailsResult.issuer_code = issuer_code;
            exportBatchCardDetailsResult.issuer_name = issuer_name;
            exportBatchCardDetailsResult.branch_code = branch_code;
            exportBatchCardDetailsResult.branch_name = branch_name;
            exportBatchCardDetailsResult.product_code = product_code;
            exportBatchCardDetailsResult.product_name = product_name;
            exportBatchCardDetailsResult.product_bin_code = product_bin_code;
            exportBatchCardDetailsResult.src1_id = src1_id;
            exportBatchCardDetailsResult.src2_id = src2_id;
            exportBatchCardDetailsResult.src3_id = src3_id;
            exportBatchCardDetailsResult.pan_length = pan_length;
            return exportBatchCardDetailsResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_reference_number
        {
            get
            {
                return _card_reference_number;
            }
            set
            {
                Oncard_reference_numberChanging(value);
                ReportPropertyChanging("card_reference_number");
                _card_reference_number = StructuralObject.SetValidValue(value, true, "card_reference_number");
                ReportPropertyChanged("card_reference_number");
                Oncard_reference_numberChanged();
            }
        }
        private global::System.String _card_reference_number;
        partial void Oncard_reference_numberChanging(global::System.String value);
        partial void Oncard_reference_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int32 _branch_id;
        partial void Onbranch_idChanging(global::System.Int32 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 card_id
        {
            get
            {
                return _card_id;
            }
            set
            {
                Oncard_idChanging(value);
                ReportPropertyChanging("card_id");
                _card_id = StructuralObject.SetValidValue(value, "card_id");
                ReportPropertyChanged("card_id");
                Oncard_idChanged();
            }
        }
        private global::System.Int64 _card_id;
        partial void Oncard_idChanging(global::System.Int64 value);
        partial void Oncard_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_method_id
        {
            get
            {
                return _card_issue_method_id;
            }
            set
            {
                Oncard_issue_method_idChanging(value);
                ReportPropertyChanging("card_issue_method_id");
                _card_issue_method_id = StructuralObject.SetValidValue(value, "card_issue_method_id");
                ReportPropertyChanged("card_issue_method_id");
                Oncard_issue_method_idChanged();
            }
        }
        private global::System.Int32 _card_issue_method_id;
        partial void Oncard_issue_method_idChanging(global::System.Int32 value);
        partial void Oncard_issue_method_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_priority_id
        {
            get
            {
                return _card_priority_id;
            }
            set
            {
                Oncard_priority_idChanging(value);
                ReportPropertyChanging("card_priority_id");
                _card_priority_id = StructuralObject.SetValidValue(value, "card_priority_id");
                ReportPropertyChanged("card_priority_id");
                Oncard_priority_idChanged();
            }
        }
        private global::System.Int32 _card_priority_id;
        partial void Oncard_priority_idChanging(global::System.Int32 value);
        partial void Oncard_priority_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_request_reference
        {
            get
            {
                return _card_request_reference;
            }
            set
            {
                Oncard_request_referenceChanging(value);
                ReportPropertyChanging("card_request_reference");
                _card_request_reference = StructuralObject.SetValidValue(value, true, "card_request_reference");
                ReportPropertyChanged("card_request_reference");
                Oncard_request_referenceChanged();
            }
        }
        private global::System.String _card_request_reference;
        partial void Oncard_request_referenceChanging(global::System.String value);
        partial void Oncard_request_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_sequence
        {
            get
            {
                return _card_sequence;
            }
            set
            {
                Oncard_sequenceChanging(value);
                ReportPropertyChanging("card_sequence");
                _card_sequence = StructuralObject.SetValidValue(value, "card_sequence");
                ReportPropertyChanged("card_sequence");
                Oncard_sequenceChanged();
            }
        }
        private global::System.Int32 _card_sequence;
        partial void Oncard_sequenceChanging(global::System.Int32 value);
        partial void Oncard_sequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private global::System.Int32 _product_id;
        partial void Onproduct_idChanging(global::System.Int32 value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> card_activation_date
        {
            get
            {
                return _card_activation_date;
            }
            set
            {
                Oncard_activation_dateChanging(value);
                ReportPropertyChanging("card_activation_date");
                _card_activation_date = StructuralObject.SetValidValue(value, "card_activation_date");
                ReportPropertyChanged("card_activation_date");
                Oncard_activation_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _card_activation_date;
        partial void Oncard_activation_dateChanging(Nullable<global::System.DateTime> value);
        partial void Oncard_activation_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> card_expiry_date
        {
            get
            {
                return _card_expiry_date;
            }
            set
            {
                Oncard_expiry_dateChanging(value);
                ReportPropertyChanging("card_expiry_date");
                _card_expiry_date = StructuralObject.SetValidValue(value, "card_expiry_date");
                ReportPropertyChanged("card_expiry_date");
                Oncard_expiry_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _card_expiry_date;
        partial void Oncard_expiry_dateChanging(Nullable<global::System.DateTime> value);
        partial void Oncard_expiry_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> card_production_date
        {
            get
            {
                return _card_production_date;
            }
            set
            {
                Oncard_production_dateChanging(value);
                ReportPropertyChanging("card_production_date");
                _card_production_date = StructuralObject.SetValidValue(value, "card_production_date");
                ReportPropertyChanged("card_production_date");
                Oncard_production_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _card_production_date;
        partial void Oncard_production_dateChanging(Nullable<global::System.DateTime> value);
        partial void Oncard_production_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String pvv
        {
            get
            {
                return _pvv;
            }
            set
            {
                OnpvvChanging(value);
                ReportPropertyChanging("pvv");
                _pvv = StructuralObject.SetValidValue(value, true, "pvv");
                ReportPropertyChanged("pvv");
                OnpvvChanged();
            }
        }
        private global::System.String _pvv;
        partial void OnpvvChanging(global::System.String value);
        partial void OnpvvChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> dist_batch_id
        {
            get
            {
                return _dist_batch_id;
            }
            set
            {
                Ondist_batch_idChanging(value);
                ReportPropertyChanging("dist_batch_id");
                _dist_batch_id = StructuralObject.SetValidValue(value, "dist_batch_id");
                ReportPropertyChanged("dist_batch_id");
                Ondist_batch_idChanged();
            }
        }
        private Nullable<global::System.Int64> _dist_batch_id;
        partial void Ondist_batch_idChanging(Nullable<global::System.Int64> value);
        partial void Ondist_batch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dist_card_status_id
        {
            get
            {
                return _dist_card_status_id;
            }
            set
            {
                Ondist_card_status_idChanging(value);
                ReportPropertyChanging("dist_card_status_id");
                _dist_card_status_id = StructuralObject.SetValidValue(value, "dist_card_status_id");
                ReportPropertyChanged("dist_card_status_id");
                Ondist_card_status_idChanged();
            }
        }
        private global::System.Int32 _dist_card_status_id;
        partial void Ondist_card_status_idChanging(global::System.Int32 value);
        partial void Ondist_card_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> account_type_id
        {
            get
            {
                return _account_type_id;
            }
            set
            {
                Onaccount_type_idChanging(value);
                ReportPropertyChanging("account_type_id");
                _account_type_id = StructuralObject.SetValidValue(value, "account_type_id");
                ReportPropertyChanged("account_type_id");
                Onaccount_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _account_type_id;
        partial void Onaccount_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onaccount_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cms_id
        {
            get
            {
                return _cms_id;
            }
            set
            {
                Oncms_idChanging(value);
                ReportPropertyChanging("cms_id");
                _cms_id = StructuralObject.SetValidValue(value, true, "cms_id");
                ReportPropertyChanged("cms_id");
                Oncms_idChanged();
            }
        }
        private global::System.String _cms_id;
        partial void Oncms_idChanging(global::System.String value);
        partial void Oncms_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contract_number
        {
            get
            {
                return _contract_number;
            }
            set
            {
                Oncontract_numberChanging(value);
                ReportPropertyChanging("contract_number");
                _contract_number = StructuralObject.SetValidValue(value, true, "contract_number");
                ReportPropertyChanged("contract_number");
                Oncontract_numberChanged();
            }
        }
        private global::System.String _contract_number;
        partial void Oncontract_numberChanging(global::System.String value);
        partial void Oncontract_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> currency_id
        {
            get
            {
                return _currency_id;
            }
            set
            {
                Oncurrency_idChanging(value);
                ReportPropertyChanging("currency_id");
                _currency_id = StructuralObject.SetValidValue(value, "currency_id");
                ReportPropertyChanged("currency_id");
                Oncurrency_idChanged();
            }
        }
        private Nullable<global::System.Int32> _currency_id;
        partial void Oncurrency_idChanging(Nullable<global::System.Int32> value);
        partial void Oncurrency_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> customer_account_id
        {
            get
            {
                return _customer_account_id;
            }
            set
            {
                Oncustomer_account_idChanging(value);
                ReportPropertyChanging("customer_account_id");
                _customer_account_id = StructuralObject.SetValidValue(value, "customer_account_id");
                ReportPropertyChanged("customer_account_id");
                Oncustomer_account_idChanged();
            }
        }
        private Nullable<global::System.Int64> _customer_account_id;
        partial void Oncustomer_account_idChanging(Nullable<global::System.Int64> value);
        partial void Oncustomer_account_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_account_number
        {
            get
            {
                return _customer_account_number;
            }
            set
            {
                Oncustomer_account_numberChanging(value);
                ReportPropertyChanging("customer_account_number");
                _customer_account_number = StructuralObject.SetValidValue(value, true, "customer_account_number");
                ReportPropertyChanged("customer_account_number");
                Oncustomer_account_numberChanged();
            }
        }
        private global::System.String _customer_account_number;
        partial void Oncustomer_account_numberChanging(global::System.String value);
        partial void Oncustomer_account_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_first_name
        {
            get
            {
                return _customer_first_name;
            }
            set
            {
                Oncustomer_first_nameChanging(value);
                ReportPropertyChanging("customer_first_name");
                _customer_first_name = StructuralObject.SetValidValue(value, true, "customer_first_name");
                ReportPropertyChanged("customer_first_name");
                Oncustomer_first_nameChanged();
            }
        }
        private global::System.String _customer_first_name;
        partial void Oncustomer_first_nameChanging(global::System.String value);
        partial void Oncustomer_first_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_last_name
        {
            get
            {
                return _customer_last_name;
            }
            set
            {
                Oncustomer_last_nameChanging(value);
                ReportPropertyChanging("customer_last_name");
                _customer_last_name = StructuralObject.SetValidValue(value, true, "customer_last_name");
                ReportPropertyChanged("customer_last_name");
                Oncustomer_last_nameChanged();
            }
        }
        private global::System.String _customer_last_name;
        partial void Oncustomer_last_nameChanging(global::System.String value);
        partial void Oncustomer_last_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_middle_name
        {
            get
            {
                return _customer_middle_name;
            }
            set
            {
                Oncustomer_middle_nameChanging(value);
                ReportPropertyChanging("customer_middle_name");
                _customer_middle_name = StructuralObject.SetValidValue(value, true, "customer_middle_name");
                ReportPropertyChanged("customer_middle_name");
                Oncustomer_middle_nameChanged();
            }
        }
        private global::System.String _customer_middle_name;
        partial void Oncustomer_middle_nameChanging(global::System.String value);
        partial void Oncustomer_middle_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name_on_card
        {
            get
            {
                return _name_on_card;
            }
            set
            {
                Onname_on_cardChanging(value);
                ReportPropertyChanging("name_on_card");
                _name_on_card = StructuralObject.SetValidValue(value, true, "name_on_card");
                ReportPropertyChanged("name_on_card");
                Onname_on_cardChanged();
            }
        }
        private global::System.String _name_on_card;
        partial void Onname_on_cardChanging(global::System.String value);
        partial void Onname_on_cardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Id_number
        {
            get
            {
                return _Id_number;
            }
            set
            {
                OnId_numberChanging(value);
                ReportPropertyChanging("Id_number");
                _Id_number = StructuralObject.SetValidValue(value, true, "Id_number");
                ReportPropertyChanged("Id_number");
                OnId_numberChanged();
            }
        }
        private global::System.String _Id_number;
        partial void OnId_numberChanging(global::System.String value);
        partial void OnId_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contact_number
        {
            get
            {
                return _contact_number;
            }
            set
            {
                Oncontact_numberChanging(value);
                ReportPropertyChanging("contact_number");
                _contact_number = StructuralObject.SetValidValue(value, true, "contact_number");
                ReportPropertyChanged("contact_number");
                Oncontact_numberChanged();
            }
        }
        private global::System.String _contact_number;
        partial void Oncontact_numberChanging(global::System.String value);
        partial void Oncontact_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                OnCustomerIdChanging(value);
                ReportPropertyChanging("CustomerId");
                _CustomerId = StructuralObject.SetValidValue(value, true, "CustomerId");
                ReportPropertyChanged("CustomerId");
                OnCustomerIdChanged();
            }
        }
        private global::System.String _CustomerId;
        partial void OnCustomerIdChanging(global::System.String value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> customer_title_id
        {
            get
            {
                return _customer_title_id;
            }
            set
            {
                Oncustomer_title_idChanging(value);
                ReportPropertyChanging("customer_title_id");
                _customer_title_id = StructuralObject.SetValidValue(value, "customer_title_id");
                ReportPropertyChanged("customer_title_id");
                Oncustomer_title_idChanged();
            }
        }
        private Nullable<global::System.Int32> _customer_title_id;
        partial void Oncustomer_title_idChanging(Nullable<global::System.Int32> value);
        partial void Oncustomer_title_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> customer_type_id
        {
            get
            {
                return _customer_type_id;
            }
            set
            {
                Oncustomer_type_idChanging(value);
                ReportPropertyChanging("customer_type_id");
                _customer_type_id = StructuralObject.SetValidValue(value, "customer_type_id");
                ReportPropertyChanged("customer_type_id");
                Oncustomer_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _customer_type_id;
        partial void Oncustomer_type_idChanging(Nullable<global::System.Int32> value);
        partial void Oncustomer_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date_issued
        {
            get
            {
                return _date_issued;
            }
            set
            {
                Ondate_issuedChanging(value);
                ReportPropertyChanging("date_issued");
                _date_issued = StructuralObject.SetValidValue(value, "date_issued");
                ReportPropertyChanged("date_issued");
                Ondate_issuedChanged();
            }
        }
        private Nullable<global::System.DateTime> _date_issued;
        partial void Ondate_issuedChanging(Nullable<global::System.DateTime> value);
        partial void Ondate_issuedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> resident_id
        {
            get
            {
                return _resident_id;
            }
            set
            {
                Onresident_idChanging(value);
                ReportPropertyChanging("resident_id");
                _resident_id = StructuralObject.SetValidValue(value, "resident_id");
                ReportPropertyChanged("resident_id");
                Onresident_idChanged();
            }
        }
        private Nullable<global::System.Int32> _resident_id;
        partial void Onresident_idChanging(Nullable<global::System.Int32> value);
        partial void Onresident_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value, "user_id");
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private Nullable<global::System.Int64> _user_id;
        partial void Onuser_idChanging(Nullable<global::System.Int64> value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_code
        {
            get
            {
                return _product_code;
            }
            set
            {
                Onproduct_codeChanging(value);
                ReportPropertyChanging("product_code");
                _product_code = StructuralObject.SetValidValue(value, false, "product_code");
                ReportPropertyChanged("product_code");
                Onproduct_codeChanged();
            }
        }
        private global::System.String _product_code;
        partial void Onproduct_codeChanging(global::System.String value);
        partial void Onproduct_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String sub_product_code
        {
            get
            {
                return _sub_product_code;
            }
            set
            {
                Onsub_product_codeChanging(value);
                ReportPropertyChanging("sub_product_code");
                _sub_product_code = StructuralObject.SetValidValue(value, true, "sub_product_code");
                ReportPropertyChanged("sub_product_code");
                Onsub_product_codeChanged();
            }
        }
        private global::System.String _sub_product_code;
        partial void Onsub_product_codeChanging(global::System.String value);
        partial void Onsub_product_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_name
        {
            get
            {
                return _product_name;
            }
            set
            {
                Onproduct_nameChanging(value);
                ReportPropertyChanging("product_name");
                _product_name = StructuralObject.SetValidValue(value, false, "product_name");
                ReportPropertyChanged("product_name");
                Onproduct_nameChanged();
            }
        }
        private global::System.String _product_name;
        partial void Onproduct_nameChanging(global::System.String value);
        partial void Onproduct_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_bin_code
        {
            get
            {
                return _product_bin_code;
            }
            set
            {
                Onproduct_bin_codeChanging(value);
                ReportPropertyChanging("product_bin_code");
                _product_bin_code = StructuralObject.SetValidValue(value, false, "product_bin_code");
                ReportPropertyChanged("product_bin_code");
                Onproduct_bin_codeChanged();
            }
        }
        private global::System.String _product_bin_code;
        partial void Onproduct_bin_codeChanging(global::System.String value);
        partial void Onproduct_bin_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 src1_id
        {
            get
            {
                return _src1_id;
            }
            set
            {
                Onsrc1_idChanging(value);
                ReportPropertyChanging("src1_id");
                _src1_id = StructuralObject.SetValidValue(value, "src1_id");
                ReportPropertyChanged("src1_id");
                Onsrc1_idChanged();
            }
        }
        private global::System.Int32 _src1_id;
        partial void Onsrc1_idChanging(global::System.Int32 value);
        partial void Onsrc1_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 src2_id
        {
            get
            {
                return _src2_id;
            }
            set
            {
                Onsrc2_idChanging(value);
                ReportPropertyChanging("src2_id");
                _src2_id = StructuralObject.SetValidValue(value, "src2_id");
                ReportPropertyChanged("src2_id");
                Onsrc2_idChanged();
            }
        }
        private global::System.Int32 _src2_id;
        partial void Onsrc2_idChanging(global::System.Int32 value);
        partial void Onsrc2_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 src3_id
        {
            get
            {
                return _src3_id;
            }
            set
            {
                Onsrc3_idChanging(value);
                ReportPropertyChanging("src3_id");
                _src3_id = StructuralObject.SetValidValue(value, "src3_id");
                ReportPropertyChanged("src3_id");
                Onsrc3_idChanged();
            }
        }
        private global::System.Int32 _src3_id;
        partial void Onsrc3_idChanging(global::System.Int32 value);
        partial void Onsrc3_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 pan_length
        {
            get
            {
                return _pan_length;
            }
            set
            {
                Onpan_lengthChanging(value);
                ReportPropertyChanging("pan_length");
                _pan_length = StructuralObject.SetValidValue(value, "pan_length");
                ReportPropertyChanged("pan_length");
                Onpan_lengthChanged();
            }
        }
        private global::System.Int16 _pan_length;
        partial void Onpan_lengthChanging(global::System.Int16 value);
        partial void Onpan_lengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PVKI
        {
            get
            {
                return _PVKI;
            }
            set
            {
                OnPVKIChanging(value);
                ReportPropertyChanging("PVKI");
                _PVKI = StructuralObject.SetValidValue(value, "PVKI");
                ReportPropertyChanged("PVKI");
                OnPVKIChanged();
            }
        }
        private Nullable<global::System.Int32> _PVKI;
        partial void OnPVKIChanging(Nullable<global::System.Int32> value);
        partial void OnPVKIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PVK
        {
            get
            {
                return _PVK;
            }
            set
            {
                OnPVKChanging(value);
                ReportPropertyChanging("PVK");
                _PVK = StructuralObject.SetValidValue(value, true, "PVK");
                ReportPropertyChanged("PVK");
                OnPVKChanged();
            }
        }
        private global::System.String _PVK;
        partial void OnPVKChanging(global::System.String value);
        partial void OnPVKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CVKA
        {
            get
            {
                return _CVKA;
            }
            set
            {
                OnCVKAChanging(value);
                ReportPropertyChanging("CVKA");
                _CVKA = StructuralObject.SetValidValue(value, true, "CVKA");
                ReportPropertyChanged("CVKA");
                OnCVKAChanged();
            }
        }
        private global::System.String _CVKA;
        partial void OnCVKAChanging(global::System.String value);
        partial void OnCVKAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CVKB
        {
            get
            {
                return _CVKB;
            }
            set
            {
                OnCVKBChanging(value);
                ReportPropertyChanging("CVKB");
                _CVKB = StructuralObject.SetValidValue(value, true, "CVKB");
                ReportPropertyChanged("CVKB");
                OnCVKBChanged();
            }
        }
        private global::System.String _CVKB;
        partial void OnCVKBChanging(global::System.String value);
        partial void OnCVKBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> expiry_months
        {
            get
            {
                return _expiry_months;
            }
            set
            {
                Onexpiry_monthsChanging(value);
                ReportPropertyChanging("expiry_months");
                _expiry_months = StructuralObject.SetValidValue(value, "expiry_months");
                ReportPropertyChanged("expiry_months");
                Onexpiry_monthsChanged();
            }
        }
        private Nullable<global::System.Int32> _expiry_months;
        partial void Onexpiry_monthsChanging(Nullable<global::System.Int32> value);
        partial void Onexpiry_monthsChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="ExportBatchCardResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ExportBatchCardResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExportBatchCardResult object.
        /// </summary>
        /// <param name="export_batch_statuses_name">Initial value of the export_batch_statuses_name property.</param>
        public static ExportBatchCardResult CreateExportBatchCardResult(global::System.String export_batch_statuses_name)
        {
            ExportBatchCardResult exportBatchCardResult = new ExportBatchCardResult();
            exportBatchCardResult.export_batch_statuses_name = export_batch_statuses_name;
            return exportBatchCardResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_reference_number
        {
            get
            {
                return _card_reference_number;
            }
            set
            {
                Oncard_reference_numberChanging(value);
                ReportPropertyChanging("card_reference_number");
                _card_reference_number = StructuralObject.SetValidValue(value, true, "card_reference_number");
                ReportPropertyChanged("card_reference_number");
                Oncard_reference_numberChanged();
            }
        }
        private global::System.String _card_reference_number;
        partial void Oncard_reference_numberChanging(global::System.String value);
        partial void Oncard_reference_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String export_batch_statuses_name
        {
            get
            {
                return _export_batch_statuses_name;
            }
            set
            {
                Onexport_batch_statuses_nameChanging(value);
                ReportPropertyChanging("export_batch_statuses_name");
                _export_batch_statuses_name = StructuralObject.SetValidValue(value, false, "export_batch_statuses_name");
                ReportPropertyChanged("export_batch_statuses_name");
                Onexport_batch_statuses_nameChanged();
            }
        }
        private global::System.String _export_batch_statuses_name;
        partial void Onexport_batch_statuses_nameChanging(global::System.String value);
        partial void Onexport_batch_statuses_nameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="ExportBatchHistoryResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ExportBatchHistoryResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExportBatchHistoryResult object.
        /// </summary>
        /// <param name="batch_reference">Initial value of the batch_reference property.</param>
        /// <param name="no_cards">Initial value of the no_cards property.</param>
        /// <param name="comments">Initial value of the comments property.</param>
        /// <param name="export_batch_status_name">Initial value of the export_batch_status_name property.</param>
        public static ExportBatchHistoryResult CreateExportBatchHistoryResult(global::System.String batch_reference, global::System.Int32 no_cards, global::System.String comments, global::System.String export_batch_status_name)
        {
            ExportBatchHistoryResult exportBatchHistoryResult = new ExportBatchHistoryResult();
            exportBatchHistoryResult.batch_reference = batch_reference;
            exportBatchHistoryResult.no_cards = no_cards;
            exportBatchHistoryResult.comments = comments;
            exportBatchHistoryResult.export_batch_status_name = export_batch_status_name;
            return exportBatchHistoryResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String batch_reference
        {
            get
            {
                return _batch_reference;
            }
            set
            {
                Onbatch_referenceChanging(value);
                ReportPropertyChanging("batch_reference");
                _batch_reference = StructuralObject.SetValidValue(value, false, "batch_reference");
                ReportPropertyChanged("batch_reference");
                Onbatch_referenceChanged();
            }
        }
        private global::System.String _batch_reference;
        partial void Onbatch_referenceChanging(global::System.String value);
        partial void Onbatch_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 no_cards
        {
            get
            {
                return _no_cards;
            }
            set
            {
                Onno_cardsChanging(value);
                ReportPropertyChanging("no_cards");
                _no_cards = StructuralObject.SetValidValue(value, "no_cards");
                ReportPropertyChanged("no_cards");
                Onno_cardsChanged();
            }
        }
        private global::System.Int32 _no_cards;
        partial void Onno_cardsChanging(global::System.Int32 value);
        partial void Onno_cardsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> status_date
        {
            get
            {
                return _status_date;
            }
            set
            {
                Onstatus_dateChanging(value);
                ReportPropertyChanging("status_date");
                _status_date = StructuralObject.SetValidValue(value, "status_date");
                ReportPropertyChanged("status_date");
                Onstatus_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _status_date;
        partial void Onstatus_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onstatus_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String comments
        {
            get
            {
                return _comments;
            }
            set
            {
                OncommentsChanging(value);
                ReportPropertyChanging("comments");
                _comments = StructuralObject.SetValidValue(value, false, "comments");
                ReportPropertyChanged("comments");
                OncommentsChanged();
            }
        }
        private global::System.String _comments;
        partial void OncommentsChanging(global::System.String value);
        partial void OncommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String export_batch_status_name
        {
            get
            {
                return _export_batch_status_name;
            }
            set
            {
                Onexport_batch_status_nameChanging(value);
                ReportPropertyChanging("export_batch_status_name");
                _export_batch_status_name = StructuralObject.SetValidValue(value, false, "export_batch_status_name");
                ReportPropertyChanged("export_batch_status_name");
                Onexport_batch_status_nameChanged();
            }
        }
        private global::System.String _export_batch_status_name;
        partial void Onexport_batch_status_nameChanging(global::System.String value);
        partial void Onexport_batch_status_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, true, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, true, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="ExportBatchResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ExportBatchResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExportBatchResult object.
        /// </summary>
        /// <param name="export_batch_id">Initial value of the export_batch_id property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="batch_reference">Initial value of the batch_reference property.</param>
        /// <param name="date_created">Initial value of the date_created property.</param>
        /// <param name="no_cards">Initial value of the no_cards property.</param>
        /// <param name="export_batch_statuses_name">Initial value of the export_batch_statuses_name property.</param>
        /// <param name="export_batch_statuses_id">Initial value of the export_batch_statuses_id property.</param>
        /// <param name="comments">Initial value of the comments property.</param>
        /// <param name="status_date">Initial value of the status_date property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        public static ExportBatchResult CreateExportBatchResult(global::System.Int64 export_batch_id, global::System.Int32 issuer_id, global::System.String batch_reference, global::System.DateTimeOffset date_created, global::System.Int32 no_cards, global::System.String export_batch_statuses_name, global::System.Int32 export_batch_statuses_id, global::System.String comments, global::System.DateTimeOffset status_date, global::System.String issuer_name, global::System.String issuer_code)
        {
            ExportBatchResult exportBatchResult = new ExportBatchResult();
            exportBatchResult.export_batch_id = export_batch_id;
            exportBatchResult.issuer_id = issuer_id;
            exportBatchResult.batch_reference = batch_reference;
            exportBatchResult.date_created = date_created;
            exportBatchResult.no_cards = no_cards;
            exportBatchResult.export_batch_statuses_name = export_batch_statuses_name;
            exportBatchResult.export_batch_statuses_id = export_batch_statuses_id;
            exportBatchResult.comments = comments;
            exportBatchResult.status_date = status_date;
            exportBatchResult.issuer_name = issuer_name;
            exportBatchResult.issuer_code = issuer_code;
            return exportBatchResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 export_batch_id
        {
            get
            {
                return _export_batch_id;
            }
            set
            {
                Onexport_batch_idChanging(value);
                ReportPropertyChanging("export_batch_id");
                _export_batch_id = StructuralObject.SetValidValue(value, "export_batch_id");
                ReportPropertyChanged("export_batch_id");
                Onexport_batch_idChanged();
            }
        }
        private global::System.Int64 _export_batch_id;
        partial void Onexport_batch_idChanging(global::System.Int64 value);
        partial void Onexport_batch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String batch_reference
        {
            get
            {
                return _batch_reference;
            }
            set
            {
                Onbatch_referenceChanging(value);
                ReportPropertyChanging("batch_reference");
                _batch_reference = StructuralObject.SetValidValue(value, false, "batch_reference");
                ReportPropertyChanged("batch_reference");
                Onbatch_referenceChanged();
            }
        }
        private global::System.String _batch_reference;
        partial void Onbatch_referenceChanging(global::System.String value);
        partial void Onbatch_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset date_created
        {
            get
            {
                return _date_created;
            }
            set
            {
                Ondate_createdChanging(value);
                ReportPropertyChanging("date_created");
                _date_created = StructuralObject.SetValidValue(value, "date_created");
                ReportPropertyChanged("date_created");
                Ondate_createdChanged();
            }
        }
        private global::System.DateTimeOffset _date_created;
        partial void Ondate_createdChanging(global::System.DateTimeOffset value);
        partial void Ondate_createdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 no_cards
        {
            get
            {
                return _no_cards;
            }
            set
            {
                Onno_cardsChanging(value);
                ReportPropertyChanging("no_cards");
                _no_cards = StructuralObject.SetValidValue(value, "no_cards");
                ReportPropertyChanged("no_cards");
                Onno_cardsChanged();
            }
        }
        private global::System.Int32 _no_cards;
        partial void Onno_cardsChanging(global::System.Int32 value);
        partial void Onno_cardsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String export_batch_statuses_name
        {
            get
            {
                return _export_batch_statuses_name;
            }
            set
            {
                Onexport_batch_statuses_nameChanging(value);
                ReportPropertyChanging("export_batch_statuses_name");
                _export_batch_statuses_name = StructuralObject.SetValidValue(value, false, "export_batch_statuses_name");
                ReportPropertyChanged("export_batch_statuses_name");
                Onexport_batch_statuses_nameChanged();
            }
        }
        private global::System.String _export_batch_statuses_name;
        partial void Onexport_batch_statuses_nameChanging(global::System.String value);
        partial void Onexport_batch_statuses_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 export_batch_statuses_id
        {
            get
            {
                return _export_batch_statuses_id;
            }
            set
            {
                Onexport_batch_statuses_idChanging(value);
                ReportPropertyChanging("export_batch_statuses_id");
                _export_batch_statuses_id = StructuralObject.SetValidValue(value, "export_batch_statuses_id");
                ReportPropertyChanged("export_batch_statuses_id");
                Onexport_batch_statuses_idChanged();
            }
        }
        private global::System.Int32 _export_batch_statuses_id;
        partial void Onexport_batch_statuses_idChanging(global::System.Int32 value);
        partial void Onexport_batch_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String comments
        {
            get
            {
                return _comments;
            }
            set
            {
                OncommentsChanging(value);
                ReportPropertyChanging("comments");
                _comments = StructuralObject.SetValidValue(value, false, "comments");
                ReportPropertyChanged("comments");
                OncommentsChanged();
            }
        }
        private global::System.String _comments;
        partial void OncommentsChanging(global::System.String value);
        partial void OncommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset status_date
        {
            get
            {
                return _status_date;
            }
            set
            {
                Onstatus_dateChanging(value);
                ReportPropertyChanging("status_date");
                _status_date = StructuralObject.SetValidValue(value, "status_date");
                ReportPropertyChanged("status_date");
                Onstatus_dateChanged();
            }
        }
        private global::System.DateTimeOffset _status_date;
        partial void Onstatus_dateChanging(global::System.DateTimeOffset value);
        partial void Onstatus_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="ExternalSystemFieldsResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ExternalSystemFieldsResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExternalSystemFieldsResult object.
        /// </summary>
        /// <param name="external_system_field_id">Initial value of the external_system_field_id property.</param>
        /// <param name="external_system_id">Initial value of the external_system_id property.</param>
        /// <param name="field_name">Initial value of the field_name property.</param>
        /// <param name="system_name">Initial value of the system_name property.</param>
        public static ExternalSystemFieldsResult CreateExternalSystemFieldsResult(global::System.Int32 external_system_field_id, global::System.Int32 external_system_id, global::System.String field_name, global::System.String system_name)
        {
            ExternalSystemFieldsResult externalSystemFieldsResult = new ExternalSystemFieldsResult();
            externalSystemFieldsResult.external_system_field_id = external_system_field_id;
            externalSystemFieldsResult.external_system_id = external_system_id;
            externalSystemFieldsResult.field_name = field_name;
            externalSystemFieldsResult.system_name = system_name;
            return externalSystemFieldsResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 external_system_field_id
        {
            get
            {
                return _external_system_field_id;
            }
            set
            {
                Onexternal_system_field_idChanging(value);
                ReportPropertyChanging("external_system_field_id");
                _external_system_field_id = StructuralObject.SetValidValue(value, "external_system_field_id");
                ReportPropertyChanged("external_system_field_id");
                Onexternal_system_field_idChanged();
            }
        }
        private global::System.Int32 _external_system_field_id;
        partial void Onexternal_system_field_idChanging(global::System.Int32 value);
        partial void Onexternal_system_field_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 external_system_id
        {
            get
            {
                return _external_system_id;
            }
            set
            {
                Onexternal_system_idChanging(value);
                ReportPropertyChanging("external_system_id");
                _external_system_id = StructuralObject.SetValidValue(value, "external_system_id");
                ReportPropertyChanged("external_system_id");
                Onexternal_system_idChanged();
            }
        }
        private global::System.Int32 _external_system_id;
        partial void Onexternal_system_idChanging(global::System.Int32 value);
        partial void Onexternal_system_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String field_name
        {
            get
            {
                return _field_name;
            }
            set
            {
                Onfield_nameChanging(value);
                ReportPropertyChanging("field_name");
                _field_name = StructuralObject.SetValidValue(value, false, "field_name");
                ReportPropertyChanged("field_name");
                Onfield_nameChanged();
            }
        }
        private global::System.String _field_name;
        partial void Onfield_nameChanging(global::System.String value);
        partial void Onfield_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String system_name
        {
            get
            {
                return _system_name;
            }
            set
            {
                Onsystem_nameChanging(value);
                ReportPropertyChanging("system_name");
                _system_name = StructuralObject.SetValidValue(value, false, "system_name");
                ReportPropertyChanged("system_name");
                Onsystem_nameChanged();
            }
        }
        private global::System.String _system_name;
        partial void Onsystem_nameChanging(global::System.String value);
        partial void Onsystem_nameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="ExternalSystemsResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ExternalSystemsResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExternalSystemsResult object.
        /// </summary>
        /// <param name="external_system_id">Initial value of the external_system_id property.</param>
        /// <param name="external_system_type_id">Initial value of the external_system_type_id property.</param>
        /// <param name="system_name">Initial value of the system_name property.</param>
        /// <param name="external_system_type">Initial value of the external_system_type property.</param>
        public static ExternalSystemsResult CreateExternalSystemsResult(global::System.Int32 external_system_id, global::System.Int32 external_system_type_id, global::System.String system_name, global::System.String external_system_type)
        {
            ExternalSystemsResult externalSystemsResult = new ExternalSystemsResult();
            externalSystemsResult.external_system_id = external_system_id;
            externalSystemsResult.external_system_type_id = external_system_type_id;
            externalSystemsResult.system_name = system_name;
            externalSystemsResult.external_system_type = external_system_type;
            return externalSystemsResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 external_system_id
        {
            get
            {
                return _external_system_id;
            }
            set
            {
                Onexternal_system_idChanging(value);
                ReportPropertyChanging("external_system_id");
                _external_system_id = StructuralObject.SetValidValue(value, "external_system_id");
                ReportPropertyChanged("external_system_id");
                Onexternal_system_idChanged();
            }
        }
        private global::System.Int32 _external_system_id;
        partial void Onexternal_system_idChanging(global::System.Int32 value);
        partial void Onexternal_system_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 external_system_type_id
        {
            get
            {
                return _external_system_type_id;
            }
            set
            {
                Onexternal_system_type_idChanging(value);
                ReportPropertyChanging("external_system_type_id");
                _external_system_type_id = StructuralObject.SetValidValue(value, "external_system_type_id");
                ReportPropertyChanged("external_system_type_id");
                Onexternal_system_type_idChanged();
            }
        }
        private global::System.Int32 _external_system_type_id;
        partial void Onexternal_system_type_idChanging(global::System.Int32 value);
        partial void Onexternal_system_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String system_name
        {
            get
            {
                return _system_name;
            }
            set
            {
                Onsystem_nameChanging(value);
                ReportPropertyChanging("system_name");
                _system_name = StructuralObject.SetValidValue(value, false, "system_name");
                ReportPropertyChanged("system_name");
                Onsystem_nameChanged();
            }
        }
        private global::System.String _system_name;
        partial void Onsystem_nameChanging(global::System.String value);
        partial void Onsystem_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String external_system_type
        {
            get
            {
                return _external_system_type;
            }
            set
            {
                Onexternal_system_typeChanging(value);
                ReportPropertyChanging("external_system_type");
                _external_system_type = StructuralObject.SetValidValue(value, false, "external_system_type");
                ReportPropertyChanged("external_system_type");
                Onexternal_system_typeChanged();
            }
        }
        private global::System.String _external_system_type;
        partial void Onexternal_system_typeChanging(global::System.String value);
        partial void Onexternal_system_typeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="FeeChargeResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FeeChargeResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeeChargeResult object.
        /// </summary>
        /// <param name="currency_id">Initial value of the currency_id property.</param>
        /// <param name="currency_code">Initial value of the currency_code property.</param>
        /// <param name="fee_charge">Initial value of the fee_charge property.</param>
        /// <param name="iso_4217_numeric_code">Initial value of the iso_4217_numeric_code property.</param>
        /// <param name="currency_desc">Initial value of the currency_desc property.</param>
        /// <param name="active_YN">Initial value of the active_YN property.</param>
        /// <param name="vat">Initial value of the vat property.</param>
        public static FeeChargeResult CreateFeeChargeResult(global::System.Int32 currency_id, global::System.String currency_code, global::System.Decimal fee_charge, global::System.String iso_4217_numeric_code, global::System.String currency_desc, global::System.Boolean active_YN, global::System.Decimal vat)
        {
            FeeChargeResult feeChargeResult = new FeeChargeResult();
            feeChargeResult.currency_id = currency_id;
            feeChargeResult.currency_code = currency_code;
            feeChargeResult.fee_charge = fee_charge;
            feeChargeResult.iso_4217_numeric_code = iso_4217_numeric_code;
            feeChargeResult.currency_desc = currency_desc;
            feeChargeResult.active_YN = active_YN;
            feeChargeResult.vat = vat;
            return feeChargeResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 currency_id
        {
            get
            {
                return _currency_id;
            }
            set
            {
                Oncurrency_idChanging(value);
                ReportPropertyChanging("currency_id");
                _currency_id = StructuralObject.SetValidValue(value, "currency_id");
                ReportPropertyChanged("currency_id");
                Oncurrency_idChanged();
            }
        }
        private global::System.Int32 _currency_id;
        partial void Oncurrency_idChanging(global::System.Int32 value);
        partial void Oncurrency_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String currency_code
        {
            get
            {
                return _currency_code;
            }
            set
            {
                Oncurrency_codeChanging(value);
                ReportPropertyChanging("currency_code");
                _currency_code = StructuralObject.SetValidValue(value, false, "currency_code");
                ReportPropertyChanged("currency_code");
                Oncurrency_codeChanged();
            }
        }
        private global::System.String _currency_code;
        partial void Oncurrency_codeChanging(global::System.String value);
        partial void Oncurrency_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal fee_charge
        {
            get
            {
                return _fee_charge;
            }
            set
            {
                Onfee_chargeChanging(value);
                ReportPropertyChanging("fee_charge");
                _fee_charge = StructuralObject.SetValidValue(value, "fee_charge");
                ReportPropertyChanged("fee_charge");
                Onfee_chargeChanged();
            }
        }
        private global::System.Decimal _fee_charge;
        partial void Onfee_chargeChanging(global::System.Decimal value);
        partial void Onfee_chargeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String iso_4217_numeric_code
        {
            get
            {
                return _iso_4217_numeric_code;
            }
            set
            {
                Oniso_4217_numeric_codeChanging(value);
                ReportPropertyChanging("iso_4217_numeric_code");
                _iso_4217_numeric_code = StructuralObject.SetValidValue(value, false, "iso_4217_numeric_code");
                ReportPropertyChanged("iso_4217_numeric_code");
                Oniso_4217_numeric_codeChanged();
            }
        }
        private global::System.String _iso_4217_numeric_code;
        partial void Oniso_4217_numeric_codeChanging(global::System.String value);
        partial void Oniso_4217_numeric_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> iso_4217_minor_unit
        {
            get
            {
                return _iso_4217_minor_unit;
            }
            set
            {
                Oniso_4217_minor_unitChanging(value);
                ReportPropertyChanging("iso_4217_minor_unit");
                _iso_4217_minor_unit = StructuralObject.SetValidValue(value, "iso_4217_minor_unit");
                ReportPropertyChanged("iso_4217_minor_unit");
                Oniso_4217_minor_unitChanged();
            }
        }
        private Nullable<global::System.Int32> _iso_4217_minor_unit;
        partial void Oniso_4217_minor_unitChanging(Nullable<global::System.Int32> value);
        partial void Oniso_4217_minor_unitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String currency_desc
        {
            get
            {
                return _currency_desc;
            }
            set
            {
                Oncurrency_descChanging(value);
                ReportPropertyChanging("currency_desc");
                _currency_desc = StructuralObject.SetValidValue(value, false, "currency_desc");
                ReportPropertyChanged("currency_desc");
                Oncurrency_descChanged();
            }
        }
        private global::System.String _currency_desc;
        partial void Oncurrency_descChanging(global::System.String value);
        partial void Oncurrency_descChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean active_YN
        {
            get
            {
                return _active_YN;
            }
            set
            {
                Onactive_YNChanging(value);
                ReportPropertyChanging("active_YN");
                _active_YN = StructuralObject.SetValidValue(value, "active_YN");
                ReportPropertyChanged("active_YN");
                Onactive_YNChanged();
            }
        }
        private global::System.Boolean _active_YN;
        partial void Onactive_YNChanging(global::System.Boolean value);
        partial void Onactive_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal vat
        {
            get
            {
                return _vat;
            }
            set
            {
                OnvatChanging(value);
                ReportPropertyChanging("vat");
                _vat = StructuralObject.SetValidValue(value, "vat");
                ReportPropertyChanged("vat");
                OnvatChanged();
            }
        }
        private global::System.Decimal _vat;
        partial void OnvatChanging(global::System.Decimal value);
        partial void OnvatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cbs_account_type
        {
            get
            {
                return _cbs_account_type;
            }
            set
            {
                Oncbs_account_typeChanging(value);
                ReportPropertyChanging("cbs_account_type");
                _cbs_account_type = StructuralObject.SetValidValue(value, true, "cbs_account_type");
                ReportPropertyChanged("cbs_account_type");
                Oncbs_account_typeChanged();
            }
        }
        private global::System.String _cbs_account_type;
        partial void Oncbs_account_typeChanging(global::System.String value);
        partial void Oncbs_account_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> card_issue_reason_id
        {
            get
            {
                return _card_issue_reason_id;
            }
            set
            {
                Oncard_issue_reason_idChanging(value);
                ReportPropertyChanging("card_issue_reason_id");
                _card_issue_reason_id = StructuralObject.SetValidValue(value, "card_issue_reason_id");
                ReportPropertyChanged("card_issue_reason_id");
                Oncard_issue_reason_idChanged();
            }
        }
        private Nullable<global::System.Int32> _card_issue_reason_id;
        partial void Oncard_issue_reason_idChanging(Nullable<global::System.Int32> value);
        partial void Oncard_issue_reason_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="FeeDetailResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FeeDetailResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeeDetailResult object.
        /// </summary>
        /// <param name="fee_scheme_id">Initial value of the fee_scheme_id property.</param>
        /// <param name="fee_detail_id">Initial value of the fee_detail_id property.</param>
        /// <param name="fee_detail_name">Initial value of the fee_detail_name property.</param>
        /// <param name="fee_waiver_YN">Initial value of the fee_waiver_YN property.</param>
        /// <param name="fee_editable_YN">Initial value of the fee_editable_YN property.</param>
        /// <param name="deleted_yn">Initial value of the deleted_yn property.</param>
        public static FeeDetailResult CreateFeeDetailResult(global::System.Int32 fee_scheme_id, global::System.Int32 fee_detail_id, global::System.String fee_detail_name, global::System.Boolean fee_waiver_YN, global::System.Boolean fee_editable_YN, global::System.Boolean deleted_yn)
        {
            FeeDetailResult feeDetailResult = new FeeDetailResult();
            feeDetailResult.fee_scheme_id = fee_scheme_id;
            feeDetailResult.fee_detail_id = fee_detail_id;
            feeDetailResult.fee_detail_name = fee_detail_name;
            feeDetailResult.fee_waiver_YN = fee_waiver_YN;
            feeDetailResult.fee_editable_YN = fee_editable_YN;
            feeDetailResult.deleted_yn = deleted_yn;
            return feeDetailResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fee_scheme_id
        {
            get
            {
                return _fee_scheme_id;
            }
            set
            {
                Onfee_scheme_idChanging(value);
                ReportPropertyChanging("fee_scheme_id");
                _fee_scheme_id = StructuralObject.SetValidValue(value, "fee_scheme_id");
                ReportPropertyChanged("fee_scheme_id");
                Onfee_scheme_idChanged();
            }
        }
        private global::System.Int32 _fee_scheme_id;
        partial void Onfee_scheme_idChanging(global::System.Int32 value);
        partial void Onfee_scheme_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fee_detail_id
        {
            get
            {
                return _fee_detail_id;
            }
            set
            {
                Onfee_detail_idChanging(value);
                ReportPropertyChanging("fee_detail_id");
                _fee_detail_id = StructuralObject.SetValidValue(value, "fee_detail_id");
                ReportPropertyChanged("fee_detail_id");
                Onfee_detail_idChanged();
            }
        }
        private global::System.Int32 _fee_detail_id;
        partial void Onfee_detail_idChanging(global::System.Int32 value);
        partial void Onfee_detail_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String fee_detail_name
        {
            get
            {
                return _fee_detail_name;
            }
            set
            {
                Onfee_detail_nameChanging(value);
                ReportPropertyChanging("fee_detail_name");
                _fee_detail_name = StructuralObject.SetValidValue(value, false, "fee_detail_name");
                ReportPropertyChanged("fee_detail_name");
                Onfee_detail_nameChanged();
            }
        }
        private global::System.String _fee_detail_name;
        partial void Onfee_detail_nameChanging(global::System.String value);
        partial void Onfee_detail_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> effective_from
        {
            get
            {
                return _effective_from;
            }
            set
            {
                Oneffective_fromChanging(value);
                ReportPropertyChanging("effective_from");
                _effective_from = StructuralObject.SetValidValue(value, "effective_from");
                ReportPropertyChanged("effective_from");
                Oneffective_fromChanged();
            }
        }
        private Nullable<global::System.DateTime> _effective_from;
        partial void Oneffective_fromChanging(Nullable<global::System.DateTime> value);
        partial void Oneffective_fromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean fee_waiver_YN
        {
            get
            {
                return _fee_waiver_YN;
            }
            set
            {
                Onfee_waiver_YNChanging(value);
                ReportPropertyChanging("fee_waiver_YN");
                _fee_waiver_YN = StructuralObject.SetValidValue(value, "fee_waiver_YN");
                ReportPropertyChanged("fee_waiver_YN");
                Onfee_waiver_YNChanged();
            }
        }
        private global::System.Boolean _fee_waiver_YN;
        partial void Onfee_waiver_YNChanging(global::System.Boolean value);
        partial void Onfee_waiver_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean fee_editable_YN
        {
            get
            {
                return _fee_editable_YN;
            }
            set
            {
                Onfee_editable_YNChanging(value);
                ReportPropertyChanging("fee_editable_YN");
                _fee_editable_YN = StructuralObject.SetValidValue(value, "fee_editable_YN");
                ReportPropertyChanged("fee_editable_YN");
                Onfee_editable_YNChanged();
            }
        }
        private global::System.Boolean _fee_editable_YN;
        partial void Onfee_editable_YNChanging(global::System.Boolean value);
        partial void Onfee_editable_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean deleted_yn
        {
            get
            {
                return _deleted_yn;
            }
            set
            {
                Ondeleted_ynChanging(value);
                ReportPropertyChanging("deleted_yn");
                _deleted_yn = StructuralObject.SetValidValue(value, "deleted_yn");
                ReportPropertyChanged("deleted_yn");
                Ondeleted_ynChanged();
            }
        }
        private global::System.Boolean _deleted_yn;
        partial void Ondeleted_ynChanging(global::System.Boolean value);
        partial void Ondeleted_ynChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> effective_to
        {
            get
            {
                return _effective_to;
            }
            set
            {
                Oneffective_toChanging(value);
                ReportPropertyChanging("effective_to");
                _effective_to = StructuralObject.SetValidValue(value, "effective_to");
                ReportPropertyChanged("effective_to");
                Oneffective_toChanged();
            }
        }
        private Nullable<global::System.DateTime> _effective_to;
        partial void Oneffective_toChanging(Nullable<global::System.DateTime> value);
        partial void Oneffective_toChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="FeeSchemeResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FeeSchemeResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeeSchemeResult object.
        /// </summary>
        /// <param name="fee_scheme_id">Initial value of the fee_scheme_id property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="fee_scheme_name">Initial value of the fee_scheme_name property.</param>
        /// <param name="deleted_yn">Initial value of the deleted_yn property.</param>
        /// <param name="tOTAL_PAGES">Initial value of the TOTAL_PAGES property.</param>
        /// <param name="tOTAL_ROWS">Initial value of the TOTAL_ROWS property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="fee_accounting_id">Initial value of the fee_accounting_id property.</param>
        public static FeeSchemeResult CreateFeeSchemeResult(global::System.Int32 fee_scheme_id, global::System.Int32 issuer_id, global::System.String fee_scheme_name, global::System.Boolean deleted_yn, global::System.Int32 tOTAL_PAGES, global::System.Int32 tOTAL_ROWS, global::System.String issuer_name, global::System.Int32 fee_accounting_id)
        {
            FeeSchemeResult feeSchemeResult = new FeeSchemeResult();
            feeSchemeResult.fee_scheme_id = fee_scheme_id;
            feeSchemeResult.issuer_id = issuer_id;
            feeSchemeResult.fee_scheme_name = fee_scheme_name;
            feeSchemeResult.deleted_yn = deleted_yn;
            feeSchemeResult.TOTAL_PAGES = tOTAL_PAGES;
            feeSchemeResult.TOTAL_ROWS = tOTAL_ROWS;
            feeSchemeResult.issuer_name = issuer_name;
            feeSchemeResult.fee_accounting_id = fee_accounting_id;
            return feeSchemeResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fee_scheme_id
        {
            get
            {
                return _fee_scheme_id;
            }
            set
            {
                Onfee_scheme_idChanging(value);
                ReportPropertyChanging("fee_scheme_id");
                _fee_scheme_id = StructuralObject.SetValidValue(value, "fee_scheme_id");
                ReportPropertyChanged("fee_scheme_id");
                Onfee_scheme_idChanged();
            }
        }
        private global::System.Int32 _fee_scheme_id;
        partial void Onfee_scheme_idChanging(global::System.Int32 value);
        partial void Onfee_scheme_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String fee_scheme_name
        {
            get
            {
                return _fee_scheme_name;
            }
            set
            {
                Onfee_scheme_nameChanging(value);
                ReportPropertyChanging("fee_scheme_name");
                _fee_scheme_name = StructuralObject.SetValidValue(value, false, "fee_scheme_name");
                ReportPropertyChanged("fee_scheme_name");
                Onfee_scheme_nameChanged();
            }
        }
        private global::System.String _fee_scheme_name;
        partial void Onfee_scheme_nameChanging(global::System.String value);
        partial void Onfee_scheme_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean deleted_yn
        {
            get
            {
                return _deleted_yn;
            }
            set
            {
                Ondeleted_ynChanging(value);
                ReportPropertyChanging("deleted_yn");
                _deleted_yn = StructuralObject.SetValidValue(value, "deleted_yn");
                ReportPropertyChanged("deleted_yn");
                Ondeleted_ynChanged();
            }
        }
        private global::System.Boolean _deleted_yn;
        partial void Ondeleted_ynChanging(global::System.Boolean value);
        partial void Ondeleted_ynChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private global::System.Int32 _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(global::System.Int32 value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private global::System.Int32 _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(global::System.Int32 value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fee_accounting_id
        {
            get
            {
                return _fee_accounting_id;
            }
            set
            {
                Onfee_accounting_idChanging(value);
                ReportPropertyChanging("fee_accounting_id");
                _fee_accounting_id = StructuralObject.SetValidValue(value, "fee_accounting_id");
                ReportPropertyChanged("fee_accounting_id");
                Onfee_accounting_idChanged();
            }
        }
        private global::System.Int32 _fee_accounting_id;
        partial void Onfee_accounting_idChanging(global::System.Int32 value);
        partial void Onfee_accounting_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="FileHistoryResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FileHistoryResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FileHistoryResult object.
        /// </summary>
        /// <param name="file_id">Initial value of the file_id property.</param>
        /// <param name="file_status_id">Initial value of the file_status_id property.</param>
        /// <param name="file_type_id">Initial value of the file_type_id property.</param>
        /// <param name="name_of_file">Initial value of the name_of_file property.</param>
        /// <param name="file_size">Initial value of the file_size property.</param>
        /// <param name="file_directory">Initial value of the file_directory property.</param>
        /// <param name="file_status">Initial value of the file_status property.</param>
        /// <param name="file_type">Initial value of the file_type property.</param>
        /// <param name="file_load_id">Initial value of the file_load_id property.</param>
        public static FileHistoryResult CreateFileHistoryResult(global::System.Int64 file_id, global::System.Int32 file_status_id, global::System.Int32 file_type_id, global::System.String name_of_file, global::System.Int32 file_size, global::System.String file_directory, global::System.String file_status, global::System.String file_type, global::System.Int32 file_load_id)
        {
            FileHistoryResult fileHistoryResult = new FileHistoryResult();
            fileHistoryResult.file_id = file_id;
            fileHistoryResult.file_status_id = file_status_id;
            fileHistoryResult.file_type_id = file_type_id;
            fileHistoryResult.name_of_file = name_of_file;
            fileHistoryResult.file_size = file_size;
            fileHistoryResult.file_directory = file_directory;
            fileHistoryResult.file_status = file_status;
            fileHistoryResult.file_type = file_type;
            fileHistoryResult.file_load_id = file_load_id;
            return fileHistoryResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 file_id
        {
            get
            {
                return _file_id;
            }
            set
            {
                Onfile_idChanging(value);
                ReportPropertyChanging("file_id");
                _file_id = StructuralObject.SetValidValue(value, "file_id");
                ReportPropertyChanged("file_id");
                Onfile_idChanged();
            }
        }
        private global::System.Int64 _file_id;
        partial void Onfile_idChanging(global::System.Int64 value);
        partial void Onfile_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private Nullable<global::System.Int32> _issuer_id;
        partial void Onissuer_idChanging(Nullable<global::System.Int32> value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 file_status_id
        {
            get
            {
                return _file_status_id;
            }
            set
            {
                Onfile_status_idChanging(value);
                ReportPropertyChanging("file_status_id");
                _file_status_id = StructuralObject.SetValidValue(value, "file_status_id");
                ReportPropertyChanged("file_status_id");
                Onfile_status_idChanged();
            }
        }
        private global::System.Int32 _file_status_id;
        partial void Onfile_status_idChanging(global::System.Int32 value);
        partial void Onfile_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 file_type_id
        {
            get
            {
                return _file_type_id;
            }
            set
            {
                Onfile_type_idChanging(value);
                ReportPropertyChanging("file_type_id");
                _file_type_id = StructuralObject.SetValidValue(value, "file_type_id");
                ReportPropertyChanged("file_type_id");
                Onfile_type_idChanged();
            }
        }
        private global::System.Int32 _file_type_id;
        partial void Onfile_type_idChanging(global::System.Int32 value);
        partial void Onfile_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name_of_file
        {
            get
            {
                return _name_of_file;
            }
            set
            {
                Onname_of_fileChanging(value);
                ReportPropertyChanging("name_of_file");
                _name_of_file = StructuralObject.SetValidValue(value, false, "name_of_file");
                ReportPropertyChanged("name_of_file");
                Onname_of_fileChanged();
            }
        }
        private global::System.String _name_of_file;
        partial void Onname_of_fileChanging(global::System.String value);
        partial void Onname_of_fileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> file_created_date
        {
            get
            {
                return _file_created_date;
            }
            set
            {
                Onfile_created_dateChanging(value);
                ReportPropertyChanging("file_created_date");
                _file_created_date = StructuralObject.SetValidValue(value, "file_created_date");
                ReportPropertyChanged("file_created_date");
                Onfile_created_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _file_created_date;
        partial void Onfile_created_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onfile_created_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 file_size
        {
            get
            {
                return _file_size;
            }
            set
            {
                Onfile_sizeChanging(value);
                ReportPropertyChanging("file_size");
                _file_size = StructuralObject.SetValidValue(value, "file_size");
                ReportPropertyChanged("file_size");
                Onfile_sizeChanged();
            }
        }
        private global::System.Int32 _file_size;
        partial void Onfile_sizeChanging(global::System.Int32 value);
        partial void Onfile_sizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> load_date
        {
            get
            {
                return _load_date;
            }
            set
            {
                Onload_dateChanging(value);
                ReportPropertyChanging("load_date");
                _load_date = StructuralObject.SetValidValue(value, "load_date");
                ReportPropertyChanged("load_date");
                Onload_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _load_date;
        partial void Onload_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onload_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String file_directory
        {
            get
            {
                return _file_directory;
            }
            set
            {
                Onfile_directoryChanging(value);
                ReportPropertyChanging("file_directory");
                _file_directory = StructuralObject.SetValidValue(value, false, "file_directory");
                ReportPropertyChanged("file_directory");
                Onfile_directoryChanged();
            }
        }
        private global::System.String _file_directory;
        partial void Onfile_directoryChanging(global::System.String value);
        partial void Onfile_directoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> number_successful_records
        {
            get
            {
                return _number_successful_records;
            }
            set
            {
                Onnumber_successful_recordsChanging(value);
                ReportPropertyChanging("number_successful_records");
                _number_successful_records = StructuralObject.SetValidValue(value, "number_successful_records");
                ReportPropertyChanged("number_successful_records");
                Onnumber_successful_recordsChanged();
            }
        }
        private Nullable<global::System.Int32> _number_successful_records;
        partial void Onnumber_successful_recordsChanging(Nullable<global::System.Int32> value);
        partial void Onnumber_successful_recordsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> number_failed_records
        {
            get
            {
                return _number_failed_records;
            }
            set
            {
                Onnumber_failed_recordsChanging(value);
                ReportPropertyChanging("number_failed_records");
                _number_failed_records = StructuralObject.SetValidValue(value, "number_failed_records");
                ReportPropertyChanged("number_failed_records");
                Onnumber_failed_recordsChanged();
            }
        }
        private Nullable<global::System.Int32> _number_failed_records;
        partial void Onnumber_failed_recordsChanging(Nullable<global::System.Int32> value);
        partial void Onnumber_failed_recordsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String file_load_comments
        {
            get
            {
                return _file_load_comments;
            }
            set
            {
                Onfile_load_commentsChanging(value);
                ReportPropertyChanging("file_load_comments");
                _file_load_comments = StructuralObject.SetValidValue(value, true, "file_load_comments");
                ReportPropertyChanged("file_load_comments");
                Onfile_load_commentsChanged();
            }
        }
        private global::System.String _file_load_comments;
        partial void Onfile_load_commentsChanging(global::System.String value);
        partial void Onfile_load_commentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String file_status
        {
            get
            {
                return _file_status;
            }
            set
            {
                Onfile_statusChanging(value);
                ReportPropertyChanging("file_status");
                _file_status = StructuralObject.SetValidValue(value, false, "file_status");
                ReportPropertyChanged("file_status");
                Onfile_statusChanged();
            }
        }
        private global::System.String _file_status;
        partial void Onfile_statusChanging(global::System.String value);
        partial void Onfile_statusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String file_type
        {
            get
            {
                return _file_type;
            }
            set
            {
                Onfile_typeChanging(value);
                ReportPropertyChanging("file_type");
                _file_type = StructuralObject.SetValidValue(value, false, "file_type");
                ReportPropertyChanged("file_type");
                Onfile_typeChanged();
            }
        }
        private global::System.String _file_type;
        partial void Onfile_typeChanging(global::System.String value);
        partial void Onfile_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, true, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, true, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 file_load_id
        {
            get
            {
                return _file_load_id;
            }
            set
            {
                Onfile_load_idChanging(value);
                ReportPropertyChanging("file_load_id");
                _file_load_id = StructuralObject.SetValidValue(value, "file_load_id");
                ReportPropertyChanged("file_load_id");
                Onfile_load_idChanged();
            }
        }
        private global::System.Int32 _file_load_id;
        partial void Onfile_load_idChanging(global::System.Int32 value);
        partial void Onfile_load_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="FileLoadResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FileLoadResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FileLoadResult object.
        /// </summary>
        /// <param name="file_load_id">Initial value of the file_load_id property.</param>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="files_to_process">Initial value of the files_to_process property.</param>
        public static FileLoadResult CreateFileLoadResult(global::System.Int32 file_load_id, global::System.Int32 user_id, global::System.Int32 files_to_process)
        {
            FileLoadResult fileLoadResult = new FileLoadResult();
            fileLoadResult.file_load_id = file_load_id;
            fileLoadResult.user_id = user_id;
            fileLoadResult.files_to_process = files_to_process;
            return fileLoadResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 file_load_id
        {
            get
            {
                return _file_load_id;
            }
            set
            {
                Onfile_load_idChanging(value);
                ReportPropertyChanging("file_load_id");
                _file_load_id = StructuralObject.SetValidValue(value, "file_load_id");
                ReportPropertyChanged("file_load_id");
                Onfile_load_idChanged();
            }
        }
        private global::System.Int32 _file_load_id;
        partial void Onfile_load_idChanging(global::System.Int32 value);
        partial void Onfile_load_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> file_load_start
        {
            get
            {
                return _file_load_start;
            }
            set
            {
                Onfile_load_startChanging(value);
                ReportPropertyChanging("file_load_start");
                _file_load_start = StructuralObject.SetValidValue(value, "file_load_start");
                ReportPropertyChanged("file_load_start");
                Onfile_load_startChanged();
            }
        }
        private Nullable<global::System.DateTime> _file_load_start;
        partial void Onfile_load_startChanging(Nullable<global::System.DateTime> value);
        partial void Onfile_load_startChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> file_load_end
        {
            get
            {
                return _file_load_end;
            }
            set
            {
                Onfile_load_endChanging(value);
                ReportPropertyChanging("file_load_end");
                _file_load_end = StructuralObject.SetValidValue(value, "file_load_end");
                ReportPropertyChanged("file_load_end");
                Onfile_load_endChanged();
            }
        }
        private Nullable<global::System.DateTime> _file_load_end;
        partial void Onfile_load_endChanging(Nullable<global::System.DateTime> value);
        partial void Onfile_load_endChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value, "user_id");
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int32 _user_id;
        partial void Onuser_idChanging(global::System.Int32 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 files_to_process
        {
            get
            {
                return _files_to_process;
            }
            set
            {
                Onfiles_to_processChanging(value);
                ReportPropertyChanging("files_to_process");
                _files_to_process = StructuralObject.SetValidValue(value, "files_to_process");
                ReportPropertyChanged("files_to_process");
                Onfiles_to_processChanged();
            }
        }
        private global::System.Int32 _files_to_process;
        partial void Onfiles_to_processChanging(global::System.Int32 value);
        partial void Onfiles_to_processChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="FlexParameterResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FlexParameterResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FlexParameterResult object.
        /// </summary>
        /// <param name="flex_parameter_id">Initial value of the flex_parameter_id property.</param>
        /// <param name="source_code">Initial value of the source_code property.</param>
        /// <param name="request_id">Initial value of the request_id property.</param>
        /// <param name="request_token">Initial value of the request_token property.</param>
        /// <param name="request_type">Initial value of the request_type property.</param>
        /// <param name="source_channel_id">Initial value of the source_channel_id property.</param>
        /// <param name="affiliate_code">Initial value of the affiliate_code property.</param>
        public static FlexParameterResult CreateFlexParameterResult(global::System.Int32 flex_parameter_id, global::System.String source_code, global::System.Int64 request_id, global::System.String request_token, global::System.String request_type, global::System.String source_channel_id, global::System.String affiliate_code)
        {
            FlexParameterResult flexParameterResult = new FlexParameterResult();
            flexParameterResult.flex_parameter_id = flex_parameter_id;
            flexParameterResult.source_code = source_code;
            flexParameterResult.request_id = request_id;
            flexParameterResult.request_token = request_token;
            flexParameterResult.request_type = request_type;
            flexParameterResult.source_channel_id = source_channel_id;
            flexParameterResult.affiliate_code = affiliate_code;
            return flexParameterResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 flex_parameter_id
        {
            get
            {
                return _flex_parameter_id;
            }
            set
            {
                Onflex_parameter_idChanging(value);
                ReportPropertyChanging("flex_parameter_id");
                _flex_parameter_id = StructuralObject.SetValidValue(value, "flex_parameter_id");
                ReportPropertyChanged("flex_parameter_id");
                Onflex_parameter_idChanged();
            }
        }
        private global::System.Int32 _flex_parameter_id;
        partial void Onflex_parameter_idChanging(global::System.Int32 value);
        partial void Onflex_parameter_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String source_code
        {
            get
            {
                return _source_code;
            }
            set
            {
                Onsource_codeChanging(value);
                ReportPropertyChanging("source_code");
                _source_code = StructuralObject.SetValidValue(value, false, "source_code");
                ReportPropertyChanged("source_code");
                Onsource_codeChanged();
            }
        }
        private global::System.String _source_code;
        partial void Onsource_codeChanging(global::System.String value);
        partial void Onsource_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 request_id
        {
            get
            {
                return _request_id;
            }
            set
            {
                Onrequest_idChanging(value);
                ReportPropertyChanging("request_id");
                _request_id = StructuralObject.SetValidValue(value, "request_id");
                ReportPropertyChanged("request_id");
                Onrequest_idChanged();
            }
        }
        private global::System.Int64 _request_id;
        partial void Onrequest_idChanging(global::System.Int64 value);
        partial void Onrequest_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String request_token
        {
            get
            {
                return _request_token;
            }
            set
            {
                Onrequest_tokenChanging(value);
                ReportPropertyChanging("request_token");
                _request_token = StructuralObject.SetValidValue(value, false, "request_token");
                ReportPropertyChanged("request_token");
                Onrequest_tokenChanged();
            }
        }
        private global::System.String _request_token;
        partial void Onrequest_tokenChanging(global::System.String value);
        partial void Onrequest_tokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String request_type
        {
            get
            {
                return _request_type;
            }
            set
            {
                Onrequest_typeChanging(value);
                ReportPropertyChanging("request_type");
                _request_type = StructuralObject.SetValidValue(value, false, "request_type");
                ReportPropertyChanged("request_type");
                Onrequest_typeChanged();
            }
        }
        private global::System.String _request_type;
        partial void Onrequest_typeChanging(global::System.String value);
        partial void Onrequest_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String source_channel_id
        {
            get
            {
                return _source_channel_id;
            }
            set
            {
                Onsource_channel_idChanging(value);
                ReportPropertyChanging("source_channel_id");
                _source_channel_id = StructuralObject.SetValidValue(value, false, "source_channel_id");
                ReportPropertyChanged("source_channel_id");
                Onsource_channel_idChanged();
            }
        }
        private global::System.String _source_channel_id;
        partial void Onsource_channel_idChanging(global::System.String value);
        partial void Onsource_channel_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String affiliate_code
        {
            get
            {
                return _affiliate_code;
            }
            set
            {
                Onaffiliate_codeChanging(value);
                ReportPropertyChanging("affiliate_code");
                _affiliate_code = StructuralObject.SetValidValue(value, false, "affiliate_code");
                ReportPropertyChanged("affiliate_code");
                Onaffiliate_codeChanged();
            }
        }
        private global::System.String _affiliate_code;
        partial void Onaffiliate_codeChanging(global::System.String value);
        partial void Onaffiliate_codeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="FlexResponseResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FlexResponseResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FlexResponseResult object.
        /// </summary>
        /// <param name="flex_response_name">Initial value of the flex_response_name property.</param>
        /// <param name="flex_response_id">Initial value of the flex_response_id property.</param>
        /// <param name="flex_response_value">Initial value of the flex_response_value property.</param>
        /// <param name="valid_response">Initial value of the valid_response property.</param>
        /// <param name="flex_response_value_id">Initial value of the flex_response_value_id property.</param>
        /// <param name="language_text">Initial value of the language_text property.</param>
        public static FlexResponseResult CreateFlexResponseResult(global::System.String flex_response_name, global::System.Int32 flex_response_id, global::System.String flex_response_value, global::System.Boolean valid_response, global::System.Int32 flex_response_value_id, global::System.String language_text)
        {
            FlexResponseResult flexResponseResult = new FlexResponseResult();
            flexResponseResult.flex_response_name = flex_response_name;
            flexResponseResult.flex_response_id = flex_response_id;
            flexResponseResult.flex_response_value = flex_response_value;
            flexResponseResult.valid_response = valid_response;
            flexResponseResult.flex_response_value_id = flex_response_value_id;
            flexResponseResult.language_text = language_text;
            return flexResponseResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String flex_response_name
        {
            get
            {
                return _flex_response_name;
            }
            set
            {
                Onflex_response_nameChanging(value);
                ReportPropertyChanging("flex_response_name");
                _flex_response_name = StructuralObject.SetValidValue(value, false, "flex_response_name");
                ReportPropertyChanged("flex_response_name");
                Onflex_response_nameChanged();
            }
        }
        private global::System.String _flex_response_name;
        partial void Onflex_response_nameChanging(global::System.String value);
        partial void Onflex_response_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 flex_response_id
        {
            get
            {
                return _flex_response_id;
            }
            set
            {
                Onflex_response_idChanging(value);
                ReportPropertyChanging("flex_response_id");
                _flex_response_id = StructuralObject.SetValidValue(value, "flex_response_id");
                ReportPropertyChanged("flex_response_id");
                Onflex_response_idChanged();
            }
        }
        private global::System.Int32 _flex_response_id;
        partial void Onflex_response_idChanging(global::System.Int32 value);
        partial void Onflex_response_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String flex_response_value
        {
            get
            {
                return _flex_response_value;
            }
            set
            {
                Onflex_response_valueChanging(value);
                ReportPropertyChanging("flex_response_value");
                _flex_response_value = StructuralObject.SetValidValue(value, false, "flex_response_value");
                ReportPropertyChanged("flex_response_value");
                Onflex_response_valueChanged();
            }
        }
        private global::System.String _flex_response_value;
        partial void Onflex_response_valueChanging(global::System.String value);
        partial void Onflex_response_valueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean valid_response
        {
            get
            {
                return _valid_response;
            }
            set
            {
                Onvalid_responseChanging(value);
                ReportPropertyChanging("valid_response");
                _valid_response = StructuralObject.SetValidValue(value, "valid_response");
                ReportPropertyChanged("valid_response");
                Onvalid_responseChanged();
            }
        }
        private global::System.Boolean _valid_response;
        partial void Onvalid_responseChanging(global::System.Boolean value);
        partial void Onvalid_responseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 flex_response_value_id
        {
            get
            {
                return _flex_response_value_id;
            }
            set
            {
                Onflex_response_value_idChanging(value);
                ReportPropertyChanging("flex_response_value_id");
                _flex_response_value_id = StructuralObject.SetValidValue(value, "flex_response_value_id");
                ReportPropertyChanged("flex_response_value_id");
                Onflex_response_value_idChanged();
            }
        }
        private global::System.Int32 _flex_response_value_id;
        partial void Onflex_response_value_idChanging(global::System.Int32 value);
        partial void Onflex_response_value_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String language_text
        {
            get
            {
                return _language_text;
            }
            set
            {
                Onlanguage_textChanging(value);
                ReportPropertyChanging("language_text");
                _language_text = StructuralObject.SetValidValue(value, false, "language_text");
                ReportPropertyChanged("language_text");
                Onlanguage_textChanged();
            }
        }
        private global::System.String _language_text;
        partial void Onlanguage_textChanging(global::System.String value);
        partial void Onlanguage_textChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="FontResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FontResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FontResult object.
        /// </summary>
        /// <param name="font_id">Initial value of the font_id property.</param>
        /// <param name="font_name">Initial value of the font_name property.</param>
        public static FontResult CreateFontResult(global::System.Int32 font_id, global::System.String font_name)
        {
            FontResult fontResult = new FontResult();
            fontResult.font_id = font_id;
            fontResult.font_name = font_name;
            return fontResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 font_id
        {
            get
            {
                return _font_id;
            }
            set
            {
                Onfont_idChanging(value);
                ReportPropertyChanging("font_id");
                _font_id = StructuralObject.SetValidValue(value, "font_id");
                ReportPropertyChanged("font_id");
                Onfont_idChanged();
            }
        }
        private global::System.Int32 _font_id;
        partial void Onfont_idChanging(global::System.Int32 value);
        partial void Onfont_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String font_name
        {
            get
            {
                return _font_name;
            }
            set
            {
                Onfont_nameChanging(value);
                ReportPropertyChanging("font_name");
                _font_name = StructuralObject.SetValidValue(value, false, "font_name");
                ReportPropertyChanged("font_name");
                Onfont_nameChanged();
            }
        }
        private global::System.String _font_name;
        partial void Onfont_nameChanging(global::System.String value);
        partial void Onfont_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String resource_path
        {
            get
            {
                return _resource_path;
            }
            set
            {
                Onresource_pathChanging(value);
                ReportPropertyChanging("resource_path");
                _resource_path = StructuralObject.SetValidValue(value, true, "resource_path");
                ReportPropertyChanged("resource_path");
                Onresource_pathChanged();
            }
        }
        private global::System.String _resource_path;
        partial void Onresource_pathChanging(global::System.String value);
        partial void Onresource_pathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DeletedYN
        {
            get
            {
                return _DeletedYN;
            }
            set
            {
                OnDeletedYNChanging(value);
                ReportPropertyChanging("DeletedYN");
                _DeletedYN = StructuralObject.SetValidValue(value, "DeletedYN");
                ReportPropertyChanged("DeletedYN");
                OnDeletedYNChanged();
            }
        }
        private Nullable<global::System.Boolean> _DeletedYN;
        partial void OnDeletedYNChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedYNChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="GetAuditData_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetAuditData_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetAuditData_Result object.
        /// </summary>
        /// <param name="workstation_address">Initial value of the workstation_address property.</param>
        /// <param name="audit_action_name">Initial value of the audit_action_name property.</param>
        /// <param name="audit_id">Initial value of the audit_id property.</param>
        public static GetAuditData_Result CreateGetAuditData_Result(global::System.String workstation_address, global::System.String audit_action_name, global::System.Int64 audit_id)
        {
            GetAuditData_Result getAuditData_Result = new GetAuditData_Result();
            getAuditData_Result.workstation_address = workstation_address;
            getAuditData_Result.audit_action_name = audit_action_name;
            getAuditData_Result.audit_id = audit_id;
            return getAuditData_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private Nullable<global::System.Int32> _issuer_id;
        partial void Onissuer_idChanging(Nullable<global::System.Int32> value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String workstation_address
        {
            get
            {
                return _workstation_address;
            }
            set
            {
                Onworkstation_addressChanging(value);
                ReportPropertyChanging("workstation_address");
                _workstation_address = StructuralObject.SetValidValue(value, false, "workstation_address");
                ReportPropertyChanged("workstation_address");
                Onworkstation_addressChanged();
            }
        }
        private global::System.String _workstation_address;
        partial void Onworkstation_addressChanging(global::System.String value);
        partial void Onworkstation_addressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String audit_date
        {
            get
            {
                return _audit_date;
            }
            set
            {
                Onaudit_dateChanging(value);
                ReportPropertyChanging("audit_date");
                _audit_date = StructuralObject.SetValidValue(value, true, "audit_date");
                ReportPropertyChanged("audit_date");
                Onaudit_dateChanged();
            }
        }
        private global::System.String _audit_date;
        partial void Onaudit_dateChanging(global::System.String value);
        partial void Onaudit_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String audit_action_name
        {
            get
            {
                return _audit_action_name;
            }
            set
            {
                Onaudit_action_nameChanging(value);
                ReportPropertyChanging("audit_action_name");
                _audit_action_name = StructuralObject.SetValidValue(value, false, "audit_action_name");
                ReportPropertyChanged("audit_action_name");
                Onaudit_action_nameChanged();
            }
        }
        private global::System.String _audit_action_name;
        partial void Onaudit_action_nameChanging(global::System.String value);
        partial void Onaudit_action_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String action_description
        {
            get
            {
                return _action_description;
            }
            set
            {
                Onaction_descriptionChanging(value);
                ReportPropertyChanging("action_description");
                _action_description = StructuralObject.SetValidValue(value, true, "action_description");
                ReportPropertyChanged("action_description");
                Onaction_descriptionChanged();
            }
        }
        private global::System.String _action_description;
        partial void Onaction_descriptionChanging(global::System.String value);
        partial void Onaction_descriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 audit_id
        {
            get
            {
                return _audit_id;
            }
            set
            {
                Onaudit_idChanging(value);
                ReportPropertyChanging("audit_id");
                _audit_id = StructuralObject.SetValidValue(value, "audit_id");
                ReportPropertyChanged("audit_id");
                Onaudit_idChanged();
            }
        }
        private global::System.Int64 _audit_id;
        partial void Onaudit_idChanging(global::System.Int64 value);
        partial void Onaudit_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String audit_Time
        {
            get
            {
                return _audit_Time;
            }
            set
            {
                Onaudit_TimeChanging(value);
                ReportPropertyChanging("audit_Time");
                _audit_Time = StructuralObject.SetValidValue(value, true, "audit_Time");
                ReportPropertyChanged("audit_Time");
                Onaudit_TimeChanged();
            }
        }
        private global::System.String _audit_Time;
        partial void Onaudit_TimeChanging(global::System.String value);
        partial void Onaudit_TimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String data_before
        {
            get
            {
                return _data_before;
            }
            set
            {
                Ondata_beforeChanging(value);
                ReportPropertyChanging("data_before");
                _data_before = StructuralObject.SetValidValue(value, true, "data_before");
                ReportPropertyChanged("data_before");
                Ondata_beforeChanged();
            }
        }
        private global::System.String _data_before;
        partial void Ondata_beforeChanging(global::System.String value);
        partial void Ondata_beforeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String data_after
        {
            get
            {
                return _data_after;
            }
            set
            {
                Ondata_afterChanging(value);
                ReportPropertyChanging("data_after");
                _data_after = StructuralObject.SetValidValue(value, true, "data_after");
                ReportPropertyChanged("data_after");
                Ondata_afterChanged();
            }
        }
        private global::System.String _data_after;
        partial void Ondata_afterChanging(global::System.String value);
        partial void Ondata_afterChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="GetFileLoderLog_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetFileLoderLog_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetFileLoderLog_Result object.
        /// </summary>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="file_id">Initial value of the file_id property.</param>
        /// <param name="file_status">Initial value of the file_status property.</param>
        /// <param name="name_of_file">Initial value of the name_of_file property.</param>
        /// <param name="file_size">Initial value of the file_size property.</param>
        /// <param name="file_directory">Initial value of the file_directory property.</param>
        /// <param name="file_type">Initial value of the file_type property.</param>
        public static GetFileLoderLog_Result CreateGetFileLoderLog_Result(global::System.Int32 issuer_id, global::System.Int64 file_id, global::System.String file_status, global::System.String name_of_file, global::System.Int32 file_size, global::System.String file_directory, global::System.String file_type)
        {
            GetFileLoderLog_Result getFileLoderLog_Result = new GetFileLoderLog_Result();
            getFileLoderLog_Result.issuer_id = issuer_id;
            getFileLoderLog_Result.file_id = file_id;
            getFileLoderLog_Result.file_status = file_status;
            getFileLoderLog_Result.name_of_file = name_of_file;
            getFileLoderLog_Result.file_size = file_size;
            getFileLoderLog_Result.file_directory = file_directory;
            getFileLoderLog_Result.file_type = file_type;
            return getFileLoderLog_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 file_id
        {
            get
            {
                return _file_id;
            }
            set
            {
                Onfile_idChanging(value);
                ReportPropertyChanging("file_id");
                _file_id = StructuralObject.SetValidValue(value, "file_id");
                ReportPropertyChanged("file_id");
                Onfile_idChanged();
            }
        }
        private global::System.Int64 _file_id;
        partial void Onfile_idChanging(global::System.Int64 value);
        partial void Onfile_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String file_status
        {
            get
            {
                return _file_status;
            }
            set
            {
                Onfile_statusChanging(value);
                ReportPropertyChanging("file_status");
                _file_status = StructuralObject.SetValidValue(value, false, "file_status");
                ReportPropertyChanged("file_status");
                Onfile_statusChanged();
            }
        }
        private global::System.String _file_status;
        partial void Onfile_statusChanging(global::System.String value);
        partial void Onfile_statusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> number_successful_records
        {
            get
            {
                return _number_successful_records;
            }
            set
            {
                Onnumber_successful_recordsChanging(value);
                ReportPropertyChanging("number_successful_records");
                _number_successful_records = StructuralObject.SetValidValue(value, "number_successful_records");
                ReportPropertyChanged("number_successful_records");
                Onnumber_successful_recordsChanged();
            }
        }
        private Nullable<global::System.Int32> _number_successful_records;
        partial void Onnumber_successful_recordsChanging(Nullable<global::System.Int32> value);
        partial void Onnumber_successful_recordsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> number_failed_records
        {
            get
            {
                return _number_failed_records;
            }
            set
            {
                Onnumber_failed_recordsChanging(value);
                ReportPropertyChanging("number_failed_records");
                _number_failed_records = StructuralObject.SetValidValue(value, "number_failed_records");
                ReportPropertyChanged("number_failed_records");
                Onnumber_failed_recordsChanged();
            }
        }
        private Nullable<global::System.Int32> _number_failed_records;
        partial void Onnumber_failed_recordsChanging(Nullable<global::System.Int32> value);
        partial void Onnumber_failed_recordsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String file_load_comments
        {
            get
            {
                return _file_load_comments;
            }
            set
            {
                Onfile_load_commentsChanging(value);
                ReportPropertyChanging("file_load_comments");
                _file_load_comments = StructuralObject.SetValidValue(value, true, "file_load_comments");
                ReportPropertyChanged("file_load_comments");
                Onfile_load_commentsChanged();
            }
        }
        private global::System.String _file_load_comments;
        partial void Onfile_load_commentsChanging(global::System.String value);
        partial void Onfile_load_commentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name_of_file
        {
            get
            {
                return _name_of_file;
            }
            set
            {
                Onname_of_fileChanging(value);
                ReportPropertyChanging("name_of_file");
                _name_of_file = StructuralObject.SetValidValue(value, false, "name_of_file");
                ReportPropertyChanged("name_of_file");
                Onname_of_fileChanged();
            }
        }
        private global::System.String _name_of_file;
        partial void Onname_of_fileChanging(global::System.String value);
        partial void Onname_of_fileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> file_created_date
        {
            get
            {
                return _file_created_date;
            }
            set
            {
                Onfile_created_dateChanging(value);
                ReportPropertyChanging("file_created_date");
                _file_created_date = StructuralObject.SetValidValue(value, "file_created_date");
                ReportPropertyChanged("file_created_date");
                Onfile_created_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _file_created_date;
        partial void Onfile_created_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onfile_created_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 file_size
        {
            get
            {
                return _file_size;
            }
            set
            {
                Onfile_sizeChanging(value);
                ReportPropertyChanging("file_size");
                _file_size = StructuralObject.SetValidValue(value, "file_size");
                ReportPropertyChanged("file_size");
                Onfile_sizeChanged();
            }
        }
        private global::System.Int32 _file_size;
        partial void Onfile_sizeChanging(global::System.Int32 value);
        partial void Onfile_sizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> load_date
        {
            get
            {
                return _load_date;
            }
            set
            {
                Onload_dateChanging(value);
                ReportPropertyChanging("load_date");
                _load_date = StructuralObject.SetValidValue(value, "load_date");
                ReportPropertyChanged("load_date");
                Onload_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _load_date;
        partial void Onload_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onload_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String file_directory
        {
            get
            {
                return _file_directory;
            }
            set
            {
                Onfile_directoryChanging(value);
                ReportPropertyChanging("file_directory");
                _file_directory = StructuralObject.SetValidValue(value, false, "file_directory");
                ReportPropertyChanged("file_directory");
                Onfile_directoryChanged();
            }
        }
        private global::System.String _file_directory;
        partial void Onfile_directoryChanging(global::System.String value);
        partial void Onfile_directoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String file_type
        {
            get
            {
                return _file_type;
            }
            set
            {
                Onfile_typeChanging(value);
                ReportPropertyChanging("file_type");
                _file_type = StructuralObject.SetValidValue(value, false, "file_type");
                ReportPropertyChanged("file_type");
                Onfile_typeChanged();
            }
        }
        private global::System.String _file_type;
        partial void Onfile_typeChanging(global::System.String value);
        partial void Onfile_typeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="GroupsRolesResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GroupsRolesResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GroupsRolesResult object.
        /// </summary>
        /// <param name="user_group_name">Initial value of the user_group_name property.</param>
        /// <param name="user_role">Initial value of the user_role property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="user_group_id">Initial value of the user_group_id property.</param>
        public static GroupsRolesResult CreateGroupsRolesResult(global::System.String user_group_name, global::System.String user_role, global::System.String issuer_code, global::System.String issuer_name, global::System.Int32 user_group_id)
        {
            GroupsRolesResult groupsRolesResult = new GroupsRolesResult();
            groupsRolesResult.user_group_name = user_group_name;
            groupsRolesResult.user_role = user_role;
            groupsRolesResult.issuer_code = issuer_code;
            groupsRolesResult.issuer_name = issuer_name;
            groupsRolesResult.user_group_id = user_group_id;
            return groupsRolesResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_group_name
        {
            get
            {
                return _user_group_name;
            }
            set
            {
                Onuser_group_nameChanging(value);
                ReportPropertyChanging("user_group_name");
                _user_group_name = StructuralObject.SetValidValue(value, false, "user_group_name");
                ReportPropertyChanged("user_group_name");
                Onuser_group_nameChanged();
            }
        }
        private global::System.String _user_group_name;
        partial void Onuser_group_nameChanging(global::System.String value);
        partial void Onuser_group_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_role
        {
            get
            {
                return _user_role;
            }
            set
            {
                Onuser_roleChanging(value);
                ReportPropertyChanging("user_role");
                _user_role = StructuralObject.SetValidValue(value, false, "user_role");
                ReportPropertyChanged("user_role");
                Onuser_roleChanged();
            }
        }
        private global::System.String _user_role;
        partial void Onuser_roleChanging(global::System.String value);
        partial void Onuser_roleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_group_id
        {
            get
            {
                return _user_group_id;
            }
            set
            {
                Onuser_group_idChanging(value);
                ReportPropertyChanging("user_group_id");
                _user_group_id = StructuralObject.SetValidValue(value, "user_group_id");
                ReportPropertyChanged("user_group_id");
                Onuser_group_idChanged();
            }
        }
        private global::System.Int32 _user_group_id;
        partial void Onuser_group_idChanging(global::System.Int32 value);
        partial void Onuser_group_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="hybrid_request_result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class hybrid_request_result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new hybrid_request_result object.
        /// </summary>
        /// <param name="product_id">Initial value of the product_id property.</param>
        /// <param name="product_name">Initial value of the product_name property.</param>
        /// <param name="card_priority_id">Initial value of the card_priority_id property.</param>
        /// <param name="card_priority_name">Initial value of the card_priority_name property.</param>
        public static hybrid_request_result Createhybrid_request_result(global::System.Int32 product_id, global::System.String product_name, global::System.Int32 card_priority_id, global::System.String card_priority_name)
        {
            hybrid_request_result hybrid_request_result = new hybrid_request_result();
            hybrid_request_result.product_id = product_id;
            hybrid_request_result.product_name = product_name;
            hybrid_request_result.card_priority_id = card_priority_id;
            hybrid_request_result.card_priority_name = card_priority_name;
            return hybrid_request_result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private global::System.Int32 _product_id;
        partial void Onproduct_idChanging(global::System.Int32 value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_name
        {
            get
            {
                return _product_name;
            }
            set
            {
                Onproduct_nameChanging(value);
                ReportPropertyChanging("product_name");
                _product_name = StructuralObject.SetValidValue(value, false, "product_name");
                ReportPropertyChanged("product_name");
                Onproduct_nameChanged();
            }
        }
        private global::System.String _product_name;
        partial void Onproduct_nameChanging(global::System.String value);
        partial void Onproduct_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_priority_id
        {
            get
            {
                return _card_priority_id;
            }
            set
            {
                Oncard_priority_idChanging(value);
                ReportPropertyChanging("card_priority_id");
                _card_priority_id = StructuralObject.SetValidValue(value, "card_priority_id");
                ReportPropertyChanged("card_priority_id");
                Oncard_priority_idChanged();
            }
        }
        private global::System.Int32 _card_priority_id;
        partial void Oncard_priority_idChanging(global::System.Int32 value);
        partial void Oncard_priority_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String card_priority_name
        {
            get
            {
                return _card_priority_name;
            }
            set
            {
                Oncard_priority_nameChanging(value);
                ReportPropertyChanging("card_priority_name");
                _card_priority_name = StructuralObject.SetValidValue(value, false, "card_priority_name");
                ReportPropertyChanged("card_priority_name");
                Oncard_priority_nameChanged();
            }
        }
        private global::System.String _card_priority_name;
        partial void Oncard_priority_nameChanging(global::System.String value);
        partial void Oncard_priority_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cardscount
        {
            get
            {
                return _cardscount;
            }
            set
            {
                OncardscountChanging(value);
                ReportPropertyChanging("cardscount");
                _cardscount = StructuralObject.SetValidValue(value, "cardscount");
                ReportPropertyChanged("cardscount");
                OncardscountChanged();
            }
        }
        private Nullable<global::System.Int32> _cardscount;
        partial void OncardscountChanging(Nullable<global::System.Int32> value);
        partial void OncardscountChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="HybridRequestResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class HybridRequestResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HybridRequestResult object.
        /// </summary>
        /// <param name="request_id">Initial value of the request_id property.</param>
        /// <param name="card_issue_method_id">Initial value of the card_issue_method_id property.</param>
        /// <param name="operator_user_id">Initial value of the operator_user_id property.</param>
        /// <param name="operator_username">Initial value of the operator_username property.</param>
        /// <param name="product_bin_code">Initial value of the product_bin_code property.</param>
        /// <param name="sub_product_code">Initial value of the sub_product_code property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        /// <param name="hybrid_request_statuses_id">Initial value of the hybrid_request_statuses_id property.</param>
        public static HybridRequestResult CreateHybridRequestResult(global::System.Int64 request_id, global::System.Int32 card_issue_method_id, global::System.Int64 operator_user_id, global::System.String operator_username, global::System.String product_bin_code, global::System.String sub_product_code, global::System.Int32 issuer_id, global::System.String issuer_name, global::System.String issuer_code, global::System.Int32 branch_id, global::System.String branch_name, global::System.String branch_code, global::System.Int32 hybrid_request_statuses_id)
        {
            HybridRequestResult hybridRequestResult = new HybridRequestResult();
            hybridRequestResult.request_id = request_id;
            hybridRequestResult.card_issue_method_id = card_issue_method_id;
            hybridRequestResult.operator_user_id = operator_user_id;
            hybridRequestResult.operator_username = operator_username;
            hybridRequestResult.product_bin_code = product_bin_code;
            hybridRequestResult.sub_product_code = sub_product_code;
            hybridRequestResult.issuer_id = issuer_id;
            hybridRequestResult.issuer_name = issuer_name;
            hybridRequestResult.issuer_code = issuer_code;
            hybridRequestResult.branch_id = branch_id;
            hybridRequestResult.branch_name = branch_name;
            hybridRequestResult.branch_code = branch_code;
            hybridRequestResult.hybrid_request_statuses_id = hybrid_request_statuses_id;
            return hybridRequestResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 request_id
        {
            get
            {
                return _request_id;
            }
            set
            {
                Onrequest_idChanging(value);
                ReportPropertyChanging("request_id");
                _request_id = StructuralObject.SetValidValue(value, "request_id");
                ReportPropertyChanged("request_id");
                Onrequest_idChanged();
            }
        }
        private global::System.Int64 _request_id;
        partial void Onrequest_idChanging(global::System.Int64 value);
        partial void Onrequest_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private Nullable<global::System.Int32> _product_id;
        partial void Onproduct_idChanging(Nullable<global::System.Int32> value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> card_priority_id
        {
            get
            {
                return _card_priority_id;
            }
            set
            {
                Oncard_priority_idChanging(value);
                ReportPropertyChanging("card_priority_id");
                _card_priority_id = StructuralObject.SetValidValue(value, "card_priority_id");
                ReportPropertyChanged("card_priority_id");
                Oncard_priority_idChanged();
            }
        }
        private Nullable<global::System.Int32> _card_priority_id;
        partial void Oncard_priority_idChanging(Nullable<global::System.Int32> value);
        partial void Oncard_priority_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_method_id
        {
            get
            {
                return _card_issue_method_id;
            }
            set
            {
                Oncard_issue_method_idChanging(value);
                ReportPropertyChanging("card_issue_method_id");
                _card_issue_method_id = StructuralObject.SetValidValue(value, "card_issue_method_id");
                ReportPropertyChanged("card_issue_method_id");
                Oncard_issue_method_idChanged();
            }
        }
        private global::System.Int32 _card_issue_method_id;
        partial void Oncard_issue_method_idChanging(global::System.Int32 value);
        partial void Oncard_issue_method_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String current_card_status
        {
            get
            {
                return _current_card_status;
            }
            set
            {
                Oncurrent_card_statusChanging(value);
                ReportPropertyChanging("current_card_status");
                _current_card_status = StructuralObject.SetValidValue(value, true, "current_card_status");
                ReportPropertyChanged("current_card_status");
                Oncurrent_card_statusChanged();
            }
        }
        private global::System.String _current_card_status;
        partial void Oncurrent_card_statusChanging(global::System.String value);
        partial void Oncurrent_card_statusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comments
        {
            get
            {
                return _comments;
            }
            set
            {
                OncommentsChanging(value);
                ReportPropertyChanging("comments");
                _comments = StructuralObject.SetValidValue(value, true, "comments");
                ReportPropertyChanged("comments");
                OncommentsChanged();
            }
        }
        private global::System.String _comments;
        partial void OncommentsChanging(global::System.String value);
        partial void OncommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> status_date
        {
            get
            {
                return _status_date;
            }
            set
            {
                Onstatus_dateChanging(value);
                ReportPropertyChanging("status_date");
                _status_date = StructuralObject.SetValidValue(value, "status_date");
                ReportPropertyChanged("status_date");
                Onstatus_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _status_date;
        partial void Onstatus_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onstatus_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 operator_user_id
        {
            get
            {
                return _operator_user_id;
            }
            set
            {
                Onoperator_user_idChanging(value);
                ReportPropertyChanging("operator_user_id");
                _operator_user_id = StructuralObject.SetValidValue(value, "operator_user_id");
                ReportPropertyChanged("operator_user_id");
                Onoperator_user_idChanged();
            }
        }
        private global::System.Int64 _operator_user_id;
        partial void Onoperator_user_idChanging(global::System.Int64 value);
        partial void Onoperator_user_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String operator_username
        {
            get
            {
                return _operator_username;
            }
            set
            {
                Onoperator_usernameChanging(value);
                ReportPropertyChanging("operator_username");
                _operator_username = StructuralObject.SetValidValue(value, false, "operator_username");
                ReportPropertyChanged("operator_username");
                Onoperator_usernameChanged();
            }
        }
        private global::System.String _operator_username;
        partial void Onoperator_usernameChanging(global::System.String value);
        partial void Onoperator_usernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_bin_code
        {
            get
            {
                return _product_bin_code;
            }
            set
            {
                Onproduct_bin_codeChanging(value);
                ReportPropertyChanging("product_bin_code");
                _product_bin_code = StructuralObject.SetValidValue(value, false, "product_bin_code");
                ReportPropertyChanged("product_bin_code");
                Onproduct_bin_codeChanged();
            }
        }
        private global::System.String _product_bin_code;
        partial void Onproduct_bin_codeChanging(global::System.String value);
        partial void Onproduct_bin_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String sub_product_code
        {
            get
            {
                return _sub_product_code;
            }
            set
            {
                Onsub_product_codeChanging(value);
                ReportPropertyChanging("sub_product_code");
                _sub_product_code = StructuralObject.SetValidValue(value, false, "sub_product_code");
                ReportPropertyChanged("sub_product_code");
                Onsub_product_codeChanged();
            }
        }
        private global::System.String _sub_product_code;
        partial void Onsub_product_codeChanging(global::System.String value);
        partial void Onsub_product_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int32 _branch_id;
        partial void Onbranch_idChanging(global::System.Int32 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String request_reference
        {
            get
            {
                return _request_reference;
            }
            set
            {
                Onrequest_referenceChanging(value);
                ReportPropertyChanging("request_reference");
                _request_reference = StructuralObject.SetValidValue(value, true, "request_reference");
                ReportPropertyChanged("request_reference");
                Onrequest_referenceChanged();
            }
        }
        private global::System.String _request_reference;
        partial void Onrequest_referenceChanging(global::System.String value);
        partial void Onrequest_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 hybrid_request_statuses_id
        {
            get
            {
                return _hybrid_request_statuses_id;
            }
            set
            {
                Onhybrid_request_statuses_idChanging(value);
                ReportPropertyChanging("hybrid_request_statuses_id");
                _hybrid_request_statuses_id = StructuralObject.SetValidValue(value, "hybrid_request_statuses_id");
                ReportPropertyChanged("hybrid_request_statuses_id");
                Onhybrid_request_statuses_idChanged();
            }
        }
        private global::System.Int32 _hybrid_request_statuses_id;
        partial void Onhybrid_request_statuses_idChanging(global::System.Int32 value);
        partial void Onhybrid_request_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> card_id
        {
            get
            {
                return _card_id;
            }
            set
            {
                Oncard_idChanging(value);
                ReportPropertyChanging("card_id");
                _card_id = StructuralObject.SetValidValue(value, "card_id");
                ReportPropertyChanged("card_id");
                Oncard_idChanged();
            }
        }
        private Nullable<global::System.Int64> _card_id;
        partial void Oncard_idChanging(Nullable<global::System.Int64> value);
        partial void Oncard_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="IssuerInterfaceResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class IssuerInterfaceResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssuerInterfaceResult object.
        /// </summary>
        /// <param name="connection_parameter_id">Initial value of the connection_parameter_id property.</param>
        /// <param name="connection_name">Initial value of the connection_name property.</param>
        /// <param name="address">Initial value of the address property.</param>
        /// <param name="port">Initial value of the port property.</param>
        /// <param name="path">Initial value of the path property.</param>
        /// <param name="protocol">Initial value of the protocol property.</param>
        /// <param name="auth_type">Initial value of the auth_type property.</param>
        public static IssuerInterfaceResult CreateIssuerInterfaceResult(global::System.Int32 connection_parameter_id, global::System.String connection_name, global::System.String address, global::System.Int32 port, global::System.String path, global::System.String protocol, global::System.Int32 auth_type)
        {
            IssuerInterfaceResult issuerInterfaceResult = new IssuerInterfaceResult();
            issuerInterfaceResult.connection_parameter_id = connection_parameter_id;
            issuerInterfaceResult.connection_name = connection_name;
            issuerInterfaceResult.address = address;
            issuerInterfaceResult.port = port;
            issuerInterfaceResult.path = path;
            issuerInterfaceResult.protocol = protocol;
            issuerInterfaceResult.auth_type = auth_type;
            return issuerInterfaceResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 connection_parameter_id
        {
            get
            {
                return _connection_parameter_id;
            }
            set
            {
                Onconnection_parameter_idChanging(value);
                ReportPropertyChanging("connection_parameter_id");
                _connection_parameter_id = StructuralObject.SetValidValue(value, "connection_parameter_id");
                ReportPropertyChanged("connection_parameter_id");
                Onconnection_parameter_idChanged();
            }
        }
        private global::System.Int32 _connection_parameter_id;
        partial void Onconnection_parameter_idChanging(global::System.Int32 value);
        partial void Onconnection_parameter_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String connection_name
        {
            get
            {
                return _connection_name;
            }
            set
            {
                Onconnection_nameChanging(value);
                ReportPropertyChanging("connection_name");
                _connection_name = StructuralObject.SetValidValue(value, false, "connection_name");
                ReportPropertyChanged("connection_name");
                Onconnection_nameChanged();
            }
        }
        private global::System.String _connection_name;
        partial void Onconnection_nameChanging(global::System.String value);
        partial void Onconnection_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String address
        {
            get
            {
                return _address;
            }
            set
            {
                OnaddressChanging(value);
                ReportPropertyChanging("address");
                _address = StructuralObject.SetValidValue(value, false, "address");
                ReportPropertyChanged("address");
                OnaddressChanged();
            }
        }
        private global::System.String _address;
        partial void OnaddressChanging(global::System.String value);
        partial void OnaddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 port
        {
            get
            {
                return _port;
            }
            set
            {
                OnportChanging(value);
                ReportPropertyChanging("port");
                _port = StructuralObject.SetValidValue(value, "port");
                ReportPropertyChanged("port");
                OnportChanged();
            }
        }
        private global::System.Int32 _port;
        partial void OnportChanging(global::System.Int32 value);
        partial void OnportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String path
        {
            get
            {
                return _path;
            }
            set
            {
                OnpathChanging(value);
                ReportPropertyChanging("path");
                _path = StructuralObject.SetValidValue(value, false, "path");
                ReportPropertyChanged("path");
                OnpathChanged();
            }
        }
        private global::System.String _path;
        partial void OnpathChanging(global::System.String value);
        partial void OnpathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String protocol
        {
            get
            {
                return _protocol;
            }
            set
            {
                OnprotocolChanging(value);
                ReportPropertyChanging("protocol");
                _protocol = StructuralObject.SetValidValue(value, false, "protocol");
                ReportPropertyChanged("protocol");
                OnprotocolChanged();
            }
        }
        private global::System.String _protocol;
        partial void OnprotocolChanging(global::System.String value);
        partial void OnprotocolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 auth_type
        {
            get
            {
                return _auth_type;
            }
            set
            {
                Onauth_typeChanging(value);
                ReportPropertyChanging("auth_type");
                _auth_type = StructuralObject.SetValidValue(value, "auth_type");
                ReportPropertyChanged("auth_type");
                Onauth_typeChanged();
            }
        }
        private global::System.Int32 _auth_type;
        partial void Onauth_typeChanging(global::System.Int32 value);
        partial void Onauth_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, true, "password");
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="IssuerLicenseResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class IssuerLicenseResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssuerLicenseResult object.
        /// </summary>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        public static IssuerLicenseResult CreateIssuerLicenseResult(global::System.Int32 issuer_id, global::System.String issuer_code, global::System.String issuer_name)
        {
            IssuerLicenseResult issuerLicenseResult = new IssuerLicenseResult();
            issuerLicenseResult.issuer_id = issuer_id;
            issuerLicenseResult.issuer_code = issuer_code;
            issuerLicenseResult.issuer_name = issuer_name;
            return issuerLicenseResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String license_file
        {
            get
            {
                return _license_file;
            }
            set
            {
                Onlicense_fileChanging(value);
                ReportPropertyChanging("license_file");
                _license_file = StructuralObject.SetValidValue(value, true, "license_file");
                ReportPropertyChanged("license_file");
                Onlicense_fileChanged();
            }
        }
        private global::System.String _license_file;
        partial void Onlicense_fileChanging(global::System.String value);
        partial void Onlicense_fileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String license_key
        {
            get
            {
                return _license_key;
            }
            set
            {
                Onlicense_keyChanging(value);
                ReportPropertyChanging("license_key");
                _license_key = StructuralObject.SetValidValue(value, true, "license_key");
                ReportPropertyChanged("license_key");
                Onlicense_keyChanged();
            }
        }
        private global::System.String _license_key;
        partial void Onlicense_keyChanging(global::System.String value);
        partial void Onlicense_keyChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="issuers_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class issuers_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new issuers_Result object.
        /// </summary>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="issuer_status">Initial value of the issuer_status property.</param>
        public static issuers_Result Createissuers_Result(global::System.Int32 issuer_id, global::System.String issuer_name, global::System.String issuer_code, global::System.String issuer_status)
        {
            issuers_Result issuers_Result = new issuers_Result();
            issuers_Result.issuer_id = issuer_id;
            issuers_Result.issuer_name = issuer_name;
            issuers_Result.issuer_code = issuer_code;
            issuers_Result.issuer_status = issuer_status;
            return issuers_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_status
        {
            get
            {
                return _issuer_status;
            }
            set
            {
                Onissuer_statusChanging(value);
                ReportPropertyChanging("issuer_status");
                _issuer_status = StructuralObject.SetValidValue(value, false, "issuer_status");
                ReportPropertyChanged("issuer_status");
                Onissuer_statusChanged();
            }
        }
        private global::System.String _issuer_status;
        partial void Onissuer_statusChanging(global::System.String value);
        partial void Onissuer_statusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="IssuersForRoleResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class IssuersForRoleResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssuersForRoleResult object.
        /// </summary>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="maker_checker_YN">Initial value of the maker_checker_YN property.</param>
        /// <param name="account_validation_YN">Initial value of the account_validation_YN property.</param>
        /// <param name="auto_create_dist_batch">Initial value of the auto_create_dist_batch property.</param>
        /// <param name="classic_card_issue_YN">Initial value of the classic_card_issue_YN property.</param>
        /// <param name="instant_card_issue_YN">Initial value of the instant_card_issue_YN property.</param>
        /// <param name="card_ref_preference">Initial value of the card_ref_preference property.</param>
        /// <param name="enable_instant_pin_YN">Initial value of the enable_instant_pin_YN property.</param>
        /// <param name="authorise_pin_issue_YN">Initial value of the authorise_pin_issue_YN property.</param>
        /// <param name="authorise_pin_reissue_YN">Initial value of the authorise_pin_reissue_YN property.</param>
        /// <param name="pin_mailer_printing_YN">Initial value of the pin_mailer_printing_YN property.</param>
        /// <param name="pin_mailer_reprint_YN">Initial value of the pin_mailer_reprint_YN property.</param>
        /// <param name="enableCardFileLoader_YN">Initial value of the EnableCardFileLoader_YN property.</param>
        /// <param name="back_office_pin_auth_YN">Initial value of the back_office_pin_auth_YN property.</param>
        public static IssuersForRoleResult CreateIssuersForRoleResult(global::System.Int32 issuer_id, global::System.String issuer_name, global::System.String issuer_code, global::System.Boolean maker_checker_YN, global::System.Boolean account_validation_YN, global::System.Boolean auto_create_dist_batch, global::System.Boolean classic_card_issue_YN, global::System.Boolean instant_card_issue_YN, global::System.Boolean card_ref_preference, global::System.Boolean enable_instant_pin_YN, global::System.Boolean authorise_pin_issue_YN, global::System.Boolean authorise_pin_reissue_YN, global::System.Boolean pin_mailer_printing_YN, global::System.Boolean pin_mailer_reprint_YN, global::System.Boolean enableCardFileLoader_YN, global::System.Boolean back_office_pin_auth_YN)
        {
            IssuersForRoleResult issuersForRoleResult = new IssuersForRoleResult();
            issuersForRoleResult.issuer_id = issuer_id;
            issuersForRoleResult.issuer_name = issuer_name;
            issuersForRoleResult.issuer_code = issuer_code;
            issuersForRoleResult.maker_checker_YN = maker_checker_YN;
            issuersForRoleResult.account_validation_YN = account_validation_YN;
            issuersForRoleResult.auto_create_dist_batch = auto_create_dist_batch;
            issuersForRoleResult.classic_card_issue_YN = classic_card_issue_YN;
            issuersForRoleResult.instant_card_issue_YN = instant_card_issue_YN;
            issuersForRoleResult.card_ref_preference = card_ref_preference;
            issuersForRoleResult.enable_instant_pin_YN = enable_instant_pin_YN;
            issuersForRoleResult.authorise_pin_issue_YN = authorise_pin_issue_YN;
            issuersForRoleResult.authorise_pin_reissue_YN = authorise_pin_reissue_YN;
            issuersForRoleResult.pin_mailer_printing_YN = pin_mailer_printing_YN;
            issuersForRoleResult.pin_mailer_reprint_YN = pin_mailer_reprint_YN;
            issuersForRoleResult.EnableCardFileLoader_YN = enableCardFileLoader_YN;
            issuersForRoleResult.back_office_pin_auth_YN = back_office_pin_auth_YN;
            return issuersForRoleResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean maker_checker_YN
        {
            get
            {
                return _maker_checker_YN;
            }
            set
            {
                Onmaker_checker_YNChanging(value);
                ReportPropertyChanging("maker_checker_YN");
                _maker_checker_YN = StructuralObject.SetValidValue(value, "maker_checker_YN");
                ReportPropertyChanged("maker_checker_YN");
                Onmaker_checker_YNChanged();
            }
        }
        private global::System.Boolean _maker_checker_YN;
        partial void Onmaker_checker_YNChanging(global::System.Boolean value);
        partial void Onmaker_checker_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean account_validation_YN
        {
            get
            {
                return _account_validation_YN;
            }
            set
            {
                Onaccount_validation_YNChanging(value);
                ReportPropertyChanging("account_validation_YN");
                _account_validation_YN = StructuralObject.SetValidValue(value, "account_validation_YN");
                ReportPropertyChanged("account_validation_YN");
                Onaccount_validation_YNChanged();
            }
        }
        private global::System.Boolean _account_validation_YN;
        partial void Onaccount_validation_YNChanging(global::System.Boolean value);
        partial void Onaccount_validation_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean auto_create_dist_batch
        {
            get
            {
                return _auto_create_dist_batch;
            }
            set
            {
                Onauto_create_dist_batchChanging(value);
                ReportPropertyChanging("auto_create_dist_batch");
                _auto_create_dist_batch = StructuralObject.SetValidValue(value, "auto_create_dist_batch");
                ReportPropertyChanged("auto_create_dist_batch");
                Onauto_create_dist_batchChanged();
            }
        }
        private global::System.Boolean _auto_create_dist_batch;
        partial void Onauto_create_dist_batchChanging(global::System.Boolean value);
        partial void Onauto_create_dist_batchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean classic_card_issue_YN
        {
            get
            {
                return _classic_card_issue_YN;
            }
            set
            {
                Onclassic_card_issue_YNChanging(value);
                ReportPropertyChanging("classic_card_issue_YN");
                _classic_card_issue_YN = StructuralObject.SetValidValue(value, "classic_card_issue_YN");
                ReportPropertyChanged("classic_card_issue_YN");
                Onclassic_card_issue_YNChanged();
            }
        }
        private global::System.Boolean _classic_card_issue_YN;
        partial void Onclassic_card_issue_YNChanging(global::System.Boolean value);
        partial void Onclassic_card_issue_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean instant_card_issue_YN
        {
            get
            {
                return _instant_card_issue_YN;
            }
            set
            {
                Oninstant_card_issue_YNChanging(value);
                ReportPropertyChanging("instant_card_issue_YN");
                _instant_card_issue_YN = StructuralObject.SetValidValue(value, "instant_card_issue_YN");
                ReportPropertyChanged("instant_card_issue_YN");
                Oninstant_card_issue_YNChanged();
            }
        }
        private global::System.Boolean _instant_card_issue_YN;
        partial void Oninstant_card_issue_YNChanging(global::System.Boolean value);
        partial void Oninstant_card_issue_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean card_ref_preference
        {
            get
            {
                return _card_ref_preference;
            }
            set
            {
                Oncard_ref_preferenceChanging(value);
                ReportPropertyChanging("card_ref_preference");
                _card_ref_preference = StructuralObject.SetValidValue(value, "card_ref_preference");
                ReportPropertyChanged("card_ref_preference");
                Oncard_ref_preferenceChanged();
            }
        }
        private global::System.Boolean _card_ref_preference;
        partial void Oncard_ref_preferenceChanging(global::System.Boolean value);
        partial void Oncard_ref_preferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean enable_instant_pin_YN
        {
            get
            {
                return _enable_instant_pin_YN;
            }
            set
            {
                Onenable_instant_pin_YNChanging(value);
                ReportPropertyChanging("enable_instant_pin_YN");
                _enable_instant_pin_YN = StructuralObject.SetValidValue(value, "enable_instant_pin_YN");
                ReportPropertyChanged("enable_instant_pin_YN");
                Onenable_instant_pin_YNChanged();
            }
        }
        private global::System.Boolean _enable_instant_pin_YN;
        partial void Onenable_instant_pin_YNChanging(global::System.Boolean value);
        partial void Onenable_instant_pin_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean authorise_pin_issue_YN
        {
            get
            {
                return _authorise_pin_issue_YN;
            }
            set
            {
                Onauthorise_pin_issue_YNChanging(value);
                ReportPropertyChanging("authorise_pin_issue_YN");
                _authorise_pin_issue_YN = StructuralObject.SetValidValue(value, "authorise_pin_issue_YN");
                ReportPropertyChanged("authorise_pin_issue_YN");
                Onauthorise_pin_issue_YNChanged();
            }
        }
        private global::System.Boolean _authorise_pin_issue_YN;
        partial void Onauthorise_pin_issue_YNChanging(global::System.Boolean value);
        partial void Onauthorise_pin_issue_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean authorise_pin_reissue_YN
        {
            get
            {
                return _authorise_pin_reissue_YN;
            }
            set
            {
                Onauthorise_pin_reissue_YNChanging(value);
                ReportPropertyChanging("authorise_pin_reissue_YN");
                _authorise_pin_reissue_YN = StructuralObject.SetValidValue(value, "authorise_pin_reissue_YN");
                ReportPropertyChanged("authorise_pin_reissue_YN");
                Onauthorise_pin_reissue_YNChanged();
            }
        }
        private global::System.Boolean _authorise_pin_reissue_YN;
        partial void Onauthorise_pin_reissue_YNChanging(global::System.Boolean value);
        partial void Onauthorise_pin_reissue_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean pin_mailer_printing_YN
        {
            get
            {
                return _pin_mailer_printing_YN;
            }
            set
            {
                Onpin_mailer_printing_YNChanging(value);
                ReportPropertyChanging("pin_mailer_printing_YN");
                _pin_mailer_printing_YN = StructuralObject.SetValidValue(value, "pin_mailer_printing_YN");
                ReportPropertyChanged("pin_mailer_printing_YN");
                Onpin_mailer_printing_YNChanged();
            }
        }
        private global::System.Boolean _pin_mailer_printing_YN;
        partial void Onpin_mailer_printing_YNChanging(global::System.Boolean value);
        partial void Onpin_mailer_printing_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean pin_mailer_reprint_YN
        {
            get
            {
                return _pin_mailer_reprint_YN;
            }
            set
            {
                Onpin_mailer_reprint_YNChanging(value);
                ReportPropertyChanging("pin_mailer_reprint_YN");
                _pin_mailer_reprint_YN = StructuralObject.SetValidValue(value, "pin_mailer_reprint_YN");
                ReportPropertyChanged("pin_mailer_reprint_YN");
                Onpin_mailer_reprint_YNChanged();
            }
        }
        private global::System.Boolean _pin_mailer_reprint_YN;
        partial void Onpin_mailer_reprint_YNChanging(global::System.Boolean value);
        partial void Onpin_mailer_reprint_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean EnableCardFileLoader_YN
        {
            get
            {
                return _EnableCardFileLoader_YN;
            }
            set
            {
                OnEnableCardFileLoader_YNChanging(value);
                ReportPropertyChanging("EnableCardFileLoader_YN");
                _EnableCardFileLoader_YN = StructuralObject.SetValidValue(value, "EnableCardFileLoader_YN");
                ReportPropertyChanged("EnableCardFileLoader_YN");
                OnEnableCardFileLoader_YNChanged();
            }
        }
        private global::System.Boolean _EnableCardFileLoader_YN;
        partial void OnEnableCardFileLoader_YNChanging(global::System.Boolean value);
        partial void OnEnableCardFileLoader_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean back_office_pin_auth_YN
        {
            get
            {
                return _back_office_pin_auth_YN;
            }
            set
            {
                Onback_office_pin_auth_YNChanging(value);
                ReportPropertyChanging("back_office_pin_auth_YN");
                _back_office_pin_auth_YN = StructuralObject.SetValidValue(value, "back_office_pin_auth_YN");
                ReportPropertyChanged("back_office_pin_auth_YN");
                Onback_office_pin_auth_YNChanged();
            }
        }
        private global::System.Boolean _back_office_pin_auth_YN;
        partial void Onback_office_pin_auth_YNChanging(global::System.Boolean value);
        partial void Onback_office_pin_auth_YNChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="LangLookup")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class LangLookup : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LangLookup object.
        /// </summary>
        /// <param name="lookup_id">Initial value of the lookup_id property.</param>
        /// <param name="language_text">Initial value of the language_text property.</param>
        public static LangLookup CreateLangLookup(global::System.Int32 lookup_id, global::System.String language_text)
        {
            LangLookup langLookup = new LangLookup();
            langLookup.lookup_id = lookup_id;
            langLookup.language_text = language_text;
            return langLookup;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 lookup_id
        {
            get
            {
                return _lookup_id;
            }
            set
            {
                Onlookup_idChanging(value);
                ReportPropertyChanging("lookup_id");
                _lookup_id = StructuralObject.SetValidValue(value, "lookup_id");
                ReportPropertyChanged("lookup_id");
                Onlookup_idChanged();
            }
        }
        private global::System.Int32 _lookup_id;
        partial void Onlookup_idChanging(global::System.Int32 value);
        partial void Onlookup_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String language_text
        {
            get
            {
                return _language_text;
            }
            set
            {
                Onlanguage_textChanging(value);
                ReportPropertyChanging("language_text");
                _language_text = StructuralObject.SetValidValue(value, false, "language_text");
                ReportPropertyChanged("language_text");
                Onlanguage_textChanged();
            }
        }
        private global::System.String _language_text;
        partial void Onlanguage_textChanging(global::System.String value);
        partial void Onlanguage_textChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="LangLookupChar")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class LangLookupChar : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LangLookupChar object.
        /// </summary>
        /// <param name="lookup_id">Initial value of the lookup_id property.</param>
        /// <param name="language_text">Initial value of the language_text property.</param>
        public static LangLookupChar CreateLangLookupChar(global::System.String lookup_id, global::System.String language_text)
        {
            LangLookupChar langLookupChar = new LangLookupChar();
            langLookupChar.lookup_id = lookup_id;
            langLookupChar.language_text = language_text;
            return langLookupChar;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String lookup_id
        {
            get
            {
                return _lookup_id;
            }
            set
            {
                Onlookup_idChanging(value);
                ReportPropertyChanging("lookup_id");
                _lookup_id = StructuralObject.SetValidValue(value, false, "lookup_id");
                ReportPropertyChanged("lookup_id");
                Onlookup_idChanged();
            }
        }
        private global::System.String _lookup_id;
        partial void Onlookup_idChanging(global::System.String value);
        partial void Onlookup_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String language_text
        {
            get
            {
                return _language_text;
            }
            set
            {
                Onlanguage_textChanging(value);
                ReportPropertyChanging("language_text");
                _language_text = StructuralObject.SetValidValue(value, false, "language_text");
                ReportPropertyChanged("language_text");
                Onlanguage_textChanged();
            }
        }
        private global::System.String _language_text;
        partial void Onlanguage_textChanging(global::System.String value);
        partial void Onlanguage_textChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="LdapSettingResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class LdapSettingResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LdapSettingResult object.
        /// </summary>
        /// <param name="hostname_or_ip">Initial value of the hostname_or_ip property.</param>
        /// <param name="path">Initial value of the path property.</param>
        public static LdapSettingResult CreateLdapSettingResult(global::System.String hostname_or_ip, global::System.String path)
        {
            LdapSettingResult ldapSettingResult = new LdapSettingResult();
            ldapSettingResult.hostname_or_ip = hostname_or_ip;
            ldapSettingResult.path = path;
            return ldapSettingResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String domain_name
        {
            get
            {
                return _domain_name;
            }
            set
            {
                Ondomain_nameChanging(value);
                ReportPropertyChanging("domain_name");
                _domain_name = StructuralObject.SetValidValue(value, true, "domain_name");
                ReportPropertyChanged("domain_name");
                Ondomain_nameChanged();
            }
        }
        private global::System.String _domain_name;
        partial void Ondomain_nameChanging(global::System.String value);
        partial void Ondomain_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String hostname_or_ip
        {
            get
            {
                return _hostname_or_ip;
            }
            set
            {
                Onhostname_or_ipChanging(value);
                ReportPropertyChanging("hostname_or_ip");
                _hostname_or_ip = StructuralObject.SetValidValue(value, false, "hostname_or_ip");
                ReportPropertyChanged("hostname_or_ip");
                Onhostname_or_ipChanged();
            }
        }
        private global::System.String _hostname_or_ip;
        partial void Onhostname_or_ipChanging(global::System.String value);
        partial void Onhostname_or_ipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String path
        {
            get
            {
                return _path;
            }
            set
            {
                OnpathChanging(value);
                ReportPropertyChanging("path");
                _path = StructuralObject.SetValidValue(value, false, "path");
                ReportPropertyChanged("path");
                OnpathChanged();
            }
        }
        private global::System.String _path;
        partial void OnpathChanging(global::System.String value);
        partial void OnpathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String domain_username
        {
            get
            {
                return _domain_username;
            }
            set
            {
                Ondomain_usernameChanging(value);
                ReportPropertyChanging("domain_username");
                _domain_username = StructuralObject.SetValidValue(value, true, "domain_username");
                ReportPropertyChanged("domain_username");
                Ondomain_usernameChanged();
            }
        }
        private global::System.String _domain_username;
        partial void Ondomain_usernameChanging(global::System.String value);
        partial void Ondomain_usernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String domain_password
        {
            get
            {
                return _domain_password;
            }
            set
            {
                Ondomain_passwordChanging(value);
                ReportPropertyChanging("domain_password");
                _domain_password = StructuralObject.SetValidValue(value, true, "domain_password");
                ReportPropertyChanged("domain_password");
                Ondomain_passwordChanged();
            }
        }
        private global::System.String _domain_password;
        partial void Ondomain_passwordChanging(global::System.String value);
        partial void Ondomain_passwordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> auth_type_id
        {
            get
            {
                return _auth_type_id;
            }
            set
            {
                Onauth_type_idChanging(value);
                ReportPropertyChanging("auth_type_id");
                _auth_type_id = StructuralObject.SetValidValue(value, "auth_type_id");
                ReportPropertyChanged("auth_type_id");
                Onauth_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _auth_type_id;
        partial void Onauth_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onauth_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String external_inteface_id
        {
            get
            {
                return _external_inteface_id;
            }
            set
            {
                Onexternal_inteface_idChanging(value);
                ReportPropertyChanging("external_inteface_id");
                _external_inteface_id = StructuralObject.SetValidValue(value, true, "external_inteface_id");
                ReportPropertyChanged("external_inteface_id");
                Onexternal_inteface_idChanged();
            }
        }
        private global::System.String _external_inteface_id;
        partial void Onexternal_inteface_idChanging(global::System.String value);
        partial void Onexternal_inteface_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="LdapSettingsResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class LdapSettingsResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LdapSettingsResult object.
        /// </summary>
        /// <param name="ldap_setting_id">Initial value of the ldap_setting_id property.</param>
        /// <param name="ldap_setting_name">Initial value of the ldap_setting_name property.</param>
        /// <param name="path">Initial value of the path property.</param>
        /// <param name="hostname_or_ip">Initial value of the hostname_or_ip property.</param>
        public static LdapSettingsResult CreateLdapSettingsResult(global::System.Int32 ldap_setting_id, global::System.String ldap_setting_name, global::System.String path, global::System.String hostname_or_ip)
        {
            LdapSettingsResult ldapSettingsResult = new LdapSettingsResult();
            ldapSettingsResult.ldap_setting_id = ldap_setting_id;
            ldapSettingsResult.ldap_setting_name = ldap_setting_name;
            ldapSettingsResult.path = path;
            ldapSettingsResult.hostname_or_ip = hostname_or_ip;
            return ldapSettingsResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ldap_setting_id
        {
            get
            {
                return _ldap_setting_id;
            }
            set
            {
                Onldap_setting_idChanging(value);
                ReportPropertyChanging("ldap_setting_id");
                _ldap_setting_id = StructuralObject.SetValidValue(value, "ldap_setting_id");
                ReportPropertyChanged("ldap_setting_id");
                Onldap_setting_idChanged();
            }
        }
        private global::System.Int32 _ldap_setting_id;
        partial void Onldap_setting_idChanging(global::System.Int32 value);
        partial void Onldap_setting_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ldap_setting_name
        {
            get
            {
                return _ldap_setting_name;
            }
            set
            {
                Onldap_setting_nameChanging(value);
                ReportPropertyChanging("ldap_setting_name");
                _ldap_setting_name = StructuralObject.SetValidValue(value, false, "ldap_setting_name");
                ReportPropertyChanged("ldap_setting_name");
                Onldap_setting_nameChanged();
            }
        }
        private global::System.String _ldap_setting_name;
        partial void Onldap_setting_nameChanging(global::System.String value);
        partial void Onldap_setting_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String domain_name
        {
            get
            {
                return _domain_name;
            }
            set
            {
                Ondomain_nameChanging(value);
                ReportPropertyChanging("domain_name");
                _domain_name = StructuralObject.SetValidValue(value, true, "domain_name");
                ReportPropertyChanged("domain_name");
                Ondomain_nameChanged();
            }
        }
        private global::System.String _domain_name;
        partial void Ondomain_nameChanging(global::System.String value);
        partial void Ondomain_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String path
        {
            get
            {
                return _path;
            }
            set
            {
                OnpathChanging(value);
                ReportPropertyChanging("path");
                _path = StructuralObject.SetValidValue(value, false, "path");
                ReportPropertyChanged("path");
                OnpathChanged();
            }
        }
        private global::System.String _path;
        partial void OnpathChanging(global::System.String value);
        partial void OnpathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, true, "password");
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String hostname_or_ip
        {
            get
            {
                return _hostname_or_ip;
            }
            set
            {
                Onhostname_or_ipChanging(value);
                ReportPropertyChanging("hostname_or_ip");
                _hostname_or_ip = StructuralObject.SetValidValue(value, false, "hostname_or_ip");
                ReportPropertyChanged("hostname_or_ip");
                Onhostname_or_ipChanged();
            }
        }
        private global::System.String _hostname_or_ip;
        partial void Onhostname_or_ipChanging(global::System.String value);
        partial void Onhostname_or_ipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> auth_type_id
        {
            get
            {
                return _auth_type_id;
            }
            set
            {
                Onauth_type_idChanging(value);
                ReportPropertyChanging("auth_type_id");
                _auth_type_id = StructuralObject.SetValidValue(value, "auth_type_id");
                ReportPropertyChanged("auth_type_id");
                Onauth_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _auth_type_id;
        partial void Onauth_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onauth_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String external_inteface_id
        {
            get
            {
                return _external_inteface_id;
            }
            set
            {
                Onexternal_inteface_idChanging(value);
                ReportPropertyChanging("external_inteface_id");
                _external_inteface_id = StructuralObject.SetValidValue(value, true, "external_inteface_id");
                ReportPropertyChanged("external_inteface_id");
                Onexternal_inteface_idChanged();
            }
        }
        private global::System.String _external_inteface_id;
        partial void Onexternal_inteface_idChanging(global::System.String value);
        partial void Onexternal_inteface_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="LoadBatchHistoryResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class LoadBatchHistoryResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadBatchHistoryResult object.
        /// </summary>
        /// <param name="load_batch_reference">Initial value of the load_batch_reference property.</param>
        /// <param name="no_cards">Initial value of the no_cards property.</param>
        /// <param name="load_batch_status_name">Initial value of the load_batch_status_name property.</param>
        public static LoadBatchHistoryResult CreateLoadBatchHistoryResult(global::System.String load_batch_reference, global::System.Int32 no_cards, global::System.String load_batch_status_name)
        {
            LoadBatchHistoryResult loadBatchHistoryResult = new LoadBatchHistoryResult();
            loadBatchHistoryResult.load_batch_reference = load_batch_reference;
            loadBatchHistoryResult.no_cards = no_cards;
            loadBatchHistoryResult.load_batch_status_name = load_batch_status_name;
            return loadBatchHistoryResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String load_batch_reference
        {
            get
            {
                return _load_batch_reference;
            }
            set
            {
                Onload_batch_referenceChanging(value);
                ReportPropertyChanging("load_batch_reference");
                _load_batch_reference = StructuralObject.SetValidValue(value, false, "load_batch_reference");
                ReportPropertyChanged("load_batch_reference");
                Onload_batch_referenceChanged();
            }
        }
        private global::System.String _load_batch_reference;
        partial void Onload_batch_referenceChanging(global::System.String value);
        partial void Onload_batch_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 no_cards
        {
            get
            {
                return _no_cards;
            }
            set
            {
                Onno_cardsChanging(value);
                ReportPropertyChanging("no_cards");
                _no_cards = StructuralObject.SetValidValue(value, "no_cards");
                ReportPropertyChanged("no_cards");
                Onno_cardsChanged();
            }
        }
        private global::System.Int32 _no_cards;
        partial void Onno_cardsChanging(global::System.Int32 value);
        partial void Onno_cardsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> status_date
        {
            get
            {
                return _status_date;
            }
            set
            {
                Onstatus_dateChanging(value);
                ReportPropertyChanging("status_date");
                _status_date = StructuralObject.SetValidValue(value, "status_date");
                ReportPropertyChanged("status_date");
                Onstatus_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _status_date;
        partial void Onstatus_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onstatus_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String load_batch_status_name
        {
            get
            {
                return _load_batch_status_name;
            }
            set
            {
                Onload_batch_status_nameChanging(value);
                ReportPropertyChanging("load_batch_status_name");
                _load_batch_status_name = StructuralObject.SetValidValue(value, false, "load_batch_status_name");
                ReportPropertyChanged("load_batch_status_name");
                Onload_batch_status_nameChanged();
            }
        }
        private global::System.String _load_batch_status_name;
        partial void Onload_batch_status_nameChanging(global::System.String value);
        partial void Onload_batch_status_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, true, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, true, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="LoadBatchResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class LoadBatchResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadBatchResult object.
        /// </summary>
        /// <param name="load_batch_id">Initial value of the load_batch_id property.</param>
        /// <param name="load_batch_reference">Initial value of the load_batch_reference property.</param>
        /// <param name="no_cards">Initial value of the no_cards property.</param>
        /// <param name="load_batch_statuses_id">Initial value of the load_batch_statuses_id property.</param>
        /// <param name="load_batch_status_name">Initial value of the load_batch_status_name property.</param>
        /// <param name="branchName">Initial value of the BranchName property.</param>
        public static LoadBatchResult CreateLoadBatchResult(global::System.Int64 load_batch_id, global::System.String load_batch_reference, global::System.Int32 no_cards, global::System.Int32 load_batch_statuses_id, global::System.String load_batch_status_name, global::System.String branchName)
        {
            LoadBatchResult loadBatchResult = new LoadBatchResult();
            loadBatchResult.load_batch_id = load_batch_id;
            loadBatchResult.load_batch_reference = load_batch_reference;
            loadBatchResult.no_cards = no_cards;
            loadBatchResult.load_batch_statuses_id = load_batch_statuses_id;
            loadBatchResult.load_batch_status_name = load_batch_status_name;
            loadBatchResult.BranchName = branchName;
            return loadBatchResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 load_batch_id
        {
            get
            {
                return _load_batch_id;
            }
            set
            {
                Onload_batch_idChanging(value);
                ReportPropertyChanging("load_batch_id");
                _load_batch_id = StructuralObject.SetValidValue(value, "load_batch_id");
                ReportPropertyChanged("load_batch_id");
                Onload_batch_idChanged();
            }
        }
        private global::System.Int64 _load_batch_id;
        partial void Onload_batch_idChanging(global::System.Int64 value);
        partial void Onload_batch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> load_date
        {
            get
            {
                return _load_date;
            }
            set
            {
                Onload_dateChanging(value);
                ReportPropertyChanging("load_date");
                _load_date = StructuralObject.SetValidValue(value, "load_date");
                ReportPropertyChanged("load_date");
                Onload_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _load_date;
        partial void Onload_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onload_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String load_batch_reference
        {
            get
            {
                return _load_batch_reference;
            }
            set
            {
                Onload_batch_referenceChanging(value);
                ReportPropertyChanging("load_batch_reference");
                _load_batch_reference = StructuralObject.SetValidValue(value, false, "load_batch_reference");
                ReportPropertyChanged("load_batch_reference");
                Onload_batch_referenceChanged();
            }
        }
        private global::System.String _load_batch_reference;
        partial void Onload_batch_referenceChanging(global::System.String value);
        partial void Onload_batch_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 no_cards
        {
            get
            {
                return _no_cards;
            }
            set
            {
                Onno_cardsChanging(value);
                ReportPropertyChanging("no_cards");
                _no_cards = StructuralObject.SetValidValue(value, "no_cards");
                ReportPropertyChanged("no_cards");
                Onno_cardsChanged();
            }
        }
        private global::System.Int32 _no_cards;
        partial void Onno_cardsChanging(global::System.Int32 value);
        partial void Onno_cardsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 load_batch_statuses_id
        {
            get
            {
                return _load_batch_statuses_id;
            }
            set
            {
                Onload_batch_statuses_idChanging(value);
                ReportPropertyChanging("load_batch_statuses_id");
                _load_batch_statuses_id = StructuralObject.SetValidValue(value, "load_batch_statuses_id");
                ReportPropertyChanged("load_batch_statuses_id");
                Onload_batch_statuses_idChanged();
            }
        }
        private global::System.Int32 _load_batch_statuses_id;
        partial void Onload_batch_statuses_idChanging(global::System.Int32 value);
        partial void Onload_batch_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String status_notes
        {
            get
            {
                return _status_notes;
            }
            set
            {
                Onstatus_notesChanging(value);
                ReportPropertyChanging("status_notes");
                _status_notes = StructuralObject.SetValidValue(value, true, "status_notes");
                ReportPropertyChanged("status_notes");
                Onstatus_notesChanged();
            }
        }
        private global::System.String _status_notes;
        partial void Onstatus_notesChanging(global::System.String value);
        partial void Onstatus_notesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String load_batch_status_name
        {
            get
            {
                return _load_batch_status_name;
            }
            set
            {
                Onload_batch_status_nameChanging(value);
                ReportPropertyChanging("load_batch_status_name");
                _load_batch_status_name = StructuralObject.SetValidValue(value, false, "load_batch_status_name");
                ReportPropertyChanged("load_batch_status_name");
                Onload_batch_status_nameChanged();
            }
        }
        private global::System.String _load_batch_status_name;
        partial void Onload_batch_status_nameChanging(global::System.String value);
        partial void Onload_batch_status_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BranchName
        {
            get
            {
                return _BranchName;
            }
            set
            {
                OnBranchNameChanging(value);
                ReportPropertyChanging("BranchName");
                _BranchName = StructuralObject.SetValidValue(value, false, "BranchName");
                ReportPropertyChanged("BranchName");
                OnBranchNameChanged();
            }
        }
        private global::System.String _BranchName;
        partial void OnBranchNameChanging(global::System.String value);
        partial void OnBranchNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="LoadCardResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class LoadCardResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadCardResult object.
        /// </summary>
        /// <param name="load_card_status">Initial value of the load_card_status property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        public static LoadCardResult CreateLoadCardResult(global::System.String load_card_status, global::System.String branch_code, global::System.String branch_name)
        {
            LoadCardResult loadCardResult = new LoadCardResult();
            loadCardResult.load_card_status = load_card_status;
            loadCardResult.branch_code = branch_code;
            loadCardResult.branch_name = branch_name;
            return loadCardResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String load_card_status
        {
            get
            {
                return _load_card_status;
            }
            set
            {
                Onload_card_statusChanging(value);
                ReportPropertyChanging("load_card_status");
                _load_card_status = StructuralObject.SetValidValue(value, false, "load_card_status");
                ReportPropertyChanged("load_card_status");
                Onload_card_statusChanged();
            }
        }
        private global::System.String _load_card_status;
        partial void Onload_card_statusChanging(global::System.String value);
        partial void Onload_card_statusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_reference_number
        {
            get
            {
                return _card_reference_number;
            }
            set
            {
                Oncard_reference_numberChanging(value);
                ReportPropertyChanging("card_reference_number");
                _card_reference_number = StructuralObject.SetValidValue(value, true, "card_reference_number");
                ReportPropertyChanged("card_reference_number");
                Oncard_reference_numberChanged();
            }
        }
        private global::System.String _card_reference_number;
        partial void Oncard_reference_numberChanging(global::System.String value);
        partial void Oncard_reference_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="login_user")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class login_user : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new login_user object.
        /// </summary>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="online">Initial value of the online property.</param>
        /// <param name="user_status_id">Initial value of the user_status_id property.</param>
        public static login_user Createlogin_user(global::System.Int64 user_id, global::System.Boolean online, global::System.Int32 user_status_id)
        {
            login_user login_user = new login_user();
            login_user.user_id = user_id;
            login_user.online = online;
            login_user.user_status_id = user_status_id;
            return login_user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value, "user_id");
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int64 _user_id;
        partial void Onuser_idChanging(global::System.Int64 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String clr_username
        {
            get
            {
                return _clr_username;
            }
            set
            {
                Onclr_usernameChanging(value);
                ReportPropertyChanging("clr_username");
                _clr_username = StructuralObject.SetValidValue(value, true, "clr_username");
                ReportPropertyChanged("clr_username");
                Onclr_usernameChanged();
            }
        }
        private global::System.String _clr_username;
        partial void Onclr_usernameChanging(global::System.String value);
        partial void Onclr_usernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String clr_password
        {
            get
            {
                return _clr_password;
            }
            set
            {
                Onclr_passwordChanging(value);
                ReportPropertyChanging("clr_password");
                _clr_password = StructuralObject.SetValidValue(value, true, "clr_password");
                ReportPropertyChanged("clr_password");
                Onclr_passwordChanged();
            }
        }
        private global::System.String _clr_password;
        partial void Onclr_passwordChanging(global::System.String value);
        partial void Onclr_passwordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean online
        {
            get
            {
                return _online;
            }
            set
            {
                OnonlineChanging(value);
                ReportPropertyChanging("online");
                _online = StructuralObject.SetValidValue(value, "online");
                ReportPropertyChanged("online");
                OnonlineChanged();
            }
        }
        private global::System.Boolean _online;
        partial void OnonlineChanging(global::System.Boolean value);
        partial void OnonlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String workstation
        {
            get
            {
                return _workstation;
            }
            set
            {
                OnworkstationChanging(value);
                ReportPropertyChanging("workstation");
                _workstation = StructuralObject.SetValidValue(value, true, "workstation");
                ReportPropertyChanged("workstation");
                OnworkstationChanged();
            }
        }
        private global::System.String _workstation;
        partial void OnworkstationChanging(global::System.String value);
        partial void OnworkstationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> last_login_attempt
        {
            get
            {
                return _last_login_attempt;
            }
            set
            {
                Onlast_login_attemptChanging(value);
                ReportPropertyChanging("last_login_attempt");
                _last_login_attempt = StructuralObject.SetValidValue(value, "last_login_attempt");
                ReportPropertyChanged("last_login_attempt");
                Onlast_login_attemptChanged();
            }
        }
        private Nullable<global::System.DateTime> _last_login_attempt;
        partial void Onlast_login_attemptChanging(Nullable<global::System.DateTime> value);
        partial void Onlast_login_attemptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> last_password_changed_date
        {
            get
            {
                return _last_password_changed_date;
            }
            set
            {
                Onlast_password_changed_dateChanging(value);
                ReportPropertyChanging("last_password_changed_date");
                _last_password_changed_date = StructuralObject.SetValidValue(value, "last_password_changed_date");
                ReportPropertyChanged("last_password_changed_date");
                Onlast_password_changed_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _last_password_changed_date;
        partial void Onlast_password_changed_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onlast_password_changed_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> number_of_incorrect_logins
        {
            get
            {
                return _number_of_incorrect_logins;
            }
            set
            {
                Onnumber_of_incorrect_loginsChanging(value);
                ReportPropertyChanging("number_of_incorrect_logins");
                _number_of_incorrect_logins = StructuralObject.SetValidValue(value, "number_of_incorrect_logins");
                ReportPropertyChanged("number_of_incorrect_logins");
                Onnumber_of_incorrect_loginsChanged();
            }
        }
        private Nullable<global::System.Int32> _number_of_incorrect_logins;
        partial void Onnumber_of_incorrect_loginsChanging(Nullable<global::System.Int32> value);
        partial void Onnumber_of_incorrect_loginsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String domain_name
        {
            get
            {
                return _domain_name;
            }
            set
            {
                Ondomain_nameChanging(value);
                ReportPropertyChanging("domain_name");
                _domain_name = StructuralObject.SetValidValue(value, true, "domain_name");
                ReportPropertyChanged("domain_name");
                Ondomain_nameChanged();
            }
        }
        private global::System.String _domain_name;
        partial void Ondomain_nameChanging(global::System.String value);
        partial void Ondomain_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String domain_path
        {
            get
            {
                return _domain_path;
            }
            set
            {
                Ondomain_pathChanging(value);
                ReportPropertyChanging("domain_path");
                _domain_path = StructuralObject.SetValidValue(value, true, "domain_path");
                ReportPropertyChanged("domain_path");
                Ondomain_pathChanged();
            }
        }
        private global::System.String _domain_path;
        partial void Ondomain_pathChanging(global::System.String value);
        partial void Ondomain_pathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String domain_username
        {
            get
            {
                return _domain_username;
            }
            set
            {
                Ondomain_usernameChanging(value);
                ReportPropertyChanging("domain_username");
                _domain_username = StructuralObject.SetValidValue(value, true, "domain_username");
                ReportPropertyChanged("domain_username");
                Ondomain_usernameChanged();
            }
        }
        private global::System.String _domain_username;
        partial void Ondomain_usernameChanging(global::System.String value);
        partial void Ondomain_usernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String domain_password
        {
            get
            {
                return _domain_password;
            }
            set
            {
                Ondomain_passwordChanging(value);
                ReportPropertyChanging("domain_password");
                _domain_password = StructuralObject.SetValidValue(value, true, "domain_password");
                ReportPropertyChanged("domain_password");
                Ondomain_passwordChanged();
            }
        }
        private global::System.String _domain_password;
        partial void Ondomain_passwordChanging(global::System.String value);
        partial void Ondomain_passwordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> language_id
        {
            get
            {
                return _language_id;
            }
            set
            {
                Onlanguage_idChanging(value);
                ReportPropertyChanging("language_id");
                _language_id = StructuralObject.SetValidValue(value, "language_id");
                ReportPropertyChanged("language_id");
                Onlanguage_idChanged();
            }
        }
        private Nullable<global::System.Int32> _language_id;
        partial void Onlanguage_idChanging(Nullable<global::System.Int32> value);
        partial void Onlanguage_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String domain_hostname_or_ip
        {
            get
            {
                return _domain_hostname_or_ip;
            }
            set
            {
                Ondomain_hostname_or_ipChanging(value);
                ReportPropertyChanging("domain_hostname_or_ip");
                _domain_hostname_or_ip = StructuralObject.SetValidValue(value, true, "domain_hostname_or_ip");
                ReportPropertyChanged("domain_hostname_or_ip");
                Ondomain_hostname_or_ipChanged();
            }
        }
        private global::System.String _domain_hostname_or_ip;
        partial void Ondomain_hostname_or_ipChanging(global::System.String value);
        partial void Ondomain_hostname_or_ipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_status_id
        {
            get
            {
                return _user_status_id;
            }
            set
            {
                Onuser_status_idChanging(value);
                ReportPropertyChanging("user_status_id");
                _user_status_id = StructuralObject.SetValidValue(value, "user_status_id");
                ReportPropertyChanged("user_status_id");
                Onuser_status_idChanged();
            }
        }
        private global::System.Int32 _user_status_id;
        partial void Onuser_status_idChanging(global::System.Int32 value);
        partial void Onuser_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> connection_parameter_type_id
        {
            get
            {
                return _connection_parameter_type_id;
            }
            set
            {
                Onconnection_parameter_type_idChanging(value);
                ReportPropertyChanging("connection_parameter_type_id");
                _connection_parameter_type_id = StructuralObject.SetValidValue(value, "connection_parameter_type_id");
                ReportPropertyChanged("connection_parameter_type_id");
                Onconnection_parameter_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _connection_parameter_type_id;
        partial void Onconnection_parameter_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onconnection_parameter_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> is_external_auth
        {
            get
            {
                return _is_external_auth;
            }
            set
            {
                Onis_external_authChanging(value);
                ReportPropertyChanging("is_external_auth");
                _is_external_auth = StructuralObject.SetValidValue(value, "is_external_auth");
                ReportPropertyChanged("is_external_auth");
                Onis_external_authChanged();
            }
        }
        private Nullable<global::System.Boolean> _is_external_auth;
        partial void Onis_external_authChanging(Nullable<global::System.Boolean> value);
        partial void Onis_external_authChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> auth_type
        {
            get
            {
                return _auth_type;
            }
            set
            {
                Onauth_typeChanging(value);
                ReportPropertyChanging("auth_type");
                _auth_type = StructuralObject.SetValidValue(value, "auth_type");
                ReportPropertyChanged("auth_type");
                Onauth_typeChanged();
            }
        }
        private Nullable<global::System.Int32> _auth_type;
        partial void Onauth_typeChanging(Nullable<global::System.Int32> value);
        partial void Onauth_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> protocol
        {
            get
            {
                return _protocol;
            }
            set
            {
                OnprotocolChanging(value);
                ReportPropertyChanging("protocol");
                _protocol = StructuralObject.SetValidValue(value, "protocol");
                ReportPropertyChanged("protocol");
                OnprotocolChanged();
            }
        }
        private Nullable<global::System.Int32> _protocol;
        partial void OnprotocolChanging(Nullable<global::System.Int32> value);
        partial void OnprotocolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String path
        {
            get
            {
                return _path;
            }
            set
            {
                OnpathChanging(value);
                ReportPropertyChanging("path");
                _path = StructuralObject.SetValidValue(value, true, "path");
                ReportPropertyChanged("path");
                OnpathChanged();
            }
        }
        private global::System.String _path;
        partial void OnpathChanging(global::System.String value);
        partial void OnpathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> port
        {
            get
            {
                return _port;
            }
            set
            {
                OnportChanging(value);
                ReportPropertyChanging("port");
                _port = StructuralObject.SetValidValue(value, "port");
                ReportPropertyChanged("port");
                OnportChanged();
            }
        }
        private Nullable<global::System.Int32> _port;
        partial void OnportChanging(Nullable<global::System.Int32> value);
        partial void OnportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> authentication_configuration_id
        {
            get
            {
                return _authentication_configuration_id;
            }
            set
            {
                Onauthentication_configuration_idChanging(value);
                ReportPropertyChanging("authentication_configuration_id");
                _authentication_configuration_id = StructuralObject.SetValidValue(value, "authentication_configuration_id");
                ReportPropertyChanged("authentication_configuration_id");
                Onauthentication_configuration_idChanged();
            }
        }
        private Nullable<global::System.Int32> _authentication_configuration_id;
        partial void Onauthentication_configuration_idChanging(Nullable<global::System.Int32> value);
        partial void Onauthentication_configuration_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="MasterkeyResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class MasterkeyResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterkeyResult object.
        /// </summary>
        /// <param name="masterkey_name">Initial value of the masterkey_name property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        public static MasterkeyResult CreateMasterkeyResult(global::System.String masterkey_name, global::System.Int32 issuer_id)
        {
            MasterkeyResult masterkeyResult = new MasterkeyResult();
            masterkeyResult.masterkey_name = masterkey_name;
            masterkeyResult.issuer_id = issuer_id;
            return masterkeyResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String masterkey_name
        {
            get
            {
                return _masterkey_name;
            }
            set
            {
                Onmasterkey_nameChanging(value);
                ReportPropertyChanging("masterkey_name");
                _masterkey_name = StructuralObject.SetValidValue(value, false, "masterkey_name");
                ReportPropertyChanged("masterkey_name");
                Onmasterkey_nameChanged();
            }
        }
        private global::System.String _masterkey_name;
        partial void Onmasterkey_nameChanging(global::System.String value);
        partial void Onmasterkey_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String masterkey
        {
            get
            {
                return _masterkey;
            }
            set
            {
                OnmasterkeyChanging(value);
                ReportPropertyChanging("masterkey");
                _masterkey = StructuralObject.SetValidValue(value, true, "masterkey");
                ReportPropertyChanged("masterkey");
                OnmasterkeyChanged();
            }
        }
        private global::System.String _masterkey;
        partial void OnmasterkeyChanging(global::System.String value);
        partial void OnmasterkeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="notification_batch_ListResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class notification_batch_ListResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new notification_batch_ListResult object.
        /// </summary>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="dist_batch_type_name">Initial value of the dist_batch_type_name property.</param>
        /// <param name="dist_batch_status_name">Initial value of the dist_batch_status_name property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="dist_batch_type_id">Initial value of the dist_batch_type_id property.</param>
        /// <param name="dist_batch_statuses_id">Initial value of the dist_batch_statuses_id property.</param>
        /// <param name="channel_id">Initial value of the channel_id property.</param>
        public static notification_batch_ListResult Createnotification_batch_ListResult(global::System.String issuer_name, global::System.String dist_batch_type_name, global::System.String dist_batch_status_name, global::System.Int32 issuer_id, global::System.Int32 dist_batch_type_id, global::System.Int32 dist_batch_statuses_id, global::System.Int32 channel_id)
        {
            notification_batch_ListResult notification_batch_ListResult = new notification_batch_ListResult();
            notification_batch_ListResult.issuer_name = issuer_name;
            notification_batch_ListResult.dist_batch_type_name = dist_batch_type_name;
            notification_batch_ListResult.dist_batch_status_name = dist_batch_status_name;
            notification_batch_ListResult.issuer_id = issuer_id;
            notification_batch_ListResult.dist_batch_type_id = dist_batch_type_id;
            notification_batch_ListResult.dist_batch_statuses_id = dist_batch_statuses_id;
            notification_batch_ListResult.channel_id = channel_id;
            return notification_batch_ListResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String dist_batch_type_name
        {
            get
            {
                return _dist_batch_type_name;
            }
            set
            {
                Ondist_batch_type_nameChanging(value);
                ReportPropertyChanging("dist_batch_type_name");
                _dist_batch_type_name = StructuralObject.SetValidValue(value, false, "dist_batch_type_name");
                ReportPropertyChanged("dist_batch_type_name");
                Ondist_batch_type_nameChanged();
            }
        }
        private global::System.String _dist_batch_type_name;
        partial void Ondist_batch_type_nameChanging(global::System.String value);
        partial void Ondist_batch_type_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String dist_batch_status_name
        {
            get
            {
                return _dist_batch_status_name;
            }
            set
            {
                Ondist_batch_status_nameChanging(value);
                ReportPropertyChanging("dist_batch_status_name");
                _dist_batch_status_name = StructuralObject.SetValidValue(value, false, "dist_batch_status_name");
                ReportPropertyChanged("dist_batch_status_name");
                Ondist_batch_status_nameChanged();
            }
        }
        private global::System.String _dist_batch_status_name;
        partial void Ondist_batch_status_nameChanging(global::System.String value);
        partial void Ondist_batch_status_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dist_batch_type_id
        {
            get
            {
                return _dist_batch_type_id;
            }
            set
            {
                Ondist_batch_type_idChanging(value);
                ReportPropertyChanging("dist_batch_type_id");
                _dist_batch_type_id = StructuralObject.SetValidValue(value, "dist_batch_type_id");
                ReportPropertyChanged("dist_batch_type_id");
                Ondist_batch_type_idChanged();
            }
        }
        private global::System.Int32 _dist_batch_type_id;
        partial void Ondist_batch_type_idChanging(global::System.Int32 value);
        partial void Ondist_batch_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dist_batch_statuses_id
        {
            get
            {
                return _dist_batch_statuses_id;
            }
            set
            {
                Ondist_batch_statuses_idChanging(value);
                ReportPropertyChanging("dist_batch_statuses_id");
                _dist_batch_statuses_id = StructuralObject.SetValidValue(value, "dist_batch_statuses_id");
                ReportPropertyChanged("dist_batch_statuses_id");
                Ondist_batch_statuses_idChanged();
            }
        }
        private global::System.Int32 _dist_batch_statuses_id;
        partial void Ondist_batch_statuses_idChanging(global::System.Int32 value);
        partial void Ondist_batch_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 channel_id
        {
            get
            {
                return _channel_id;
            }
            set
            {
                Onchannel_idChanging(value);
                ReportPropertyChanging("channel_id");
                _channel_id = StructuralObject.SetValidValue(value, "channel_id");
                ReportPropertyChanged("channel_id");
                Onchannel_idChanged();
            }
        }
        private global::System.Int32 _channel_id;
        partial void Onchannel_idChanging(global::System.Int32 value);
        partial void Onchannel_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="notification_batchResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class notification_batchResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new notification_batchResult object.
        /// </summary>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="dist_batch_type_id">Initial value of the dist_batch_type_id property.</param>
        /// <param name="dist_batch_statuses_id">Initial value of the dist_batch_statuses_id property.</param>
        /// <param name="language_id">Initial value of the language_id property.</param>
        /// <param name="channel_id">Initial value of the channel_id property.</param>
        /// <param name="notification_text">Initial value of the notification_text property.</param>
        /// <param name="subject_text">Initial value of the subject_text property.</param>
        /// <param name="language_name">Initial value of the language_name property.</param>
        /// <param name="from_address">Initial value of the from_address property.</param>
        public static notification_batchResult Createnotification_batchResult(global::System.Int32 issuer_id, global::System.Int32 dist_batch_type_id, global::System.Int32 dist_batch_statuses_id, global::System.Int32 language_id, global::System.Int32 channel_id, global::System.String notification_text, global::System.String subject_text, global::System.String language_name, global::System.String from_address)
        {
            notification_batchResult notification_batchResult = new notification_batchResult();
            notification_batchResult.issuer_id = issuer_id;
            notification_batchResult.dist_batch_type_id = dist_batch_type_id;
            notification_batchResult.dist_batch_statuses_id = dist_batch_statuses_id;
            notification_batchResult.language_id = language_id;
            notification_batchResult.channel_id = channel_id;
            notification_batchResult.notification_text = notification_text;
            notification_batchResult.subject_text = subject_text;
            notification_batchResult.language_name = language_name;
            notification_batchResult.from_address = from_address;
            return notification_batchResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dist_batch_type_id
        {
            get
            {
                return _dist_batch_type_id;
            }
            set
            {
                Ondist_batch_type_idChanging(value);
                ReportPropertyChanging("dist_batch_type_id");
                _dist_batch_type_id = StructuralObject.SetValidValue(value, "dist_batch_type_id");
                ReportPropertyChanged("dist_batch_type_id");
                Ondist_batch_type_idChanged();
            }
        }
        private global::System.Int32 _dist_batch_type_id;
        partial void Ondist_batch_type_idChanging(global::System.Int32 value);
        partial void Ondist_batch_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dist_batch_statuses_id
        {
            get
            {
                return _dist_batch_statuses_id;
            }
            set
            {
                Ondist_batch_statuses_idChanging(value);
                ReportPropertyChanging("dist_batch_statuses_id");
                _dist_batch_statuses_id = StructuralObject.SetValidValue(value, "dist_batch_statuses_id");
                ReportPropertyChanged("dist_batch_statuses_id");
                Ondist_batch_statuses_idChanged();
            }
        }
        private global::System.Int32 _dist_batch_statuses_id;
        partial void Ondist_batch_statuses_idChanging(global::System.Int32 value);
        partial void Ondist_batch_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 language_id
        {
            get
            {
                return _language_id;
            }
            set
            {
                Onlanguage_idChanging(value);
                ReportPropertyChanging("language_id");
                _language_id = StructuralObject.SetValidValue(value, "language_id");
                ReportPropertyChanged("language_id");
                Onlanguage_idChanged();
            }
        }
        private global::System.Int32 _language_id;
        partial void Onlanguage_idChanging(global::System.Int32 value);
        partial void Onlanguage_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 channel_id
        {
            get
            {
                return _channel_id;
            }
            set
            {
                Onchannel_idChanging(value);
                ReportPropertyChanging("channel_id");
                _channel_id = StructuralObject.SetValidValue(value, "channel_id");
                ReportPropertyChanged("channel_id");
                Onchannel_idChanged();
            }
        }
        private global::System.Int32 _channel_id;
        partial void Onchannel_idChanging(global::System.Int32 value);
        partial void Onchannel_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String notification_text
        {
            get
            {
                return _notification_text;
            }
            set
            {
                Onnotification_textChanging(value);
                ReportPropertyChanging("notification_text");
                _notification_text = StructuralObject.SetValidValue(value, false, "notification_text");
                ReportPropertyChanged("notification_text");
                Onnotification_textChanged();
            }
        }
        private global::System.String _notification_text;
        partial void Onnotification_textChanging(global::System.String value);
        partial void Onnotification_textChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String subject_text
        {
            get
            {
                return _subject_text;
            }
            set
            {
                Onsubject_textChanging(value);
                ReportPropertyChanging("subject_text");
                _subject_text = StructuralObject.SetValidValue(value, false, "subject_text");
                ReportPropertyChanged("subject_text");
                Onsubject_textChanged();
            }
        }
        private global::System.String _subject_text;
        partial void Onsubject_textChanging(global::System.String value);
        partial void Onsubject_textChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String language_name
        {
            get
            {
                return _language_name;
            }
            set
            {
                Onlanguage_nameChanging(value);
                ReportPropertyChanging("language_name");
                _language_name = StructuralObject.SetValidValue(value, false, "language_name");
                ReportPropertyChanged("language_name");
                Onlanguage_nameChanged();
            }
        }
        private global::System.String _language_name;
        partial void Onlanguage_nameChanging(global::System.String value);
        partial void Onlanguage_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String from_address
        {
            get
            {
                return _from_address;
            }
            set
            {
                Onfrom_addressChanging(value);
                ReportPropertyChanging("from_address");
                _from_address = StructuralObject.SetValidValue(value, false, "from_address");
                ReportPropertyChanged("from_address");
                Onfrom_addressChanged();
            }
        }
        private global::System.String _from_address;
        partial void Onfrom_addressChanging(global::System.String value);
        partial void Onfrom_addressChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="notification_branch_ListResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class notification_branch_ListResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new notification_branch_ListResult object.
        /// </summary>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="branch_card_statuses_name">Initial value of the branch_card_statuses_name property.</param>
        /// <param name="card_issue_method_name">Initial value of the card_issue_method_name property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="card_issue_method_id">Initial value of the card_issue_method_id property.</param>
        /// <param name="branch_card_statuses_id">Initial value of the branch_card_statuses_id property.</param>
        /// <param name="channel_id">Initial value of the channel_id property.</param>
        public static notification_branch_ListResult Createnotification_branch_ListResult(global::System.String issuer_name, global::System.String issuer_code, global::System.String branch_card_statuses_name, global::System.String card_issue_method_name, global::System.Int32 issuer_id, global::System.Int32 card_issue_method_id, global::System.Int32 branch_card_statuses_id, global::System.Int32 channel_id)
        {
            notification_branch_ListResult notification_branch_ListResult = new notification_branch_ListResult();
            notification_branch_ListResult.issuer_name = issuer_name;
            notification_branch_ListResult.issuer_code = issuer_code;
            notification_branch_ListResult.branch_card_statuses_name = branch_card_statuses_name;
            notification_branch_ListResult.card_issue_method_name = card_issue_method_name;
            notification_branch_ListResult.issuer_id = issuer_id;
            notification_branch_ListResult.card_issue_method_id = card_issue_method_id;
            notification_branch_ListResult.branch_card_statuses_id = branch_card_statuses_id;
            notification_branch_ListResult.channel_id = channel_id;
            return notification_branch_ListResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_card_statuses_name
        {
            get
            {
                return _branch_card_statuses_name;
            }
            set
            {
                Onbranch_card_statuses_nameChanging(value);
                ReportPropertyChanging("branch_card_statuses_name");
                _branch_card_statuses_name = StructuralObject.SetValidValue(value, false, "branch_card_statuses_name");
                ReportPropertyChanged("branch_card_statuses_name");
                Onbranch_card_statuses_nameChanged();
            }
        }
        private global::System.String _branch_card_statuses_name;
        partial void Onbranch_card_statuses_nameChanging(global::System.String value);
        partial void Onbranch_card_statuses_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String card_issue_method_name
        {
            get
            {
                return _card_issue_method_name;
            }
            set
            {
                Oncard_issue_method_nameChanging(value);
                ReportPropertyChanging("card_issue_method_name");
                _card_issue_method_name = StructuralObject.SetValidValue(value, false, "card_issue_method_name");
                ReportPropertyChanged("card_issue_method_name");
                Oncard_issue_method_nameChanged();
            }
        }
        private global::System.String _card_issue_method_name;
        partial void Oncard_issue_method_nameChanging(global::System.String value);
        partial void Oncard_issue_method_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_method_id
        {
            get
            {
                return _card_issue_method_id;
            }
            set
            {
                Oncard_issue_method_idChanging(value);
                ReportPropertyChanging("card_issue_method_id");
                _card_issue_method_id = StructuralObject.SetValidValue(value, "card_issue_method_id");
                ReportPropertyChanged("card_issue_method_id");
                Oncard_issue_method_idChanged();
            }
        }
        private global::System.Int32 _card_issue_method_id;
        partial void Oncard_issue_method_idChanging(global::System.Int32 value);
        partial void Oncard_issue_method_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_card_statuses_id
        {
            get
            {
                return _branch_card_statuses_id;
            }
            set
            {
                Onbranch_card_statuses_idChanging(value);
                ReportPropertyChanging("branch_card_statuses_id");
                _branch_card_statuses_id = StructuralObject.SetValidValue(value, "branch_card_statuses_id");
                ReportPropertyChanged("branch_card_statuses_id");
                Onbranch_card_statuses_idChanged();
            }
        }
        private global::System.Int32 _branch_card_statuses_id;
        partial void Onbranch_card_statuses_idChanging(global::System.Int32 value);
        partial void Onbranch_card_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 channel_id
        {
            get
            {
                return _channel_id;
            }
            set
            {
                Onchannel_idChanging(value);
                ReportPropertyChanging("channel_id");
                _channel_id = StructuralObject.SetValidValue(value, "channel_id");
                ReportPropertyChanged("channel_id");
                Onchannel_idChanged();
            }
        }
        private global::System.Int32 _channel_id;
        partial void Onchannel_idChanging(global::System.Int32 value);
        partial void Onchannel_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="notification_branchResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class notification_branchResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new notification_branchResult object.
        /// </summary>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="card_issue_method_id">Initial value of the card_issue_method_id property.</param>
        /// <param name="branch_card_statuses_id">Initial value of the branch_card_statuses_id property.</param>
        /// <param name="language_id">Initial value of the language_id property.</param>
        /// <param name="channel_id">Initial value of the channel_id property.</param>
        /// <param name="notification_text">Initial value of the notification_text property.</param>
        /// <param name="subject_text">Initial value of the subject_text property.</param>
        /// <param name="language_name">Initial value of the language_name property.</param>
        /// <param name="from_address">Initial value of the from_address property.</param>
        public static notification_branchResult Createnotification_branchResult(global::System.Int32 issuer_id, global::System.Int32 card_issue_method_id, global::System.Int32 branch_card_statuses_id, global::System.Int32 language_id, global::System.Int32 channel_id, global::System.String notification_text, global::System.String subject_text, global::System.String language_name, global::System.String from_address)
        {
            notification_branchResult notification_branchResult = new notification_branchResult();
            notification_branchResult.issuer_id = issuer_id;
            notification_branchResult.card_issue_method_id = card_issue_method_id;
            notification_branchResult.branch_card_statuses_id = branch_card_statuses_id;
            notification_branchResult.language_id = language_id;
            notification_branchResult.channel_id = channel_id;
            notification_branchResult.notification_text = notification_text;
            notification_branchResult.subject_text = subject_text;
            notification_branchResult.language_name = language_name;
            notification_branchResult.from_address = from_address;
            return notification_branchResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_method_id
        {
            get
            {
                return _card_issue_method_id;
            }
            set
            {
                Oncard_issue_method_idChanging(value);
                ReportPropertyChanging("card_issue_method_id");
                _card_issue_method_id = StructuralObject.SetValidValue(value, "card_issue_method_id");
                ReportPropertyChanged("card_issue_method_id");
                Oncard_issue_method_idChanged();
            }
        }
        private global::System.Int32 _card_issue_method_id;
        partial void Oncard_issue_method_idChanging(global::System.Int32 value);
        partial void Oncard_issue_method_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_card_statuses_id
        {
            get
            {
                return _branch_card_statuses_id;
            }
            set
            {
                Onbranch_card_statuses_idChanging(value);
                ReportPropertyChanging("branch_card_statuses_id");
                _branch_card_statuses_id = StructuralObject.SetValidValue(value, "branch_card_statuses_id");
                ReportPropertyChanged("branch_card_statuses_id");
                Onbranch_card_statuses_idChanged();
            }
        }
        private global::System.Int32 _branch_card_statuses_id;
        partial void Onbranch_card_statuses_idChanging(global::System.Int32 value);
        partial void Onbranch_card_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 language_id
        {
            get
            {
                return _language_id;
            }
            set
            {
                Onlanguage_idChanging(value);
                ReportPropertyChanging("language_id");
                _language_id = StructuralObject.SetValidValue(value, "language_id");
                ReportPropertyChanged("language_id");
                Onlanguage_idChanged();
            }
        }
        private global::System.Int32 _language_id;
        partial void Onlanguage_idChanging(global::System.Int32 value);
        partial void Onlanguage_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 channel_id
        {
            get
            {
                return _channel_id;
            }
            set
            {
                Onchannel_idChanging(value);
                ReportPropertyChanging("channel_id");
                _channel_id = StructuralObject.SetValidValue(value, "channel_id");
                ReportPropertyChanged("channel_id");
                Onchannel_idChanged();
            }
        }
        private global::System.Int32 _channel_id;
        partial void Onchannel_idChanging(global::System.Int32 value);
        partial void Onchannel_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String notification_text
        {
            get
            {
                return _notification_text;
            }
            set
            {
                Onnotification_textChanging(value);
                ReportPropertyChanging("notification_text");
                _notification_text = StructuralObject.SetValidValue(value, false, "notification_text");
                ReportPropertyChanged("notification_text");
                Onnotification_textChanged();
            }
        }
        private global::System.String _notification_text;
        partial void Onnotification_textChanging(global::System.String value);
        partial void Onnotification_textChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String subject_text
        {
            get
            {
                return _subject_text;
            }
            set
            {
                Onsubject_textChanging(value);
                ReportPropertyChanging("subject_text");
                _subject_text = StructuralObject.SetValidValue(value, false, "subject_text");
                ReportPropertyChanged("subject_text");
                Onsubject_textChanged();
            }
        }
        private global::System.String _subject_text;
        partial void Onsubject_textChanging(global::System.String value);
        partial void Onsubject_textChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String language_name
        {
            get
            {
                return _language_name;
            }
            set
            {
                Onlanguage_nameChanging(value);
                ReportPropertyChanging("language_name");
                _language_name = StructuralObject.SetValidValue(value, false, "language_name");
                ReportPropertyChanged("language_name");
                Onlanguage_nameChanged();
            }
        }
        private global::System.String _language_name;
        partial void Onlanguage_nameChanging(global::System.String value);
        partial void Onlanguage_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String from_address
        {
            get
            {
                return _from_address;
            }
            set
            {
                Onfrom_addressChanging(value);
                ReportPropertyChanging("from_address");
                _from_address = StructuralObject.SetValidValue(value, false, "from_address");
                ReportPropertyChanged("from_address");
                Onfrom_addressChanged();
            }
        }
        private global::System.String _from_address;
        partial void Onfrom_addressChanging(global::System.String value);
        partial void Onfrom_addressChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="pin_block_formatResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class pin_block_formatResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new pin_block_formatResult object.
        /// </summary>
        /// <param name="pin_block_formatid">Initial value of the pin_block_formatid property.</param>
        /// <param name="pin_block_format">Initial value of the pin_block_format property.</param>
        public static pin_block_formatResult Createpin_block_formatResult(global::System.Int32 pin_block_formatid, global::System.String pin_block_format)
        {
            pin_block_formatResult pin_block_formatResult = new pin_block_formatResult();
            pin_block_formatResult.pin_block_formatid = pin_block_formatid;
            pin_block_formatResult.pin_block_format = pin_block_format;
            return pin_block_formatResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pin_block_formatid
        {
            get
            {
                return _pin_block_formatid;
            }
            set
            {
                Onpin_block_formatidChanging(value);
                ReportPropertyChanging("pin_block_formatid");
                _pin_block_formatid = StructuralObject.SetValidValue(value, "pin_block_formatid");
                ReportPropertyChanged("pin_block_formatid");
                Onpin_block_formatidChanged();
            }
        }
        private global::System.Int32 _pin_block_formatid;
        partial void Onpin_block_formatidChanging(global::System.Int32 value);
        partial void Onpin_block_formatidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pin_block_format
        {
            get
            {
                return _pin_block_format;
            }
            set
            {
                Onpin_block_formatChanging(value);
                ReportPropertyChanging("pin_block_format");
                _pin_block_format = StructuralObject.SetValidValue(value, false, "pin_block_format");
                ReportPropertyChanged("pin_block_format");
                Onpin_block_formatChanged();
            }
        }
        private global::System.String _pin_block_format;
        partial void Onpin_block_formatChanging(global::System.String value);
        partial void Onpin_block_formatChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="PinBatchCardDetailsResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class PinBatchCardDetailsResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PinBatchCardDetailsResult object.
        /// </summary>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        /// <param name="card_id">Initial value of the card_id property.</param>
        /// <param name="card_issue_method_id">Initial value of the card_issue_method_id property.</param>
        /// <param name="card_priority_id">Initial value of the card_priority_id property.</param>
        /// <param name="card_sequence">Initial value of the card_sequence property.</param>
        /// <param name="product_id">Initial value of the product_id property.</param>
        /// <param name="pin_batch_id">Initial value of the pin_batch_id property.</param>
        /// <param name="pin_batch_cards_statuses_id">Initial value of the pin_batch_cards_statuses_id property.</param>
        /// <param name="pin_batch_card_statuses_name">Initial value of the pin_batch_card_statuses_name property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        /// <param name="product_code">Initial value of the product_code property.</param>
        /// <param name="product_name">Initial value of the product_name property.</param>
        /// <param name="product_bin_code">Initial value of the product_bin_code property.</param>
        /// <param name="src1_id">Initial value of the src1_id property.</param>
        /// <param name="src2_id">Initial value of the src2_id property.</param>
        /// <param name="src3_id">Initial value of the src3_id property.</param>
        public static PinBatchCardDetailsResult CreatePinBatchCardDetailsResult(global::System.Int32 branch_id, global::System.Int64 card_id, global::System.Int32 card_issue_method_id, global::System.Int32 card_priority_id, global::System.Int32 card_sequence, global::System.Int32 product_id, global::System.Int64 pin_batch_id, global::System.Int32 pin_batch_cards_statuses_id, global::System.String pin_batch_card_statuses_name, global::System.Int32 issuer_id, global::System.String issuer_code, global::System.String issuer_name, global::System.String branch_code, global::System.String branch_name, global::System.String product_code, global::System.String product_name, global::System.String product_bin_code, global::System.Int32 src1_id, global::System.Int32 src2_id, global::System.Int32 src3_id)
        {
            PinBatchCardDetailsResult pinBatchCardDetailsResult = new PinBatchCardDetailsResult();
            pinBatchCardDetailsResult.branch_id = branch_id;
            pinBatchCardDetailsResult.card_id = card_id;
            pinBatchCardDetailsResult.card_issue_method_id = card_issue_method_id;
            pinBatchCardDetailsResult.card_priority_id = card_priority_id;
            pinBatchCardDetailsResult.card_sequence = card_sequence;
            pinBatchCardDetailsResult.product_id = product_id;
            pinBatchCardDetailsResult.pin_batch_id = pin_batch_id;
            pinBatchCardDetailsResult.pin_batch_cards_statuses_id = pin_batch_cards_statuses_id;
            pinBatchCardDetailsResult.pin_batch_card_statuses_name = pin_batch_card_statuses_name;
            pinBatchCardDetailsResult.issuer_id = issuer_id;
            pinBatchCardDetailsResult.issuer_code = issuer_code;
            pinBatchCardDetailsResult.issuer_name = issuer_name;
            pinBatchCardDetailsResult.branch_code = branch_code;
            pinBatchCardDetailsResult.branch_name = branch_name;
            pinBatchCardDetailsResult.product_code = product_code;
            pinBatchCardDetailsResult.product_name = product_name;
            pinBatchCardDetailsResult.product_bin_code = product_bin_code;
            pinBatchCardDetailsResult.src1_id = src1_id;
            pinBatchCardDetailsResult.src2_id = src2_id;
            pinBatchCardDetailsResult.src3_id = src3_id;
            return pinBatchCardDetailsResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int32 _branch_id;
        partial void Onbranch_idChanging(global::System.Int32 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 card_id
        {
            get
            {
                return _card_id;
            }
            set
            {
                Oncard_idChanging(value);
                ReportPropertyChanging("card_id");
                _card_id = StructuralObject.SetValidValue(value, "card_id");
                ReportPropertyChanged("card_id");
                Oncard_idChanged();
            }
        }
        private global::System.Int64 _card_id;
        partial void Oncard_idChanging(global::System.Int64 value);
        partial void Oncard_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_method_id
        {
            get
            {
                return _card_issue_method_id;
            }
            set
            {
                Oncard_issue_method_idChanging(value);
                ReportPropertyChanging("card_issue_method_id");
                _card_issue_method_id = StructuralObject.SetValidValue(value, "card_issue_method_id");
                ReportPropertyChanged("card_issue_method_id");
                Oncard_issue_method_idChanged();
            }
        }
        private global::System.Int32 _card_issue_method_id;
        partial void Oncard_issue_method_idChanging(global::System.Int32 value);
        partial void Oncard_issue_method_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_priority_id
        {
            get
            {
                return _card_priority_id;
            }
            set
            {
                Oncard_priority_idChanging(value);
                ReportPropertyChanging("card_priority_id");
                _card_priority_id = StructuralObject.SetValidValue(value, "card_priority_id");
                ReportPropertyChanged("card_priority_id");
                Oncard_priority_idChanged();
            }
        }
        private global::System.Int32 _card_priority_id;
        partial void Oncard_priority_idChanging(global::System.Int32 value);
        partial void Oncard_priority_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_request_reference
        {
            get
            {
                return _card_request_reference;
            }
            set
            {
                Oncard_request_referenceChanging(value);
                ReportPropertyChanging("card_request_reference");
                _card_request_reference = StructuralObject.SetValidValue(value, true, "card_request_reference");
                ReportPropertyChanged("card_request_reference");
                Oncard_request_referenceChanged();
            }
        }
        private global::System.String _card_request_reference;
        partial void Oncard_request_referenceChanging(global::System.String value);
        partial void Oncard_request_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_sequence
        {
            get
            {
                return _card_sequence;
            }
            set
            {
                Oncard_sequenceChanging(value);
                ReportPropertyChanging("card_sequence");
                _card_sequence = StructuralObject.SetValidValue(value, "card_sequence");
                ReportPropertyChanged("card_sequence");
                Oncard_sequenceChanged();
            }
        }
        private global::System.Int32 _card_sequence;
        partial void Oncard_sequenceChanging(global::System.Int32 value);
        partial void Oncard_sequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private global::System.Int32 _product_id;
        partial void Onproduct_idChanging(global::System.Int32 value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> card_activation_date
        {
            get
            {
                return _card_activation_date;
            }
            set
            {
                Oncard_activation_dateChanging(value);
                ReportPropertyChanging("card_activation_date");
                _card_activation_date = StructuralObject.SetValidValue(value, "card_activation_date");
                ReportPropertyChanged("card_activation_date");
                Oncard_activation_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _card_activation_date;
        partial void Oncard_activation_dateChanging(Nullable<global::System.DateTime> value);
        partial void Oncard_activation_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> card_expiry_date
        {
            get
            {
                return _card_expiry_date;
            }
            set
            {
                Oncard_expiry_dateChanging(value);
                ReportPropertyChanging("card_expiry_date");
                _card_expiry_date = StructuralObject.SetValidValue(value, "card_expiry_date");
                ReportPropertyChanged("card_expiry_date");
                Oncard_expiry_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _card_expiry_date;
        partial void Oncard_expiry_dateChanging(Nullable<global::System.DateTime> value);
        partial void Oncard_expiry_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> card_production_date
        {
            get
            {
                return _card_production_date;
            }
            set
            {
                Oncard_production_dateChanging(value);
                ReportPropertyChanging("card_production_date");
                _card_production_date = StructuralObject.SetValidValue(value, "card_production_date");
                ReportPropertyChanged("card_production_date");
                Oncard_production_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _card_production_date;
        partial void Oncard_production_dateChanging(Nullable<global::System.DateTime> value);
        partial void Oncard_production_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String pvv
        {
            get
            {
                return _pvv;
            }
            set
            {
                OnpvvChanging(value);
                ReportPropertyChanging("pvv");
                _pvv = StructuralObject.SetValidValue(value, true, "pvv");
                ReportPropertyChanged("pvv");
                OnpvvChanged();
            }
        }
        private global::System.String _pvv;
        partial void OnpvvChanging(global::System.String value);
        partial void OnpvvChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 pin_batch_id
        {
            get
            {
                return _pin_batch_id;
            }
            set
            {
                Onpin_batch_idChanging(value);
                ReportPropertyChanging("pin_batch_id");
                _pin_batch_id = StructuralObject.SetValidValue(value, "pin_batch_id");
                ReportPropertyChanged("pin_batch_id");
                Onpin_batch_idChanged();
            }
        }
        private global::System.Int64 _pin_batch_id;
        partial void Onpin_batch_idChanging(global::System.Int64 value);
        partial void Onpin_batch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pin_batch_cards_statuses_id
        {
            get
            {
                return _pin_batch_cards_statuses_id;
            }
            set
            {
                Onpin_batch_cards_statuses_idChanging(value);
                ReportPropertyChanging("pin_batch_cards_statuses_id");
                _pin_batch_cards_statuses_id = StructuralObject.SetValidValue(value, "pin_batch_cards_statuses_id");
                ReportPropertyChanged("pin_batch_cards_statuses_id");
                Onpin_batch_cards_statuses_idChanged();
            }
        }
        private global::System.Int32 _pin_batch_cards_statuses_id;
        partial void Onpin_batch_cards_statuses_idChanging(global::System.Int32 value);
        partial void Onpin_batch_cards_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pin_batch_card_statuses_name
        {
            get
            {
                return _pin_batch_card_statuses_name;
            }
            set
            {
                Onpin_batch_card_statuses_nameChanging(value);
                ReportPropertyChanging("pin_batch_card_statuses_name");
                _pin_batch_card_statuses_name = StructuralObject.SetValidValue(value, false, "pin_batch_card_statuses_name");
                ReportPropertyChanged("pin_batch_card_statuses_name");
                Onpin_batch_card_statuses_nameChanged();
            }
        }
        private global::System.String _pin_batch_card_statuses_name;
        partial void Onpin_batch_card_statuses_nameChanging(global::System.String value);
        partial void Onpin_batch_card_statuses_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> account_type_id
        {
            get
            {
                return _account_type_id;
            }
            set
            {
                Onaccount_type_idChanging(value);
                ReportPropertyChanging("account_type_id");
                _account_type_id = StructuralObject.SetValidValue(value, "account_type_id");
                ReportPropertyChanged("account_type_id");
                Onaccount_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _account_type_id;
        partial void Onaccount_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onaccount_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cms_id
        {
            get
            {
                return _cms_id;
            }
            set
            {
                Oncms_idChanging(value);
                ReportPropertyChanging("cms_id");
                _cms_id = StructuralObject.SetValidValue(value, true, "cms_id");
                ReportPropertyChanged("cms_id");
                Oncms_idChanged();
            }
        }
        private global::System.String _cms_id;
        partial void Oncms_idChanging(global::System.String value);
        partial void Oncms_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contract_number
        {
            get
            {
                return _contract_number;
            }
            set
            {
                Oncontract_numberChanging(value);
                ReportPropertyChanging("contract_number");
                _contract_number = StructuralObject.SetValidValue(value, true, "contract_number");
                ReportPropertyChanged("contract_number");
                Oncontract_numberChanged();
            }
        }
        private global::System.String _contract_number;
        partial void Oncontract_numberChanging(global::System.String value);
        partial void Oncontract_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> currency_id
        {
            get
            {
                return _currency_id;
            }
            set
            {
                Oncurrency_idChanging(value);
                ReportPropertyChanging("currency_id");
                _currency_id = StructuralObject.SetValidValue(value, "currency_id");
                ReportPropertyChanged("currency_id");
                Oncurrency_idChanged();
            }
        }
        private Nullable<global::System.Int32> _currency_id;
        partial void Oncurrency_idChanging(Nullable<global::System.Int32> value);
        partial void Oncurrency_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> customer_account_id
        {
            get
            {
                return _customer_account_id;
            }
            set
            {
                Oncustomer_account_idChanging(value);
                ReportPropertyChanging("customer_account_id");
                _customer_account_id = StructuralObject.SetValidValue(value, "customer_account_id");
                ReportPropertyChanged("customer_account_id");
                Oncustomer_account_idChanged();
            }
        }
        private Nullable<global::System.Int64> _customer_account_id;
        partial void Oncustomer_account_idChanging(Nullable<global::System.Int64> value);
        partial void Oncustomer_account_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_account_number
        {
            get
            {
                return _customer_account_number;
            }
            set
            {
                Oncustomer_account_numberChanging(value);
                ReportPropertyChanging("customer_account_number");
                _customer_account_number = StructuralObject.SetValidValue(value, true, "customer_account_number");
                ReportPropertyChanged("customer_account_number");
                Oncustomer_account_numberChanged();
            }
        }
        private global::System.String _customer_account_number;
        partial void Oncustomer_account_numberChanging(global::System.String value);
        partial void Oncustomer_account_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_first_name
        {
            get
            {
                return _customer_first_name;
            }
            set
            {
                Oncustomer_first_nameChanging(value);
                ReportPropertyChanging("customer_first_name");
                _customer_first_name = StructuralObject.SetValidValue(value, true, "customer_first_name");
                ReportPropertyChanged("customer_first_name");
                Oncustomer_first_nameChanged();
            }
        }
        private global::System.String _customer_first_name;
        partial void Oncustomer_first_nameChanging(global::System.String value);
        partial void Oncustomer_first_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_last_name
        {
            get
            {
                return _customer_last_name;
            }
            set
            {
                Oncustomer_last_nameChanging(value);
                ReportPropertyChanging("customer_last_name");
                _customer_last_name = StructuralObject.SetValidValue(value, true, "customer_last_name");
                ReportPropertyChanged("customer_last_name");
                Oncustomer_last_nameChanged();
            }
        }
        private global::System.String _customer_last_name;
        partial void Oncustomer_last_nameChanging(global::System.String value);
        partial void Oncustomer_last_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_middle_name
        {
            get
            {
                return _customer_middle_name;
            }
            set
            {
                Oncustomer_middle_nameChanging(value);
                ReportPropertyChanging("customer_middle_name");
                _customer_middle_name = StructuralObject.SetValidValue(value, true, "customer_middle_name");
                ReportPropertyChanged("customer_middle_name");
                Oncustomer_middle_nameChanged();
            }
        }
        private global::System.String _customer_middle_name;
        partial void Oncustomer_middle_nameChanging(global::System.String value);
        partial void Oncustomer_middle_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name_on_card
        {
            get
            {
                return _name_on_card;
            }
            set
            {
                Onname_on_cardChanging(value);
                ReportPropertyChanging("name_on_card");
                _name_on_card = StructuralObject.SetValidValue(value, true, "name_on_card");
                ReportPropertyChanged("name_on_card");
                Onname_on_cardChanged();
            }
        }
        private global::System.String _name_on_card;
        partial void Onname_on_cardChanging(global::System.String value);
        partial void Onname_on_cardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Id_number
        {
            get
            {
                return _Id_number;
            }
            set
            {
                OnId_numberChanging(value);
                ReportPropertyChanging("Id_number");
                _Id_number = StructuralObject.SetValidValue(value, true, "Id_number");
                ReportPropertyChanged("Id_number");
                OnId_numberChanged();
            }
        }
        private global::System.String _Id_number;
        partial void OnId_numberChanging(global::System.String value);
        partial void OnId_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contact_number
        {
            get
            {
                return _contact_number;
            }
            set
            {
                Oncontact_numberChanging(value);
                ReportPropertyChanging("contact_number");
                _contact_number = StructuralObject.SetValidValue(value, true, "contact_number");
                ReportPropertyChanged("contact_number");
                Oncontact_numberChanged();
            }
        }
        private global::System.String _contact_number;
        partial void Oncontact_numberChanging(global::System.String value);
        partial void Oncontact_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                OnCustomerIdChanging(value);
                ReportPropertyChanging("CustomerId");
                _CustomerId = StructuralObject.SetValidValue(value, true, "CustomerId");
                ReportPropertyChanged("CustomerId");
                OnCustomerIdChanged();
            }
        }
        private global::System.String _CustomerId;
        partial void OnCustomerIdChanging(global::System.String value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> customer_title_id
        {
            get
            {
                return _customer_title_id;
            }
            set
            {
                Oncustomer_title_idChanging(value);
                ReportPropertyChanging("customer_title_id");
                _customer_title_id = StructuralObject.SetValidValue(value, "customer_title_id");
                ReportPropertyChanged("customer_title_id");
                Oncustomer_title_idChanged();
            }
        }
        private Nullable<global::System.Int32> _customer_title_id;
        partial void Oncustomer_title_idChanging(Nullable<global::System.Int32> value);
        partial void Oncustomer_title_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> customer_type_id
        {
            get
            {
                return _customer_type_id;
            }
            set
            {
                Oncustomer_type_idChanging(value);
                ReportPropertyChanging("customer_type_id");
                _customer_type_id = StructuralObject.SetValidValue(value, "customer_type_id");
                ReportPropertyChanged("customer_type_id");
                Oncustomer_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _customer_type_id;
        partial void Oncustomer_type_idChanging(Nullable<global::System.Int32> value);
        partial void Oncustomer_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> resident_id
        {
            get
            {
                return _resident_id;
            }
            set
            {
                Onresident_idChanging(value);
                ReportPropertyChanging("resident_id");
                _resident_id = StructuralObject.SetValidValue(value, "resident_id");
                ReportPropertyChanged("resident_id");
                Onresident_idChanged();
            }
        }
        private Nullable<global::System.Int32> _resident_id;
        partial void Onresident_idChanging(Nullable<global::System.Int32> value);
        partial void Onresident_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value, "user_id");
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private Nullable<global::System.Int64> _user_id;
        partial void Onuser_idChanging(Nullable<global::System.Int64> value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_code
        {
            get
            {
                return _product_code;
            }
            set
            {
                Onproduct_codeChanging(value);
                ReportPropertyChanging("product_code");
                _product_code = StructuralObject.SetValidValue(value, false, "product_code");
                ReportPropertyChanged("product_code");
                Onproduct_codeChanged();
            }
        }
        private global::System.String _product_code;
        partial void Onproduct_codeChanging(global::System.String value);
        partial void Onproduct_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_name
        {
            get
            {
                return _product_name;
            }
            set
            {
                Onproduct_nameChanging(value);
                ReportPropertyChanging("product_name");
                _product_name = StructuralObject.SetValidValue(value, false, "product_name");
                ReportPropertyChanged("product_name");
                Onproduct_nameChanged();
            }
        }
        private global::System.String _product_name;
        partial void Onproduct_nameChanging(global::System.String value);
        partial void Onproduct_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_bin_code
        {
            get
            {
                return _product_bin_code;
            }
            set
            {
                Onproduct_bin_codeChanging(value);
                ReportPropertyChanging("product_bin_code");
                _product_bin_code = StructuralObject.SetValidValue(value, false, "product_bin_code");
                ReportPropertyChanged("product_bin_code");
                Onproduct_bin_codeChanged();
            }
        }
        private global::System.String _product_bin_code;
        partial void Onproduct_bin_codeChanging(global::System.String value);
        partial void Onproduct_bin_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 src1_id
        {
            get
            {
                return _src1_id;
            }
            set
            {
                Onsrc1_idChanging(value);
                ReportPropertyChanging("src1_id");
                _src1_id = StructuralObject.SetValidValue(value, "src1_id");
                ReportPropertyChanged("src1_id");
                Onsrc1_idChanged();
            }
        }
        private global::System.Int32 _src1_id;
        partial void Onsrc1_idChanging(global::System.Int32 value);
        partial void Onsrc1_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 src2_id
        {
            get
            {
                return _src2_id;
            }
            set
            {
                Onsrc2_idChanging(value);
                ReportPropertyChanging("src2_id");
                _src2_id = StructuralObject.SetValidValue(value, "src2_id");
                ReportPropertyChanged("src2_id");
                Onsrc2_idChanged();
            }
        }
        private global::System.Int32 _src2_id;
        partial void Onsrc2_idChanging(global::System.Int32 value);
        partial void Onsrc2_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 src3_id
        {
            get
            {
                return _src3_id;
            }
            set
            {
                Onsrc3_idChanging(value);
                ReportPropertyChanging("src3_id");
                _src3_id = StructuralObject.SetValidValue(value, "src3_id");
                ReportPropertyChanged("src3_id");
                Onsrc3_idChanged();
            }
        }
        private global::System.Int32 _src3_id;
        partial void Onsrc3_idChanging(global::System.Int32 value);
        partial void Onsrc3_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PVKI
        {
            get
            {
                return _PVKI;
            }
            set
            {
                OnPVKIChanging(value);
                ReportPropertyChanging("PVKI");
                _PVKI = StructuralObject.SetValidValue(value, "PVKI");
                ReportPropertyChanged("PVKI");
                OnPVKIChanged();
            }
        }
        private Nullable<global::System.Int32> _PVKI;
        partial void OnPVKIChanging(Nullable<global::System.Int32> value);
        partial void OnPVKIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PVK
        {
            get
            {
                return _PVK;
            }
            set
            {
                OnPVKChanging(value);
                ReportPropertyChanging("PVK");
                _PVK = StructuralObject.SetValidValue(value, true, "PVK");
                ReportPropertyChanged("PVK");
                OnPVKChanged();
            }
        }
        private global::System.String _PVK;
        partial void OnPVKChanging(global::System.String value);
        partial void OnPVKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CVKA
        {
            get
            {
                return _CVKA;
            }
            set
            {
                OnCVKAChanging(value);
                ReportPropertyChanging("CVKA");
                _CVKA = StructuralObject.SetValidValue(value, true, "CVKA");
                ReportPropertyChanged("CVKA");
                OnCVKAChanged();
            }
        }
        private global::System.String _CVKA;
        partial void OnCVKAChanging(global::System.String value);
        partial void OnCVKAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CVKB
        {
            get
            {
                return _CVKB;
            }
            set
            {
                OnCVKBChanging(value);
                ReportPropertyChanging("CVKB");
                _CVKB = StructuralObject.SetValidValue(value, true, "CVKB");
                ReportPropertyChanged("CVKB");
                OnCVKBChanged();
            }
        }
        private global::System.String _CVKB;
        partial void OnCVKBChanging(global::System.String value);
        partial void OnCVKBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> expiry_months
        {
            get
            {
                return _expiry_months;
            }
            set
            {
                Onexpiry_monthsChanging(value);
                ReportPropertyChanging("expiry_months");
                _expiry_months = StructuralObject.SetValidValue(value, "expiry_months");
                ReportPropertyChanged("expiry_months");
                Onexpiry_monthsChanged();
            }
        }
        private Nullable<global::System.Int32> _expiry_months;
        partial void Onexpiry_monthsChanging(Nullable<global::System.Int32> value);
        partial void Onexpiry_monthsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String sub_product_code
        {
            get
            {
                return _sub_product_code;
            }
            set
            {
                Onsub_product_codeChanging(value);
                ReportPropertyChanging("sub_product_code");
                _sub_product_code = StructuralObject.SetValidValue(value, true, "sub_product_code");
                ReportPropertyChanged("sub_product_code");
                Onsub_product_codeChanged();
            }
        }
        private global::System.String _sub_product_code;
        partial void Onsub_product_codeChanging(global::System.String value);
        partial void Onsub_product_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Column1
        {
            get
            {
                return _Column1;
            }
            set
            {
                OnColumn1Changing(value);
                ReportPropertyChanging("Column1");
                _Column1 = StructuralObject.SetValidValue(value, "Column1");
                ReportPropertyChanged("Column1");
                OnColumn1Changed();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Column1;
        partial void OnColumn1Changing(Nullable<global::System.DateTimeOffset> value);
        partial void OnColumn1Changed();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="PinBatchCardsResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class PinBatchCardsResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PinBatchCardsResult object.
        /// </summary>
        /// <param name="pin_batch_statuses_name">Initial value of the pin_batch_statuses_name property.</param>
        public static PinBatchCardsResult CreatePinBatchCardsResult(global::System.String pin_batch_statuses_name)
        {
            PinBatchCardsResult pinBatchCardsResult = new PinBatchCardsResult();
            pinBatchCardsResult.pin_batch_statuses_name = pin_batch_statuses_name;
            return pinBatchCardsResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_reference_number
        {
            get
            {
                return _card_reference_number;
            }
            set
            {
                Oncard_reference_numberChanging(value);
                ReportPropertyChanging("card_reference_number");
                _card_reference_number = StructuralObject.SetValidValue(value, true, "card_reference_number");
                ReportPropertyChanged("card_reference_number");
                Oncard_reference_numberChanged();
            }
        }
        private global::System.String _card_reference_number;
        partial void Oncard_reference_numberChanging(global::System.String value);
        partial void Oncard_reference_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pin_batch_statuses_name
        {
            get
            {
                return _pin_batch_statuses_name;
            }
            set
            {
                Onpin_batch_statuses_nameChanging(value);
                ReportPropertyChanging("pin_batch_statuses_name");
                _pin_batch_statuses_name = StructuralObject.SetValidValue(value, false, "pin_batch_statuses_name");
                ReportPropertyChanged("pin_batch_statuses_name");
                Onpin_batch_statuses_nameChanged();
            }
        }
        private global::System.String _pin_batch_statuses_name;
        partial void Onpin_batch_statuses_nameChanging(global::System.String value);
        partial void Onpin_batch_statuses_nameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="PinBatchHistoryResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class PinBatchHistoryResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PinBatchHistoryResult object.
        /// </summary>
        /// <param name="pin_batch_reference">Initial value of the pin_batch_reference property.</param>
        /// <param name="no_cards">Initial value of the no_cards property.</param>
        /// <param name="status_notes">Initial value of the status_notes property.</param>
        /// <param name="pin_batch_status_name">Initial value of the pin_batch_status_name property.</param>
        public static PinBatchHistoryResult CreatePinBatchHistoryResult(global::System.String pin_batch_reference, global::System.Int32 no_cards, global::System.String status_notes, global::System.String pin_batch_status_name)
        {
            PinBatchHistoryResult pinBatchHistoryResult = new PinBatchHistoryResult();
            pinBatchHistoryResult.pin_batch_reference = pin_batch_reference;
            pinBatchHistoryResult.no_cards = no_cards;
            pinBatchHistoryResult.status_notes = status_notes;
            pinBatchHistoryResult.pin_batch_status_name = pin_batch_status_name;
            return pinBatchHistoryResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pin_batch_reference
        {
            get
            {
                return _pin_batch_reference;
            }
            set
            {
                Onpin_batch_referenceChanging(value);
                ReportPropertyChanging("pin_batch_reference");
                _pin_batch_reference = StructuralObject.SetValidValue(value, false, "pin_batch_reference");
                ReportPropertyChanged("pin_batch_reference");
                Onpin_batch_referenceChanged();
            }
        }
        private global::System.String _pin_batch_reference;
        partial void Onpin_batch_referenceChanging(global::System.String value);
        partial void Onpin_batch_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 no_cards
        {
            get
            {
                return _no_cards;
            }
            set
            {
                Onno_cardsChanging(value);
                ReportPropertyChanging("no_cards");
                _no_cards = StructuralObject.SetValidValue(value, "no_cards");
                ReportPropertyChanged("no_cards");
                Onno_cardsChanged();
            }
        }
        private global::System.Int32 _no_cards;
        partial void Onno_cardsChanging(global::System.Int32 value);
        partial void Onno_cardsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> status_date
        {
            get
            {
                return _status_date;
            }
            set
            {
                Onstatus_dateChanging(value);
                ReportPropertyChanging("status_date");
                _status_date = StructuralObject.SetValidValue(value, "status_date");
                ReportPropertyChanged("status_date");
                Onstatus_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _status_date;
        partial void Onstatus_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onstatus_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String status_notes
        {
            get
            {
                return _status_notes;
            }
            set
            {
                Onstatus_notesChanging(value);
                ReportPropertyChanging("status_notes");
                _status_notes = StructuralObject.SetValidValue(value, false, "status_notes");
                ReportPropertyChanged("status_notes");
                Onstatus_notesChanged();
            }
        }
        private global::System.String _status_notes;
        partial void Onstatus_notesChanging(global::System.String value);
        partial void Onstatus_notesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pin_batch_status_name
        {
            get
            {
                return _pin_batch_status_name;
            }
            set
            {
                Onpin_batch_status_nameChanging(value);
                ReportPropertyChanging("pin_batch_status_name");
                _pin_batch_status_name = StructuralObject.SetValidValue(value, false, "pin_batch_status_name");
                ReportPropertyChanged("pin_batch_status_name");
                Onpin_batch_status_nameChanged();
            }
        }
        private global::System.String _pin_batch_status_name;
        partial void Onpin_batch_status_nameChanging(global::System.String value);
        partial void Onpin_batch_status_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, true, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, true, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="PinBatchResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class PinBatchResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PinBatchResult object.
        /// </summary>
        /// <param name="pin_batch_id">Initial value of the pin_batch_id property.</param>
        /// <param name="date_created">Initial value of the date_created property.</param>
        /// <param name="pin_batch_reference">Initial value of the pin_batch_reference property.</param>
        /// <param name="no_cards">Initial value of the no_cards property.</param>
        /// <param name="pin_batch_statuses_id">Initial value of the pin_batch_statuses_id property.</param>
        /// <param name="pin_batch_status_name">Initial value of the pin_batch_status_name property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="card_issue_method_name">Initial value of the card_issue_method_name property.</param>
        /// <param name="card_issue_method_id">Initial value of the card_issue_method_id property.</param>
        /// <param name="pin_batch_type_id">Initial value of the pin_batch_type_id property.</param>
        public static PinBatchResult CreatePinBatchResult(global::System.Int64 pin_batch_id, global::System.DateTimeOffset date_created, global::System.String pin_batch_reference, global::System.Int32 no_cards, global::System.Int32 pin_batch_statuses_id, global::System.String pin_batch_status_name, global::System.Int32 issuer_id, global::System.String issuer_name, global::System.String issuer_code, global::System.String card_issue_method_name, global::System.Int32 card_issue_method_id, global::System.Int32 pin_batch_type_id)
        {
            PinBatchResult pinBatchResult = new PinBatchResult();
            pinBatchResult.pin_batch_id = pin_batch_id;
            pinBatchResult.date_created = date_created;
            pinBatchResult.pin_batch_reference = pin_batch_reference;
            pinBatchResult.no_cards = no_cards;
            pinBatchResult.pin_batch_statuses_id = pin_batch_statuses_id;
            pinBatchResult.pin_batch_status_name = pin_batch_status_name;
            pinBatchResult.issuer_id = issuer_id;
            pinBatchResult.issuer_name = issuer_name;
            pinBatchResult.issuer_code = issuer_code;
            pinBatchResult.card_issue_method_name = card_issue_method_name;
            pinBatchResult.card_issue_method_id = card_issue_method_id;
            pinBatchResult.pin_batch_type_id = pin_batch_type_id;
            return pinBatchResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 pin_batch_id
        {
            get
            {
                return _pin_batch_id;
            }
            set
            {
                Onpin_batch_idChanging(value);
                ReportPropertyChanging("pin_batch_id");
                _pin_batch_id = StructuralObject.SetValidValue(value, "pin_batch_id");
                ReportPropertyChanged("pin_batch_id");
                Onpin_batch_idChanged();
            }
        }
        private global::System.Int64 _pin_batch_id;
        partial void Onpin_batch_idChanging(global::System.Int64 value);
        partial void Onpin_batch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset date_created
        {
            get
            {
                return _date_created;
            }
            set
            {
                Ondate_createdChanging(value);
                ReportPropertyChanging("date_created");
                _date_created = StructuralObject.SetValidValue(value, "date_created");
                ReportPropertyChanged("date_created");
                Ondate_createdChanged();
            }
        }
        private global::System.DateTimeOffset _date_created;
        partial void Ondate_createdChanging(global::System.DateTimeOffset value);
        partial void Ondate_createdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pin_batch_reference
        {
            get
            {
                return _pin_batch_reference;
            }
            set
            {
                Onpin_batch_referenceChanging(value);
                ReportPropertyChanging("pin_batch_reference");
                _pin_batch_reference = StructuralObject.SetValidValue(value, false, "pin_batch_reference");
                ReportPropertyChanged("pin_batch_reference");
                Onpin_batch_referenceChanged();
            }
        }
        private global::System.String _pin_batch_reference;
        partial void Onpin_batch_referenceChanging(global::System.String value);
        partial void Onpin_batch_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 no_cards
        {
            get
            {
                return _no_cards;
            }
            set
            {
                Onno_cardsChanging(value);
                ReportPropertyChanging("no_cards");
                _no_cards = StructuralObject.SetValidValue(value, "no_cards");
                ReportPropertyChanged("no_cards");
                Onno_cardsChanged();
            }
        }
        private global::System.Int32 _no_cards;
        partial void Onno_cardsChanging(global::System.Int32 value);
        partial void Onno_cardsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String status_notes
        {
            get
            {
                return _status_notes;
            }
            set
            {
                Onstatus_notesChanging(value);
                ReportPropertyChanging("status_notes");
                _status_notes = StructuralObject.SetValidValue(value, true, "status_notes");
                ReportPropertyChanged("status_notes");
                Onstatus_notesChanged();
            }
        }
        private global::System.String _status_notes;
        partial void Onstatus_notesChanging(global::System.String value);
        partial void Onstatus_notesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pin_batch_statuses_id
        {
            get
            {
                return _pin_batch_statuses_id;
            }
            set
            {
                Onpin_batch_statuses_idChanging(value);
                ReportPropertyChanging("pin_batch_statuses_id");
                _pin_batch_statuses_id = StructuralObject.SetValidValue(value, "pin_batch_statuses_id");
                ReportPropertyChanged("pin_batch_statuses_id");
                Onpin_batch_statuses_idChanged();
            }
        }
        private global::System.Int32 _pin_batch_statuses_id;
        partial void Onpin_batch_statuses_idChanging(global::System.Int32 value);
        partial void Onpin_batch_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pin_batch_status_name
        {
            get
            {
                return _pin_batch_status_name;
            }
            set
            {
                Onpin_batch_status_nameChanging(value);
                ReportPropertyChanging("pin_batch_status_name");
                _pin_batch_status_name = StructuralObject.SetValidValue(value, false, "pin_batch_status_name");
                ReportPropertyChanged("pin_batch_status_name");
                Onpin_batch_status_nameChanged();
            }
        }
        private global::System.String _pin_batch_status_name;
        partial void Onpin_batch_status_nameChanging(global::System.String value);
        partial void Onpin_batch_status_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String card_issue_method_name
        {
            get
            {
                return _card_issue_method_name;
            }
            set
            {
                Oncard_issue_method_nameChanging(value);
                ReportPropertyChanging("card_issue_method_name");
                _card_issue_method_name = StructuralObject.SetValidValue(value, false, "card_issue_method_name");
                ReportPropertyChanged("card_issue_method_name");
                Oncard_issue_method_nameChanged();
            }
        }
        private global::System.String _card_issue_method_name;
        partial void Oncard_issue_method_nameChanging(global::System.String value);
        partial void Oncard_issue_method_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, true, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, true, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> flow_pin_batch_statuses_id
        {
            get
            {
                return _flow_pin_batch_statuses_id;
            }
            set
            {
                Onflow_pin_batch_statuses_idChanging(value);
                ReportPropertyChanging("flow_pin_batch_statuses_id");
                _flow_pin_batch_statuses_id = StructuralObject.SetValidValue(value, "flow_pin_batch_statuses_id");
                ReportPropertyChanged("flow_pin_batch_statuses_id");
                Onflow_pin_batch_statuses_idChanged();
            }
        }
        private Nullable<global::System.Int32> _flow_pin_batch_statuses_id;
        partial void Onflow_pin_batch_statuses_idChanging(Nullable<global::System.Int32> value);
        partial void Onflow_pin_batch_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> flow_pin_batch_type_id
        {
            get
            {
                return _flow_pin_batch_type_id;
            }
            set
            {
                Onflow_pin_batch_type_idChanging(value);
                ReportPropertyChanging("flow_pin_batch_type_id");
                _flow_pin_batch_type_id = StructuralObject.SetValidValue(value, "flow_pin_batch_type_id");
                ReportPropertyChanged("flow_pin_batch_type_id");
                Onflow_pin_batch_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _flow_pin_batch_type_id;
        partial void Onflow_pin_batch_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onflow_pin_batch_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> user_role_id
        {
            get
            {
                return _user_role_id;
            }
            set
            {
                Onuser_role_idChanging(value);
                ReportPropertyChanging("user_role_id");
                _user_role_id = StructuralObject.SetValidValue(value, "user_role_id");
                ReportPropertyChanged("user_role_id");
                Onuser_role_idChanged();
            }
        }
        private Nullable<global::System.Int32> _user_role_id;
        partial void Onuser_role_idChanging(Nullable<global::System.Int32> value);
        partial void Onuser_role_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_method_id
        {
            get
            {
                return _card_issue_method_id;
            }
            set
            {
                Oncard_issue_method_idChanging(value);
                ReportPropertyChanging("card_issue_method_id");
                _card_issue_method_id = StructuralObject.SetValidValue(value, "card_issue_method_id");
                ReportPropertyChanged("card_issue_method_id");
                Oncard_issue_method_idChanged();
            }
        }
        private global::System.Int32 _card_issue_method_id;
        partial void Oncard_issue_method_idChanging(global::System.Int32 value);
        partial void Oncard_issue_method_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pin_batch_type_id
        {
            get
            {
                return _pin_batch_type_id;
            }
            set
            {
                Onpin_batch_type_idChanging(value);
                ReportPropertyChanging("pin_batch_type_id");
                _pin_batch_type_id = StructuralObject.SetValidValue(value, "pin_batch_type_id");
                ReportPropertyChanged("pin_batch_type_id");
                Onpin_batch_type_idChanged();
            }
        }
        private global::System.Int32 _pin_batch_type_id;
        partial void Onpin_batch_type_idChanging(global::System.Int32 value);
        partial void Onpin_batch_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> reject_pin_batch_statuses_id
        {
            get
            {
                return _reject_pin_batch_statuses_id;
            }
            set
            {
                Onreject_pin_batch_statuses_idChanging(value);
                ReportPropertyChanging("reject_pin_batch_statuses_id");
                _reject_pin_batch_statuses_id = StructuralObject.SetValidValue(value, "reject_pin_batch_statuses_id");
                ReportPropertyChanged("reject_pin_batch_statuses_id");
                Onreject_pin_batch_statuses_idChanged();
            }
        }
        private Nullable<global::System.Int32> _reject_pin_batch_statuses_id;
        partial void Onreject_pin_batch_statuses_idChanging(Nullable<global::System.Int32> value);
        partial void Onreject_pin_batch_statuses_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="PinMailerReprintRequestResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class PinMailerReprintRequestResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PinMailerReprintRequestResult object.
        /// </summary>
        /// <param name="product_id">Initial value of the product_id property.</param>
        /// <param name="product_name">Initial value of the product_name property.</param>
        public static PinMailerReprintRequestResult CreatePinMailerReprintRequestResult(global::System.Int32 product_id, global::System.String product_name)
        {
            PinMailerReprintRequestResult pinMailerReprintRequestResult = new PinMailerReprintRequestResult();
            pinMailerReprintRequestResult.product_id = product_id;
            pinMailerReprintRequestResult.product_name = product_name;
            return pinMailerReprintRequestResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private global::System.Int32 _product_id;
        partial void Onproduct_idChanging(global::System.Int32 value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_name
        {
            get
            {
                return _product_name;
            }
            set
            {
                Onproduct_nameChanging(value);
                ReportPropertyChanging("product_name");
                _product_name = StructuralObject.SetValidValue(value, false, "product_name");
                ReportPropertyChanged("product_name");
                Onproduct_nameChanged();
            }
        }
        private global::System.String _product_name;
        partial void Onproduct_nameChanging(global::System.String value);
        partial void Onproduct_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cardscount
        {
            get
            {
                return _cardscount;
            }
            set
            {
                OncardscountChanging(value);
                ReportPropertyChanging("cardscount");
                _cardscount = StructuralObject.SetValidValue(value, "cardscount");
                ReportPropertyChanged("cardscount");
                OncardscountChanged();
            }
        }
        private Nullable<global::System.Int32> _cardscount;
        partial void OncardscountChanging(Nullable<global::System.Int32> value);
        partial void OncardscountChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="PinMailerReprintResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class PinMailerReprintResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PinMailerReprintResult object.
        /// </summary>
        /// <param name="card_id">Initial value of the card_id property.</param>
        /// <param name="product_id">Initial value of the product_id property.</param>
        /// <param name="card_issue_method_id">Initial value of the card_issue_method_id property.</param>
        /// <param name="card_priority_id">Initial value of the card_priority_id property.</param>
        /// <param name="pin_mailer_reprint_status_id">Initial value of the pin_mailer_reprint_status_id property.</param>
        /// <param name="current_reprint_status">Initial value of the current_reprint_status property.</param>
        /// <param name="status_date">Initial value of the status_date property.</param>
        /// <param name="product_bin_code">Initial value of the product_bin_code property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        public static PinMailerReprintResult CreatePinMailerReprintResult(global::System.Int64 card_id, global::System.Int32 product_id, global::System.Int32 card_issue_method_id, global::System.Int32 card_priority_id, global::System.Int32 pin_mailer_reprint_status_id, global::System.String current_reprint_status, global::System.DateTimeOffset status_date, global::System.String product_bin_code, global::System.Int32 issuer_id, global::System.String issuer_name, global::System.String branch_name, global::System.String issuer_code, global::System.String branch_code, global::System.Int32 branch_id)
        {
            PinMailerReprintResult pinMailerReprintResult = new PinMailerReprintResult();
            pinMailerReprintResult.card_id = card_id;
            pinMailerReprintResult.product_id = product_id;
            pinMailerReprintResult.card_issue_method_id = card_issue_method_id;
            pinMailerReprintResult.card_priority_id = card_priority_id;
            pinMailerReprintResult.pin_mailer_reprint_status_id = pin_mailer_reprint_status_id;
            pinMailerReprintResult.current_reprint_status = current_reprint_status;
            pinMailerReprintResult.status_date = status_date;
            pinMailerReprintResult.product_bin_code = product_bin_code;
            pinMailerReprintResult.issuer_id = issuer_id;
            pinMailerReprintResult.issuer_name = issuer_name;
            pinMailerReprintResult.branch_name = branch_name;
            pinMailerReprintResult.issuer_code = issuer_code;
            pinMailerReprintResult.branch_code = branch_code;
            pinMailerReprintResult.branch_id = branch_id;
            return pinMailerReprintResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 card_id
        {
            get
            {
                return _card_id;
            }
            set
            {
                Oncard_idChanging(value);
                ReportPropertyChanging("card_id");
                _card_id = StructuralObject.SetValidValue(value, "card_id");
                ReportPropertyChanged("card_id");
                Oncard_idChanged();
            }
        }
        private global::System.Int64 _card_id;
        partial void Oncard_idChanging(global::System.Int64 value);
        partial void Oncard_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private global::System.Int32 _product_id;
        partial void Onproduct_idChanging(global::System.Int32 value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_method_id
        {
            get
            {
                return _card_issue_method_id;
            }
            set
            {
                Oncard_issue_method_idChanging(value);
                ReportPropertyChanging("card_issue_method_id");
                _card_issue_method_id = StructuralObject.SetValidValue(value, "card_issue_method_id");
                ReportPropertyChanged("card_issue_method_id");
                Oncard_issue_method_idChanged();
            }
        }
        private global::System.Int32 _card_issue_method_id;
        partial void Oncard_issue_method_idChanging(global::System.Int32 value);
        partial void Oncard_issue_method_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_priority_id
        {
            get
            {
                return _card_priority_id;
            }
            set
            {
                Oncard_priority_idChanging(value);
                ReportPropertyChanging("card_priority_id");
                _card_priority_id = StructuralObject.SetValidValue(value, "card_priority_id");
                ReportPropertyChanged("card_priority_id");
                Oncard_priority_idChanged();
            }
        }
        private global::System.Int32 _card_priority_id;
        partial void Oncard_priority_idChanging(global::System.Int32 value);
        partial void Oncard_priority_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_request_reference
        {
            get
            {
                return _card_request_reference;
            }
            set
            {
                Oncard_request_referenceChanging(value);
                ReportPropertyChanging("card_request_reference");
                _card_request_reference = StructuralObject.SetValidValue(value, true, "card_request_reference");
                ReportPropertyChanged("card_request_reference");
                Oncard_request_referenceChanged();
            }
        }
        private global::System.String _card_request_reference;
        partial void Oncard_request_referenceChanging(global::System.String value);
        partial void Oncard_request_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pin_mailer_reprint_status_id
        {
            get
            {
                return _pin_mailer_reprint_status_id;
            }
            set
            {
                Onpin_mailer_reprint_status_idChanging(value);
                ReportPropertyChanging("pin_mailer_reprint_status_id");
                _pin_mailer_reprint_status_id = StructuralObject.SetValidValue(value, "pin_mailer_reprint_status_id");
                ReportPropertyChanged("pin_mailer_reprint_status_id");
                Onpin_mailer_reprint_status_idChanged();
            }
        }
        private global::System.Int32 _pin_mailer_reprint_status_id;
        partial void Onpin_mailer_reprint_status_idChanging(global::System.Int32 value);
        partial void Onpin_mailer_reprint_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String current_reprint_status
        {
            get
            {
                return _current_reprint_status;
            }
            set
            {
                Oncurrent_reprint_statusChanging(value);
                ReportPropertyChanging("current_reprint_status");
                _current_reprint_status = StructuralObject.SetValidValue(value, false, "current_reprint_status");
                ReportPropertyChanged("current_reprint_status");
                Oncurrent_reprint_statusChanged();
            }
        }
        private global::System.String _current_reprint_status;
        partial void Oncurrent_reprint_statusChanging(global::System.String value);
        partial void Oncurrent_reprint_statusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset status_date
        {
            get
            {
                return _status_date;
            }
            set
            {
                Onstatus_dateChanging(value);
                ReportPropertyChanging("status_date");
                _status_date = StructuralObject.SetValidValue(value, "status_date");
                ReportPropertyChanged("status_date");
                Onstatus_dateChanged();
            }
        }
        private global::System.DateTimeOffset _status_date;
        partial void Onstatus_dateChanging(global::System.DateTimeOffset value);
        partial void Onstatus_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_bin_code
        {
            get
            {
                return _product_bin_code;
            }
            set
            {
                Onproduct_bin_codeChanging(value);
                ReportPropertyChanging("product_bin_code");
                _product_bin_code = StructuralObject.SetValidValue(value, false, "product_bin_code");
                ReportPropertyChanged("product_bin_code");
                Onproduct_bin_codeChanged();
            }
        }
        private global::System.String _product_bin_code;
        partial void Onproduct_bin_codeChanging(global::System.String value);
        partial void Onproduct_bin_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int32 _branch_id;
        partial void Onbranch_idChanging(global::System.Int32 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comments
        {
            get
            {
                return _comments;
            }
            set
            {
                OncommentsChanging(value);
                ReportPropertyChanging("comments");
                _comments = StructuralObject.SetValidValue(value, true, "comments");
                ReportPropertyChanged("comments");
                OncommentsChanged();
            }
        }
        private global::System.String _comments;
        partial void OncommentsChanging(global::System.String value);
        partial void OncommentsChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="PinReissueResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class PinReissueResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PinReissueResult object.
        /// </summary>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        /// <param name="product_id">Initial value of the product_id property.</param>
        /// <param name="pan">Initial value of the pan property.</param>
        /// <param name="operator_user_id">Initial value of the operator_user_id property.</param>
        /// <param name="failed">Initial value of the failed property.</param>
        /// <param name="notes">Initial value of the notes property.</param>
        /// <param name="pin_reissue_id">Initial value of the pin_reissue_id property.</param>
        /// <param name="pin_reissue_statuses_id">Initial value of the pin_reissue_statuses_id property.</param>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="pin_reissue_statuses_name">Initial value of the pin_reissue_statuses_name property.</param>
        /// <param name="tOTAL_PAGES">Initial value of the TOTAL_PAGES property.</param>
        /// <param name="tOTAL_ROWS">Initial value of the TOTAL_ROWS property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        /// <param name="product_code">Initial value of the product_code property.</param>
        /// <param name="product_name">Initial value of the product_name property.</param>
        /// <param name="authorise_pin_reissue_YN">Initial value of the authorise_pin_reissue_YN property.</param>
        public static PinReissueResult CreatePinReissueResult(global::System.Int32 issuer_id, global::System.Int32 branch_id, global::System.Int32 product_id, global::System.Byte[] pan, global::System.Int64 operator_user_id, global::System.Boolean failed, global::System.String notes, global::System.Int64 pin_reissue_id, global::System.Int32 pin_reissue_statuses_id, global::System.Int64 user_id, global::System.String pin_reissue_statuses_name, global::System.Int32 tOTAL_PAGES, global::System.Int32 tOTAL_ROWS, global::System.String issuer_name, global::System.String issuer_code, global::System.String branch_name, global::System.String branch_code, global::System.String product_code, global::System.String product_name, global::System.Boolean authorise_pin_reissue_YN)
        {
            PinReissueResult pinReissueResult = new PinReissueResult();
            pinReissueResult.issuer_id = issuer_id;
            pinReissueResult.branch_id = branch_id;
            pinReissueResult.product_id = product_id;
            pinReissueResult.pan = pan;
            pinReissueResult.operator_user_id = operator_user_id;
            pinReissueResult.failed = failed;
            pinReissueResult.notes = notes;
            pinReissueResult.pin_reissue_id = pin_reissue_id;
            pinReissueResult.pin_reissue_statuses_id = pin_reissue_statuses_id;
            pinReissueResult.user_id = user_id;
            pinReissueResult.pin_reissue_statuses_name = pin_reissue_statuses_name;
            pinReissueResult.TOTAL_PAGES = tOTAL_PAGES;
            pinReissueResult.TOTAL_ROWS = tOTAL_ROWS;
            pinReissueResult.issuer_name = issuer_name;
            pinReissueResult.issuer_code = issuer_code;
            pinReissueResult.branch_name = branch_name;
            pinReissueResult.branch_code = branch_code;
            pinReissueResult.product_code = product_code;
            pinReissueResult.product_name = product_name;
            pinReissueResult.authorise_pin_reissue_YN = authorise_pin_reissue_YN;
            return pinReissueResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int32 _branch_id;
        partial void Onbranch_idChanging(global::System.Int32 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private global::System.Int32 _product_id;
        partial void Onproduct_idChanging(global::System.Int32 value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] pan
        {
            get
            {
                return StructuralObject.GetValidValue(_pan);
            }
            set
            {
                OnpanChanging(value);
                ReportPropertyChanging("pan");
                _pan = StructuralObject.SetValidValue(value, false, "pan");
                ReportPropertyChanged("pan");
                OnpanChanged();
            }
        }
        private global::System.Byte[] _pan;
        partial void OnpanChanging(global::System.Byte[] value);
        partial void OnpanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> reissue_date
        {
            get
            {
                return _reissue_date;
            }
            set
            {
                Onreissue_dateChanging(value);
                ReportPropertyChanging("reissue_date");
                _reissue_date = StructuralObject.SetValidValue(value, "reissue_date");
                ReportPropertyChanged("reissue_date");
                Onreissue_dateChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _reissue_date;
        partial void Onreissue_dateChanging(Nullable<global::System.DateTimeOffset> value);
        partial void Onreissue_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 operator_user_id
        {
            get
            {
                return _operator_user_id;
            }
            set
            {
                Onoperator_user_idChanging(value);
                ReportPropertyChanging("operator_user_id");
                _operator_user_id = StructuralObject.SetValidValue(value, "operator_user_id");
                ReportPropertyChanged("operator_user_id");
                Onoperator_user_idChanged();
            }
        }
        private global::System.Int64 _operator_user_id;
        partial void Onoperator_user_idChanging(global::System.Int64 value);
        partial void Onoperator_user_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> authorise_user_id
        {
            get
            {
                return _authorise_user_id;
            }
            set
            {
                Onauthorise_user_idChanging(value);
                ReportPropertyChanging("authorise_user_id");
                _authorise_user_id = StructuralObject.SetValidValue(value, "authorise_user_id");
                ReportPropertyChanged("authorise_user_id");
                Onauthorise_user_idChanged();
            }
        }
        private Nullable<global::System.Int64> _authorise_user_id;
        partial void Onauthorise_user_idChanging(Nullable<global::System.Int64> value);
        partial void Onauthorise_user_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean failed
        {
            get
            {
                return _failed;
            }
            set
            {
                OnfailedChanging(value);
                ReportPropertyChanging("failed");
                _failed = StructuralObject.SetValidValue(value, "failed");
                ReportPropertyChanged("failed");
                OnfailedChanged();
            }
        }
        private global::System.Boolean _failed;
        partial void OnfailedChanging(global::System.Boolean value);
        partial void OnfailedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String notes
        {
            get
            {
                return _notes;
            }
            set
            {
                OnnotesChanging(value);
                ReportPropertyChanging("notes");
                _notes = StructuralObject.SetValidValue(value, false, "notes");
                ReportPropertyChanged("notes");
                OnnotesChanged();
            }
        }
        private global::System.String _notes;
        partial void OnnotesChanging(global::System.String value);
        partial void OnnotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 pin_reissue_id
        {
            get
            {
                return _pin_reissue_id;
            }
            set
            {
                Onpin_reissue_idChanging(value);
                ReportPropertyChanging("pin_reissue_id");
                _pin_reissue_id = StructuralObject.SetValidValue(value, "pin_reissue_id");
                ReportPropertyChanged("pin_reissue_id");
                Onpin_reissue_idChanged();
            }
        }
        private global::System.Int64 _pin_reissue_id;
        partial void Onpin_reissue_idChanging(global::System.Int64 value);
        partial void Onpin_reissue_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] primary_index_number
        {
            get
            {
                return StructuralObject.GetValidValue(_primary_index_number);
            }
            set
            {
                Onprimary_index_numberChanging(value);
                ReportPropertyChanging("primary_index_number");
                _primary_index_number = StructuralObject.SetValidValue(value, true, "primary_index_number");
                ReportPropertyChanged("primary_index_number");
                Onprimary_index_numberChanged();
            }
        }
        private global::System.Byte[] _primary_index_number;
        partial void Onprimary_index_numberChanging(global::System.Byte[] value);
        partial void Onprimary_index_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pin_reissue_statuses_id
        {
            get
            {
                return _pin_reissue_statuses_id;
            }
            set
            {
                Onpin_reissue_statuses_idChanging(value);
                ReportPropertyChanging("pin_reissue_statuses_id");
                _pin_reissue_statuses_id = StructuralObject.SetValidValue(value, "pin_reissue_statuses_id");
                ReportPropertyChanged("pin_reissue_statuses_id");
                Onpin_reissue_statuses_idChanged();
            }
        }
        private global::System.Int32 _pin_reissue_statuses_id;
        partial void Onpin_reissue_statuses_idChanging(global::System.Int32 value);
        partial void Onpin_reissue_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> status_date
        {
            get
            {
                return _status_date;
            }
            set
            {
                Onstatus_dateChanging(value);
                ReportPropertyChanging("status_date");
                _status_date = StructuralObject.SetValidValue(value, "status_date");
                ReportPropertyChanged("status_date");
                Onstatus_dateChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _status_date;
        partial void Onstatus_dateChanging(Nullable<global::System.DateTimeOffset> value);
        partial void Onstatus_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value, "user_id");
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int64 _user_id;
        partial void Onuser_idChanging(global::System.Int64 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pin_reissue_statuses_name
        {
            get
            {
                return _pin_reissue_statuses_name;
            }
            set
            {
                Onpin_reissue_statuses_nameChanging(value);
                ReportPropertyChanging("pin_reissue_statuses_name");
                _pin_reissue_statuses_name = StructuralObject.SetValidValue(value, false, "pin_reissue_statuses_name");
                ReportPropertyChanged("pin_reissue_statuses_name");
                Onpin_reissue_statuses_nameChanged();
            }
        }
        private global::System.String _pin_reissue_statuses_name;
        partial void Onpin_reissue_statuses_nameChanging(global::System.String value);
        partial void Onpin_reissue_statuses_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private global::System.Int32 _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(global::System.Int32 value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private global::System.Int32 _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(global::System.Int32 value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String operator_usename
        {
            get
            {
                return _operator_usename;
            }
            set
            {
                Onoperator_usenameChanging(value);
                ReportPropertyChanging("operator_usename");
                _operator_usename = StructuralObject.SetValidValue(value, true, "operator_usename");
                ReportPropertyChanged("operator_usename");
                Onoperator_usenameChanged();
            }
        }
        private global::System.String _operator_usename;
        partial void Onoperator_usenameChanging(global::System.String value);
        partial void Onoperator_usenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_code
        {
            get
            {
                return _product_code;
            }
            set
            {
                Onproduct_codeChanging(value);
                ReportPropertyChanging("product_code");
                _product_code = StructuralObject.SetValidValue(value, false, "product_code");
                ReportPropertyChanged("product_code");
                Onproduct_codeChanged();
            }
        }
        private global::System.String _product_code;
        partial void Onproduct_codeChanging(global::System.String value);
        partial void Onproduct_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_name
        {
            get
            {
                return _product_name;
            }
            set
            {
                Onproduct_nameChanging(value);
                ReportPropertyChanging("product_name");
                _product_name = StructuralObject.SetValidValue(value, false, "product_name");
                ReportPropertyChanged("product_name");
                Onproduct_nameChanged();
            }
        }
        private global::System.String _product_name;
        partial void Onproduct_nameChanging(global::System.String value);
        partial void Onproduct_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comments
        {
            get
            {
                return _comments;
            }
            set
            {
                OncommentsChanging(value);
                ReportPropertyChanging("comments");
                _comments = StructuralObject.SetValidValue(value, true, "comments");
                ReportPropertyChanged("comments");
                OncommentsChanged();
            }
        }
        private global::System.String _comments;
        partial void OncommentsChanging(global::System.String value);
        partial void OncommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> request_expiry
        {
            get
            {
                return _request_expiry;
            }
            set
            {
                Onrequest_expiryChanging(value);
                ReportPropertyChanging("request_expiry");
                _request_expiry = StructuralObject.SetValidValue(value, "request_expiry");
                ReportPropertyChanged("request_expiry");
                Onrequest_expiryChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _request_expiry;
        partial void Onrequest_expiryChanging(Nullable<global::System.DateTimeOffset> value);
        partial void Onrequest_expiryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String authorise_username
        {
            get
            {
                return _authorise_username;
            }
            set
            {
                Onauthorise_usernameChanging(value);
                ReportPropertyChanging("authorise_username");
                _authorise_username = StructuralObject.SetValidValue(value, true, "authorise_username");
                ReportPropertyChanged("authorise_username");
                Onauthorise_usernameChanged();
            }
        }
        private global::System.String _authorise_username;
        partial void Onauthorise_usernameChanging(global::System.String value);
        partial void Onauthorise_usernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean authorise_pin_reissue_YN
        {
            get
            {
                return _authorise_pin_reissue_YN;
            }
            set
            {
                Onauthorise_pin_reissue_YNChanging(value);
                ReportPropertyChanging("authorise_pin_reissue_YN");
                _authorise_pin_reissue_YN = StructuralObject.SetValidValue(value, "authorise_pin_reissue_YN");
                ReportPropertyChanged("authorise_pin_reissue_YN");
                Onauthorise_pin_reissue_YNChanged();
            }
        }
        private global::System.Boolean _authorise_pin_reissue_YN;
        partial void Onauthorise_pin_reissue_YNChanging(global::System.Boolean value);
        partial void Onauthorise_pin_reissue_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_time_zone
        {
            get
            {
                return _user_time_zone;
            }
            set
            {
                Onuser_time_zoneChanging(value);
                ReportPropertyChanging("user_time_zone");
                _user_time_zone = StructuralObject.SetValidValue(value, true, "user_time_zone");
                ReportPropertyChanged("user_time_zone");
                Onuser_time_zoneChanged();
            }
        }
        private global::System.String _user_time_zone;
        partial void Onuser_time_zoneChanging(global::System.String value);
        partial void Onuser_time_zoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> pin_reissue_type_id
        {
            get
            {
                return _pin_reissue_type_id;
            }
            set
            {
                Onpin_reissue_type_idChanging(value);
                ReportPropertyChanging("pin_reissue_type_id");
                _pin_reissue_type_id = StructuralObject.SetValidValue(value, "pin_reissue_type_id");
                ReportPropertyChanged("pin_reissue_type_id");
                Onpin_reissue_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _pin_reissue_type_id;
        partial void Onpin_reissue_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onpin_reissue_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String mobile_number
        {
            get
            {
                return _mobile_number;
            }
            set
            {
                Onmobile_numberChanging(value);
                ReportPropertyChanging("mobile_number");
                _mobile_number = StructuralObject.SetValidValue(value, true, "mobile_number");
                ReportPropertyChanged("mobile_number");
                Onmobile_numberChanged();
            }
        }
        private global::System.String _mobile_number;
        partial void Onmobile_numberChanging(global::System.String value);
        partial void Onmobile_numberChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="PrintBatchHistoryResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class PrintBatchHistoryResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrintBatchHistoryResult object.
        /// </summary>
        /// <param name="no_requests">Initial value of the no_requests property.</param>
        public static PrintBatchHistoryResult CreatePrintBatchHistoryResult(global::System.Int32 no_requests)
        {
            PrintBatchHistoryResult printBatchHistoryResult = new PrintBatchHistoryResult();
            printBatchHistoryResult.no_requests = no_requests;
            return printBatchHistoryResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String print_batch_reference
        {
            get
            {
                return _print_batch_reference;
            }
            set
            {
                Onprint_batch_referenceChanging(value);
                ReportPropertyChanging("print_batch_reference");
                _print_batch_reference = StructuralObject.SetValidValue(value, true, "print_batch_reference");
                ReportPropertyChanged("print_batch_reference");
                Onprint_batch_referenceChanged();
            }
        }
        private global::System.String _print_batch_reference;
        partial void Onprint_batch_referenceChanging(global::System.String value);
        partial void Onprint_batch_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 no_requests
        {
            get
            {
                return _no_requests;
            }
            set
            {
                Onno_requestsChanging(value);
                ReportPropertyChanging("no_requests");
                _no_requests = StructuralObject.SetValidValue(value, "no_requests");
                ReportPropertyChanged("no_requests");
                Onno_requestsChanged();
            }
        }
        private global::System.Int32 _no_requests;
        partial void Onno_requestsChanging(global::System.Int32 value);
        partial void Onno_requestsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> status_date
        {
            get
            {
                return _status_date;
            }
            set
            {
                Onstatus_dateChanging(value);
                ReportPropertyChanging("status_date");
                _status_date = StructuralObject.SetValidValue(value, "status_date");
                ReportPropertyChanged("status_date");
                Onstatus_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _status_date;
        partial void Onstatus_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onstatus_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String status_notes
        {
            get
            {
                return _status_notes;
            }
            set
            {
                Onstatus_notesChanging(value);
                ReportPropertyChanging("status_notes");
                _status_notes = StructuralObject.SetValidValue(value, true, "status_notes");
                ReportPropertyChanged("status_notes");
                Onstatus_notesChanged();
            }
        }
        private global::System.String _status_notes;
        partial void Onstatus_notesChanging(global::System.String value);
        partial void Onstatus_notesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String print_batch_status_name
        {
            get
            {
                return _print_batch_status_name;
            }
            set
            {
                Onprint_batch_status_nameChanging(value);
                ReportPropertyChanging("print_batch_status_name");
                _print_batch_status_name = StructuralObject.SetValidValue(value, true, "print_batch_status_name");
                ReportPropertyChanged("print_batch_status_name");
                Onprint_batch_status_nameChanged();
            }
        }
        private global::System.String _print_batch_status_name;
        partial void Onprint_batch_status_nameChanging(global::System.String value);
        partial void Onprint_batch_status_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, true, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, true, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, true, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, true, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="PrintBatchRequestResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class PrintBatchRequestResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrintBatchRequestResult object.
        /// </summary>
        /// <param name="request_id">Initial value of the request_id property.</param>
        /// <param name="print_batch_statuses_id">Initial value of the print_batch_statuses_id property.</param>
        public static PrintBatchRequestResult CreatePrintBatchRequestResult(global::System.Int64 request_id, global::System.Int32 print_batch_statuses_id)
        {
            PrintBatchRequestResult printBatchRequestResult = new PrintBatchRequestResult();
            printBatchRequestResult.request_id = request_id;
            printBatchRequestResult.print_batch_statuses_id = print_batch_statuses_id;
            return printBatchRequestResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String reference_number
        {
            get
            {
                return _reference_number;
            }
            set
            {
                Onreference_numberChanging(value);
                ReportPropertyChanging("reference_number");
                _reference_number = StructuralObject.SetValidValue(value, true, "reference_number");
                ReportPropertyChanged("reference_number");
                Onreference_numberChanged();
            }
        }
        private global::System.String _reference_number;
        partial void Onreference_numberChanging(global::System.String value);
        partial void Onreference_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String print_batch_statuses
        {
            get
            {
                return _print_batch_statuses;
            }
            set
            {
                Onprint_batch_statusesChanging(value);
                ReportPropertyChanging("print_batch_statuses");
                _print_batch_statuses = StructuralObject.SetValidValue(value, true, "print_batch_statuses");
                ReportPropertyChanged("print_batch_statuses");
                Onprint_batch_statusesChanged();
            }
        }
        private global::System.String _print_batch_statuses;
        partial void Onprint_batch_statusesChanging(global::System.String value);
        partial void Onprint_batch_statusesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 request_id
        {
            get
            {
                return _request_id;
            }
            set
            {
                Onrequest_idChanging(value);
                ReportPropertyChanging("request_id");
                _request_id = StructuralObject.SetValidValue(value, "request_id");
                ReportPropertyChanged("request_id");
                Onrequest_idChanged();
            }
        }
        private global::System.Int64 _request_id;
        partial void Onrequest_idChanging(global::System.Int64 value);
        partial void Onrequest_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 print_batch_statuses_id
        {
            get
            {
                return _print_batch_statuses_id;
            }
            set
            {
                Onprint_batch_statuses_idChanging(value);
                ReportPropertyChanging("print_batch_statuses_id");
                _print_batch_statuses_id = StructuralObject.SetValidValue(value, "print_batch_statuses_id");
                ReportPropertyChanged("print_batch_statuses_id");
                Onprint_batch_statuses_idChanged();
            }
        }
        private global::System.Int32 _print_batch_statuses_id;
        partial void Onprint_batch_statuses_idChanging(global::System.Int32 value);
        partial void Onprint_batch_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> card_id
        {
            get
            {
                return _card_id;
            }
            set
            {
                Oncard_idChanging(value);
                ReportPropertyChanging("card_id");
                _card_id = StructuralObject.SetValidValue(value, "card_id");
                ReportPropertyChanged("card_id");
                Oncard_idChanged();
            }
        }
        private Nullable<global::System.Int64> _card_id;
        partial void Oncard_idChanging(Nullable<global::System.Int64> value);
        partial void Oncard_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="PrintBatchResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class PrintBatchResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrintBatchResult object.
        /// </summary>
        /// <param name="print_batch_id">Initial value of the print_batch_id property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="card_issue_method_name">Initial value of the card_issue_method_name property.</param>
        /// <param name="card_issue_method_id">Initial value of the card_issue_method_id property.</param>
        public static PrintBatchResult CreatePrintBatchResult(global::System.Int64 print_batch_id, global::System.Int32 issuer_id, global::System.String issuer_name, global::System.String issuer_code, global::System.String card_issue_method_name, global::System.Int32 card_issue_method_id)
        {
            PrintBatchResult printBatchResult = new PrintBatchResult();
            printBatchResult.print_batch_id = print_batch_id;
            printBatchResult.issuer_id = issuer_id;
            printBatchResult.issuer_name = issuer_name;
            printBatchResult.issuer_code = issuer_code;
            printBatchResult.card_issue_method_name = card_issue_method_name;
            printBatchResult.card_issue_method_id = card_issue_method_id;
            return printBatchResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 print_batch_id
        {
            get
            {
                return _print_batch_id;
            }
            set
            {
                Onprint_batch_idChanging(value);
                ReportPropertyChanging("print_batch_id");
                _print_batch_id = StructuralObject.SetValidValue(value, "print_batch_id");
                ReportPropertyChanged("print_batch_id");
                Onprint_batch_idChanged();
            }
        }
        private global::System.Int64 _print_batch_id;
        partial void Onprint_batch_idChanging(global::System.Int64 value);
        partial void Onprint_batch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date_created
        {
            get
            {
                return _date_created;
            }
            set
            {
                Ondate_createdChanging(value);
                ReportPropertyChanging("date_created");
                _date_created = StructuralObject.SetValidValue(value, "date_created");
                ReportPropertyChanged("date_created");
                Ondate_createdChanged();
            }
        }
        private Nullable<global::System.DateTime> _date_created;
        partial void Ondate_createdChanging(Nullable<global::System.DateTime> value);
        partial void Ondate_createdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String print_batch_reference
        {
            get
            {
                return _print_batch_reference;
            }
            set
            {
                Onprint_batch_referenceChanging(value);
                ReportPropertyChanging("print_batch_reference");
                _print_batch_reference = StructuralObject.SetValidValue(value, true, "print_batch_reference");
                ReportPropertyChanged("print_batch_reference");
                Onprint_batch_referenceChanged();
            }
        }
        private global::System.String _print_batch_reference;
        partial void Onprint_batch_referenceChanging(global::System.String value);
        partial void Onprint_batch_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> no_cards
        {
            get
            {
                return _no_cards;
            }
            set
            {
                Onno_cardsChanging(value);
                ReportPropertyChanging("no_cards");
                _no_cards = StructuralObject.SetValidValue(value, "no_cards");
                ReportPropertyChanged("no_cards");
                Onno_cardsChanged();
            }
        }
        private Nullable<global::System.Int32> _no_cards;
        partial void Onno_cardsChanging(Nullable<global::System.Int32> value);
        partial void Onno_cardsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> print_batch_statuses_id
        {
            get
            {
                return _print_batch_statuses_id;
            }
            set
            {
                Onprint_batch_statuses_idChanging(value);
                ReportPropertyChanging("print_batch_statuses_id");
                _print_batch_statuses_id = StructuralObject.SetValidValue(value, "print_batch_statuses_id");
                ReportPropertyChanged("print_batch_statuses_id");
                Onprint_batch_statuses_idChanged();
            }
        }
        private Nullable<global::System.Int32> _print_batch_statuses_id;
        partial void Onprint_batch_statuses_idChanging(Nullable<global::System.Int32> value);
        partial void Onprint_batch_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String status_notes
        {
            get
            {
                return _status_notes;
            }
            set
            {
                Onstatus_notesChanging(value);
                ReportPropertyChanging("status_notes");
                _status_notes = StructuralObject.SetValidValue(value, true, "status_notes");
                ReportPropertyChanged("status_notes");
                Onstatus_notesChanged();
            }
        }
        private global::System.String _status_notes;
        partial void Onstatus_notesChanging(global::System.String value);
        partial void Onstatus_notesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String print_batch_status_name
        {
            get
            {
                return _print_batch_status_name;
            }
            set
            {
                Onprint_batch_status_nameChanging(value);
                ReportPropertyChanging("print_batch_status_name");
                _print_batch_status_name = StructuralObject.SetValidValue(value, true, "print_batch_status_name");
                ReportPropertyChanged("print_batch_status_name");
                Onprint_batch_status_nameChanged();
            }
        }
        private global::System.String _print_batch_status_name;
        partial void Onprint_batch_status_nameChanging(global::System.String value);
        partial void Onprint_batch_status_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String card_issue_method_name
        {
            get
            {
                return _card_issue_method_name;
            }
            set
            {
                Oncard_issue_method_nameChanging(value);
                ReportPropertyChanging("card_issue_method_name");
                _card_issue_method_name = StructuralObject.SetValidValue(value, false, "card_issue_method_name");
                ReportPropertyChanged("card_issue_method_name");
                Oncard_issue_method_nameChanged();
            }
        }
        private global::System.String _card_issue_method_name;
        partial void Oncard_issue_method_nameChanging(global::System.String value);
        partial void Oncard_issue_method_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_method_id
        {
            get
            {
                return _card_issue_method_id;
            }
            set
            {
                Oncard_issue_method_idChanging(value);
                ReportPropertyChanging("card_issue_method_id");
                _card_issue_method_id = StructuralObject.SetValidValue(value, "card_issue_method_id");
                ReportPropertyChanged("card_issue_method_id");
                Oncard_issue_method_idChanged();
            }
        }
        private global::System.Int32 _card_issue_method_id;
        partial void Oncard_issue_method_idChanging(global::System.Int32 value);
        partial void Oncard_issue_method_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, true, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, true, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private Nullable<global::System.Int32> _product_id;
        partial void Onproduct_idChanging(Nullable<global::System.Int32> value);
        partial void Onproduct_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="PrintFieldsResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class PrintFieldsResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrintFieldsResult object.
        /// </summary>
        /// <param name="field_name">Initial value of the field_name property.</param>
        /// <param name="product_field_id">Initial value of the product_field_id property.</param>
        /// <param name="editable">Initial value of the editable property.</param>
        /// <param name="deleted">Initial value of the deleted property.</param>
        public static PrintFieldsResult CreatePrintFieldsResult(global::System.String field_name, global::System.Int32 product_field_id, global::System.Boolean editable, global::System.Boolean deleted)
        {
            PrintFieldsResult printFieldsResult = new PrintFieldsResult();
            printFieldsResult.field_name = field_name;
            printFieldsResult.product_field_id = product_field_id;
            printFieldsResult.editable = editable;
            printFieldsResult.deleted = deleted;
            return printFieldsResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String field_name
        {
            get
            {
                return _field_name;
            }
            set
            {
                Onfield_nameChanging(value);
                ReportPropertyChanging("field_name");
                _field_name = StructuralObject.SetValidValue(value, false, "field_name");
                ReportPropertyChanged("field_name");
                Onfield_nameChanged();
            }
        }
        private global::System.String _field_name;
        partial void Onfield_nameChanging(global::System.String value);
        partial void Onfield_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String print_field_name
        {
            get
            {
                return _print_field_name;
            }
            set
            {
                Onprint_field_nameChanging(value);
                ReportPropertyChanging("print_field_name");
                _print_field_name = StructuralObject.SetValidValue(value, true, "print_field_name");
                ReportPropertyChanged("print_field_name");
                Onprint_field_nameChanged();
            }
        }
        private global::System.String _print_field_name;
        partial void Onprint_field_nameChanging(global::System.String value);
        partial void Onprint_field_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_field_id
        {
            get
            {
                return _product_field_id;
            }
            set
            {
                Onproduct_field_idChanging(value);
                ReportPropertyChanging("product_field_id");
                _product_field_id = StructuralObject.SetValidValue(value, "product_field_id");
                ReportPropertyChanged("product_field_id");
                Onproduct_field_idChanged();
            }
        }
        private global::System.Int32 _product_field_id;
        partial void Onproduct_field_idChanging(global::System.Int32 value);
        partial void Onproduct_field_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String mapped_name
        {
            get
            {
                return _mapped_name;
            }
            set
            {
                Onmapped_nameChanging(value);
                ReportPropertyChanging("mapped_name");
                _mapped_name = StructuralObject.SetValidValue(value, true, "mapped_name");
                ReportPropertyChanged("mapped_name");
                Onmapped_nameChanged();
            }
        }
        private global::System.String _mapped_name;
        partial void Onmapped_nameChanging(global::System.String value);
        partial void Onmapped_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean editable
        {
            get
            {
                return _editable;
            }
            set
            {
                OneditableChanging(value);
                ReportPropertyChanging("editable");
                _editable = StructuralObject.SetValidValue(value, "editable");
                ReportPropertyChanged("editable");
                OneditableChanged();
            }
        }
        private global::System.Boolean _editable;
        partial void OneditableChanging(global::System.Boolean value);
        partial void OneditableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean deleted
        {
            get
            {
                return _deleted;
            }
            set
            {
                OndeletedChanging(value);
                ReportPropertyChanging("deleted");
                _deleted = StructuralObject.SetValidValue(value, "deleted");
                ReportPropertyChanged("deleted");
                OndeletedChanged();
            }
        }
        private global::System.Boolean _deleted;
        partial void OndeletedChanging(global::System.Boolean value);
        partial void OndeletedChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="PrintJobStatus")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class PrintJobStatus : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrintJobStatus object.
        /// </summary>
        /// <param name="print_status">Initial value of the print_status property.</param>
        /// <param name="status_date">Initial value of the status_date property.</param>
        public static PrintJobStatus CreatePrintJobStatus(global::System.String print_status, global::System.DateTimeOffset status_date)
        {
            PrintJobStatus printJobStatus = new PrintJobStatus();
            printJobStatus.print_status = print_status;
            printJobStatus.status_date = status_date;
            return printJobStatus;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String print_status
        {
            get
            {
                return _print_status;
            }
            set
            {
                Onprint_statusChanging(value);
                ReportPropertyChanging("print_status");
                _print_status = StructuralObject.SetValidValue(value, false, "print_status");
                ReportPropertyChanged("print_status");
                Onprint_statusChanged();
            }
        }
        private global::System.String _print_status;
        partial void Onprint_statusChanging(global::System.String value);
        partial void Onprint_statusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comments
        {
            get
            {
                return _comments;
            }
            set
            {
                OncommentsChanging(value);
                ReportPropertyChanging("comments");
                _comments = StructuralObject.SetValidValue(value, true, "comments");
                ReportPropertyChanged("comments");
                OncommentsChanged();
            }
        }
        private global::System.String _comments;
        partial void OncommentsChanging(global::System.String value);
        partial void OncommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset status_date
        {
            get
            {
                return _status_date;
            }
            set
            {
                Onstatus_dateChanging(value);
                ReportPropertyChanging("status_date");
                _status_date = StructuralObject.SetValidValue(value, "status_date");
                ReportPropertyChanged("status_date");
                Onstatus_dateChanged();
            }
        }
        private global::System.DateTimeOffset _status_date;
        partial void Onstatus_dateChanging(global::System.DateTimeOffset value);
        partial void Onstatus_dateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="product_currency1")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class product_currency1 : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new product_currency1 object.
        /// </summary>
        /// <param name="product_id">Initial value of the product_id property.</param>
        /// <param name="currency_id">Initial value of the currency_id property.</param>
        public static product_currency1 Createproduct_currency1(global::System.Int32 product_id, global::System.Int32 currency_id)
        {
            product_currency1 product_currency1 = new product_currency1();
            product_currency1.product_id = product_id;
            product_currency1.currency_id = currency_id;
            return product_currency1;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private global::System.Int32 _product_id;
        partial void Onproduct_idChanging(global::System.Int32 value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 currency_id
        {
            get
            {
                return _currency_id;
            }
            set
            {
                Oncurrency_idChanging(value);
                ReportPropertyChanging("currency_id");
                _currency_id = StructuralObject.SetValidValue(value, "currency_id");
                ReportPropertyChanged("currency_id");
                Oncurrency_idChanged();
            }
        }
        private global::System.Int32 _currency_id;
        partial void Oncurrency_idChanging(global::System.Int32 value);
        partial void Oncurrency_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="ProductChargeResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ProductChargeResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductChargeResult object.
        /// </summary>
        /// <param name="fee_detail_id">Initial value of the fee_detail_id property.</param>
        /// <param name="currency_id">Initial value of the currency_id property.</param>
        /// <param name="card_issue_reason_id">Initial value of the card_issue_reason_id property.</param>
        /// <param name="fee_charge">Initial value of the fee_charge property.</param>
        /// <param name="vat">Initial value of the vat property.</param>
        public static ProductChargeResult CreateProductChargeResult(global::System.Int32 fee_detail_id, global::System.Int32 currency_id, global::System.Int32 card_issue_reason_id, global::System.Decimal fee_charge, global::System.Decimal vat)
        {
            ProductChargeResult productChargeResult = new ProductChargeResult();
            productChargeResult.fee_detail_id = fee_detail_id;
            productChargeResult.currency_id = currency_id;
            productChargeResult.card_issue_reason_id = card_issue_reason_id;
            productChargeResult.fee_charge = fee_charge;
            productChargeResult.vat = vat;
            return productChargeResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fee_detail_id
        {
            get
            {
                return _fee_detail_id;
            }
            set
            {
                Onfee_detail_idChanging(value);
                ReportPropertyChanging("fee_detail_id");
                _fee_detail_id = StructuralObject.SetValidValue(value, "fee_detail_id");
                ReportPropertyChanged("fee_detail_id");
                Onfee_detail_idChanged();
            }
        }
        private global::System.Int32 _fee_detail_id;
        partial void Onfee_detail_idChanging(global::System.Int32 value);
        partial void Onfee_detail_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 currency_id
        {
            get
            {
                return _currency_id;
            }
            set
            {
                Oncurrency_idChanging(value);
                ReportPropertyChanging("currency_id");
                _currency_id = StructuralObject.SetValidValue(value, "currency_id");
                ReportPropertyChanged("currency_id");
                Oncurrency_idChanged();
            }
        }
        private global::System.Int32 _currency_id;
        partial void Oncurrency_idChanging(global::System.Int32 value);
        partial void Oncurrency_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_reason_id
        {
            get
            {
                return _card_issue_reason_id;
            }
            set
            {
                Oncard_issue_reason_idChanging(value);
                ReportPropertyChanging("card_issue_reason_id");
                _card_issue_reason_id = StructuralObject.SetValidValue(value, "card_issue_reason_id");
                ReportPropertyChanged("card_issue_reason_id");
                Oncard_issue_reason_idChanged();
            }
        }
        private global::System.Int32 _card_issue_reason_id;
        partial void Oncard_issue_reason_idChanging(global::System.Int32 value);
        partial void Oncard_issue_reason_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal fee_charge
        {
            get
            {
                return _fee_charge;
            }
            set
            {
                Onfee_chargeChanging(value);
                ReportPropertyChanging("fee_charge");
                _fee_charge = StructuralObject.SetValidValue(value, "fee_charge");
                ReportPropertyChanged("fee_charge");
                Onfee_chargeChanged();
            }
        }
        private global::System.Decimal _fee_charge;
        partial void Onfee_chargeChanging(global::System.Decimal value);
        partial void Onfee_chargeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date_created
        {
            get
            {
                return _date_created;
            }
            set
            {
                Ondate_createdChanging(value);
                ReportPropertyChanging("date_created");
                _date_created = StructuralObject.SetValidValue(value, "date_created");
                ReportPropertyChanged("date_created");
                Ondate_createdChanged();
            }
        }
        private Nullable<global::System.DateTime> _date_created;
        partial void Ondate_createdChanging(Nullable<global::System.DateTime> value);
        partial void Ondate_createdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal vat
        {
            get
            {
                return _vat;
            }
            set
            {
                OnvatChanging(value);
                ReportPropertyChanging("vat");
                _vat = StructuralObject.SetValidValue(value, "vat");
                ReportPropertyChanged("vat");
                OnvatChanged();
            }
        }
        private global::System.Decimal _vat;
        partial void OnvatChanging(global::System.Decimal value);
        partial void OnvatChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="ProductCurrencyResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ProductCurrencyResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductCurrencyResult object.
        /// </summary>
        /// <param name="currency_id">Initial value of the currency_id property.</param>
        /// <param name="currency_code">Initial value of the currency_code property.</param>
        /// <param name="iso_4217_numeric_code">Initial value of the iso_4217_numeric_code property.</param>
        /// <param name="currency_desc">Initial value of the currency_desc property.</param>
        /// <param name="active_YN">Initial value of the active_YN property.</param>
        public static ProductCurrencyResult CreateProductCurrencyResult(global::System.Int32 currency_id, global::System.String currency_code, global::System.String iso_4217_numeric_code, global::System.String currency_desc, global::System.Boolean active_YN)
        {
            ProductCurrencyResult productCurrencyResult = new ProductCurrencyResult();
            productCurrencyResult.currency_id = currency_id;
            productCurrencyResult.currency_code = currency_code;
            productCurrencyResult.iso_4217_numeric_code = iso_4217_numeric_code;
            productCurrencyResult.currency_desc = currency_desc;
            productCurrencyResult.active_YN = active_YN;
            return productCurrencyResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 currency_id
        {
            get
            {
                return _currency_id;
            }
            set
            {
                Oncurrency_idChanging(value);
                ReportPropertyChanging("currency_id");
                _currency_id = StructuralObject.SetValidValue(value, "currency_id");
                ReportPropertyChanged("currency_id");
                Oncurrency_idChanged();
            }
        }
        private global::System.Int32 _currency_id;
        partial void Oncurrency_idChanging(global::System.Int32 value);
        partial void Oncurrency_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String currency_code
        {
            get
            {
                return _currency_code;
            }
            set
            {
                Oncurrency_codeChanging(value);
                ReportPropertyChanging("currency_code");
                _currency_code = StructuralObject.SetValidValue(value, false, "currency_code");
                ReportPropertyChanged("currency_code");
                Oncurrency_codeChanged();
            }
        }
        private global::System.String _currency_code;
        partial void Oncurrency_codeChanging(global::System.String value);
        partial void Oncurrency_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String iso_4217_numeric_code
        {
            get
            {
                return _iso_4217_numeric_code;
            }
            set
            {
                Oniso_4217_numeric_codeChanging(value);
                ReportPropertyChanging("iso_4217_numeric_code");
                _iso_4217_numeric_code = StructuralObject.SetValidValue(value, false, "iso_4217_numeric_code");
                ReportPropertyChanged("iso_4217_numeric_code");
                Oniso_4217_numeric_codeChanged();
            }
        }
        private global::System.String _iso_4217_numeric_code;
        partial void Oniso_4217_numeric_codeChanging(global::System.String value);
        partial void Oniso_4217_numeric_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> iso_4217_minor_unit
        {
            get
            {
                return _iso_4217_minor_unit;
            }
            set
            {
                Oniso_4217_minor_unitChanging(value);
                ReportPropertyChanging("iso_4217_minor_unit");
                _iso_4217_minor_unit = StructuralObject.SetValidValue(value, "iso_4217_minor_unit");
                ReportPropertyChanged("iso_4217_minor_unit");
                Oniso_4217_minor_unitChanged();
            }
        }
        private Nullable<global::System.Int32> _iso_4217_minor_unit;
        partial void Oniso_4217_minor_unitChanging(Nullable<global::System.Int32> value);
        partial void Oniso_4217_minor_unitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String currency_desc
        {
            get
            {
                return _currency_desc;
            }
            set
            {
                Oncurrency_descChanging(value);
                ReportPropertyChanging("currency_desc");
                _currency_desc = StructuralObject.SetValidValue(value, false, "currency_desc");
                ReportPropertyChanged("currency_desc");
                Oncurrency_descChanged();
            }
        }
        private global::System.String _currency_desc;
        partial void Oncurrency_descChanging(global::System.String value);
        partial void Oncurrency_descChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean active_YN
        {
            get
            {
                return _active_YN;
            }
            set
            {
                Onactive_YNChanging(value);
                ReportPropertyChanging("active_YN");
                _active_YN = StructuralObject.SetValidValue(value, "active_YN");
                ReportPropertyChanged("active_YN");
                Onactive_YNChanged();
            }
        }
        private global::System.Boolean _active_YN;
        partial void Onactive_YNChanging(global::System.Boolean value);
        partial void Onactive_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private Nullable<global::System.Int32> _product_id;
        partial void Onproduct_idChanging(Nullable<global::System.Int32> value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> is_base
        {
            get
            {
                return _is_base;
            }
            set
            {
                Onis_baseChanging(value);
                ReportPropertyChanging("is_base");
                _is_base = StructuralObject.SetValidValue(value, "is_base");
                ReportPropertyChanged("is_base");
                Onis_baseChanged();
            }
        }
        private Nullable<global::System.Boolean> _is_base;
        partial void Onis_baseChanging(Nullable<global::System.Boolean> value);
        partial void Onis_baseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usr_field_name_1
        {
            get
            {
                return _usr_field_name_1;
            }
            set
            {
                Onusr_field_name_1Changing(value);
                ReportPropertyChanging("usr_field_name_1");
                _usr_field_name_1 = StructuralObject.SetValidValue(value, true, "usr_field_name_1");
                ReportPropertyChanged("usr_field_name_1");
                Onusr_field_name_1Changed();
            }
        }
        private global::System.String _usr_field_name_1;
        partial void Onusr_field_name_1Changing(global::System.String value);
        partial void Onusr_field_name_1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usr_field_val_1
        {
            get
            {
                return _usr_field_val_1;
            }
            set
            {
                Onusr_field_val_1Changing(value);
                ReportPropertyChanging("usr_field_val_1");
                _usr_field_val_1 = StructuralObject.SetValidValue(value, true, "usr_field_val_1");
                ReportPropertyChanged("usr_field_val_1");
                Onusr_field_val_1Changed();
            }
        }
        private global::System.String _usr_field_val_1;
        partial void Onusr_field_val_1Changing(global::System.String value);
        partial void Onusr_field_val_1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usr_field_name_2
        {
            get
            {
                return _usr_field_name_2;
            }
            set
            {
                Onusr_field_name_2Changing(value);
                ReportPropertyChanging("usr_field_name_2");
                _usr_field_name_2 = StructuralObject.SetValidValue(value, true, "usr_field_name_2");
                ReportPropertyChanged("usr_field_name_2");
                Onusr_field_name_2Changed();
            }
        }
        private global::System.String _usr_field_name_2;
        partial void Onusr_field_name_2Changing(global::System.String value);
        partial void Onusr_field_name_2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usr_field_val_2
        {
            get
            {
                return _usr_field_val_2;
            }
            set
            {
                Onusr_field_val_2Changing(value);
                ReportPropertyChanging("usr_field_val_2");
                _usr_field_val_2 = StructuralObject.SetValidValue(value, true, "usr_field_val_2");
                ReportPropertyChanged("usr_field_val_2");
                Onusr_field_val_2Changed();
            }
        }
        private global::System.String _usr_field_val_2;
        partial void Onusr_field_val_2Changing(global::System.String value);
        partial void Onusr_field_val_2Changed();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="ProductExternalSystemResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ProductExternalSystemResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductExternalSystemResult object.
        /// </summary>
        /// <param name="external_system_field_id">Initial value of the external_system_field_id property.</param>
        /// <param name="product_id">Initial value of the product_id property.</param>
        /// <param name="field_value">Initial value of the field_value property.</param>
        /// <param name="external_system_id">Initial value of the external_system_id property.</param>
        /// <param name="field_name">Initial value of the field_name property.</param>
        /// <param name="external_system_type_id">Initial value of the external_system_type_id property.</param>
        public static ProductExternalSystemResult CreateProductExternalSystemResult(global::System.Int32 external_system_field_id, global::System.Int32 product_id, global::System.String field_value, global::System.Int32 external_system_id, global::System.String field_name, global::System.Int32 external_system_type_id)
        {
            ProductExternalSystemResult productExternalSystemResult = new ProductExternalSystemResult();
            productExternalSystemResult.external_system_field_id = external_system_field_id;
            productExternalSystemResult.product_id = product_id;
            productExternalSystemResult.field_value = field_value;
            productExternalSystemResult.external_system_id = external_system_id;
            productExternalSystemResult.field_name = field_name;
            productExternalSystemResult.external_system_type_id = external_system_type_id;
            return productExternalSystemResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 external_system_field_id
        {
            get
            {
                return _external_system_field_id;
            }
            set
            {
                Onexternal_system_field_idChanging(value);
                ReportPropertyChanging("external_system_field_id");
                _external_system_field_id = StructuralObject.SetValidValue(value, "external_system_field_id");
                ReportPropertyChanged("external_system_field_id");
                Onexternal_system_field_idChanged();
            }
        }
        private global::System.Int32 _external_system_field_id;
        partial void Onexternal_system_field_idChanging(global::System.Int32 value);
        partial void Onexternal_system_field_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private global::System.Int32 _product_id;
        partial void Onproduct_idChanging(global::System.Int32 value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String field_value
        {
            get
            {
                return _field_value;
            }
            set
            {
                Onfield_valueChanging(value);
                ReportPropertyChanging("field_value");
                _field_value = StructuralObject.SetValidValue(value, false, "field_value");
                ReportPropertyChanged("field_value");
                Onfield_valueChanged();
            }
        }
        private global::System.String _field_value;
        partial void Onfield_valueChanging(global::System.String value);
        partial void Onfield_valueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 external_system_id
        {
            get
            {
                return _external_system_id;
            }
            set
            {
                Onexternal_system_idChanging(value);
                ReportPropertyChanging("external_system_id");
                _external_system_id = StructuralObject.SetValidValue(value, "external_system_id");
                ReportPropertyChanged("external_system_id");
                Onexternal_system_idChanged();
            }
        }
        private global::System.Int32 _external_system_id;
        partial void Onexternal_system_idChanging(global::System.Int32 value);
        partial void Onexternal_system_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String field_name
        {
            get
            {
                return _field_name;
            }
            set
            {
                Onfield_nameChanging(value);
                ReportPropertyChanging("field_name");
                _field_name = StructuralObject.SetValidValue(value, false, "field_name");
                ReportPropertyChanged("field_name");
                Onfield_nameChanged();
            }
        }
        private global::System.String _field_name;
        partial void Onfield_nameChanging(global::System.String value);
        partial void Onfield_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 external_system_type_id
        {
            get
            {
                return _external_system_type_id;
            }
            set
            {
                Onexternal_system_type_idChanging(value);
                ReportPropertyChanging("external_system_type_id");
                _external_system_type_id = StructuralObject.SetValidValue(value, "external_system_type_id");
                ReportPropertyChanged("external_system_type_id");
                Onexternal_system_type_idChanged();
            }
        }
        private global::System.Int32 _external_system_type_id;
        partial void Onexternal_system_type_idChanging(global::System.Int32 value);
        partial void Onexternal_system_type_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="ProductFeeAccountingResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ProductFeeAccountingResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductFeeAccountingResult object.
        /// </summary>
        /// <param name="fee_accounting_id">Initial value of the fee_accounting_id property.</param>
        /// <param name="fee_accounting_name">Initial value of the fee_accounting_name property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="fee_revenue_account_type_id">Initial value of the fee_revenue_account_type_id property.</param>
        /// <param name="fee_revenue_narration_en">Initial value of the fee_revenue_narration_en property.</param>
        /// <param name="fee_revenue_narration_fr">Initial value of the fee_revenue_narration_fr property.</param>
        /// <param name="fee_revenue_narration_pt">Initial value of the fee_revenue_narration_pt property.</param>
        /// <param name="fee_revenue_narration_es">Initial value of the fee_revenue_narration_es property.</param>
        /// <param name="vat_account_type_id">Initial value of the vat_account_type_id property.</param>
        /// <param name="vat_narration_en">Initial value of the vat_narration_en property.</param>
        /// <param name="vat_narration_fr">Initial value of the vat_narration_fr property.</param>
        /// <param name="vat_narration_pt">Initial value of the vat_narration_pt property.</param>
        /// <param name="vat_narration_es">Initial value of the vat_narration_es property.</param>
        public static ProductFeeAccountingResult CreateProductFeeAccountingResult(global::System.Int32 fee_accounting_id, global::System.String fee_accounting_name, global::System.Int32 issuer_id, global::System.Int32 fee_revenue_account_type_id, global::System.String fee_revenue_narration_en, global::System.String fee_revenue_narration_fr, global::System.String fee_revenue_narration_pt, global::System.String fee_revenue_narration_es, global::System.Int32 vat_account_type_id, global::System.String vat_narration_en, global::System.String vat_narration_fr, global::System.String vat_narration_pt, global::System.String vat_narration_es)
        {
            ProductFeeAccountingResult productFeeAccountingResult = new ProductFeeAccountingResult();
            productFeeAccountingResult.fee_accounting_id = fee_accounting_id;
            productFeeAccountingResult.fee_accounting_name = fee_accounting_name;
            productFeeAccountingResult.issuer_id = issuer_id;
            productFeeAccountingResult.fee_revenue_account_type_id = fee_revenue_account_type_id;
            productFeeAccountingResult.fee_revenue_narration_en = fee_revenue_narration_en;
            productFeeAccountingResult.fee_revenue_narration_fr = fee_revenue_narration_fr;
            productFeeAccountingResult.fee_revenue_narration_pt = fee_revenue_narration_pt;
            productFeeAccountingResult.fee_revenue_narration_es = fee_revenue_narration_es;
            productFeeAccountingResult.vat_account_type_id = vat_account_type_id;
            productFeeAccountingResult.vat_narration_en = vat_narration_en;
            productFeeAccountingResult.vat_narration_fr = vat_narration_fr;
            productFeeAccountingResult.vat_narration_pt = vat_narration_pt;
            productFeeAccountingResult.vat_narration_es = vat_narration_es;
            return productFeeAccountingResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fee_accounting_id
        {
            get
            {
                return _fee_accounting_id;
            }
            set
            {
                Onfee_accounting_idChanging(value);
                ReportPropertyChanging("fee_accounting_id");
                _fee_accounting_id = StructuralObject.SetValidValue(value, "fee_accounting_id");
                ReportPropertyChanged("fee_accounting_id");
                Onfee_accounting_idChanged();
            }
        }
        private global::System.Int32 _fee_accounting_id;
        partial void Onfee_accounting_idChanging(global::System.Int32 value);
        partial void Onfee_accounting_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String fee_accounting_name
        {
            get
            {
                return _fee_accounting_name;
            }
            set
            {
                Onfee_accounting_nameChanging(value);
                ReportPropertyChanging("fee_accounting_name");
                _fee_accounting_name = StructuralObject.SetValidValue(value, false, "fee_accounting_name");
                ReportPropertyChanged("fee_accounting_name");
                Onfee_accounting_nameChanged();
            }
        }
        private global::System.String _fee_accounting_name;
        partial void Onfee_accounting_nameChanging(global::System.String value);
        partial void Onfee_accounting_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_account_no
        {
            get
            {
                return _fee_revenue_account_no;
            }
            set
            {
                Onfee_revenue_account_noChanging(value);
                ReportPropertyChanging("fee_revenue_account_no");
                _fee_revenue_account_no = StructuralObject.SetValidValue(value, true, "fee_revenue_account_no");
                ReportPropertyChanged("fee_revenue_account_no");
                Onfee_revenue_account_noChanged();
            }
        }
        private global::System.String _fee_revenue_account_no;
        partial void Onfee_revenue_account_noChanging(global::System.String value);
        partial void Onfee_revenue_account_noChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fee_revenue_account_type_id
        {
            get
            {
                return _fee_revenue_account_type_id;
            }
            set
            {
                Onfee_revenue_account_type_idChanging(value);
                ReportPropertyChanging("fee_revenue_account_type_id");
                _fee_revenue_account_type_id = StructuralObject.SetValidValue(value, "fee_revenue_account_type_id");
                ReportPropertyChanged("fee_revenue_account_type_id");
                Onfee_revenue_account_type_idChanged();
            }
        }
        private global::System.Int32 _fee_revenue_account_type_id;
        partial void Onfee_revenue_account_type_idChanging(global::System.Int32 value);
        partial void Onfee_revenue_account_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_branch_code
        {
            get
            {
                return _fee_revenue_branch_code;
            }
            set
            {
                Onfee_revenue_branch_codeChanging(value);
                ReportPropertyChanging("fee_revenue_branch_code");
                _fee_revenue_branch_code = StructuralObject.SetValidValue(value, true, "fee_revenue_branch_code");
                ReportPropertyChanged("fee_revenue_branch_code");
                Onfee_revenue_branch_codeChanged();
            }
        }
        private global::System.String _fee_revenue_branch_code;
        partial void Onfee_revenue_branch_codeChanging(global::System.String value);
        partial void Onfee_revenue_branch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_narration_en
        {
            get
            {
                return _fee_revenue_narration_en;
            }
            set
            {
                Onfee_revenue_narration_enChanging(value);
                ReportPropertyChanging("fee_revenue_narration_en");
                _fee_revenue_narration_en = StructuralObject.SetValidValue(value, false, "fee_revenue_narration_en");
                ReportPropertyChanged("fee_revenue_narration_en");
                Onfee_revenue_narration_enChanged();
            }
        }
        private global::System.String _fee_revenue_narration_en;
        partial void Onfee_revenue_narration_enChanging(global::System.String value);
        partial void Onfee_revenue_narration_enChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_narration_fr
        {
            get
            {
                return _fee_revenue_narration_fr;
            }
            set
            {
                Onfee_revenue_narration_frChanging(value);
                ReportPropertyChanging("fee_revenue_narration_fr");
                _fee_revenue_narration_fr = StructuralObject.SetValidValue(value, false, "fee_revenue_narration_fr");
                ReportPropertyChanged("fee_revenue_narration_fr");
                Onfee_revenue_narration_frChanged();
            }
        }
        private global::System.String _fee_revenue_narration_fr;
        partial void Onfee_revenue_narration_frChanging(global::System.String value);
        partial void Onfee_revenue_narration_frChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_narration_pt
        {
            get
            {
                return _fee_revenue_narration_pt;
            }
            set
            {
                Onfee_revenue_narration_ptChanging(value);
                ReportPropertyChanging("fee_revenue_narration_pt");
                _fee_revenue_narration_pt = StructuralObject.SetValidValue(value, false, "fee_revenue_narration_pt");
                ReportPropertyChanged("fee_revenue_narration_pt");
                Onfee_revenue_narration_ptChanged();
            }
        }
        private global::System.String _fee_revenue_narration_pt;
        partial void Onfee_revenue_narration_ptChanging(global::System.String value);
        partial void Onfee_revenue_narration_ptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_narration_es
        {
            get
            {
                return _fee_revenue_narration_es;
            }
            set
            {
                Onfee_revenue_narration_esChanging(value);
                ReportPropertyChanging("fee_revenue_narration_es");
                _fee_revenue_narration_es = StructuralObject.SetValidValue(value, false, "fee_revenue_narration_es");
                ReportPropertyChanged("fee_revenue_narration_es");
                Onfee_revenue_narration_esChanged();
            }
        }
        private global::System.String _fee_revenue_narration_es;
        partial void Onfee_revenue_narration_esChanging(global::System.String value);
        partial void Onfee_revenue_narration_esChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String vat_account_no
        {
            get
            {
                return _vat_account_no;
            }
            set
            {
                Onvat_account_noChanging(value);
                ReportPropertyChanging("vat_account_no");
                _vat_account_no = StructuralObject.SetValidValue(value, true, "vat_account_no");
                ReportPropertyChanged("vat_account_no");
                Onvat_account_noChanged();
            }
        }
        private global::System.String _vat_account_no;
        partial void Onvat_account_noChanging(global::System.String value);
        partial void Onvat_account_noChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 vat_account_type_id
        {
            get
            {
                return _vat_account_type_id;
            }
            set
            {
                Onvat_account_type_idChanging(value);
                ReportPropertyChanging("vat_account_type_id");
                _vat_account_type_id = StructuralObject.SetValidValue(value, "vat_account_type_id");
                ReportPropertyChanged("vat_account_type_id");
                Onvat_account_type_idChanged();
            }
        }
        private global::System.Int32 _vat_account_type_id;
        partial void Onvat_account_type_idChanging(global::System.Int32 value);
        partial void Onvat_account_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String vat_account_branch_code
        {
            get
            {
                return _vat_account_branch_code;
            }
            set
            {
                Onvat_account_branch_codeChanging(value);
                ReportPropertyChanging("vat_account_branch_code");
                _vat_account_branch_code = StructuralObject.SetValidValue(value, true, "vat_account_branch_code");
                ReportPropertyChanged("vat_account_branch_code");
                Onvat_account_branch_codeChanged();
            }
        }
        private global::System.String _vat_account_branch_code;
        partial void Onvat_account_branch_codeChanging(global::System.String value);
        partial void Onvat_account_branch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String vat_narration_en
        {
            get
            {
                return _vat_narration_en;
            }
            set
            {
                Onvat_narration_enChanging(value);
                ReportPropertyChanging("vat_narration_en");
                _vat_narration_en = StructuralObject.SetValidValue(value, false, "vat_narration_en");
                ReportPropertyChanged("vat_narration_en");
                Onvat_narration_enChanged();
            }
        }
        private global::System.String _vat_narration_en;
        partial void Onvat_narration_enChanging(global::System.String value);
        partial void Onvat_narration_enChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String vat_narration_fr
        {
            get
            {
                return _vat_narration_fr;
            }
            set
            {
                Onvat_narration_frChanging(value);
                ReportPropertyChanging("vat_narration_fr");
                _vat_narration_fr = StructuralObject.SetValidValue(value, false, "vat_narration_fr");
                ReportPropertyChanged("vat_narration_fr");
                Onvat_narration_frChanged();
            }
        }
        private global::System.String _vat_narration_fr;
        partial void Onvat_narration_frChanging(global::System.String value);
        partial void Onvat_narration_frChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String vat_narration_pt
        {
            get
            {
                return _vat_narration_pt;
            }
            set
            {
                Onvat_narration_ptChanging(value);
                ReportPropertyChanging("vat_narration_pt");
                _vat_narration_pt = StructuralObject.SetValidValue(value, false, "vat_narration_pt");
                ReportPropertyChanged("vat_narration_pt");
                Onvat_narration_ptChanged();
            }
        }
        private global::System.String _vat_narration_pt;
        partial void Onvat_narration_ptChanging(global::System.String value);
        partial void Onvat_narration_ptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String vat_narration_es
        {
            get
            {
                return _vat_narration_es;
            }
            set
            {
                Onvat_narration_esChanging(value);
                ReportPropertyChanging("vat_narration_es");
                _vat_narration_es = StructuralObject.SetValidValue(value, false, "vat_narration_es");
                ReportPropertyChanged("vat_narration_es");
                Onvat_narration_esChanged();
            }
        }
        private global::System.String _vat_narration_es;
        partial void Onvat_narration_esChanging(global::System.String value);
        partial void Onvat_narration_esChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="ProductFeeDetailsResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ProductFeeDetailsResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductFeeDetailsResult object.
        /// </summary>
        /// <param name="fee_scheme_id">Initial value of the fee_scheme_id property.</param>
        /// <param name="fee_detail_id">Initial value of the fee_detail_id property.</param>
        /// <param name="fee_detail_name">Initial value of the fee_detail_name property.</param>
        /// <param name="fee_waiver_YN">Initial value of the fee_waiver_YN property.</param>
        /// <param name="fee_editable_YN">Initial value of the fee_editable_YN property.</param>
        public static ProductFeeDetailsResult CreateProductFeeDetailsResult(global::System.Int32 fee_scheme_id, global::System.Int32 fee_detail_id, global::System.String fee_detail_name, global::System.Boolean fee_waiver_YN, global::System.Boolean fee_editable_YN)
        {
            ProductFeeDetailsResult productFeeDetailsResult = new ProductFeeDetailsResult();
            productFeeDetailsResult.fee_scheme_id = fee_scheme_id;
            productFeeDetailsResult.fee_detail_id = fee_detail_id;
            productFeeDetailsResult.fee_detail_name = fee_detail_name;
            productFeeDetailsResult.fee_waiver_YN = fee_waiver_YN;
            productFeeDetailsResult.fee_editable_YN = fee_editable_YN;
            return productFeeDetailsResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fee_scheme_id
        {
            get
            {
                return _fee_scheme_id;
            }
            set
            {
                Onfee_scheme_idChanging(value);
                ReportPropertyChanging("fee_scheme_id");
                _fee_scheme_id = StructuralObject.SetValidValue(value, "fee_scheme_id");
                ReportPropertyChanged("fee_scheme_id");
                Onfee_scheme_idChanged();
            }
        }
        private global::System.Int32 _fee_scheme_id;
        partial void Onfee_scheme_idChanging(global::System.Int32 value);
        partial void Onfee_scheme_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fee_detail_id
        {
            get
            {
                return _fee_detail_id;
            }
            set
            {
                Onfee_detail_idChanging(value);
                ReportPropertyChanging("fee_detail_id");
                _fee_detail_id = StructuralObject.SetValidValue(value, "fee_detail_id");
                ReportPropertyChanged("fee_detail_id");
                Onfee_detail_idChanged();
            }
        }
        private global::System.Int32 _fee_detail_id;
        partial void Onfee_detail_idChanging(global::System.Int32 value);
        partial void Onfee_detail_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String fee_detail_name
        {
            get
            {
                return _fee_detail_name;
            }
            set
            {
                Onfee_detail_nameChanging(value);
                ReportPropertyChanging("fee_detail_name");
                _fee_detail_name = StructuralObject.SetValidValue(value, false, "fee_detail_name");
                ReportPropertyChanged("fee_detail_name");
                Onfee_detail_nameChanged();
            }
        }
        private global::System.String _fee_detail_name;
        partial void Onfee_detail_nameChanging(global::System.String value);
        partial void Onfee_detail_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean fee_waiver_YN
        {
            get
            {
                return _fee_waiver_YN;
            }
            set
            {
                Onfee_waiver_YNChanging(value);
                ReportPropertyChanging("fee_waiver_YN");
                _fee_waiver_YN = StructuralObject.SetValidValue(value, "fee_waiver_YN");
                ReportPropertyChanged("fee_waiver_YN");
                Onfee_waiver_YNChanged();
            }
        }
        private global::System.Boolean _fee_waiver_YN;
        partial void Onfee_waiver_YNChanging(global::System.Boolean value);
        partial void Onfee_waiver_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean fee_editable_YN
        {
            get
            {
                return _fee_editable_YN;
            }
            set
            {
                Onfee_editable_YNChanging(value);
                ReportPropertyChanging("fee_editable_YN");
                _fee_editable_YN = StructuralObject.SetValidValue(value, "fee_editable_YN");
                ReportPropertyChanged("fee_editable_YN");
                Onfee_editable_YNChanged();
            }
        }
        private global::System.Boolean _fee_editable_YN;
        partial void Onfee_editable_YNChanging(global::System.Boolean value);
        partial void Onfee_editable_YNChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="ProductInterfaceResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ProductInterfaceResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductInterfaceResult object.
        /// </summary>
        /// <param name="interface_type_id">Initial value of the interface_type_id property.</param>
        /// <param name="product_id">Initial value of the product_id property.</param>
        /// <param name="connection_parameter_id">Initial value of the connection_parameter_id property.</param>
        /// <param name="interface_area">Initial value of the interface_area property.</param>
        public static ProductInterfaceResult CreateProductInterfaceResult(global::System.Int32 interface_type_id, global::System.Int32 product_id, global::System.Int32 connection_parameter_id, global::System.Int32 interface_area)
        {
            ProductInterfaceResult productInterfaceResult = new ProductInterfaceResult();
            productInterfaceResult.interface_type_id = interface_type_id;
            productInterfaceResult.product_id = product_id;
            productInterfaceResult.connection_parameter_id = connection_parameter_id;
            productInterfaceResult.interface_area = interface_area;
            return productInterfaceResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 interface_type_id
        {
            get
            {
                return _interface_type_id;
            }
            set
            {
                Oninterface_type_idChanging(value);
                ReportPropertyChanging("interface_type_id");
                _interface_type_id = StructuralObject.SetValidValue(value, "interface_type_id");
                ReportPropertyChanged("interface_type_id");
                Oninterface_type_idChanged();
            }
        }
        private global::System.Int32 _interface_type_id;
        partial void Oninterface_type_idChanging(global::System.Int32 value);
        partial void Oninterface_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private global::System.Int32 _product_id;
        partial void Onproduct_idChanging(global::System.Int32 value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 connection_parameter_id
        {
            get
            {
                return _connection_parameter_id;
            }
            set
            {
                Onconnection_parameter_idChanging(value);
                ReportPropertyChanging("connection_parameter_id");
                _connection_parameter_id = StructuralObject.SetValidValue(value, "connection_parameter_id");
                ReportPropertyChanged("connection_parameter_id");
                Onconnection_parameter_idChanged();
            }
        }
        private global::System.Int32 _connection_parameter_id;
        partial void Onconnection_parameter_idChanging(global::System.Int32 value);
        partial void Onconnection_parameter_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 interface_area
        {
            get
            {
                return _interface_area;
            }
            set
            {
                Oninterface_areaChanging(value);
                ReportPropertyChanging("interface_area");
                _interface_area = StructuralObject.SetValidValue(value, "interface_area");
                ReportPropertyChanged("interface_area");
                Oninterface_areaChanged();
            }
        }
        private global::System.Int32 _interface_area;
        partial void Oninterface_areaChanging(global::System.Int32 value);
        partial void Oninterface_areaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String interface_guid
        {
            get
            {
                return _interface_guid;
            }
            set
            {
                Oninterface_guidChanging(value);
                ReportPropertyChanging("interface_guid");
                _interface_guid = StructuralObject.SetValidValue(value, true, "interface_guid");
                ReportPropertyChanged("interface_guid");
                Oninterface_guidChanged();
            }
        }
        private global::System.String _interface_guid;
        partial void Oninterface_guidChanging(global::System.String value);
        partial void Oninterface_guidChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="ProductPrintFieldResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ProductPrintFieldResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductPrintFieldResult object.
        /// </summary>
        /// <param name="product_field_id">Initial value of the product_field_id property.</param>
        /// <param name="field_name">Initial value of the field_name property.</param>
        /// <param name="product_id">Initial value of the product_id property.</param>
        /// <param name="print_field_type_id">Initial value of the print_field_type_id property.</param>
        /// <param name="editable">Initial value of the editable property.</param>
        /// <param name="deleted">Initial value of the deleted property.</param>
        /// <param name="max_length">Initial value of the max_length property.</param>
        public static ProductPrintFieldResult CreateProductPrintFieldResult(global::System.Int32 product_field_id, global::System.String field_name, global::System.Int32 product_id, global::System.Int32 print_field_type_id, global::System.Boolean editable, global::System.Boolean deleted, global::System.Int32 max_length)
        {
            ProductPrintFieldResult productPrintFieldResult = new ProductPrintFieldResult();
            productPrintFieldResult.product_field_id = product_field_id;
            productPrintFieldResult.field_name = field_name;
            productPrintFieldResult.product_id = product_id;
            productPrintFieldResult.print_field_type_id = print_field_type_id;
            productPrintFieldResult.editable = editable;
            productPrintFieldResult.deleted = deleted;
            productPrintFieldResult.max_length = max_length;
            return productPrintFieldResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_field_id
        {
            get
            {
                return _product_field_id;
            }
            set
            {
                Onproduct_field_idChanging(value);
                ReportPropertyChanging("product_field_id");
                _product_field_id = StructuralObject.SetValidValue(value, "product_field_id");
                ReportPropertyChanged("product_field_id");
                Onproduct_field_idChanged();
            }
        }
        private global::System.Int32 _product_field_id;
        partial void Onproduct_field_idChanging(global::System.Int32 value);
        partial void Onproduct_field_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String field_name
        {
            get
            {
                return _field_name;
            }
            set
            {
                Onfield_nameChanging(value);
                ReportPropertyChanging("field_name");
                _field_name = StructuralObject.SetValidValue(value, false, "field_name");
                ReportPropertyChanged("field_name");
                Onfield_nameChanged();
            }
        }
        private global::System.String _field_name;
        partial void Onfield_nameChanging(global::System.String value);
        partial void Onfield_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> X
        {
            get
            {
                return _X;
            }
            set
            {
                OnXChanging(value);
                ReportPropertyChanging("X");
                _X = StructuralObject.SetValidValue(value, "X");
                ReportPropertyChanged("X");
                OnXChanged();
            }
        }
        private Nullable<global::System.Decimal> _X;
        partial void OnXChanging(Nullable<global::System.Decimal> value);
        partial void OnXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Y
        {
            get
            {
                return _Y;
            }
            set
            {
                OnYChanging(value);
                ReportPropertyChanging("Y");
                _Y = StructuralObject.SetValidValue(value, "Y");
                ReportPropertyChanged("Y");
                OnYChanged();
            }
        }
        private Nullable<global::System.Decimal> _Y;
        partial void OnYChanging(Nullable<global::System.Decimal> value);
        partial void OnYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> width
        {
            get
            {
                return _width;
            }
            set
            {
                OnwidthChanging(value);
                ReportPropertyChanging("width");
                _width = StructuralObject.SetValidValue(value, "width");
                ReportPropertyChanged("width");
                OnwidthChanged();
            }
        }
        private Nullable<global::System.Decimal> _width;
        partial void OnwidthChanging(Nullable<global::System.Decimal> value);
        partial void OnwidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> height
        {
            get
            {
                return _height;
            }
            set
            {
                OnheightChanging(value);
                ReportPropertyChanging("height");
                _height = StructuralObject.SetValidValue(value, "height");
                ReportPropertyChanged("height");
                OnheightChanged();
            }
        }
        private Nullable<global::System.Decimal> _height;
        partial void OnheightChanging(Nullable<global::System.Decimal> value);
        partial void OnheightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String font
        {
            get
            {
                return _font;
            }
            set
            {
                OnfontChanging(value);
                ReportPropertyChanging("font");
                _font = StructuralObject.SetValidValue(value, true, "font");
                ReportPropertyChanged("font");
                OnfontChanged();
            }
        }
        private global::System.String _font;
        partial void OnfontChanging(global::System.String value);
        partial void OnfontChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> font_size
        {
            get
            {
                return _font_size;
            }
            set
            {
                Onfont_sizeChanging(value);
                ReportPropertyChanging("font_size");
                _font_size = StructuralObject.SetValidValue(value, "font_size");
                ReportPropertyChanged("font_size");
                Onfont_sizeChanged();
            }
        }
        private Nullable<global::System.Int32> _font_size;
        partial void Onfont_sizeChanging(Nullable<global::System.Int32> value);
        partial void Onfont_sizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String mapped_name
        {
            get
            {
                return _mapped_name;
            }
            set
            {
                Onmapped_nameChanging(value);
                ReportPropertyChanging("mapped_name");
                _mapped_name = StructuralObject.SetValidValue(value, true, "mapped_name");
                ReportPropertyChanged("mapped_name");
                Onmapped_nameChanged();
            }
        }
        private global::System.String _mapped_name;
        partial void Onmapped_nameChanging(global::System.String value);
        partial void Onmapped_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] value
        {
            get
            {
                return StructuralObject.GetValidValue(_value);
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, true, "value");
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.Byte[] _value;
        partial void OnvalueChanging(global::System.Byte[] value);
        partial void OnvalueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private global::System.Int32 _product_id;
        partial void Onproduct_idChanging(global::System.Int32 value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 print_field_type_id
        {
            get
            {
                return _print_field_type_id;
            }
            set
            {
                Onprint_field_type_idChanging(value);
                ReportPropertyChanging("print_field_type_id");
                _print_field_type_id = StructuralObject.SetValidValue(value, "print_field_type_id");
                ReportPropertyChanged("print_field_type_id");
                Onprint_field_type_idChanged();
            }
        }
        private global::System.Int32 _print_field_type_id;
        partial void Onprint_field_type_idChanging(global::System.Int32 value);
        partial void Onprint_field_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean editable
        {
            get
            {
                return _editable;
            }
            set
            {
                OneditableChanging(value);
                ReportPropertyChanging("editable");
                _editable = StructuralObject.SetValidValue(value, "editable");
                ReportPropertyChanged("editable");
                OneditableChanged();
            }
        }
        private global::System.Boolean _editable;
        partial void OneditableChanging(global::System.Boolean value);
        partial void OneditableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean deleted
        {
            get
            {
                return _deleted;
            }
            set
            {
                OndeletedChanging(value);
                ReportPropertyChanging("deleted");
                _deleted = StructuralObject.SetValidValue(value, "deleted");
                ReportPropertyChanged("deleted");
                OndeletedChanged();
            }
        }
        private global::System.Boolean _deleted;
        partial void OndeletedChanging(global::System.Boolean value);
        partial void OndeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String label
        {
            get
            {
                return _label;
            }
            set
            {
                OnlabelChanging(value);
                ReportPropertyChanging("label");
                _label = StructuralObject.SetValidValue(value, true, "label");
                ReportPropertyChanged("label");
                OnlabelChanged();
            }
        }
        private global::System.String _label;
        partial void OnlabelChanging(global::System.String value);
        partial void OnlabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 max_length
        {
            get
            {
                return _max_length;
            }
            set
            {
                Onmax_lengthChanging(value);
                ReportPropertyChanging("max_length");
                _max_length = StructuralObject.SetValidValue(value, "max_length");
                ReportPropertyChanged("max_length");
                Onmax_lengthChanged();
            }
        }
        private global::System.Int32 _max_length;
        partial void Onmax_lengthChanging(global::System.Int32 value);
        partial void Onmax_lengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String print_field_name
        {
            get
            {
                return _print_field_name;
            }
            set
            {
                Onprint_field_nameChanging(value);
                ReportPropertyChanging("print_field_name");
                _print_field_name = StructuralObject.SetValidValue(value, true, "print_field_name");
                ReportPropertyChanged("print_field_name");
                Onprint_field_nameChanged();
            }
        }
        private global::System.String _print_field_name;
        partial void Onprint_field_nameChanging(global::System.String value);
        partial void Onprint_field_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> printable
        {
            get
            {
                return _printable;
            }
            set
            {
                OnprintableChanging(value);
                ReportPropertyChanging("printable");
                _printable = StructuralObject.SetValidValue(value, "printable");
                ReportPropertyChanged("printable");
                OnprintableChanged();
            }
        }
        private Nullable<global::System.Boolean> _printable;
        partial void OnprintableChanging(Nullable<global::System.Boolean> value);
        partial void OnprintableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> printside
        {
            get
            {
                return _printside;
            }
            set
            {
                OnprintsideChanging(value);
                ReportPropertyChanging("printside");
                _printside = StructuralObject.SetValidValue(value, "printside");
                ReportPropertyChanged("printside");
                OnprintsideChanged();
            }
        }
        private Nullable<global::System.Int32> _printside;
        partial void OnprintsideChanging(Nullable<global::System.Int32> value);
        partial void OnprintsideChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="RemoteCardUpdateDetailResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class RemoteCardUpdateDetailResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RemoteCardUpdateDetailResult object.
        /// </summary>
        /// <param name="remote_update_status_id">Initial value of the remote_update_status_id property.</param>
        /// <param name="remote_update_statuses_id">Initial value of the remote_update_statuses_id property.</param>
        /// <param name="remote_update_statuses_name">Initial value of the remote_update_statuses_name property.</param>
        /// <param name="card_id">Initial value of the card_id property.</param>
        /// <param name="status_date">Initial value of the status_date property.</param>
        /// <param name="comments">Initial value of the comments property.</param>
        /// <param name="remote_component">Initial value of the remote_component property.</param>
        /// <param name="user_id">Initial value of the user_id property.</param>
        public static RemoteCardUpdateDetailResult CreateRemoteCardUpdateDetailResult(global::System.Int32 remote_update_status_id, global::System.Int32 remote_update_statuses_id, global::System.String remote_update_statuses_name, global::System.Int64 card_id, global::System.DateTimeOffset status_date, global::System.String comments, global::System.String remote_component, global::System.Int64 user_id)
        {
            RemoteCardUpdateDetailResult remoteCardUpdateDetailResult = new RemoteCardUpdateDetailResult();
            remoteCardUpdateDetailResult.remote_update_status_id = remote_update_status_id;
            remoteCardUpdateDetailResult.remote_update_statuses_id = remote_update_statuses_id;
            remoteCardUpdateDetailResult.remote_update_statuses_name = remote_update_statuses_name;
            remoteCardUpdateDetailResult.card_id = card_id;
            remoteCardUpdateDetailResult.status_date = status_date;
            remoteCardUpdateDetailResult.comments = comments;
            remoteCardUpdateDetailResult.remote_component = remote_component;
            remoteCardUpdateDetailResult.user_id = user_id;
            return remoteCardUpdateDetailResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 remote_update_status_id
        {
            get
            {
                return _remote_update_status_id;
            }
            set
            {
                Onremote_update_status_idChanging(value);
                ReportPropertyChanging("remote_update_status_id");
                _remote_update_status_id = StructuralObject.SetValidValue(value, "remote_update_status_id");
                ReportPropertyChanged("remote_update_status_id");
                Onremote_update_status_idChanged();
            }
        }
        private global::System.Int32 _remote_update_status_id;
        partial void Onremote_update_status_idChanging(global::System.Int32 value);
        partial void Onremote_update_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 remote_update_statuses_id
        {
            get
            {
                return _remote_update_statuses_id;
            }
            set
            {
                Onremote_update_statuses_idChanging(value);
                ReportPropertyChanging("remote_update_statuses_id");
                _remote_update_statuses_id = StructuralObject.SetValidValue(value, "remote_update_statuses_id");
                ReportPropertyChanged("remote_update_statuses_id");
                Onremote_update_statuses_idChanged();
            }
        }
        private global::System.Int32 _remote_update_statuses_id;
        partial void Onremote_update_statuses_idChanging(global::System.Int32 value);
        partial void Onremote_update_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String remote_update_statuses_name
        {
            get
            {
                return _remote_update_statuses_name;
            }
            set
            {
                Onremote_update_statuses_nameChanging(value);
                ReportPropertyChanging("remote_update_statuses_name");
                _remote_update_statuses_name = StructuralObject.SetValidValue(value, false, "remote_update_statuses_name");
                ReportPropertyChanged("remote_update_statuses_name");
                Onremote_update_statuses_nameChanged();
            }
        }
        private global::System.String _remote_update_statuses_name;
        partial void Onremote_update_statuses_nameChanging(global::System.String value);
        partial void Onremote_update_statuses_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 card_id
        {
            get
            {
                return _card_id;
            }
            set
            {
                Oncard_idChanging(value);
                ReportPropertyChanging("card_id");
                _card_id = StructuralObject.SetValidValue(value, "card_id");
                ReportPropertyChanged("card_id");
                Oncard_idChanged();
            }
        }
        private global::System.Int64 _card_id;
        partial void Oncard_idChanging(global::System.Int64 value);
        partial void Oncard_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset status_date
        {
            get
            {
                return _status_date;
            }
            set
            {
                Onstatus_dateChanging(value);
                ReportPropertyChanging("status_date");
                _status_date = StructuralObject.SetValidValue(value, "status_date");
                ReportPropertyChanged("status_date");
                Onstatus_dateChanged();
            }
        }
        private global::System.DateTimeOffset _status_date;
        partial void Onstatus_dateChanging(global::System.DateTimeOffset value);
        partial void Onstatus_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String comments
        {
            get
            {
                return _comments;
            }
            set
            {
                OncommentsChanging(value);
                ReportPropertyChanging("comments");
                _comments = StructuralObject.SetValidValue(value, false, "comments");
                ReportPropertyChanged("comments");
                OncommentsChanged();
            }
        }
        private global::System.String _comments;
        partial void OncommentsChanging(global::System.String value);
        partial void OncommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String remote_component
        {
            get
            {
                return _remote_component;
            }
            set
            {
                Onremote_componentChanging(value);
                ReportPropertyChanging("remote_component");
                _remote_component = StructuralObject.SetValidValue(value, false, "remote_component");
                ReportPropertyChanged("remote_component");
                Onremote_componentChanged();
            }
        }
        private global::System.String _remote_component;
        partial void Onremote_componentChanging(global::System.String value);
        partial void Onremote_componentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value, "user_id");
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int64 _user_id;
        partial void Onuser_idChanging(global::System.Int64 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> remote_updated_time
        {
            get
            {
                return _remote_updated_time;
            }
            set
            {
                Onremote_updated_timeChanging(value);
                ReportPropertyChanging("remote_updated_time");
                _remote_updated_time = StructuralObject.SetValidValue(value, "remote_updated_time");
                ReportPropertyChanged("remote_updated_time");
                Onremote_updated_timeChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _remote_updated_time;
        partial void Onremote_updated_timeChanging(Nullable<global::System.DateTimeOffset> value);
        partial void Onremote_updated_timeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_request_reference
        {
            get
            {
                return _card_request_reference;
            }
            set
            {
                Oncard_request_referenceChanging(value);
                ReportPropertyChanging("card_request_reference");
                _card_request_reference = StructuralObject.SetValidValue(value, true, "card_request_reference");
                ReportPropertyChanged("card_request_reference");
                Oncard_request_referenceChanged();
            }
        }
        private global::System.String _card_request_reference;
        partial void Oncard_request_referenceChanging(global::System.String value);
        partial void Oncard_request_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, true, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, true, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, true, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, true, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private Nullable<global::System.Int32> _issuer_id;
        partial void Onissuer_idChanging(Nullable<global::System.Int32> value);
        partial void Onissuer_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="RemoteCardUpdateSearchResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class RemoteCardUpdateSearchResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RemoteCardUpdateSearchResult object.
        /// </summary>
        /// <param name="remote_update_status_id">Initial value of the remote_update_status_id property.</param>
        /// <param name="remote_update_statuses_id">Initial value of the remote_update_statuses_id property.</param>
        /// <param name="remote_update_statuses_name">Initial value of the remote_update_statuses_name property.</param>
        /// <param name="card_id">Initial value of the card_id property.</param>
        /// <param name="status_date">Initial value of the status_date property.</param>
        /// <param name="comments">Initial value of the comments property.</param>
        /// <param name="remote_component">Initial value of the remote_component property.</param>
        /// <param name="user_id">Initial value of the user_id property.</param>
        public static RemoteCardUpdateSearchResult CreateRemoteCardUpdateSearchResult(global::System.Int32 remote_update_status_id, global::System.Int32 remote_update_statuses_id, global::System.String remote_update_statuses_name, global::System.Int64 card_id, global::System.DateTimeOffset status_date, global::System.String comments, global::System.String remote_component, global::System.Int64 user_id)
        {
            RemoteCardUpdateSearchResult remoteCardUpdateSearchResult = new RemoteCardUpdateSearchResult();
            remoteCardUpdateSearchResult.remote_update_status_id = remote_update_status_id;
            remoteCardUpdateSearchResult.remote_update_statuses_id = remote_update_statuses_id;
            remoteCardUpdateSearchResult.remote_update_statuses_name = remote_update_statuses_name;
            remoteCardUpdateSearchResult.card_id = card_id;
            remoteCardUpdateSearchResult.status_date = status_date;
            remoteCardUpdateSearchResult.comments = comments;
            remoteCardUpdateSearchResult.remote_component = remote_component;
            remoteCardUpdateSearchResult.user_id = user_id;
            return remoteCardUpdateSearchResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 remote_update_status_id
        {
            get
            {
                return _remote_update_status_id;
            }
            set
            {
                Onremote_update_status_idChanging(value);
                ReportPropertyChanging("remote_update_status_id");
                _remote_update_status_id = StructuralObject.SetValidValue(value, "remote_update_status_id");
                ReportPropertyChanged("remote_update_status_id");
                Onremote_update_status_idChanged();
            }
        }
        private global::System.Int32 _remote_update_status_id;
        partial void Onremote_update_status_idChanging(global::System.Int32 value);
        partial void Onremote_update_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 remote_update_statuses_id
        {
            get
            {
                return _remote_update_statuses_id;
            }
            set
            {
                Onremote_update_statuses_idChanging(value);
                ReportPropertyChanging("remote_update_statuses_id");
                _remote_update_statuses_id = StructuralObject.SetValidValue(value, "remote_update_statuses_id");
                ReportPropertyChanged("remote_update_statuses_id");
                Onremote_update_statuses_idChanged();
            }
        }
        private global::System.Int32 _remote_update_statuses_id;
        partial void Onremote_update_statuses_idChanging(global::System.Int32 value);
        partial void Onremote_update_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String remote_update_statuses_name
        {
            get
            {
                return _remote_update_statuses_name;
            }
            set
            {
                Onremote_update_statuses_nameChanging(value);
                ReportPropertyChanging("remote_update_statuses_name");
                _remote_update_statuses_name = StructuralObject.SetValidValue(value, false, "remote_update_statuses_name");
                ReportPropertyChanged("remote_update_statuses_name");
                Onremote_update_statuses_nameChanged();
            }
        }
        private global::System.String _remote_update_statuses_name;
        partial void Onremote_update_statuses_nameChanging(global::System.String value);
        partial void Onremote_update_statuses_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 card_id
        {
            get
            {
                return _card_id;
            }
            set
            {
                Oncard_idChanging(value);
                ReportPropertyChanging("card_id");
                _card_id = StructuralObject.SetValidValue(value, "card_id");
                ReportPropertyChanged("card_id");
                Oncard_idChanged();
            }
        }
        private global::System.Int64 _card_id;
        partial void Oncard_idChanging(global::System.Int64 value);
        partial void Oncard_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset status_date
        {
            get
            {
                return _status_date;
            }
            set
            {
                Onstatus_dateChanging(value);
                ReportPropertyChanging("status_date");
                _status_date = StructuralObject.SetValidValue(value, "status_date");
                ReportPropertyChanged("status_date");
                Onstatus_dateChanged();
            }
        }
        private global::System.DateTimeOffset _status_date;
        partial void Onstatus_dateChanging(global::System.DateTimeOffset value);
        partial void Onstatus_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String comments
        {
            get
            {
                return _comments;
            }
            set
            {
                OncommentsChanging(value);
                ReportPropertyChanging("comments");
                _comments = StructuralObject.SetValidValue(value, false, "comments");
                ReportPropertyChanged("comments");
                OncommentsChanged();
            }
        }
        private global::System.String _comments;
        partial void OncommentsChanging(global::System.String value);
        partial void OncommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String remote_component
        {
            get
            {
                return _remote_component;
            }
            set
            {
                Onremote_componentChanging(value);
                ReportPropertyChanging("remote_component");
                _remote_component = StructuralObject.SetValidValue(value, false, "remote_component");
                ReportPropertyChanged("remote_component");
                Onremote_componentChanged();
            }
        }
        private global::System.String _remote_component;
        partial void Onremote_componentChanging(global::System.String value);
        partial void Onremote_componentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value, "user_id");
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int64 _user_id;
        partial void Onuser_idChanging(global::System.Int64 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> remote_updated_time
        {
            get
            {
                return _remote_updated_time;
            }
            set
            {
                Onremote_updated_timeChanging(value);
                ReportPropertyChanging("remote_updated_time");
                _remote_updated_time = StructuralObject.SetValidValue(value, "remote_updated_time");
                ReportPropertyChanged("remote_updated_time");
                Onremote_updated_timeChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _remote_updated_time;
        partial void Onremote_updated_timeChanging(Nullable<global::System.DateTimeOffset> value);
        partial void Onremote_updated_timeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_request_reference
        {
            get
            {
                return _card_request_reference;
            }
            set
            {
                Oncard_request_referenceChanging(value);
                ReportPropertyChanging("card_request_reference");
                _card_request_reference = StructuralObject.SetValidValue(value, true, "card_request_reference");
                ReportPropertyChanged("card_request_reference");
                Oncard_request_referenceChanged();
            }
        }
        private global::System.String _card_request_reference;
        partial void Oncard_request_referenceChanging(global::System.String value);
        partial void Oncard_request_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, true, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, true, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, true, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, true, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="RemoteTokenIssuerResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class RemoteTokenIssuerResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RemoteTokenIssuerResult object.
        /// </summary>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="issuer_status_id">Initial value of the issuer_status_id property.</param>
        public static RemoteTokenIssuerResult CreateRemoteTokenIssuerResult(global::System.Int32 issuer_id, global::System.String issuer_code, global::System.String issuer_name, global::System.Int32 issuer_status_id)
        {
            RemoteTokenIssuerResult remoteTokenIssuerResult = new RemoteTokenIssuerResult();
            remoteTokenIssuerResult.issuer_id = issuer_id;
            remoteTokenIssuerResult.issuer_code = issuer_code;
            remoteTokenIssuerResult.issuer_name = issuer_name;
            remoteTokenIssuerResult.issuer_status_id = issuer_status_id;
            return remoteTokenIssuerResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_status_id
        {
            get
            {
                return _issuer_status_id;
            }
            set
            {
                Onissuer_status_idChanging(value);
                ReportPropertyChanging("issuer_status_id");
                _issuer_status_id = StructuralObject.SetValidValue(value, "issuer_status_id");
                ReportPropertyChanged("issuer_status_id");
                Onissuer_status_idChanged();
            }
        }
        private global::System.Int32 _issuer_status_id;
        partial void Onissuer_status_idChanging(global::System.Int32 value);
        partial void Onissuer_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> remote_token_expiry
        {
            get
            {
                return _remote_token_expiry;
            }
            set
            {
                Onremote_token_expiryChanging(value);
                ReportPropertyChanging("remote_token_expiry");
                _remote_token_expiry = StructuralObject.SetValidValue(value, "remote_token_expiry");
                ReportPropertyChanged("remote_token_expiry");
                Onremote_token_expiryChanged();
            }
        }
        private Nullable<global::System.DateTime> _remote_token_expiry;
        partial void Onremote_token_expiryChanging(Nullable<global::System.DateTime> value);
        partial void Onremote_token_expiryChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="report_fields_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class report_fields_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new report_fields_Result object.
        /// </summary>
        /// <param name="reportfieldid">Initial value of the reportfieldid property.</param>
        /// <param name="language_text">Initial value of the language_text property.</param>
        public static report_fields_Result Createreport_fields_Result(global::System.Int32 reportfieldid, global::System.String language_text)
        {
            report_fields_Result report_fields_Result = new report_fields_Result();
            report_fields_Result.reportfieldid = reportfieldid;
            report_fields_Result.language_text = language_text;
            return report_fields_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 reportfieldid
        {
            get
            {
                return _reportfieldid;
            }
            set
            {
                OnreportfieldidChanging(value);
                ReportPropertyChanging("reportfieldid");
                _reportfieldid = StructuralObject.SetValidValue(value, "reportfieldid");
                ReportPropertyChanged("reportfieldid");
                OnreportfieldidChanged();
            }
        }
        private global::System.Int32 _reportfieldid;
        partial void OnreportfieldidChanging(global::System.Int32 value);
        partial void OnreportfieldidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String language_text
        {
            get
            {
                return _language_text;
            }
            set
            {
                Onlanguage_textChanging(value);
                ReportPropertyChanging("language_text");
                _language_text = StructuralObject.SetValidValue(value, false, "language_text");
                ReportPropertyChanged("language_text");
                Onlanguage_textChanged();
            }
        }
        private global::System.String _language_text;
        partial void Onlanguage_textChanging(global::System.String value);
        partial void Onlanguage_textChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="RequestDetailResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class RequestDetailResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequestDetailResult object.
        /// </summary>
        /// <param name="request_id">Initial value of the request_id property.</param>
        /// <param name="card_priority_name">Initial value of the card_priority_name property.</param>
        /// <param name="card_issue_method_id">Initial value of the card_issue_method_id property.</param>
        /// <param name="card_issue_method_name">Initial value of the card_issue_method_name property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="instant_card_issue_YN">Initial value of the instant_card_issue_YN property.</param>
        /// <param name="maker_checker_YN">Initial value of the maker_checker_YN property.</param>
        /// <param name="enable_instant_pin_YN_issuer">Initial value of the enable_instant_pin_YN_issuer property.</param>
        /// <param name="back_office_pin_auth_YN">Initial value of the back_office_pin_auth_YN property.</param>
        /// <param name="authorise_pin_issue_YN">Initial value of the authorise_pin_issue_YN property.</param>
        /// <param name="card_ref_preference">Initial value of the card_ref_preference property.</param>
        /// <param name="country_id">Initial value of the country_id property.</param>
        /// <param name="country_code">Initial value of the country_code property.</param>
        /// <param name="country_name">Initial value of the country_name property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        /// <param name="product_name">Initial value of the product_name property.</param>
        /// <param name="product_code">Initial value of the product_code property.</param>
        /// <param name="product_bin_code">Initial value of the product_bin_code property.</param>
        /// <param name="font_name">Initial value of the font_name property.</param>
        /// <param name="enable_instant_pin_YN">Initial value of the enable_instant_pin_YN property.</param>
        /// <param name="pin_mailer_printing_YN">Initial value of the pin_mailer_printing_YN property.</param>
        /// <param name="pin_mailer_reprint_YN">Initial value of the pin_mailer_reprint_YN property.</param>
        /// <param name="charge_fee_to_issuing_branch_YN">Initial value of the charge_fee_to_issuing_branch_YN property.</param>
        /// <param name="print_issue_card_YN">Initial value of the print_issue_card_YN property.</param>
        /// <param name="allow_manual_uploaded_YN">Initial value of the allow_manual_uploaded_YN property.</param>
        /// <param name="allow_reupload_YN">Initial value of the allow_reupload_YN property.</param>
        /// <param name="delivery_branch_code">Initial value of the delivery_branch_code property.</param>
        /// <param name="delivery_branch_name">Initial value of the delivery_branch_name property.</param>
        public static RequestDetailResult CreateRequestDetailResult(global::System.Int64 request_id, global::System.String card_priority_name, global::System.Int32 card_issue_method_id, global::System.String card_issue_method_name, global::System.String issuer_name, global::System.String issuer_code, global::System.Int32 issuer_id, global::System.Boolean instant_card_issue_YN, global::System.Boolean maker_checker_YN, global::System.Boolean enable_instant_pin_YN_issuer, global::System.Boolean back_office_pin_auth_YN, global::System.Boolean authorise_pin_issue_YN, global::System.Boolean card_ref_preference, global::System.Int32 country_id, global::System.String country_code, global::System.String country_name, global::System.String branch_name, global::System.String branch_code, global::System.Int32 branch_id, global::System.String product_name, global::System.String product_code, global::System.String product_bin_code, global::System.String font_name, global::System.Boolean enable_instant_pin_YN, global::System.Boolean pin_mailer_printing_YN, global::System.Boolean pin_mailer_reprint_YN, global::System.Boolean charge_fee_to_issuing_branch_YN, global::System.Boolean print_issue_card_YN, global::System.Boolean allow_manual_uploaded_YN, global::System.Boolean allow_reupload_YN, global::System.String delivery_branch_code, global::System.String delivery_branch_name)
        {
            RequestDetailResult requestDetailResult = new RequestDetailResult();
            requestDetailResult.request_id = request_id;
            requestDetailResult.card_priority_name = card_priority_name;
            requestDetailResult.card_issue_method_id = card_issue_method_id;
            requestDetailResult.card_issue_method_name = card_issue_method_name;
            requestDetailResult.issuer_name = issuer_name;
            requestDetailResult.issuer_code = issuer_code;
            requestDetailResult.issuer_id = issuer_id;
            requestDetailResult.instant_card_issue_YN = instant_card_issue_YN;
            requestDetailResult.maker_checker_YN = maker_checker_YN;
            requestDetailResult.enable_instant_pin_YN_issuer = enable_instant_pin_YN_issuer;
            requestDetailResult.back_office_pin_auth_YN = back_office_pin_auth_YN;
            requestDetailResult.authorise_pin_issue_YN = authorise_pin_issue_YN;
            requestDetailResult.card_ref_preference = card_ref_preference;
            requestDetailResult.country_id = country_id;
            requestDetailResult.country_code = country_code;
            requestDetailResult.country_name = country_name;
            requestDetailResult.branch_name = branch_name;
            requestDetailResult.branch_code = branch_code;
            requestDetailResult.branch_id = branch_id;
            requestDetailResult.product_name = product_name;
            requestDetailResult.product_code = product_code;
            requestDetailResult.product_bin_code = product_bin_code;
            requestDetailResult.font_name = font_name;
            requestDetailResult.enable_instant_pin_YN = enable_instant_pin_YN;
            requestDetailResult.pin_mailer_printing_YN = pin_mailer_printing_YN;
            requestDetailResult.pin_mailer_reprint_YN = pin_mailer_reprint_YN;
            requestDetailResult.charge_fee_to_issuing_branch_YN = charge_fee_to_issuing_branch_YN;
            requestDetailResult.print_issue_card_YN = print_issue_card_YN;
            requestDetailResult.allow_manual_uploaded_YN = allow_manual_uploaded_YN;
            requestDetailResult.allow_reupload_YN = allow_reupload_YN;
            requestDetailResult.delivery_branch_code = delivery_branch_code;
            requestDetailResult.delivery_branch_name = delivery_branch_name;
            return requestDetailResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 request_id
        {
            get
            {
                return _request_id;
            }
            set
            {
                Onrequest_idChanging(value);
                ReportPropertyChanging("request_id");
                _request_id = StructuralObject.SetValidValue(value, "request_id");
                ReportPropertyChanged("request_id");
                Onrequest_idChanged();
            }
        }
        private global::System.Int64 _request_id;
        partial void Onrequest_idChanging(global::System.Int64 value);
        partial void Onrequest_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String request_reference
        {
            get
            {
                return _request_reference;
            }
            set
            {
                Onrequest_referenceChanging(value);
                ReportPropertyChanging("request_reference");
                _request_reference = StructuralObject.SetValidValue(value, true, "request_reference");
                ReportPropertyChanged("request_reference");
                Onrequest_referenceChanged();
            }
        }
        private global::System.String _request_reference;
        partial void Onrequest_referenceChanging(global::System.String value);
        partial void Onrequest_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> card_priority_id
        {
            get
            {
                return _card_priority_id;
            }
            set
            {
                Oncard_priority_idChanging(value);
                ReportPropertyChanging("card_priority_id");
                _card_priority_id = StructuralObject.SetValidValue(value, "card_priority_id");
                ReportPropertyChanged("card_priority_id");
                Oncard_priority_idChanged();
            }
        }
        private Nullable<global::System.Int32> _card_priority_id;
        partial void Oncard_priority_idChanging(Nullable<global::System.Int32> value);
        partial void Oncard_priority_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String card_priority_name
        {
            get
            {
                return _card_priority_name;
            }
            set
            {
                Oncard_priority_nameChanging(value);
                ReportPropertyChanging("card_priority_name");
                _card_priority_name = StructuralObject.SetValidValue(value, false, "card_priority_name");
                ReportPropertyChanged("card_priority_name");
                Oncard_priority_nameChanged();
            }
        }
        private global::System.String _card_priority_name;
        partial void Oncard_priority_nameChanging(global::System.String value);
        partial void Oncard_priority_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_method_id
        {
            get
            {
                return _card_issue_method_id;
            }
            set
            {
                Oncard_issue_method_idChanging(value);
                ReportPropertyChanging("card_issue_method_id");
                _card_issue_method_id = StructuralObject.SetValidValue(value, "card_issue_method_id");
                ReportPropertyChanged("card_issue_method_id");
                Oncard_issue_method_idChanged();
            }
        }
        private global::System.Int32 _card_issue_method_id;
        partial void Oncard_issue_method_idChanging(global::System.Int32 value);
        partial void Oncard_issue_method_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String card_issue_method_name
        {
            get
            {
                return _card_issue_method_name;
            }
            set
            {
                Oncard_issue_method_nameChanging(value);
                ReportPropertyChanging("card_issue_method_name");
                _card_issue_method_name = StructuralObject.SetValidValue(value, false, "card_issue_method_name");
                ReportPropertyChanged("card_issue_method_name");
                Oncard_issue_method_nameChanged();
            }
        }
        private global::System.String _card_issue_method_name;
        partial void Oncard_issue_method_nameChanging(global::System.String value);
        partial void Oncard_issue_method_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> pin_selected
        {
            get
            {
                return _pin_selected;
            }
            set
            {
                Onpin_selectedChanging(value);
                ReportPropertyChanging("pin_selected");
                _pin_selected = StructuralObject.SetValidValue(value, "pin_selected");
                ReportPropertyChanged("pin_selected");
                Onpin_selectedChanged();
            }
        }
        private Nullable<global::System.Boolean> _pin_selected;
        partial void Onpin_selectedChanging(Nullable<global::System.Boolean> value);
        partial void Onpin_selectedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private Nullable<global::System.Int32> _product_id;
        partial void Onproduct_idChanging(Nullable<global::System.Int32> value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean instant_card_issue_YN
        {
            get
            {
                return _instant_card_issue_YN;
            }
            set
            {
                Oninstant_card_issue_YNChanging(value);
                ReportPropertyChanging("instant_card_issue_YN");
                _instant_card_issue_YN = StructuralObject.SetValidValue(value, "instant_card_issue_YN");
                ReportPropertyChanged("instant_card_issue_YN");
                Oninstant_card_issue_YNChanged();
            }
        }
        private global::System.Boolean _instant_card_issue_YN;
        partial void Oninstant_card_issue_YNChanging(global::System.Boolean value);
        partial void Oninstant_card_issue_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean maker_checker_YN
        {
            get
            {
                return _maker_checker_YN;
            }
            set
            {
                Onmaker_checker_YNChanging(value);
                ReportPropertyChanging("maker_checker_YN");
                _maker_checker_YN = StructuralObject.SetValidValue(value, "maker_checker_YN");
                ReportPropertyChanged("maker_checker_YN");
                Onmaker_checker_YNChanged();
            }
        }
        private global::System.Boolean _maker_checker_YN;
        partial void Onmaker_checker_YNChanging(global::System.Boolean value);
        partial void Onmaker_checker_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean enable_instant_pin_YN_issuer
        {
            get
            {
                return _enable_instant_pin_YN_issuer;
            }
            set
            {
                Onenable_instant_pin_YN_issuerChanging(value);
                ReportPropertyChanging("enable_instant_pin_YN_issuer");
                _enable_instant_pin_YN_issuer = StructuralObject.SetValidValue(value, "enable_instant_pin_YN_issuer");
                ReportPropertyChanged("enable_instant_pin_YN_issuer");
                Onenable_instant_pin_YN_issuerChanged();
            }
        }
        private global::System.Boolean _enable_instant_pin_YN_issuer;
        partial void Onenable_instant_pin_YN_issuerChanging(global::System.Boolean value);
        partial void Onenable_instant_pin_YN_issuerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean back_office_pin_auth_YN
        {
            get
            {
                return _back_office_pin_auth_YN;
            }
            set
            {
                Onback_office_pin_auth_YNChanging(value);
                ReportPropertyChanging("back_office_pin_auth_YN");
                _back_office_pin_auth_YN = StructuralObject.SetValidValue(value, "back_office_pin_auth_YN");
                ReportPropertyChanged("back_office_pin_auth_YN");
                Onback_office_pin_auth_YNChanged();
            }
        }
        private global::System.Boolean _back_office_pin_auth_YN;
        partial void Onback_office_pin_auth_YNChanging(global::System.Boolean value);
        partial void Onback_office_pin_auth_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean authorise_pin_issue_YN
        {
            get
            {
                return _authorise_pin_issue_YN;
            }
            set
            {
                Onauthorise_pin_issue_YNChanging(value);
                ReportPropertyChanging("authorise_pin_issue_YN");
                _authorise_pin_issue_YN = StructuralObject.SetValidValue(value, "authorise_pin_issue_YN");
                ReportPropertyChanged("authorise_pin_issue_YN");
                Onauthorise_pin_issue_YNChanged();
            }
        }
        private global::System.Boolean _authorise_pin_issue_YN;
        partial void Onauthorise_pin_issue_YNChanging(global::System.Boolean value);
        partial void Onauthorise_pin_issue_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean card_ref_preference
        {
            get
            {
                return _card_ref_preference;
            }
            set
            {
                Oncard_ref_preferenceChanging(value);
                ReportPropertyChanging("card_ref_preference");
                _card_ref_preference = StructuralObject.SetValidValue(value, "card_ref_preference");
                ReportPropertyChanged("card_ref_preference");
                Oncard_ref_preferenceChanged();
            }
        }
        private global::System.Boolean _card_ref_preference;
        partial void Oncard_ref_preferenceChanging(global::System.Boolean value);
        partial void Oncard_ref_preferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> language_id
        {
            get
            {
                return _language_id;
            }
            set
            {
                Onlanguage_idChanging(value);
                ReportPropertyChanging("language_id");
                _language_id = StructuralObject.SetValidValue(value, "language_id");
                ReportPropertyChanged("language_id");
                Onlanguage_idChanged();
            }
        }
        private Nullable<global::System.Int32> _language_id;
        partial void Onlanguage_idChanging(Nullable<global::System.Int32> value);
        partial void Onlanguage_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 country_id
        {
            get
            {
                return _country_id;
            }
            set
            {
                Oncountry_idChanging(value);
                ReportPropertyChanging("country_id");
                _country_id = StructuralObject.SetValidValue(value, "country_id");
                ReportPropertyChanged("country_id");
                Oncountry_idChanged();
            }
        }
        private global::System.Int32 _country_id;
        partial void Oncountry_idChanging(global::System.Int32 value);
        partial void Oncountry_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String country_code
        {
            get
            {
                return _country_code;
            }
            set
            {
                Oncountry_codeChanging(value);
                ReportPropertyChanging("country_code");
                _country_code = StructuralObject.SetValidValue(value, false, "country_code");
                ReportPropertyChanged("country_code");
                Oncountry_codeChanged();
            }
        }
        private global::System.String _country_code;
        partial void Oncountry_codeChanging(global::System.String value);
        partial void Oncountry_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String country_name
        {
            get
            {
                return _country_name;
            }
            set
            {
                Oncountry_nameChanging(value);
                ReportPropertyChanging("country_name");
                _country_name = StructuralObject.SetValidValue(value, false, "country_name");
                ReportPropertyChanged("country_name");
                Oncountry_nameChanged();
            }
        }
        private global::System.String _country_name;
        partial void Oncountry_nameChanging(global::System.String value);
        partial void Oncountry_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String country_capital_city
        {
            get
            {
                return _country_capital_city;
            }
            set
            {
                Oncountry_capital_cityChanging(value);
                ReportPropertyChanging("country_capital_city");
                _country_capital_city = StructuralObject.SetValidValue(value, true, "country_capital_city");
                ReportPropertyChanged("country_capital_city");
                Oncountry_capital_cityChanged();
            }
        }
        private global::System.String _country_capital_city;
        partial void Oncountry_capital_cityChanging(global::System.String value);
        partial void Oncountry_capital_cityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int32 _branch_id;
        partial void Onbranch_idChanging(global::System.Int32 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_name
        {
            get
            {
                return _product_name;
            }
            set
            {
                Onproduct_nameChanging(value);
                ReportPropertyChanging("product_name");
                _product_name = StructuralObject.SetValidValue(value, false, "product_name");
                ReportPropertyChanged("product_name");
                Onproduct_nameChanged();
            }
        }
        private global::System.String _product_name;
        partial void Onproduct_nameChanging(global::System.String value);
        partial void Onproduct_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_code
        {
            get
            {
                return _product_code;
            }
            set
            {
                Onproduct_codeChanging(value);
                ReportPropertyChanging("product_code");
                _product_code = StructuralObject.SetValidValue(value, false, "product_code");
                ReportPropertyChanged("product_code");
                Onproduct_codeChanged();
            }
        }
        private global::System.String _product_code;
        partial void Onproduct_codeChanging(global::System.String value);
        partial void Onproduct_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_bin_code
        {
            get
            {
                return _product_bin_code;
            }
            set
            {
                Onproduct_bin_codeChanging(value);
                ReportPropertyChanging("product_bin_code");
                _product_bin_code = StructuralObject.SetValidValue(value, false, "product_bin_code");
                ReportPropertyChanged("product_bin_code");
                Onproduct_bin_codeChanged();
            }
        }
        private global::System.String _product_bin_code;
        partial void Onproduct_bin_codeChanging(global::System.String value);
        partial void Onproduct_bin_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String sub_product_code
        {
            get
            {
                return _sub_product_code;
            }
            set
            {
                Onsub_product_codeChanging(value);
                ReportPropertyChanging("sub_product_code");
                _sub_product_code = StructuralObject.SetValidValue(value, true, "sub_product_code");
                ReportPropertyChanged("sub_product_code");
                Onsub_product_codeChanged();
            }
        }
        private global::System.String _sub_product_code;
        partial void Onsub_product_codeChanging(global::System.String value);
        partial void Onsub_product_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Name_on_card_font_size
        {
            get
            {
                return _Name_on_card_font_size;
            }
            set
            {
                OnName_on_card_font_sizeChanging(value);
                ReportPropertyChanging("Name_on_card_font_size");
                _Name_on_card_font_size = StructuralObject.SetValidValue(value, "Name_on_card_font_size");
                ReportPropertyChanged("Name_on_card_font_size");
                OnName_on_card_font_sizeChanged();
            }
        }
        private Nullable<global::System.Int32> _Name_on_card_font_size;
        partial void OnName_on_card_font_sizeChanging(Nullable<global::System.Int32> value);
        partial void OnName_on_card_font_sizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> name_on_card_left
        {
            get
            {
                return _name_on_card_left;
            }
            set
            {
                Onname_on_card_leftChanging(value);
                ReportPropertyChanging("name_on_card_left");
                _name_on_card_left = StructuralObject.SetValidValue(value, "name_on_card_left");
                ReportPropertyChanged("name_on_card_left");
                Onname_on_card_leftChanged();
            }
        }
        private Nullable<global::System.Decimal> _name_on_card_left;
        partial void Onname_on_card_leftChanging(Nullable<global::System.Decimal> value);
        partial void Onname_on_card_leftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> name_on_card_top
        {
            get
            {
                return _name_on_card_top;
            }
            set
            {
                Onname_on_card_topChanging(value);
                ReportPropertyChanging("name_on_card_top");
                _name_on_card_top = StructuralObject.SetValidValue(value, "name_on_card_top");
                ReportPropertyChanged("name_on_card_top");
                Onname_on_card_topChanged();
            }
        }
        private Nullable<global::System.Decimal> _name_on_card_top;
        partial void Onname_on_card_topChanging(Nullable<global::System.Decimal> value);
        partial void Onname_on_card_topChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String font_name
        {
            get
            {
                return _font_name;
            }
            set
            {
                Onfont_nameChanging(value);
                ReportPropertyChanging("font_name");
                _font_name = StructuralObject.SetValidValue(value, false, "font_name");
                ReportPropertyChanged("font_name");
                Onfont_nameChanged();
            }
        }
        private global::System.String _font_name;
        partial void Onfont_nameChanging(global::System.String value);
        partial void Onfont_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean enable_instant_pin_YN
        {
            get
            {
                return _enable_instant_pin_YN;
            }
            set
            {
                Onenable_instant_pin_YNChanging(value);
                ReportPropertyChanging("enable_instant_pin_YN");
                _enable_instant_pin_YN = StructuralObject.SetValidValue(value, "enable_instant_pin_YN");
                ReportPropertyChanged("enable_instant_pin_YN");
                Onenable_instant_pin_YNChanged();
            }
        }
        private global::System.Boolean _enable_instant_pin_YN;
        partial void Onenable_instant_pin_YNChanging(global::System.Boolean value);
        partial void Onenable_instant_pin_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean pin_mailer_printing_YN
        {
            get
            {
                return _pin_mailer_printing_YN;
            }
            set
            {
                Onpin_mailer_printing_YNChanging(value);
                ReportPropertyChanging("pin_mailer_printing_YN");
                _pin_mailer_printing_YN = StructuralObject.SetValidValue(value, "pin_mailer_printing_YN");
                ReportPropertyChanged("pin_mailer_printing_YN");
                Onpin_mailer_printing_YNChanged();
            }
        }
        private global::System.Boolean _pin_mailer_printing_YN;
        partial void Onpin_mailer_printing_YNChanging(global::System.Boolean value);
        partial void Onpin_mailer_printing_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean pin_mailer_reprint_YN
        {
            get
            {
                return _pin_mailer_reprint_YN;
            }
            set
            {
                Onpin_mailer_reprint_YNChanging(value);
                ReportPropertyChanging("pin_mailer_reprint_YN");
                _pin_mailer_reprint_YN = StructuralObject.SetValidValue(value, "pin_mailer_reprint_YN");
                ReportPropertyChanged("pin_mailer_reprint_YN");
                Onpin_mailer_reprint_YNChanged();
            }
        }
        private global::System.Boolean _pin_mailer_reprint_YN;
        partial void Onpin_mailer_reprint_YNChanging(global::System.Boolean value);
        partial void Onpin_mailer_reprint_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean charge_fee_to_issuing_branch_YN
        {
            get
            {
                return _charge_fee_to_issuing_branch_YN;
            }
            set
            {
                Oncharge_fee_to_issuing_branch_YNChanging(value);
                ReportPropertyChanging("charge_fee_to_issuing_branch_YN");
                _charge_fee_to_issuing_branch_YN = StructuralObject.SetValidValue(value, "charge_fee_to_issuing_branch_YN");
                ReportPropertyChanged("charge_fee_to_issuing_branch_YN");
                Oncharge_fee_to_issuing_branch_YNChanged();
            }
        }
        private global::System.Boolean _charge_fee_to_issuing_branch_YN;
        partial void Oncharge_fee_to_issuing_branch_YNChanging(global::System.Boolean value);
        partial void Oncharge_fee_to_issuing_branch_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean print_issue_card_YN
        {
            get
            {
                return _print_issue_card_YN;
            }
            set
            {
                Onprint_issue_card_YNChanging(value);
                ReportPropertyChanging("print_issue_card_YN");
                _print_issue_card_YN = StructuralObject.SetValidValue(value, "print_issue_card_YN");
                ReportPropertyChanged("print_issue_card_YN");
                Onprint_issue_card_YNChanged();
            }
        }
        private global::System.Boolean _print_issue_card_YN;
        partial void Onprint_issue_card_YNChanging(global::System.Boolean value);
        partial void Onprint_issue_card_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean allow_manual_uploaded_YN
        {
            get
            {
                return _allow_manual_uploaded_YN;
            }
            set
            {
                Onallow_manual_uploaded_YNChanging(value);
                ReportPropertyChanging("allow_manual_uploaded_YN");
                _allow_manual_uploaded_YN = StructuralObject.SetValidValue(value, "allow_manual_uploaded_YN");
                ReportPropertyChanged("allow_manual_uploaded_YN");
                Onallow_manual_uploaded_YNChanged();
            }
        }
        private global::System.Boolean _allow_manual_uploaded_YN;
        partial void Onallow_manual_uploaded_YNChanging(global::System.Boolean value);
        partial void Onallow_manual_uploaded_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean allow_reupload_YN
        {
            get
            {
                return _allow_reupload_YN;
            }
            set
            {
                Onallow_reupload_YNChanging(value);
                ReportPropertyChanging("allow_reupload_YN");
                _allow_reupload_YN = StructuralObject.SetValidValue(value, "allow_reupload_YN");
                ReportPropertyChanged("allow_reupload_YN");
                Onallow_reupload_YNChanged();
            }
        }
        private global::System.Boolean _allow_reupload_YN;
        partial void Onallow_reupload_YNChanging(global::System.Boolean value);
        partial void Onallow_reupload_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> hybrid_request_statuses_id
        {
            get
            {
                return _hybrid_request_statuses_id;
            }
            set
            {
                Onhybrid_request_statuses_idChanging(value);
                ReportPropertyChanging("hybrid_request_statuses_id");
                _hybrid_request_statuses_id = StructuralObject.SetValidValue(value, "hybrid_request_statuses_id");
                ReportPropertyChanged("hybrid_request_statuses_id");
                Onhybrid_request_statuses_idChanged();
            }
        }
        private Nullable<global::System.Int32> _hybrid_request_statuses_id;
        partial void Onhybrid_request_statuses_idChanging(Nullable<global::System.Int32> value);
        partial void Onhybrid_request_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> status_date
        {
            get
            {
                return _status_date;
            }
            set
            {
                Onstatus_dateChanging(value);
                ReportPropertyChanging("status_date");
                _status_date = StructuralObject.SetValidValue(value, "status_date");
                ReportPropertyChanged("status_date");
                Onstatus_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _status_date;
        partial void Onstatus_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onstatus_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branch_card_statuses_name
        {
            get
            {
                return _branch_card_statuses_name;
            }
            set
            {
                Onbranch_card_statuses_nameChanging(value);
                ReportPropertyChanging("branch_card_statuses_name");
                _branch_card_statuses_name = StructuralObject.SetValidValue(value, true, "branch_card_statuses_name");
                ReportPropertyChanged("branch_card_statuses_name");
                Onbranch_card_statuses_nameChanged();
            }
        }
        private global::System.String _branch_card_statuses_name;
        partial void Onbranch_card_statuses_nameChanging(global::System.String value);
        partial void Onbranch_card_statuses_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> domicile_branch_id
        {
            get
            {
                return _domicile_branch_id;
            }
            set
            {
                Ondomicile_branch_idChanging(value);
                ReportPropertyChanging("domicile_branch_id");
                _domicile_branch_id = StructuralObject.SetValidValue(value, "domicile_branch_id");
                ReportPropertyChanged("domicile_branch_id");
                Ondomicile_branch_idChanged();
            }
        }
        private Nullable<global::System.Int32> _domicile_branch_id;
        partial void Ondomicile_branch_idChanging(Nullable<global::System.Int32> value);
        partial void Ondomicile_branch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String domicile_branch_code
        {
            get
            {
                return _domicile_branch_code;
            }
            set
            {
                Ondomicile_branch_codeChanging(value);
                ReportPropertyChanging("domicile_branch_code");
                _domicile_branch_code = StructuralObject.SetValidValue(value, true, "domicile_branch_code");
                ReportPropertyChanged("domicile_branch_code");
                Ondomicile_branch_codeChanged();
            }
        }
        private global::System.String _domicile_branch_code;
        partial void Ondomicile_branch_codeChanging(global::System.String value);
        partial void Ondomicile_branch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String domicile_branch_name
        {
            get
            {
                return _domicile_branch_name;
            }
            set
            {
                Ondomicile_branch_nameChanging(value);
                ReportPropertyChanging("domicile_branch_name");
                _domicile_branch_name = StructuralObject.SetValidValue(value, true, "domicile_branch_name");
                ReportPropertyChanged("domicile_branch_name");
                Ondomicile_branch_nameChanged();
            }
        }
        private global::System.String _domicile_branch_name;
        partial void Ondomicile_branch_nameChanging(global::System.String value);
        partial void Ondomicile_branch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String delivery_branch_code
        {
            get
            {
                return _delivery_branch_code;
            }
            set
            {
                Ondelivery_branch_codeChanging(value);
                ReportPropertyChanging("delivery_branch_code");
                _delivery_branch_code = StructuralObject.SetValidValue(value, false, "delivery_branch_code");
                ReportPropertyChanged("delivery_branch_code");
                Ondelivery_branch_codeChanged();
            }
        }
        private global::System.String _delivery_branch_code;
        partial void Ondelivery_branch_codeChanging(global::System.String value);
        partial void Ondelivery_branch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String delivery_branch_name
        {
            get
            {
                return _delivery_branch_name;
            }
            set
            {
                Ondelivery_branch_nameChanging(value);
                ReportPropertyChanging("delivery_branch_name");
                _delivery_branch_name = StructuralObject.SetValidValue(value, false, "delivery_branch_name");
                ReportPropertyChanged("delivery_branch_name");
                Ondelivery_branch_nameChanged();
            }
        }
        private global::System.String _delivery_branch_name;
        partial void Ondelivery_branch_nameChanging(global::System.String value);
        partial void Ondelivery_branch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> customer_account_id
        {
            get
            {
                return _customer_account_id;
            }
            set
            {
                Oncustomer_account_idChanging(value);
                ReportPropertyChanging("customer_account_id");
                _customer_account_id = StructuralObject.SetValidValue(value, "customer_account_id");
                ReportPropertyChanged("customer_account_id");
                Oncustomer_account_idChanged();
            }
        }
        private Nullable<global::System.Int64> _customer_account_id;
        partial void Oncustomer_account_idChanging(Nullable<global::System.Int64> value);
        partial void Oncustomer_account_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_account_number
        {
            get
            {
                return _customer_account_number;
            }
            set
            {
                Oncustomer_account_numberChanging(value);
                ReportPropertyChanging("customer_account_number");
                _customer_account_number = StructuralObject.SetValidValue(value, true, "customer_account_number");
                ReportPropertyChanged("customer_account_number");
                Oncustomer_account_numberChanged();
            }
        }
        private global::System.String _customer_account_number;
        partial void Oncustomer_account_numberChanging(global::System.String value);
        partial void Oncustomer_account_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> card_issue_reason_id
        {
            get
            {
                return _card_issue_reason_id;
            }
            set
            {
                Oncard_issue_reason_idChanging(value);
                ReportPropertyChanging("card_issue_reason_id");
                _card_issue_reason_id = StructuralObject.SetValidValue(value, "card_issue_reason_id");
                ReportPropertyChanged("card_issue_reason_id");
                Oncard_issue_reason_idChanged();
            }
        }
        private Nullable<global::System.Int32> _card_issue_reason_id;
        partial void Oncard_issue_reason_idChanging(Nullable<global::System.Int32> value);
        partial void Oncard_issue_reason_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> account_type_id
        {
            get
            {
                return _account_type_id;
            }
            set
            {
                Onaccount_type_idChanging(value);
                ReportPropertyChanging("account_type_id");
                _account_type_id = StructuralObject.SetValidValue(value, "account_type_id");
                ReportPropertyChanged("account_type_id");
                Onaccount_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _account_type_id;
        partial void Onaccount_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onaccount_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_account_type_name
        {
            get
            {
                return _customer_account_type_name;
            }
            set
            {
                Oncustomer_account_type_nameChanging(value);
                ReportPropertyChanging("customer_account_type_name");
                _customer_account_type_name = StructuralObject.SetValidValue(value, true, "customer_account_type_name");
                ReportPropertyChanged("customer_account_type_name");
                Oncustomer_account_type_nameChanged();
            }
        }
        private global::System.String _customer_account_type_name;
        partial void Oncustomer_account_type_nameChanging(global::System.String value);
        partial void Oncustomer_account_type_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_first_name
        {
            get
            {
                return _customer_first_name;
            }
            set
            {
                Oncustomer_first_nameChanging(value);
                ReportPropertyChanging("customer_first_name");
                _customer_first_name = StructuralObject.SetValidValue(value, true, "customer_first_name");
                ReportPropertyChanged("customer_first_name");
                Oncustomer_first_nameChanged();
            }
        }
        private global::System.String _customer_first_name;
        partial void Oncustomer_first_nameChanging(global::System.String value);
        partial void Oncustomer_first_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_middle_name
        {
            get
            {
                return _customer_middle_name;
            }
            set
            {
                Oncustomer_middle_nameChanging(value);
                ReportPropertyChanging("customer_middle_name");
                _customer_middle_name = StructuralObject.SetValidValue(value, true, "customer_middle_name");
                ReportPropertyChanged("customer_middle_name");
                Oncustomer_middle_nameChanged();
            }
        }
        private global::System.String _customer_middle_name;
        partial void Oncustomer_middle_nameChanging(global::System.String value);
        partial void Oncustomer_middle_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_last_name
        {
            get
            {
                return _customer_last_name;
            }
            set
            {
                Oncustomer_last_nameChanging(value);
                ReportPropertyChanging("customer_last_name");
                _customer_last_name = StructuralObject.SetValidValue(value, true, "customer_last_name");
                ReportPropertyChanged("customer_last_name");
                Oncustomer_last_nameChanged();
            }
        }
        private global::System.String _customer_last_name;
        partial void Oncustomer_last_nameChanging(global::System.String value);
        partial void Oncustomer_last_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> customer_title_id
        {
            get
            {
                return _customer_title_id;
            }
            set
            {
                Oncustomer_title_idChanging(value);
                ReportPropertyChanging("customer_title_id");
                _customer_title_id = StructuralObject.SetValidValue(value, "customer_title_id");
                ReportPropertyChanged("customer_title_id");
                Oncustomer_title_idChanged();
            }
        }
        private Nullable<global::System.Int32> _customer_title_id;
        partial void Oncustomer_title_idChanging(Nullable<global::System.Int32> value);
        partial void Oncustomer_title_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_title_name
        {
            get
            {
                return _customer_title_name;
            }
            set
            {
                Oncustomer_title_nameChanging(value);
                ReportPropertyChanging("customer_title_name");
                _customer_title_name = StructuralObject.SetValidValue(value, true, "customer_title_name");
                ReportPropertyChanged("customer_title_name");
                Oncustomer_title_nameChanged();
            }
        }
        private global::System.String _customer_title_name;
        partial void Oncustomer_title_nameChanging(global::System.String value);
        partial void Oncustomer_title_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date_issued
        {
            get
            {
                return _date_issued;
            }
            set
            {
                Ondate_issuedChanging(value);
                ReportPropertyChanging("date_issued");
                _date_issued = StructuralObject.SetValidValue(value, "date_issued");
                ReportPropertyChanged("date_issued");
                Ondate_issuedChanged();
            }
        }
        private Nullable<global::System.DateTime> _date_issued;
        partial void Ondate_issuedChanging(Nullable<global::System.DateTime> value);
        partial void Ondate_issuedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name_on_card
        {
            get
            {
                return _name_on_card;
            }
            set
            {
                Onname_on_cardChanging(value);
                ReportPropertyChanging("name_on_card");
                _name_on_card = StructuralObject.SetValidValue(value, true, "name_on_card");
                ReportPropertyChanged("name_on_card");
                Onname_on_cardChanged();
            }
        }
        private global::System.String _name_on_card;
        partial void Onname_on_cardChanging(global::System.String value);
        partial void Onname_on_cardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value, "user_id");
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private Nullable<global::System.Int64> _user_id;
        partial void Onuser_idChanging(Nullable<global::System.Int64> value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_first_name
        {
            get
            {
                return _user_first_name;
            }
            set
            {
                Onuser_first_nameChanging(value);
                ReportPropertyChanging("user_first_name");
                _user_first_name = StructuralObject.SetValidValue(value, true, "user_first_name");
                ReportPropertyChanged("user_first_name");
                Onuser_first_nameChanged();
            }
        }
        private global::System.String _user_first_name;
        partial void Onuser_first_nameChanging(global::System.String value);
        partial void Onuser_first_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_last_name
        {
            get
            {
                return _user_last_name;
            }
            set
            {
                Onuser_last_nameChanging(value);
                ReportPropertyChanging("user_last_name");
                _user_last_name = StructuralObject.SetValidValue(value, true, "user_last_name");
                ReportPropertyChanged("user_last_name");
                Onuser_last_nameChanged();
            }
        }
        private global::System.String _user_last_name;
        partial void Onuser_last_nameChanging(global::System.String value);
        partial void Onuser_last_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cms_id
        {
            get
            {
                return _cms_id;
            }
            set
            {
                Oncms_idChanging(value);
                ReportPropertyChanging("cms_id");
                _cms_id = StructuralObject.SetValidValue(value, true, "cms_id");
                ReportPropertyChanged("cms_id");
                Oncms_idChanged();
            }
        }
        private global::System.String _cms_id;
        partial void Oncms_idChanging(global::System.String value);
        partial void Oncms_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                OnCustomerIdChanging(value);
                ReportPropertyChanging("CustomerId");
                _CustomerId = StructuralObject.SetValidValue(value, true, "CustomerId");
                ReportPropertyChanged("CustomerId");
                OnCustomerIdChanged();
            }
        }
        private global::System.String _CustomerId;
        partial void OnCustomerIdChanging(global::System.String value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> currency_id
        {
            get
            {
                return _currency_id;
            }
            set
            {
                Oncurrency_idChanging(value);
                ReportPropertyChanging("currency_id");
                _currency_id = StructuralObject.SetValidValue(value, "currency_id");
                ReportPropertyChanged("currency_id");
                Oncurrency_idChanged();
            }
        }
        private Nullable<global::System.Int32> _currency_id;
        partial void Oncurrency_idChanging(Nullable<global::System.Int32> value);
        partial void Oncurrency_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String currency_code
        {
            get
            {
                return _currency_code;
            }
            set
            {
                Oncurrency_codeChanging(value);
                ReportPropertyChanging("currency_code");
                _currency_code = StructuralObject.SetValidValue(value, true, "currency_code");
                ReportPropertyChanged("currency_code");
                Oncurrency_codeChanged();
            }
        }
        private global::System.String _currency_code;
        partial void Oncurrency_codeChanging(global::System.String value);
        partial void Oncurrency_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String iso_4217_numeric_code
        {
            get
            {
                return _iso_4217_numeric_code;
            }
            set
            {
                Oniso_4217_numeric_codeChanging(value);
                ReportPropertyChanging("iso_4217_numeric_code");
                _iso_4217_numeric_code = StructuralObject.SetValidValue(value, true, "iso_4217_numeric_code");
                ReportPropertyChanged("iso_4217_numeric_code");
                Oniso_4217_numeric_codeChanged();
            }
        }
        private global::System.String _iso_4217_numeric_code;
        partial void Oniso_4217_numeric_codeChanging(global::System.String value);
        partial void Oniso_4217_numeric_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> is_base_currency
        {
            get
            {
                return _is_base_currency;
            }
            set
            {
                Onis_base_currencyChanging(value);
                ReportPropertyChanging("is_base_currency");
                _is_base_currency = StructuralObject.SetValidValue(value, "is_base_currency");
                ReportPropertyChanged("is_base_currency");
                Onis_base_currencyChanged();
            }
        }
        private Nullable<global::System.Boolean> _is_base_currency;
        partial void Onis_base_currencyChanging(Nullable<global::System.Boolean> value);
        partial void Onis_base_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usr_field_name_1
        {
            get
            {
                return _usr_field_name_1;
            }
            set
            {
                Onusr_field_name_1Changing(value);
                ReportPropertyChanging("usr_field_name_1");
                _usr_field_name_1 = StructuralObject.SetValidValue(value, true, "usr_field_name_1");
                ReportPropertyChanged("usr_field_name_1");
                Onusr_field_name_1Changed();
            }
        }
        private global::System.String _usr_field_name_1;
        partial void Onusr_field_name_1Changing(global::System.String value);
        partial void Onusr_field_name_1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usr_field_val_1
        {
            get
            {
                return _usr_field_val_1;
            }
            set
            {
                Onusr_field_val_1Changing(value);
                ReportPropertyChanging("usr_field_val_1");
                _usr_field_val_1 = StructuralObject.SetValidValue(value, true, "usr_field_val_1");
                ReportPropertyChanged("usr_field_val_1");
                Onusr_field_val_1Changed();
            }
        }
        private global::System.String _usr_field_val_1;
        partial void Onusr_field_val_1Changing(global::System.String value);
        partial void Onusr_field_val_1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usr_field_name_2
        {
            get
            {
                return _usr_field_name_2;
            }
            set
            {
                Onusr_field_name_2Changing(value);
                ReportPropertyChanging("usr_field_name_2");
                _usr_field_name_2 = StructuralObject.SetValidValue(value, true, "usr_field_name_2");
                ReportPropertyChanged("usr_field_name_2");
                Onusr_field_name_2Changed();
            }
        }
        private global::System.String _usr_field_name_2;
        partial void Onusr_field_name_2Changing(global::System.String value);
        partial void Onusr_field_name_2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usr_field_val_2
        {
            get
            {
                return _usr_field_val_2;
            }
            set
            {
                Onusr_field_val_2Changing(value);
                ReportPropertyChanging("usr_field_val_2");
                _usr_field_val_2 = StructuralObject.SetValidValue(value, true, "usr_field_val_2");
                ReportPropertyChanged("usr_field_val_2");
                Onusr_field_val_2Changed();
            }
        }
        private global::System.String _usr_field_val_2;
        partial void Onusr_field_val_2Changing(global::System.String value);
        partial void Onusr_field_val_2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> resident_id
        {
            get
            {
                return _resident_id;
            }
            set
            {
                Onresident_idChanging(value);
                ReportPropertyChanging("resident_id");
                _resident_id = StructuralObject.SetValidValue(value, "resident_id");
                ReportPropertyChanged("resident_id");
                Onresident_idChanged();
            }
        }
        private Nullable<global::System.Int32> _resident_id;
        partial void Onresident_idChanging(Nullable<global::System.Int32> value);
        partial void Onresident_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_residency_name
        {
            get
            {
                return _customer_residency_name;
            }
            set
            {
                Oncustomer_residency_nameChanging(value);
                ReportPropertyChanging("customer_residency_name");
                _customer_residency_name = StructuralObject.SetValidValue(value, true, "customer_residency_name");
                ReportPropertyChanged("customer_residency_name");
                Oncustomer_residency_nameChanged();
            }
        }
        private global::System.String _customer_residency_name;
        partial void Oncustomer_residency_nameChanging(global::System.String value);
        partial void Oncustomer_residency_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> customer_type_id
        {
            get
            {
                return _customer_type_id;
            }
            set
            {
                Oncustomer_type_idChanging(value);
                ReportPropertyChanging("customer_type_id");
                _customer_type_id = StructuralObject.SetValidValue(value, "customer_type_id");
                ReportPropertyChanged("customer_type_id");
                Oncustomer_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _customer_type_id;
        partial void Oncustomer_type_idChanging(Nullable<global::System.Int32> value);
        partial void Oncustomer_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_type_name
        {
            get
            {
                return _customer_type_name;
            }
            set
            {
                Oncustomer_type_nameChanging(value);
                ReportPropertyChanging("customer_type_name");
                _customer_type_name = StructuralObject.SetValidValue(value, true, "customer_type_name");
                ReportPropertyChanged("customer_type_name");
                Oncustomer_type_nameChanged();
            }
        }
        private global::System.String _customer_type_name;
        partial void Oncustomer_type_nameChanging(global::System.String value);
        partial void Oncustomer_type_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contract_number
        {
            get
            {
                return _contract_number;
            }
            set
            {
                Oncontract_numberChanging(value);
                ReportPropertyChanging("contract_number");
                _contract_number = StructuralObject.SetValidValue(value, true, "contract_number");
                ReportPropertyChanged("contract_number");
                Oncontract_numberChanged();
            }
        }
        private global::System.String _contract_number;
        partial void Oncontract_numberChanging(global::System.String value);
        partial void Oncontract_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String id_number
        {
            get
            {
                return _id_number;
            }
            set
            {
                Onid_numberChanging(value);
                ReportPropertyChanging("id_number");
                _id_number = StructuralObject.SetValidValue(value, true, "id_number");
                ReportPropertyChanged("id_number");
                Onid_numberChanged();
            }
        }
        private global::System.String _id_number;
        partial void Onid_numberChanging(global::System.String value);
        partial void Onid_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contact_number
        {
            get
            {
                return _contact_number;
            }
            set
            {
                Oncontact_numberChanging(value);
                ReportPropertyChanging("contact_number");
                _contact_number = StructuralObject.SetValidValue(value, true, "contact_number");
                ReportPropertyChanged("contact_number");
                Oncontact_numberChanged();
            }
        }
        private global::System.String _contact_number;
        partial void Oncontact_numberChanging(global::System.String value);
        partial void Oncontact_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_account_no
        {
            get
            {
                return _fee_revenue_account_no;
            }
            set
            {
                Onfee_revenue_account_noChanging(value);
                ReportPropertyChanging("fee_revenue_account_no");
                _fee_revenue_account_no = StructuralObject.SetValidValue(value, true, "fee_revenue_account_no");
                ReportPropertyChanged("fee_revenue_account_no");
                Onfee_revenue_account_noChanged();
            }
        }
        private global::System.String _fee_revenue_account_no;
        partial void Onfee_revenue_account_noChanging(global::System.String value);
        partial void Onfee_revenue_account_noChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> fee_revenue_account_type_id
        {
            get
            {
                return _fee_revenue_account_type_id;
            }
            set
            {
                Onfee_revenue_account_type_idChanging(value);
                ReportPropertyChanging("fee_revenue_account_type_id");
                _fee_revenue_account_type_id = StructuralObject.SetValidValue(value, "fee_revenue_account_type_id");
                ReportPropertyChanged("fee_revenue_account_type_id");
                Onfee_revenue_account_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _fee_revenue_account_type_id;
        partial void Onfee_revenue_account_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onfee_revenue_account_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_branch_code
        {
            get
            {
                return _fee_revenue_branch_code;
            }
            set
            {
                Onfee_revenue_branch_codeChanging(value);
                ReportPropertyChanging("fee_revenue_branch_code");
                _fee_revenue_branch_code = StructuralObject.SetValidValue(value, true, "fee_revenue_branch_code");
                ReportPropertyChanged("fee_revenue_branch_code");
                Onfee_revenue_branch_codeChanged();
            }
        }
        private global::System.String _fee_revenue_branch_code;
        partial void Onfee_revenue_branch_codeChanging(global::System.String value);
        partial void Onfee_revenue_branch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_narration_en
        {
            get
            {
                return _fee_revenue_narration_en;
            }
            set
            {
                Onfee_revenue_narration_enChanging(value);
                ReportPropertyChanging("fee_revenue_narration_en");
                _fee_revenue_narration_en = StructuralObject.SetValidValue(value, true, "fee_revenue_narration_en");
                ReportPropertyChanged("fee_revenue_narration_en");
                Onfee_revenue_narration_enChanged();
            }
        }
        private global::System.String _fee_revenue_narration_en;
        partial void Onfee_revenue_narration_enChanging(global::System.String value);
        partial void Onfee_revenue_narration_enChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_narration_fr
        {
            get
            {
                return _fee_revenue_narration_fr;
            }
            set
            {
                Onfee_revenue_narration_frChanging(value);
                ReportPropertyChanging("fee_revenue_narration_fr");
                _fee_revenue_narration_fr = StructuralObject.SetValidValue(value, true, "fee_revenue_narration_fr");
                ReportPropertyChanged("fee_revenue_narration_fr");
                Onfee_revenue_narration_frChanged();
            }
        }
        private global::System.String _fee_revenue_narration_fr;
        partial void Onfee_revenue_narration_frChanging(global::System.String value);
        partial void Onfee_revenue_narration_frChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_narration_pt
        {
            get
            {
                return _fee_revenue_narration_pt;
            }
            set
            {
                Onfee_revenue_narration_ptChanging(value);
                ReportPropertyChanging("fee_revenue_narration_pt");
                _fee_revenue_narration_pt = StructuralObject.SetValidValue(value, true, "fee_revenue_narration_pt");
                ReportPropertyChanged("fee_revenue_narration_pt");
                Onfee_revenue_narration_ptChanged();
            }
        }
        private global::System.String _fee_revenue_narration_pt;
        partial void Onfee_revenue_narration_ptChanging(global::System.String value);
        partial void Onfee_revenue_narration_ptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_narration_es
        {
            get
            {
                return _fee_revenue_narration_es;
            }
            set
            {
                Onfee_revenue_narration_esChanging(value);
                ReportPropertyChanging("fee_revenue_narration_es");
                _fee_revenue_narration_es = StructuralObject.SetValidValue(value, true, "fee_revenue_narration_es");
                ReportPropertyChanged("fee_revenue_narration_es");
                Onfee_revenue_narration_esChanged();
            }
        }
        private global::System.String _fee_revenue_narration_es;
        partial void Onfee_revenue_narration_esChanging(global::System.String value);
        partial void Onfee_revenue_narration_esChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String vat_account_no
        {
            get
            {
                return _vat_account_no;
            }
            set
            {
                Onvat_account_noChanging(value);
                ReportPropertyChanging("vat_account_no");
                _vat_account_no = StructuralObject.SetValidValue(value, true, "vat_account_no");
                ReportPropertyChanged("vat_account_no");
                Onvat_account_noChanged();
            }
        }
        private global::System.String _vat_account_no;
        partial void Onvat_account_noChanging(global::System.String value);
        partial void Onvat_account_noChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> vat_account_type_id
        {
            get
            {
                return _vat_account_type_id;
            }
            set
            {
                Onvat_account_type_idChanging(value);
                ReportPropertyChanging("vat_account_type_id");
                _vat_account_type_id = StructuralObject.SetValidValue(value, "vat_account_type_id");
                ReportPropertyChanged("vat_account_type_id");
                Onvat_account_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _vat_account_type_id;
        partial void Onvat_account_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onvat_account_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String vat_account_branch_code
        {
            get
            {
                return _vat_account_branch_code;
            }
            set
            {
                Onvat_account_branch_codeChanging(value);
                ReportPropertyChanging("vat_account_branch_code");
                _vat_account_branch_code = StructuralObject.SetValidValue(value, true, "vat_account_branch_code");
                ReportPropertyChanged("vat_account_branch_code");
                Onvat_account_branch_codeChanged();
            }
        }
        private global::System.String _vat_account_branch_code;
        partial void Onvat_account_branch_codeChanging(global::System.String value);
        partial void Onvat_account_branch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String vat_narration_en
        {
            get
            {
                return _vat_narration_en;
            }
            set
            {
                Onvat_narration_enChanging(value);
                ReportPropertyChanging("vat_narration_en");
                _vat_narration_en = StructuralObject.SetValidValue(value, true, "vat_narration_en");
                ReportPropertyChanged("vat_narration_en");
                Onvat_narration_enChanged();
            }
        }
        private global::System.String _vat_narration_en;
        partial void Onvat_narration_enChanging(global::System.String value);
        partial void Onvat_narration_enChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String vat_narration_fr
        {
            get
            {
                return _vat_narration_fr;
            }
            set
            {
                Onvat_narration_frChanging(value);
                ReportPropertyChanging("vat_narration_fr");
                _vat_narration_fr = StructuralObject.SetValidValue(value, true, "vat_narration_fr");
                ReportPropertyChanged("vat_narration_fr");
                Onvat_narration_frChanged();
            }
        }
        private global::System.String _vat_narration_fr;
        partial void Onvat_narration_frChanging(global::System.String value);
        partial void Onvat_narration_frChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String vat_narration_pt
        {
            get
            {
                return _vat_narration_pt;
            }
            set
            {
                Onvat_narration_ptChanging(value);
                ReportPropertyChanging("vat_narration_pt");
                _vat_narration_pt = StructuralObject.SetValidValue(value, true, "vat_narration_pt");
                ReportPropertyChanged("vat_narration_pt");
                Onvat_narration_ptChanged();
            }
        }
        private global::System.String _vat_narration_pt;
        partial void Onvat_narration_ptChanging(global::System.String value);
        partial void Onvat_narration_ptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String vat_narration_es
        {
            get
            {
                return _vat_narration_es;
            }
            set
            {
                Onvat_narration_esChanging(value);
                ReportPropertyChanging("vat_narration_es");
                _vat_narration_es = StructuralObject.SetValidValue(value, true, "vat_narration_es");
                ReportPropertyChanged("vat_narration_es");
                Onvat_narration_esChanged();
            }
        }
        private global::System.String _vat_narration_es;
        partial void Onvat_narration_esChanging(global::System.String value);
        partial void Onvat_narration_esChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> fee_charged
        {
            get
            {
                return _fee_charged;
            }
            set
            {
                Onfee_chargedChanging(value);
                ReportPropertyChanging("fee_charged");
                _fee_charged = StructuralObject.SetValidValue(value, "fee_charged");
                ReportPropertyChanged("fee_charged");
                Onfee_chargedChanged();
            }
        }
        private Nullable<global::System.Decimal> _fee_charged;
        partial void Onfee_chargedChanging(Nullable<global::System.Decimal> value);
        partial void Onfee_chargedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> vat
        {
            get
            {
                return _vat;
            }
            set
            {
                OnvatChanging(value);
                ReportPropertyChanging("vat");
                _vat = StructuralObject.SetValidValue(value, "vat");
                ReportPropertyChanged("vat");
                OnvatChanged();
            }
        }
        private Nullable<global::System.Decimal> _vat;
        partial void OnvatChanging(Nullable<global::System.Decimal> value);
        partial void OnvatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> vat_charged
        {
            get
            {
                return _vat_charged;
            }
            set
            {
                Onvat_chargedChanging(value);
                ReportPropertyChanging("vat_charged");
                _vat_charged = StructuralObject.SetValidValue(value, "vat_charged");
                ReportPropertyChanged("vat_charged");
                Onvat_chargedChanged();
            }
        }
        private Nullable<global::System.Decimal> _vat_charged;
        partial void Onvat_chargedChanging(Nullable<global::System.Decimal> value);
        partial void Onvat_chargedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> total_charged
        {
            get
            {
                return _total_charged;
            }
            set
            {
                Ontotal_chargedChanging(value);
                ReportPropertyChanging("total_charged");
                _total_charged = StructuralObject.SetValidValue(value, "total_charged");
                ReportPropertyChanged("total_charged");
                Ontotal_chargedChanged();
            }
        }
        private Nullable<global::System.Decimal> _total_charged;
        partial void Ontotal_chargedChanging(Nullable<global::System.Decimal> value);
        partial void Ontotal_chargedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> fee_waiver_YN
        {
            get
            {
                return _fee_waiver_YN;
            }
            set
            {
                Onfee_waiver_YNChanging(value);
                ReportPropertyChanging("fee_waiver_YN");
                _fee_waiver_YN = StructuralObject.SetValidValue(value, "fee_waiver_YN");
                ReportPropertyChanged("fee_waiver_YN");
                Onfee_waiver_YNChanged();
            }
        }
        private Nullable<global::System.Boolean> _fee_waiver_YN;
        partial void Onfee_waiver_YNChanging(Nullable<global::System.Boolean> value);
        partial void Onfee_waiver_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> fee_editable_YN
        {
            get
            {
                return _fee_editable_YN;
            }
            set
            {
                Onfee_editable_YNChanging(value);
                ReportPropertyChanging("fee_editable_YN");
                _fee_editable_YN = StructuralObject.SetValidValue(value, "fee_editable_YN");
                ReportPropertyChanged("fee_editable_YN");
                Onfee_editable_YNChanged();
            }
        }
        private Nullable<global::System.Boolean> _fee_editable_YN;
        partial void Onfee_editable_YNChanging(Nullable<global::System.Boolean> value);
        partial void Onfee_editable_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> fee_overridden_YN
        {
            get
            {
                return _fee_overridden_YN;
            }
            set
            {
                Onfee_overridden_YNChanging(value);
                ReportPropertyChanging("fee_overridden_YN");
                _fee_overridden_YN = StructuralObject.SetValidValue(value, "fee_overridden_YN");
                ReportPropertyChanged("fee_overridden_YN");
                Onfee_overridden_YNChanged();
            }
        }
        private Nullable<global::System.Boolean> _fee_overridden_YN;
        partial void Onfee_overridden_YNChanging(Nullable<global::System.Boolean> value);
        partial void Onfee_overridden_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_reference_number
        {
            get
            {
                return _fee_reference_number;
            }
            set
            {
                Onfee_reference_numberChanging(value);
                ReportPropertyChanging("fee_reference_number");
                _fee_reference_number = StructuralObject.SetValidValue(value, true, "fee_reference_number");
                ReportPropertyChanged("fee_reference_number");
                Onfee_reference_numberChanged();
            }
        }
        private global::System.String _fee_reference_number;
        partial void Onfee_reference_numberChanging(global::System.String value);
        partial void Onfee_reference_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_reversal_ref_number
        {
            get
            {
                return _fee_reversal_ref_number;
            }
            set
            {
                Onfee_reversal_ref_numberChanging(value);
                ReportPropertyChanging("fee_reversal_ref_number");
                _fee_reversal_ref_number = StructuralObject.SetValidValue(value, true, "fee_reversal_ref_number");
                ReportPropertyChanged("fee_reversal_ref_number");
                Onfee_reversal_ref_numberChanged();
            }
        }
        private global::System.String _fee_reversal_ref_number;
        partial void Onfee_reversal_ref_numberChanging(global::System.String value);
        partial void Onfee_reversal_ref_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="RequestReferenceHistoryResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class RequestReferenceHistoryResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequestReferenceHistoryResult object.
        /// </summary>
        /// <param name="print_batch_id">Initial value of the print_batch_id property.</param>
        public static RequestReferenceHistoryResult CreateRequestReferenceHistoryResult(global::System.Int64 print_batch_id)
        {
            RequestReferenceHistoryResult requestReferenceHistoryResult = new RequestReferenceHistoryResult();
            requestReferenceHistoryResult.print_batch_id = print_batch_id;
            return requestReferenceHistoryResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 print_batch_id
        {
            get
            {
                return _print_batch_id;
            }
            set
            {
                Onprint_batch_idChanging(value);
                ReportPropertyChanging("print_batch_id");
                _print_batch_id = StructuralObject.SetValidValue(value, "print_batch_id");
                ReportPropertyChanged("print_batch_id");
                Onprint_batch_idChanged();
            }
        }
        private global::System.Int64 _print_batch_id;
        partial void Onprint_batch_idChanging(global::System.Int64 value);
        partial void Onprint_batch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String print_batch_reference
        {
            get
            {
                return _print_batch_reference;
            }
            set
            {
                Onprint_batch_referenceChanging(value);
                ReportPropertyChanging("print_batch_reference");
                _print_batch_reference = StructuralObject.SetValidValue(value, true, "print_batch_reference");
                ReportPropertyChanged("print_batch_reference");
                Onprint_batch_referenceChanged();
            }
        }
        private global::System.String _print_batch_reference;
        partial void Onprint_batch_referenceChanging(global::System.String value);
        partial void Onprint_batch_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date_created
        {
            get
            {
                return _date_created;
            }
            set
            {
                Ondate_createdChanging(value);
                ReportPropertyChanging("date_created");
                _date_created = StructuralObject.SetValidValue(value, "date_created");
                ReportPropertyChanged("date_created");
                Ondate_createdChanged();
            }
        }
        private Nullable<global::System.DateTime> _date_created;
        partial void Ondate_createdChanging(Nullable<global::System.DateTime> value);
        partial void Ondate_createdChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="RequestStatusHistoryResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class RequestStatusHistoryResult : ComplexObject
    {
        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String hybrid_request_statuses
        {
            get
            {
                return _hybrid_request_statuses;
            }
            set
            {
                Onhybrid_request_statusesChanging(value);
                ReportPropertyChanging("hybrid_request_statuses");
                _hybrid_request_statuses = StructuralObject.SetValidValue(value, true, "hybrid_request_statuses");
                ReportPropertyChanged("hybrid_request_statuses");
                Onhybrid_request_statusesChanged();
            }
        }
        private global::System.String _hybrid_request_statuses;
        partial void Onhybrid_request_statusesChanging(global::System.String value);
        partial void Onhybrid_request_statusesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> status_date
        {
            get
            {
                return _status_date;
            }
            set
            {
                Onstatus_dateChanging(value);
                ReportPropertyChanging("status_date");
                _status_date = StructuralObject.SetValidValue(value, "status_date");
                ReportPropertyChanged("status_date");
                Onstatus_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _status_date;
        partial void Onstatus_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onstatus_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="ResponseMessageResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ResponseMessageResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResponseMessageResult object.
        /// </summary>
        /// <param name="english_response">Initial value of the english_response property.</param>
        /// <param name="french_response">Initial value of the french_response property.</param>
        /// <param name="portuguese_response">Initial value of the portuguese_response property.</param>
        /// <param name="spanish_response">Initial value of the spanish_response property.</param>
        public static ResponseMessageResult CreateResponseMessageResult(global::System.String english_response, global::System.String french_response, global::System.String portuguese_response, global::System.String spanish_response)
        {
            ResponseMessageResult responseMessageResult = new ResponseMessageResult();
            responseMessageResult.english_response = english_response;
            responseMessageResult.french_response = french_response;
            responseMessageResult.portuguese_response = portuguese_response;
            responseMessageResult.spanish_response = spanish_response;
            return responseMessageResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String english_response
        {
            get
            {
                return _english_response;
            }
            set
            {
                Onenglish_responseChanging(value);
                ReportPropertyChanging("english_response");
                _english_response = StructuralObject.SetValidValue(value, false, "english_response");
                ReportPropertyChanged("english_response");
                Onenglish_responseChanged();
            }
        }
        private global::System.String _english_response;
        partial void Onenglish_responseChanging(global::System.String value);
        partial void Onenglish_responseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String french_response
        {
            get
            {
                return _french_response;
            }
            set
            {
                Onfrench_responseChanging(value);
                ReportPropertyChanging("french_response");
                _french_response = StructuralObject.SetValidValue(value, false, "french_response");
                ReportPropertyChanged("french_response");
                Onfrench_responseChanged();
            }
        }
        private global::System.String _french_response;
        partial void Onfrench_responseChanging(global::System.String value);
        partial void Onfrench_responseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String portuguese_response
        {
            get
            {
                return _portuguese_response;
            }
            set
            {
                Onportuguese_responseChanging(value);
                ReportPropertyChanging("portuguese_response");
                _portuguese_response = StructuralObject.SetValidValue(value, false, "portuguese_response");
                ReportPropertyChanged("portuguese_response");
                Onportuguese_responseChanged();
            }
        }
        private global::System.String _portuguese_response;
        partial void Onportuguese_responseChanging(global::System.String value);
        partial void Onportuguese_responseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String spanish_response
        {
            get
            {
                return _spanish_response;
            }
            set
            {
                Onspanish_responseChanging(value);
                ReportPropertyChanging("spanish_response");
                _spanish_response = StructuralObject.SetValidValue(value, false, "spanish_response");
                ReportPropertyChanged("spanish_response");
                Onspanish_responseChanged();
            }
        }
        private global::System.String _spanish_response;
        partial void Onspanish_responseChanging(global::System.String value);
        partial void Onspanish_responseChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="RolesIssuerResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class RolesIssuerResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RolesIssuerResult object.
        /// </summary>
        /// <param name="user_role_id">Initial value of the user_role_id property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="maker_checker_YN">Initial value of the maker_checker_YN property.</param>
        /// <param name="allow_multiple_login">Initial value of the allow_multiple_login property.</param>
        /// <param name="can_read">Initial value of the can_read property.</param>
        /// <param name="can_create">Initial value of the can_create property.</param>
        /// <param name="can_update">Initial value of the can_update property.</param>
        /// <param name="classic_card_issue_YN">Initial value of the classic_card_issue_YN property.</param>
        /// <param name="instant_card_issue_YN">Initial value of the instant_card_issue_YN property.</param>
        /// <param name="card_ref_preference">Initial value of the card_ref_preference property.</param>
        /// <param name="enable_instant_pin_YN">Initial value of the enable_instant_pin_YN property.</param>
        /// <param name="authorise_pin_issue_YN">Initial value of the authorise_pin_issue_YN property.</param>
        /// <param name="authorise_pin_reissue_YN">Initial value of the authorise_pin_reissue_YN property.</param>
        /// <param name="back_office_pin_auth_YN">Initial value of the back_office_pin_auth_YN property.</param>
        public static RolesIssuerResult CreateRolesIssuerResult(global::System.Int32 user_role_id, global::System.Int32 issuer_id, global::System.String issuer_name, global::System.String issuer_code, global::System.Boolean maker_checker_YN, global::System.Boolean allow_multiple_login, global::System.Boolean can_read, global::System.Boolean can_create, global::System.Boolean can_update, global::System.Boolean classic_card_issue_YN, global::System.Boolean instant_card_issue_YN, global::System.Boolean card_ref_preference, global::System.Boolean enable_instant_pin_YN, global::System.Boolean authorise_pin_issue_YN, global::System.Boolean authorise_pin_reissue_YN, global::System.Boolean back_office_pin_auth_YN)
        {
            RolesIssuerResult rolesIssuerResult = new RolesIssuerResult();
            rolesIssuerResult.user_role_id = user_role_id;
            rolesIssuerResult.issuer_id = issuer_id;
            rolesIssuerResult.issuer_name = issuer_name;
            rolesIssuerResult.issuer_code = issuer_code;
            rolesIssuerResult.maker_checker_YN = maker_checker_YN;
            rolesIssuerResult.allow_multiple_login = allow_multiple_login;
            rolesIssuerResult.can_read = can_read;
            rolesIssuerResult.can_create = can_create;
            rolesIssuerResult.can_update = can_update;
            rolesIssuerResult.classic_card_issue_YN = classic_card_issue_YN;
            rolesIssuerResult.instant_card_issue_YN = instant_card_issue_YN;
            rolesIssuerResult.card_ref_preference = card_ref_preference;
            rolesIssuerResult.enable_instant_pin_YN = enable_instant_pin_YN;
            rolesIssuerResult.authorise_pin_issue_YN = authorise_pin_issue_YN;
            rolesIssuerResult.authorise_pin_reissue_YN = authorise_pin_reissue_YN;
            rolesIssuerResult.back_office_pin_auth_YN = back_office_pin_auth_YN;
            return rolesIssuerResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_role_id
        {
            get
            {
                return _user_role_id;
            }
            set
            {
                Onuser_role_idChanging(value);
                ReportPropertyChanging("user_role_id");
                _user_role_id = StructuralObject.SetValidValue(value, "user_role_id");
                ReportPropertyChanged("user_role_id");
                Onuser_role_idChanged();
            }
        }
        private global::System.Int32 _user_role_id;
        partial void Onuser_role_idChanging(global::System.Int32 value);
        partial void Onuser_role_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean maker_checker_YN
        {
            get
            {
                return _maker_checker_YN;
            }
            set
            {
                Onmaker_checker_YNChanging(value);
                ReportPropertyChanging("maker_checker_YN");
                _maker_checker_YN = StructuralObject.SetValidValue(value, "maker_checker_YN");
                ReportPropertyChanged("maker_checker_YN");
                Onmaker_checker_YNChanged();
            }
        }
        private global::System.Boolean _maker_checker_YN;
        partial void Onmaker_checker_YNChanging(global::System.Boolean value);
        partial void Onmaker_checker_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> account_validation_YN
        {
            get
            {
                return _account_validation_YN;
            }
            set
            {
                Onaccount_validation_YNChanging(value);
                ReportPropertyChanging("account_validation_YN");
                _account_validation_YN = StructuralObject.SetValidValue(value, "account_validation_YN");
                ReportPropertyChanged("account_validation_YN");
                Onaccount_validation_YNChanged();
            }
        }
        private Nullable<global::System.Boolean> _account_validation_YN;
        partial void Onaccount_validation_YNChanging(Nullable<global::System.Boolean> value);
        partial void Onaccount_validation_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> auto_create_dist_batch
        {
            get
            {
                return _auto_create_dist_batch;
            }
            set
            {
                Onauto_create_dist_batchChanging(value);
                ReportPropertyChanging("auto_create_dist_batch");
                _auto_create_dist_batch = StructuralObject.SetValidValue(value, "auto_create_dist_batch");
                ReportPropertyChanged("auto_create_dist_batch");
                Onauto_create_dist_batchChanged();
            }
        }
        private Nullable<global::System.Boolean> _auto_create_dist_batch;
        partial void Onauto_create_dist_batchChanging(Nullable<global::System.Boolean> value);
        partial void Onauto_create_dist_batchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean allow_multiple_login
        {
            get
            {
                return _allow_multiple_login;
            }
            set
            {
                Onallow_multiple_loginChanging(value);
                ReportPropertyChanging("allow_multiple_login");
                _allow_multiple_login = StructuralObject.SetValidValue(value, "allow_multiple_login");
                ReportPropertyChanged("allow_multiple_login");
                Onallow_multiple_loginChanged();
            }
        }
        private global::System.Boolean _allow_multiple_login;
        partial void Onallow_multiple_loginChanging(global::System.Boolean value);
        partial void Onallow_multiple_loginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean can_read
        {
            get
            {
                return _can_read;
            }
            set
            {
                Oncan_readChanging(value);
                ReportPropertyChanging("can_read");
                _can_read = StructuralObject.SetValidValue(value, "can_read");
                ReportPropertyChanged("can_read");
                Oncan_readChanged();
            }
        }
        private global::System.Boolean _can_read;
        partial void Oncan_readChanging(global::System.Boolean value);
        partial void Oncan_readChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean can_create
        {
            get
            {
                return _can_create;
            }
            set
            {
                Oncan_createChanging(value);
                ReportPropertyChanging("can_create");
                _can_create = StructuralObject.SetValidValue(value, "can_create");
                ReportPropertyChanged("can_create");
                Oncan_createChanged();
            }
        }
        private global::System.Boolean _can_create;
        partial void Oncan_createChanging(global::System.Boolean value);
        partial void Oncan_createChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean can_update
        {
            get
            {
                return _can_update;
            }
            set
            {
                Oncan_updateChanging(value);
                ReportPropertyChanging("can_update");
                _can_update = StructuralObject.SetValidValue(value, "can_update");
                ReportPropertyChanged("can_update");
                Oncan_updateChanged();
            }
        }
        private global::System.Boolean _can_update;
        partial void Oncan_updateChanging(global::System.Boolean value);
        partial void Oncan_updateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean classic_card_issue_YN
        {
            get
            {
                return _classic_card_issue_YN;
            }
            set
            {
                Onclassic_card_issue_YNChanging(value);
                ReportPropertyChanging("classic_card_issue_YN");
                _classic_card_issue_YN = StructuralObject.SetValidValue(value, "classic_card_issue_YN");
                ReportPropertyChanged("classic_card_issue_YN");
                Onclassic_card_issue_YNChanged();
            }
        }
        private global::System.Boolean _classic_card_issue_YN;
        partial void Onclassic_card_issue_YNChanging(global::System.Boolean value);
        partial void Onclassic_card_issue_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean instant_card_issue_YN
        {
            get
            {
                return _instant_card_issue_YN;
            }
            set
            {
                Oninstant_card_issue_YNChanging(value);
                ReportPropertyChanging("instant_card_issue_YN");
                _instant_card_issue_YN = StructuralObject.SetValidValue(value, "instant_card_issue_YN");
                ReportPropertyChanged("instant_card_issue_YN");
                Oninstant_card_issue_YNChanged();
            }
        }
        private global::System.Boolean _instant_card_issue_YN;
        partial void Oninstant_card_issue_YNChanging(global::System.Boolean value);
        partial void Oninstant_card_issue_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean card_ref_preference
        {
            get
            {
                return _card_ref_preference;
            }
            set
            {
                Oncard_ref_preferenceChanging(value);
                ReportPropertyChanging("card_ref_preference");
                _card_ref_preference = StructuralObject.SetValidValue(value, "card_ref_preference");
                ReportPropertyChanged("card_ref_preference");
                Oncard_ref_preferenceChanged();
            }
        }
        private global::System.Boolean _card_ref_preference;
        partial void Oncard_ref_preferenceChanging(global::System.Boolean value);
        partial void Oncard_ref_preferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean enable_instant_pin_YN
        {
            get
            {
                return _enable_instant_pin_YN;
            }
            set
            {
                Onenable_instant_pin_YNChanging(value);
                ReportPropertyChanging("enable_instant_pin_YN");
                _enable_instant_pin_YN = StructuralObject.SetValidValue(value, "enable_instant_pin_YN");
                ReportPropertyChanged("enable_instant_pin_YN");
                Onenable_instant_pin_YNChanged();
            }
        }
        private global::System.Boolean _enable_instant_pin_YN;
        partial void Onenable_instant_pin_YNChanging(global::System.Boolean value);
        partial void Onenable_instant_pin_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean authorise_pin_issue_YN
        {
            get
            {
                return _authorise_pin_issue_YN;
            }
            set
            {
                Onauthorise_pin_issue_YNChanging(value);
                ReportPropertyChanging("authorise_pin_issue_YN");
                _authorise_pin_issue_YN = StructuralObject.SetValidValue(value, "authorise_pin_issue_YN");
                ReportPropertyChanged("authorise_pin_issue_YN");
                Onauthorise_pin_issue_YNChanged();
            }
        }
        private global::System.Boolean _authorise_pin_issue_YN;
        partial void Onauthorise_pin_issue_YNChanging(global::System.Boolean value);
        partial void Onauthorise_pin_issue_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean authorise_pin_reissue_YN
        {
            get
            {
                return _authorise_pin_reissue_YN;
            }
            set
            {
                Onauthorise_pin_reissue_YNChanging(value);
                ReportPropertyChanging("authorise_pin_reissue_YN");
                _authorise_pin_reissue_YN = StructuralObject.SetValidValue(value, "authorise_pin_reissue_YN");
                ReportPropertyChanged("authorise_pin_reissue_YN");
                Onauthorise_pin_reissue_YNChanged();
            }
        }
        private global::System.Boolean _authorise_pin_reissue_YN;
        partial void Onauthorise_pin_reissue_YNChanging(global::System.Boolean value);
        partial void Onauthorise_pin_reissue_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> pin_mailer_printing_YN
        {
            get
            {
                return _pin_mailer_printing_YN;
            }
            set
            {
                Onpin_mailer_printing_YNChanging(value);
                ReportPropertyChanging("pin_mailer_printing_YN");
                _pin_mailer_printing_YN = StructuralObject.SetValidValue(value, "pin_mailer_printing_YN");
                ReportPropertyChanged("pin_mailer_printing_YN");
                Onpin_mailer_printing_YNChanged();
            }
        }
        private Nullable<global::System.Boolean> _pin_mailer_printing_YN;
        partial void Onpin_mailer_printing_YNChanging(Nullable<global::System.Boolean> value);
        partial void Onpin_mailer_printing_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> pin_mailer_reprint_YN
        {
            get
            {
                return _pin_mailer_reprint_YN;
            }
            set
            {
                Onpin_mailer_reprint_YNChanging(value);
                ReportPropertyChanging("pin_mailer_reprint_YN");
                _pin_mailer_reprint_YN = StructuralObject.SetValidValue(value, "pin_mailer_reprint_YN");
                ReportPropertyChanged("pin_mailer_reprint_YN");
                Onpin_mailer_reprint_YNChanged();
            }
        }
        private Nullable<global::System.Boolean> _pin_mailer_reprint_YN;
        partial void Onpin_mailer_reprint_YNChanging(Nullable<global::System.Boolean> value);
        partial void Onpin_mailer_reprint_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> EnableCardFileLoader_YN
        {
            get
            {
                return _EnableCardFileLoader_YN;
            }
            set
            {
                OnEnableCardFileLoader_YNChanging(value);
                ReportPropertyChanging("EnableCardFileLoader_YN");
                _EnableCardFileLoader_YN = StructuralObject.SetValidValue(value, "EnableCardFileLoader_YN");
                ReportPropertyChanged("EnableCardFileLoader_YN");
                OnEnableCardFileLoader_YNChanged();
            }
        }
        private Nullable<global::System.Boolean> _EnableCardFileLoader_YN;
        partial void OnEnableCardFileLoader_YNChanging(Nullable<global::System.Boolean> value);
        partial void OnEnableCardFileLoader_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean back_office_pin_auth_YN
        {
            get
            {
                return _back_office_pin_auth_YN;
            }
            set
            {
                Onback_office_pin_auth_YNChanging(value);
                ReportPropertyChanging("back_office_pin_auth_YN");
                _back_office_pin_auth_YN = StructuralObject.SetValidValue(value, "back_office_pin_auth_YN");
                ReportPropertyChanged("back_office_pin_auth_YN");
                Onback_office_pin_auth_YNChanged();
            }
        }
        private global::System.Boolean _back_office_pin_auth_YN;
        partial void Onback_office_pin_auth_YNChanging(global::System.Boolean value);
        partial void Onback_office_pin_auth_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> enable_instant_pin_reissue_YN
        {
            get
            {
                return _enable_instant_pin_reissue_YN;
            }
            set
            {
                Onenable_instant_pin_reissue_YNChanging(value);
                ReportPropertyChanging("enable_instant_pin_reissue_YN");
                _enable_instant_pin_reissue_YN = StructuralObject.SetValidValue(value, "enable_instant_pin_reissue_YN");
                ReportPropertyChanged("enable_instant_pin_reissue_YN");
                Onenable_instant_pin_reissue_YNChanged();
            }
        }
        private Nullable<global::System.Boolean> _enable_instant_pin_reissue_YN;
        partial void Onenable_instant_pin_reissue_YNChanging(Nullable<global::System.Boolean> value);
        partial void Onenable_instant_pin_reissue_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> cms_exportable_YN
        {
            get
            {
                return _cms_exportable_YN;
            }
            set
            {
                Oncms_exportable_YNChanging(value);
                ReportPropertyChanging("cms_exportable_YN");
                _cms_exportable_YN = StructuralObject.SetValidValue(value, "cms_exportable_YN");
                ReportPropertyChanged("cms_exportable_YN");
                Oncms_exportable_YNChanged();
            }
        }
        private Nullable<global::System.Boolean> _cms_exportable_YN;
        partial void Oncms_exportable_YNChanging(Nullable<global::System.Boolean> value);
        partial void Oncms_exportable_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> enable__product_instant_pin_YN
        {
            get
            {
                return _enable__product_instant_pin_YN;
            }
            set
            {
                Onenable__product_instant_pin_YNChanging(value);
                ReportPropertyChanging("enable__product_instant_pin_YN");
                _enable__product_instant_pin_YN = StructuralObject.SetValidValue(value, "enable__product_instant_pin_YN");
                ReportPropertyChanged("enable__product_instant_pin_YN");
                Onenable__product_instant_pin_YNChanged();
            }
        }
        private Nullable<global::System.Boolean> _enable__product_instant_pin_YN;
        partial void Onenable__product_instant_pin_YNChanging(Nullable<global::System.Boolean> value);
        partial void Onenable__product_instant_pin_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> allow_branches_to_search_cards
        {
            get
            {
                return _allow_branches_to_search_cards;
            }
            set
            {
                Onallow_branches_to_search_cardsChanging(value);
                ReportPropertyChanging("allow_branches_to_search_cards");
                _allow_branches_to_search_cards = StructuralObject.SetValidValue(value, "allow_branches_to_search_cards");
                ReportPropertyChanged("allow_branches_to_search_cards");
                Onallow_branches_to_search_cardsChanged();
            }
        }
        private Nullable<global::System.Boolean> _allow_branches_to_search_cards;
        partial void Onallow_branches_to_search_cardsChanging(Nullable<global::System.Boolean> value);
        partial void Onallow_branches_to_search_cardsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> SatelliteBranch_YN
        {
            get
            {
                return _SatelliteBranch_YN;
            }
            set
            {
                OnSatelliteBranch_YNChanging(value);
                ReportPropertyChanging("SatelliteBranch_YN");
                _SatelliteBranch_YN = StructuralObject.SetValidValue(value, "SatelliteBranch_YN");
                ReportPropertyChanged("SatelliteBranch_YN");
                OnSatelliteBranch_YNChanged();
            }
        }
        private Nullable<global::System.Boolean> _SatelliteBranch_YN;
        partial void OnSatelliteBranch_YNChanging(Nullable<global::System.Boolean> value);
        partial void OnSatelliteBranch_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> MainBranch_YN
        {
            get
            {
                return _MainBranch_YN;
            }
            set
            {
                OnMainBranch_YNChanging(value);
                ReportPropertyChanging("MainBranch_YN");
                _MainBranch_YN = StructuralObject.SetValidValue(value, "MainBranch_YN");
                ReportPropertyChanged("MainBranch_YN");
                OnMainBranch_YNChanged();
            }
        }
        private Nullable<global::System.Boolean> _MainBranch_YN;
        partial void OnMainBranch_YNChanging(Nullable<global::System.Boolean> value);
        partial void OnMainBranch_YNChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="search_user_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class search_user_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new search_user_Result object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="username">Initial value of the username property.</param>
        /// <param name="first_name">Initial value of the first_name property.</param>
        /// <param name="last_name">Initial value of the last_name property.</param>
        /// <param name="password">Initial value of the password property.</param>
        /// <param name="issuerID">Initial value of the issuerID property.</param>
        /// <param name="user_status">Initial value of the user_status property.</param>
        /// <param name="user_group">Initial value of the user_group property.</param>
        /// <param name="user_group_id">Initial value of the user_group_id property.</param>
        public static search_user_Result Createsearch_user_Result(global::System.Int64 id, global::System.Byte[] username, global::System.Byte[] first_name, global::System.Byte[] last_name, global::System.String password, global::System.Int32 issuerID, global::System.String user_status, global::System.String user_group, global::System.Int32 user_group_id)
        {
            search_user_Result search_user_Result = new search_user_Result();
            search_user_Result.id = id;
            search_user_Result.username = username;
            search_user_Result.first_name = first_name;
            search_user_Result.last_name = last_name;
            search_user_Result.password = password;
            search_user_Result.issuerID = issuerID;
            search_user_Result.user_status = user_status;
            search_user_Result.user_group = user_group;
            search_user_Result.user_group_id = user_group_id;
            return search_user_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                OnidChanging(value);
                ReportPropertyChanging("id");
                _id = StructuralObject.SetValidValue(value, "id");
                ReportPropertyChanged("id");
                OnidChanged();
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] username
        {
            get
            {
                return StructuralObject.GetValidValue(_username);
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, false, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.Byte[] _username;
        partial void OnusernameChanging(global::System.Byte[] value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] first_name
        {
            get
            {
                return StructuralObject.GetValidValue(_first_name);
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, false, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.Byte[] _first_name;
        partial void Onfirst_nameChanging(global::System.Byte[] value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] last_name
        {
            get
            {
                return StructuralObject.GetValidValue(_last_name);
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, false, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.Byte[] _last_name;
        partial void Onlast_nameChanging(global::System.Byte[] value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] employeeID
        {
            get
            {
                return StructuralObject.GetValidValue(_employeeID);
            }
            set
            {
                OnemployeeIDChanging(value);
                ReportPropertyChanging("employeeID");
                _employeeID = StructuralObject.SetValidValue(value, true, "employeeID");
                ReportPropertyChanged("employeeID");
                OnemployeeIDChanged();
            }
        }
        private global::System.Byte[] _employeeID;
        partial void OnemployeeIDChanging(global::System.Byte[] value);
        partial void OnemployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false, "password");
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuerID
        {
            get
            {
                return _issuerID;
            }
            set
            {
                OnissuerIDChanging(value);
                ReportPropertyChanging("issuerID");
                _issuerID = StructuralObject.SetValidValue(value, "issuerID");
                ReportPropertyChanged("issuerID");
                OnissuerIDChanged();
            }
        }
        private global::System.Int32 _issuerID;
        partial void OnissuerIDChanging(global::System.Int32 value);
        partial void OnissuerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branchCode
        {
            get
            {
                return _branchCode;
            }
            set
            {
                OnbranchCodeChanging(value);
                ReportPropertyChanging("branchCode");
                _branchCode = StructuralObject.SetValidValue(value, true, "branchCode");
                ReportPropertyChanged("branchCode");
                OnbranchCodeChanged();
            }
        }
        private global::System.String _branchCode;
        partial void OnbranchCodeChanging(global::System.String value);
        partial void OnbranchCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> last_login_date
        {
            get
            {
                return _last_login_date;
            }
            set
            {
                Onlast_login_dateChanging(value);
                ReportPropertyChanging("last_login_date");
                _last_login_date = StructuralObject.SetValidValue(value, "last_login_date");
                ReportPropertyChanged("last_login_date");
                Onlast_login_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _last_login_date;
        partial void Onlast_login_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onlast_login_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> last_login_attempt
        {
            get
            {
                return _last_login_attempt;
            }
            set
            {
                Onlast_login_attemptChanging(value);
                ReportPropertyChanging("last_login_attempt");
                _last_login_attempt = StructuralObject.SetValidValue(value, "last_login_attempt");
                ReportPropertyChanged("last_login_attempt");
                Onlast_login_attemptChanged();
            }
        }
        private Nullable<global::System.DateTime> _last_login_attempt;
        partial void Onlast_login_attemptChanging(Nullable<global::System.DateTime> value);
        partial void Onlast_login_attemptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> number_of_incorrect_logins
        {
            get
            {
                return _number_of_incorrect_logins;
            }
            set
            {
                Onnumber_of_incorrect_loginsChanging(value);
                ReportPropertyChanging("number_of_incorrect_logins");
                _number_of_incorrect_logins = StructuralObject.SetValidValue(value, "number_of_incorrect_logins");
                ReportPropertyChanged("number_of_incorrect_logins");
                Onnumber_of_incorrect_loginsChanged();
            }
        }
        private Nullable<global::System.Int32> _number_of_incorrect_logins;
        partial void Onnumber_of_incorrect_loginsChanging(Nullable<global::System.Int32> value);
        partial void Onnumber_of_incorrect_loginsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> last_password_changed_date
        {
            get
            {
                return _last_password_changed_date;
            }
            set
            {
                Onlast_password_changed_dateChanging(value);
                ReportPropertyChanging("last_password_changed_date");
                _last_password_changed_date = StructuralObject.SetValidValue(value, "last_password_changed_date");
                ReportPropertyChanged("last_password_changed_date");
                Onlast_password_changed_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _last_password_changed_date;
        partial void Onlast_password_changed_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onlast_password_changed_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_status
        {
            get
            {
                return _user_status;
            }
            set
            {
                Onuser_statusChanging(value);
                ReportPropertyChanging("user_status");
                _user_status = StructuralObject.SetValidValue(value, false, "user_status");
                ReportPropertyChanged("user_status");
                Onuser_statusChanged();
            }
        }
        private global::System.String _user_status;
        partial void Onuser_statusChanging(global::System.String value);
        partial void Onuser_statusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_group
        {
            get
            {
                return _user_group;
            }
            set
            {
                Onuser_groupChanging(value);
                ReportPropertyChanging("user_group");
                _user_group = StructuralObject.SetValidValue(value, false, "user_group");
                ReportPropertyChanged("user_group");
                Onuser_groupChanged();
            }
        }
        private global::System.String _user_group;
        partial void Onuser_groupChanging(global::System.String value);
        partial void Onuser_groupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String gender
        {
            get
            {
                return _gender;
            }
            set
            {
                OngenderChanging(value);
                ReportPropertyChanging("gender");
                _gender = StructuralObject.SetValidValue(value, true, "gender");
                ReportPropertyChanged("gender");
                OngenderChanged();
            }
        }
        private global::System.String _gender;
        partial void OngenderChanging(global::System.String value);
        partial void OngenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> online
        {
            get
            {
                return _online;
            }
            set
            {
                OnonlineChanging(value);
                ReportPropertyChanging("online");
                _online = StructuralObject.SetValidValue(value, "online");
                ReportPropertyChanged("online");
                OnonlineChanged();
            }
        }
        private Nullable<global::System.Int32> _online;
        partial void OnonlineChanging(Nullable<global::System.Int32> value);
        partial void OnonlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String workstation
        {
            get
            {
                return _workstation;
            }
            set
            {
                OnworkstationChanging(value);
                ReportPropertyChanging("workstation");
                _workstation = StructuralObject.SetValidValue(value, true, "workstation");
                ReportPropertyChanged("workstation");
                OnworkstationChanged();
            }
        }
        private global::System.String _workstation;
        partial void OnworkstationChanging(global::System.String value);
        partial void OnworkstationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_group_id
        {
            get
            {
                return _user_group_id;
            }
            set
            {
                Onuser_group_idChanging(value);
                ReportPropertyChanging("user_group_id");
                _user_group_id = StructuralObject.SetValidValue(value, "user_group_id");
                ReportPropertyChanged("user_group_id");
                Onuser_group_idChanged();
            }
        }
        private global::System.Int32 _user_group_id;
        partial void Onuser_group_idChanging(global::System.Int32 value);
        partial void Onuser_group_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private Nullable<global::System.Int32> _branch_id;
        partial void Onbranch_idChanging(Nullable<global::System.Int32> value);
        partial void Onbranch_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="SearchBranchCardsResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SearchBranchCardsResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SearchBranchCardsResult object.
        /// </summary>
        /// <param name="card_id">Initial value of the card_id property.</param>
        /// <param name="branch_card_statuses_id">Initial value of the branch_card_statuses_id property.</param>
        /// <param name="status_date">Initial value of the status_date property.</param>
        /// <param name="product_id">Initial value of the product_id property.</param>
        /// <param name="product_bin_code">Initial value of the product_bin_code property.</param>
        /// <param name="card_issue_method_id">Initial value of the card_issue_method_id property.</param>
        /// <param name="card_priority_id">Initial value of the card_priority_id property.</param>
        /// <param name="current_card_status">Initial value of the current_card_status property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        public static SearchBranchCardsResult CreateSearchBranchCardsResult(global::System.Int64 card_id, global::System.Int32 branch_card_statuses_id, global::System.DateTime status_date, global::System.Int32 product_id, global::System.String product_bin_code, global::System.Int32 card_issue_method_id, global::System.Int32 card_priority_id, global::System.String current_card_status, global::System.String issuer_name, global::System.String branch_name, global::System.String issuer_code, global::System.String branch_code)
        {
            SearchBranchCardsResult searchBranchCardsResult = new SearchBranchCardsResult();
            searchBranchCardsResult.card_id = card_id;
            searchBranchCardsResult.branch_card_statuses_id = branch_card_statuses_id;
            searchBranchCardsResult.status_date = status_date;
            searchBranchCardsResult.product_id = product_id;
            searchBranchCardsResult.product_bin_code = product_bin_code;
            searchBranchCardsResult.card_issue_method_id = card_issue_method_id;
            searchBranchCardsResult.card_priority_id = card_priority_id;
            searchBranchCardsResult.current_card_status = current_card_status;
            searchBranchCardsResult.issuer_name = issuer_name;
            searchBranchCardsResult.branch_name = branch_name;
            searchBranchCardsResult.issuer_code = issuer_code;
            searchBranchCardsResult.branch_code = branch_code;
            return searchBranchCardsResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 card_id
        {
            get
            {
                return _card_id;
            }
            set
            {
                Oncard_idChanging(value);
                ReportPropertyChanging("card_id");
                _card_id = StructuralObject.SetValidValue(value, "card_id");
                ReportPropertyChanged("card_id");
                Oncard_idChanged();
            }
        }
        private global::System.Int64 _card_id;
        partial void Oncard_idChanging(global::System.Int64 value);
        partial void Oncard_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_card_statuses_id
        {
            get
            {
                return _branch_card_statuses_id;
            }
            set
            {
                Onbranch_card_statuses_idChanging(value);
                ReportPropertyChanging("branch_card_statuses_id");
                _branch_card_statuses_id = StructuralObject.SetValidValue(value, "branch_card_statuses_id");
                ReportPropertyChanged("branch_card_statuses_id");
                Onbranch_card_statuses_idChanged();
            }
        }
        private global::System.Int32 _branch_card_statuses_id;
        partial void Onbranch_card_statuses_idChanging(global::System.Int32 value);
        partial void Onbranch_card_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> operator_user_id
        {
            get
            {
                return _operator_user_id;
            }
            set
            {
                Onoperator_user_idChanging(value);
                ReportPropertyChanging("operator_user_id");
                _operator_user_id = StructuralObject.SetValidValue(value, "operator_user_id");
                ReportPropertyChanged("operator_user_id");
                Onoperator_user_idChanged();
            }
        }
        private Nullable<global::System.Int64> _operator_user_id;
        partial void Onoperator_user_idChanging(Nullable<global::System.Int64> value);
        partial void Onoperator_user_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime status_date
        {
            get
            {
                return _status_date;
            }
            set
            {
                Onstatus_dateChanging(value);
                ReportPropertyChanging("status_date");
                _status_date = StructuralObject.SetValidValue(value, "status_date");
                ReportPropertyChanged("status_date");
                Onstatus_dateChanged();
            }
        }
        private global::System.DateTime _status_date;
        partial void Onstatus_dateChanging(global::System.DateTime value);
        partial void Onstatus_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String operator_username
        {
            get
            {
                return _operator_username;
            }
            set
            {
                Onoperator_usernameChanging(value);
                ReportPropertyChanging("operator_username");
                _operator_username = StructuralObject.SetValidValue(value, true, "operator_username");
                ReportPropertyChanged("operator_username");
                Onoperator_usernameChanged();
            }
        }
        private global::System.String _operator_username;
        partial void Onoperator_usernameChanging(global::System.String value);
        partial void Onoperator_usernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private global::System.Int32 _product_id;
        partial void Onproduct_idChanging(global::System.Int32 value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_bin_code
        {
            get
            {
                return _product_bin_code;
            }
            set
            {
                Onproduct_bin_codeChanging(value);
                ReportPropertyChanging("product_bin_code");
                _product_bin_code = StructuralObject.SetValidValue(value, false, "product_bin_code");
                ReportPropertyChanged("product_bin_code");
                Onproduct_bin_codeChanged();
            }
        }
        private global::System.String _product_bin_code;
        partial void Onproduct_bin_codeChanging(global::System.String value);
        partial void Onproduct_bin_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_method_id
        {
            get
            {
                return _card_issue_method_id;
            }
            set
            {
                Oncard_issue_method_idChanging(value);
                ReportPropertyChanging("card_issue_method_id");
                _card_issue_method_id = StructuralObject.SetValidValue(value, "card_issue_method_id");
                ReportPropertyChanged("card_issue_method_id");
                Oncard_issue_method_idChanged();
            }
        }
        private global::System.Int32 _card_issue_method_id;
        partial void Oncard_issue_method_idChanging(global::System.Int32 value);
        partial void Oncard_issue_method_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_request_reference
        {
            get
            {
                return _card_request_reference;
            }
            set
            {
                Oncard_request_referenceChanging(value);
                ReportPropertyChanging("card_request_reference");
                _card_request_reference = StructuralObject.SetValidValue(value, true, "card_request_reference");
                ReportPropertyChanged("card_request_reference");
                Oncard_request_referenceChanged();
            }
        }
        private global::System.String _card_request_reference;
        partial void Oncard_request_referenceChanging(global::System.String value);
        partial void Oncard_request_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_priority_id
        {
            get
            {
                return _card_priority_id;
            }
            set
            {
                Oncard_priority_idChanging(value);
                ReportPropertyChanging("card_priority_id");
                _card_priority_id = StructuralObject.SetValidValue(value, "card_priority_id");
                ReportPropertyChanged("card_priority_id");
                Oncard_priority_idChanged();
            }
        }
        private global::System.Int32 _card_priority_id;
        partial void Oncard_priority_idChanging(global::System.Int32 value);
        partial void Oncard_priority_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> sub_product_id
        {
            get
            {
                return _sub_product_id;
            }
            set
            {
                Onsub_product_idChanging(value);
                ReportPropertyChanging("sub_product_id");
                _sub_product_id = StructuralObject.SetValidValue(value, "sub_product_id");
                ReportPropertyChanged("sub_product_id");
                Onsub_product_idChanged();
            }
        }
        private Nullable<global::System.Int32> _sub_product_id;
        partial void Onsub_product_idChanging(Nullable<global::System.Int32> value);
        partial void Onsub_product_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String current_card_status
        {
            get
            {
                return _current_card_status;
            }
            set
            {
                Oncurrent_card_statusChanging(value);
                ReportPropertyChanging("current_card_status");
                _current_card_status = StructuralObject.SetValidValue(value, false, "current_card_status");
                ReportPropertyChanged("current_card_status");
                Oncurrent_card_statusChanged();
            }
        }
        private global::System.String _current_card_status;
        partial void Oncurrent_card_statusChanging(global::System.String value);
        partial void Oncurrent_card_statusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="SearchTerminalResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SearchTerminalResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SearchTerminalResult object.
        /// </summary>
        /// <param name="terminal_name">Initial value of the terminal_name property.</param>
        /// <param name="column1">Initial value of the Column1 property.</param>
        /// <param name="column2">Initial value of the Column2 property.</param>
        public static SearchTerminalResult CreateSearchTerminalResult(global::System.String terminal_name, global::System.String column1, global::System.String column2)
        {
            SearchTerminalResult searchTerminalResult = new SearchTerminalResult();
            searchTerminalResult.terminal_name = terminal_name;
            searchTerminalResult.Column1 = column1;
            searchTerminalResult.Column2 = column2;
            return searchTerminalResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String terminal_name
        {
            get
            {
                return _terminal_name;
            }
            set
            {
                Onterminal_nameChanging(value);
                ReportPropertyChanging("terminal_name");
                _terminal_name = StructuralObject.SetValidValue(value, false, "terminal_name");
                ReportPropertyChanged("terminal_name");
                Onterminal_nameChanged();
            }
        }
        private global::System.String _terminal_name;
        partial void Onterminal_nameChanging(global::System.String value);
        partial void Onterminal_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String terminal_model
        {
            get
            {
                return _terminal_model;
            }
            set
            {
                Onterminal_modelChanging(value);
                ReportPropertyChanging("terminal_model");
                _terminal_model = StructuralObject.SetValidValue(value, true, "terminal_model");
                ReportPropertyChanged("terminal_model");
                Onterminal_modelChanged();
            }
        }
        private global::System.String _terminal_model;
        partial void Onterminal_modelChanging(global::System.String value);
        partial void Onterminal_modelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String device_Id
        {
            get
            {
                return _device_Id;
            }
            set
            {
                Ondevice_IdChanging(value);
                ReportPropertyChanging("device_Id");
                _device_Id = StructuralObject.SetValidValue(value, true, "device_Id");
                ReportPropertyChanged("device_Id");
                Ondevice_IdChanged();
            }
        }
        private global::System.String _device_Id;
        partial void Ondevice_IdChanging(global::System.String value);
        partial void Ondevice_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Column1
        {
            get
            {
                return _Column1;
            }
            set
            {
                OnColumn1Changing(value);
                ReportPropertyChanging("Column1");
                _Column1 = StructuralObject.SetValidValue(value, false, "Column1");
                ReportPropertyChanged("Column1");
                OnColumn1Changed();
            }
        }
        private global::System.String _Column1;
        partial void OnColumn1Changing(global::System.String value);
        partial void OnColumn1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Column2
        {
            get
            {
                return _Column2;
            }
            set
            {
                OnColumn2Changing(value);
                ReportPropertyChanging("Column2");
                _Column2 = StructuralObject.SetValidValue(value, false, "Column2");
                ReportPropertyChanged("Column2");
                OnColumn2Changed();
            }
        }
        private global::System.String _Column2;
        partial void OnColumn2Changing(global::System.String value);
        partial void OnColumn2Changed();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="SearchUserlistResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SearchUserlistResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SearchUserlistResult object.
        /// </summary>
        /// <param name="user_status_text">Initial value of the user_status_text property.</param>
        public static SearchUserlistResult CreateSearchUserlistResult(global::System.String user_status_text)
        {
            SearchUserlistResult searchUserlistResult = new SearchUserlistResult();
            searchUserlistResult.user_status_text = user_status_text;
            return searchUserlistResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, true, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, true, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_status_text
        {
            get
            {
                return _user_status_text;
            }
            set
            {
                Onuser_status_textChanging(value);
                ReportPropertyChanging("user_status_text");
                _user_status_text = StructuralObject.SetValidValue(value, false, "user_status_text");
                ReportPropertyChanged("user_status_text");
                Onuser_status_textChanged();
            }
        }
        private global::System.String _user_status_text;
        partial void Onuser_status_textChanging(global::System.String value);
        partial void Onuser_status_textChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String workstation
        {
            get
            {
                return _workstation;
            }
            set
            {
                OnworkstationChanging(value);
                ReportPropertyChanging("workstation");
                _workstation = StructuralObject.SetValidValue(value, true, "workstation");
                ReportPropertyChanged("workstation");
                OnworkstationChanged();
            }
        }
        private global::System.String _workstation;
        partial void OnworkstationChanging(global::System.String value);
        partial void OnworkstationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String online
        {
            get
            {
                return _online;
            }
            set
            {
                OnonlineChanging(value);
                ReportPropertyChanging("online");
                _online = StructuralObject.SetValidValue(value, true, "online");
                ReportPropertyChanged("online");
                OnonlineChanged();
            }
        }
        private global::System.String _online;
        partial void OnonlineChanging(global::System.String value);
        partial void OnonlineChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="SearchUserResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SearchUserResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SearchUserResult object.
        /// </summary>
        /// <param name="user_status_text">Initial value of the user_status_text property.</param>
        public static SearchUserResult CreateSearchUserResult(global::System.String user_status_text)
        {
            SearchUserResult searchUserResult = new SearchUserResult();
            searchUserResult.user_status_text = user_status_text;
            return searchUserResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, true, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, true, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_status_text
        {
            get
            {
                return _user_status_text;
            }
            set
            {
                Onuser_status_textChanging(value);
                ReportPropertyChanging("user_status_text");
                _user_status_text = StructuralObject.SetValidValue(value, false, "user_status_text");
                ReportPropertyChanged("user_status_text");
                Onuser_status_textChanged();
            }
        }
        private global::System.String _user_status_text;
        partial void Onuser_status_textChanging(global::System.String value);
        partial void Onuser_status_textChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String workstation
        {
            get
            {
                return _workstation;
            }
            set
            {
                OnworkstationChanging(value);
                ReportPropertyChanging("workstation");
                _workstation = StructuralObject.SetValidValue(value, true, "workstation");
                ReportPropertyChanged("workstation");
                OnworkstationChanged();
            }
        }
        private global::System.String _workstation;
        partial void OnworkstationChanging(global::System.String value);
        partial void OnworkstationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String online
        {
            get
            {
                return _online;
            }
            set
            {
                OnonlineChanging(value);
                ReportPropertyChanging("online");
                _online = StructuralObject.SetValidValue(value, true, "online");
                ReportPropertyChanged("online");
                OnonlineChanged();
            }
        }
        private global::System.String _online;
        partial void OnonlineChanging(global::System.String value);
        partial void OnonlineChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="ServiceRequestCode")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ServiceRequestCode : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceRequestCode object.
        /// </summary>
        /// <param name="src1_id">Initial value of the src1_id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static ServiceRequestCode CreateServiceRequestCode(global::System.Int32 src1_id, global::System.String name)
        {
            ServiceRequestCode serviceRequestCode = new ServiceRequestCode();
            serviceRequestCode.src1_id = src1_id;
            serviceRequestCode.name = name;
            return serviceRequestCode;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 src1_id
        {
            get
            {
                return _src1_id;
            }
            set
            {
                Onsrc1_idChanging(value);
                ReportPropertyChanging("src1_id");
                _src1_id = StructuralObject.SetValidValue(value, "src1_id");
                ReportPropertyChanged("src1_id");
                Onsrc1_idChanged();
            }
        }
        private global::System.Int32 _src1_id;
        partial void Onsrc1_idChanging(global::System.Int32 value);
        partial void Onsrc1_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="ServiceRequestCode1")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ServiceRequestCode1 : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceRequestCode1 object.
        /// </summary>
        /// <param name="src2_id">Initial value of the src2_id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static ServiceRequestCode1 CreateServiceRequestCode1(global::System.Int32 src2_id, global::System.String name)
        {
            ServiceRequestCode1 serviceRequestCode1 = new ServiceRequestCode1();
            serviceRequestCode1.src2_id = src2_id;
            serviceRequestCode1.name = name;
            return serviceRequestCode1;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 src2_id
        {
            get
            {
                return _src2_id;
            }
            set
            {
                Onsrc2_idChanging(value);
                ReportPropertyChanging("src2_id");
                _src2_id = StructuralObject.SetValidValue(value, "src2_id");
                ReportPropertyChanged("src2_id");
                Onsrc2_idChanged();
            }
        }
        private global::System.Int32 _src2_id;
        partial void Onsrc2_idChanging(global::System.Int32 value);
        partial void Onsrc2_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="ServiceRequestCode2")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ServiceRequestCode2 : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceRequestCode2 object.
        /// </summary>
        /// <param name="src3_id">Initial value of the src3_id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static ServiceRequestCode2 CreateServiceRequestCode2(global::System.Int32 src3_id, global::System.String name)
        {
            ServiceRequestCode2 serviceRequestCode2 = new ServiceRequestCode2();
            serviceRequestCode2.src3_id = src3_id;
            serviceRequestCode2.name = name;
            return serviceRequestCode2;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 src3_id
        {
            get
            {
                return _src3_id;
            }
            set
            {
                Onsrc3_idChanging(value);
                ReportPropertyChanging("src3_id");
                _src3_id = StructuralObject.SetValidValue(value, "src3_id");
                ReportPropertyChanged("src3_id");
                Onsrc3_idChanged();
            }
        }
        private global::System.Int32 _src3_id;
        partial void Onsrc3_idChanging(global::System.Int32 value);
        partial void Onsrc3_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="SubProduct_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SubProduct_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubProduct_Result object.
        /// </summary>
        /// <param name="product_id">Initial value of the product_id property.</param>
        /// <param name="sub_product_id">Initial value of the sub_product_id property.</param>
        /// <param name="sub_product_name">Initial value of the sub_product_name property.</param>
        /// <param name="product_name">Initial value of the product_name property.</param>
        /// <param name="editYN">Initial value of the EditYN property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="card_issue_method_id">Initial value of the card_issue_method_id property.</param>
        public static SubProduct_Result CreateSubProduct_Result(global::System.Int32 product_id, global::System.Int32 sub_product_id, global::System.String sub_product_name, global::System.String product_name, global::System.Int32 editYN, global::System.Int32 active, global::System.Int32 card_issue_method_id)
        {
            SubProduct_Result subProduct_Result = new SubProduct_Result();
            subProduct_Result.product_id = product_id;
            subProduct_Result.sub_product_id = sub_product_id;
            subProduct_Result.sub_product_name = sub_product_name;
            subProduct_Result.product_name = product_name;
            subProduct_Result.EditYN = editYN;
            subProduct_Result.Active = active;
            subProduct_Result.card_issue_method_id = card_issue_method_id;
            return subProduct_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private global::System.Int32 _product_id;
        partial void Onproduct_idChanging(global::System.Int32 value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 sub_product_id
        {
            get
            {
                return _sub_product_id;
            }
            set
            {
                Onsub_product_idChanging(value);
                ReportPropertyChanging("sub_product_id");
                _sub_product_id = StructuralObject.SetValidValue(value, "sub_product_id");
                ReportPropertyChanged("sub_product_id");
                Onsub_product_idChanged();
            }
        }
        private global::System.Int32 _sub_product_id;
        partial void Onsub_product_idChanging(global::System.Int32 value);
        partial void Onsub_product_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String sub_product_name
        {
            get
            {
                return _sub_product_name;
            }
            set
            {
                Onsub_product_nameChanging(value);
                ReportPropertyChanging("sub_product_name");
                _sub_product_name = StructuralObject.SetValidValue(value, false, "sub_product_name");
                ReportPropertyChanged("sub_product_name");
                Onsub_product_nameChanged();
            }
        }
        private global::System.String _sub_product_name;
        partial void Onsub_product_nameChanging(global::System.String value);
        partial void Onsub_product_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String sub_product_code
        {
            get
            {
                return _sub_product_code;
            }
            set
            {
                Onsub_product_codeChanging(value);
                ReportPropertyChanging("sub_product_code");
                _sub_product_code = StructuralObject.SetValidValue(value, true, "sub_product_code");
                ReportPropertyChanged("sub_product_code");
                Onsub_product_codeChanged();
            }
        }
        private global::System.String _sub_product_code;
        partial void Onsub_product_codeChanging(global::System.String value);
        partial void Onsub_product_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_name
        {
            get
            {
                return _product_name;
            }
            set
            {
                Onproduct_nameChanging(value);
                ReportPropertyChanging("product_name");
                _product_name = StructuralObject.SetValidValue(value, false, "product_name");
                ReportPropertyChanged("product_name");
                Onproduct_nameChanged();
            }
        }
        private global::System.String _product_name;
        partial void Onproduct_nameChanging(global::System.String value);
        partial void Onproduct_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EditYN
        {
            get
            {
                return _EditYN;
            }
            set
            {
                OnEditYNChanging(value);
                ReportPropertyChanging("EditYN");
                _EditYN = StructuralObject.SetValidValue(value, "EditYN");
                ReportPropertyChanged("EditYN");
                OnEditYNChanged();
            }
        }
        private global::System.Int32 _EditYN;
        partial void OnEditYNChanging(global::System.Int32 value);
        partial void OnEditYNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value, "Active");
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Int32 _Active;
        partial void OnActiveChanging(global::System.Int32 value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_method_id
        {
            get
            {
                return _card_issue_method_id;
            }
            set
            {
                Oncard_issue_method_idChanging(value);
                ReportPropertyChanging("card_issue_method_id");
                _card_issue_method_id = StructuralObject.SetValidValue(value, "card_issue_method_id");
                ReportPropertyChanged("card_issue_method_id");
                Oncard_issue_method_idChanged();
            }
        }
        private global::System.Int32 _card_issue_method_id;
        partial void Oncard_issue_method_idChanging(global::System.Int32 value);
        partial void Oncard_issue_method_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> fee_scheme_id
        {
            get
            {
                return _fee_scheme_id;
            }
            set
            {
                Onfee_scheme_idChanging(value);
                ReportPropertyChanging("fee_scheme_id");
                _fee_scheme_id = StructuralObject.SetValidValue(value, "fee_scheme_id");
                ReportPropertyChanged("fee_scheme_id");
                Onfee_scheme_idChanged();
            }
        }
        private Nullable<global::System.Int32> _fee_scheme_id;
        partial void Onfee_scheme_idChanging(Nullable<global::System.Int32> value);
        partial void Onfee_scheme_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="TerminalListResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class TerminalListResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TerminalListResult object.
        /// </summary>
        /// <param name="terminal_id">Initial value of the terminal_id property.</param>
        /// <param name="terminal_name">Initial value of the terminal_name property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        public static TerminalListResult CreateTerminalListResult(global::System.Int32 terminal_id, global::System.String terminal_name, global::System.String issuer_name, global::System.String branch_name)
        {
            TerminalListResult terminalListResult = new TerminalListResult();
            terminalListResult.terminal_id = terminal_id;
            terminalListResult.terminal_name = terminal_name;
            terminalListResult.issuer_name = issuer_name;
            terminalListResult.branch_name = branch_name;
            return terminalListResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 terminal_id
        {
            get
            {
                return _terminal_id;
            }
            set
            {
                Onterminal_idChanging(value);
                ReportPropertyChanging("terminal_id");
                _terminal_id = StructuralObject.SetValidValue(value, "terminal_id");
                ReportPropertyChanged("terminal_id");
                Onterminal_idChanged();
            }
        }
        private global::System.Int32 _terminal_id;
        partial void Onterminal_idChanging(global::System.Int32 value);
        partial void Onterminal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String terminal_name
        {
            get
            {
                return _terminal_name;
            }
            set
            {
                Onterminal_nameChanging(value);
                ReportPropertyChanging("terminal_name");
                _terminal_name = StructuralObject.SetValidValue(value, false, "terminal_name");
                ReportPropertyChanged("terminal_name");
                Onterminal_nameChanged();
            }
        }
        private global::System.String _terminal_name;
        partial void Onterminal_nameChanging(global::System.String value);
        partial void Onterminal_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String terminal_model
        {
            get
            {
                return _terminal_model;
            }
            set
            {
                Onterminal_modelChanging(value);
                ReportPropertyChanging("terminal_model");
                _terminal_model = StructuralObject.SetValidValue(value, true, "terminal_model");
                ReportPropertyChanged("terminal_model");
                Onterminal_modelChanged();
            }
        }
        private global::System.String _terminal_model;
        partial void Onterminal_modelChanging(global::System.String value);
        partial void Onterminal_modelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String deviceid
        {
            get
            {
                return _deviceid;
            }
            set
            {
                OndeviceidChanging(value);
                ReportPropertyChanging("deviceid");
                _deviceid = StructuralObject.SetValidValue(value, true, "deviceid");
                ReportPropertyChanged("deviceid");
                OndeviceidChanged();
            }
        }
        private global::System.String _deviceid;
        partial void OndeviceidChanging(global::System.String value);
        partial void OndeviceidChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="TerminalParametersResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class TerminalParametersResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TerminalParametersResult object.
        /// </summary>
        /// <param name="min_pin_length">Initial value of the min_pin_length property.</param>
        /// <param name="max_pin_length">Initial value of the max_pin_length property.</param>
        /// <param name="product_bin_code">Initial value of the product_bin_code property.</param>
        /// <param name="product_id">Initial value of the product_id property.</param>
        /// <param name="enable_instant_pin_reissue_YN">Initial value of the enable_instant_pin_reissue_YN property.</param>
        /// <param name="issuer_status_id">Initial value of the issuer_status_id property.</param>
        /// <param name="product_enable_instant_pin_YN">Initial value of the product_enable_instant_pin_YN property.</param>
        /// <param name="issuer_enable_instant_pin_YN">Initial value of the issuer_enable_instant_pin_YN property.</param>
        /// <param name="product_name">Initial value of the product_name property.</param>
        /// <param name="product_code">Initial value of the product_code property.</param>
        public static TerminalParametersResult CreateTerminalParametersResult(global::System.Int32 min_pin_length, global::System.Int32 max_pin_length, global::System.String product_bin_code, global::System.Int32 product_id, global::System.Boolean enable_instant_pin_reissue_YN, global::System.Int32 issuer_status_id, global::System.Boolean product_enable_instant_pin_YN, global::System.Boolean issuer_enable_instant_pin_YN, global::System.String product_name, global::System.String product_code)
        {
            TerminalParametersResult terminalParametersResult = new TerminalParametersResult();
            terminalParametersResult.min_pin_length = min_pin_length;
            terminalParametersResult.max_pin_length = max_pin_length;
            terminalParametersResult.product_bin_code = product_bin_code;
            terminalParametersResult.product_id = product_id;
            terminalParametersResult.enable_instant_pin_reissue_YN = enable_instant_pin_reissue_YN;
            terminalParametersResult.issuer_status_id = issuer_status_id;
            terminalParametersResult.product_enable_instant_pin_YN = product_enable_instant_pin_YN;
            terminalParametersResult.issuer_enable_instant_pin_YN = issuer_enable_instant_pin_YN;
            terminalParametersResult.product_name = product_name;
            terminalParametersResult.product_code = product_code;
            return terminalParametersResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 min_pin_length
        {
            get
            {
                return _min_pin_length;
            }
            set
            {
                Onmin_pin_lengthChanging(value);
                ReportPropertyChanging("min_pin_length");
                _min_pin_length = StructuralObject.SetValidValue(value, "min_pin_length");
                ReportPropertyChanged("min_pin_length");
                Onmin_pin_lengthChanged();
            }
        }
        private global::System.Int32 _min_pin_length;
        partial void Onmin_pin_lengthChanging(global::System.Int32 value);
        partial void Onmin_pin_lengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 max_pin_length
        {
            get
            {
                return _max_pin_length;
            }
            set
            {
                Onmax_pin_lengthChanging(value);
                ReportPropertyChanging("max_pin_length");
                _max_pin_length = StructuralObject.SetValidValue(value, "max_pin_length");
                ReportPropertyChanged("max_pin_length");
                Onmax_pin_lengthChanged();
            }
        }
        private global::System.Int32 _max_pin_length;
        partial void Onmax_pin_lengthChanging(global::System.Int32 value);
        partial void Onmax_pin_lengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_bin_code
        {
            get
            {
                return _product_bin_code;
            }
            set
            {
                Onproduct_bin_codeChanging(value);
                ReportPropertyChanging("product_bin_code");
                _product_bin_code = StructuralObject.SetValidValue(value, false, "product_bin_code");
                ReportPropertyChanged("product_bin_code");
                Onproduct_bin_codeChanged();
            }
        }
        private global::System.String _product_bin_code;
        partial void Onproduct_bin_codeChanging(global::System.String value);
        partial void Onproduct_bin_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private global::System.Int32 _product_id;
        partial void Onproduct_idChanging(global::System.Int32 value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean enable_instant_pin_reissue_YN
        {
            get
            {
                return _enable_instant_pin_reissue_YN;
            }
            set
            {
                Onenable_instant_pin_reissue_YNChanging(value);
                ReportPropertyChanging("enable_instant_pin_reissue_YN");
                _enable_instant_pin_reissue_YN = StructuralObject.SetValidValue(value, "enable_instant_pin_reissue_YN");
                ReportPropertyChanged("enable_instant_pin_reissue_YN");
                Onenable_instant_pin_reissue_YNChanged();
            }
        }
        private global::System.Boolean _enable_instant_pin_reissue_YN;
        partial void Onenable_instant_pin_reissue_YNChanging(global::System.Boolean value);
        partial void Onenable_instant_pin_reissue_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DeletedYN
        {
            get
            {
                return _DeletedYN;
            }
            set
            {
                OnDeletedYNChanging(value);
                ReportPropertyChanging("DeletedYN");
                _DeletedYN = StructuralObject.SetValidValue(value, "DeletedYN");
                ReportPropertyChanged("DeletedYN");
                OnDeletedYNChanged();
            }
        }
        private Nullable<global::System.Boolean> _DeletedYN;
        partial void OnDeletedYNChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedYNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_status_id
        {
            get
            {
                return _issuer_status_id;
            }
            set
            {
                Onissuer_status_idChanging(value);
                ReportPropertyChanging("issuer_status_id");
                _issuer_status_id = StructuralObject.SetValidValue(value, "issuer_status_id");
                ReportPropertyChanged("issuer_status_id");
                Onissuer_status_idChanged();
            }
        }
        private global::System.Int32 _issuer_status_id;
        partial void Onissuer_status_idChanging(global::System.Int32 value);
        partial void Onissuer_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean product_enable_instant_pin_YN
        {
            get
            {
                return _product_enable_instant_pin_YN;
            }
            set
            {
                Onproduct_enable_instant_pin_YNChanging(value);
                ReportPropertyChanging("product_enable_instant_pin_YN");
                _product_enable_instant_pin_YN = StructuralObject.SetValidValue(value, "product_enable_instant_pin_YN");
                ReportPropertyChanged("product_enable_instant_pin_YN");
                Onproduct_enable_instant_pin_YNChanged();
            }
        }
        private global::System.Boolean _product_enable_instant_pin_YN;
        partial void Onproduct_enable_instant_pin_YNChanging(global::System.Boolean value);
        partial void Onproduct_enable_instant_pin_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean issuer_enable_instant_pin_YN
        {
            get
            {
                return _issuer_enable_instant_pin_YN;
            }
            set
            {
                Onissuer_enable_instant_pin_YNChanging(value);
                ReportPropertyChanging("issuer_enable_instant_pin_YN");
                _issuer_enable_instant_pin_YN = StructuralObject.SetValidValue(value, "issuer_enable_instant_pin_YN");
                ReportPropertyChanged("issuer_enable_instant_pin_YN");
                Onissuer_enable_instant_pin_YNChanged();
            }
        }
        private global::System.Boolean _issuer_enable_instant_pin_YN;
        partial void Onissuer_enable_instant_pin_YNChanging(global::System.Boolean value);
        partial void Onissuer_enable_instant_pin_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_name
        {
            get
            {
                return _product_name;
            }
            set
            {
                Onproduct_nameChanging(value);
                ReportPropertyChanging("product_name");
                _product_name = StructuralObject.SetValidValue(value, false, "product_name");
                ReportPropertyChanged("product_name");
                Onproduct_nameChanged();
            }
        }
        private global::System.String _product_name;
        partial void Onproduct_nameChanging(global::System.String value);
        partial void Onproduct_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_code
        {
            get
            {
                return _product_code;
            }
            set
            {
                Onproduct_codeChanging(value);
                ReportPropertyChanging("product_code");
                _product_code = StructuralObject.SetValidValue(value, false, "product_code");
                ReportPropertyChanged("product_code");
                Onproduct_codeChanged();
            }
        }
        private global::System.String _product_code;
        partial void Onproduct_codeChanging(global::System.String value);
        partial void Onproduct_codeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="TerminalResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class TerminalResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TerminalResult object.
        /// </summary>
        /// <param name="terminal_name">Initial value of the terminal_name property.</param>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="masterkey_id">Initial value of the masterkey_id property.</param>
        public static TerminalResult CreateTerminalResult(global::System.String terminal_name, global::System.Int32 branch_id, global::System.Int32 issuer_id, global::System.Int32 masterkey_id)
        {
            TerminalResult terminalResult = new TerminalResult();
            terminalResult.terminal_name = terminal_name;
            terminalResult.branch_id = branch_id;
            terminalResult.issuer_id = issuer_id;
            terminalResult.masterkey_id = masterkey_id;
            return terminalResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String terminal_name
        {
            get
            {
                return _terminal_name;
            }
            set
            {
                Onterminal_nameChanging(value);
                ReportPropertyChanging("terminal_name");
                _terminal_name = StructuralObject.SetValidValue(value, false, "terminal_name");
                ReportPropertyChanged("terminal_name");
                Onterminal_nameChanged();
            }
        }
        private global::System.String _terminal_name;
        partial void Onterminal_nameChanging(global::System.String value);
        partial void Onterminal_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String terminal_model
        {
            get
            {
                return _terminal_model;
            }
            set
            {
                Onterminal_modelChanging(value);
                ReportPropertyChanging("terminal_model");
                _terminal_model = StructuralObject.SetValidValue(value, true, "terminal_model");
                ReportPropertyChanged("terminal_model");
                Onterminal_modelChanged();
            }
        }
        private global::System.String _terminal_model;
        partial void Onterminal_modelChanging(global::System.String value);
        partial void Onterminal_modelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String device_Id
        {
            get
            {
                return _device_Id;
            }
            set
            {
                Ondevice_IdChanging(value);
                ReportPropertyChanging("device_Id");
                _device_Id = StructuralObject.SetValidValue(value, true, "device_Id");
                ReportPropertyChanged("device_Id");
                Ondevice_IdChanged();
            }
        }
        private global::System.String _device_Id;
        partial void Ondevice_IdChanging(global::System.String value);
        partial void Ondevice_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int32 _branch_id;
        partial void Onbranch_idChanging(global::System.Int32 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String masterkey
        {
            get
            {
                return _masterkey;
            }
            set
            {
                OnmasterkeyChanging(value);
                ReportPropertyChanging("masterkey");
                _masterkey = StructuralObject.SetValidValue(value, true, "masterkey");
                ReportPropertyChanged("masterkey");
                OnmasterkeyChanged();
            }
        }
        private global::System.String _masterkey;
        partial void OnmasterkeyChanging(global::System.String value);
        partial void OnmasterkeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 masterkey_id
        {
            get
            {
                return _masterkey_id;
            }
            set
            {
                Onmasterkey_idChanging(value);
                ReportPropertyChanging("masterkey_id");
                _masterkey_id = StructuralObject.SetValidValue(value, "masterkey_id");
                ReportPropertyChanged("masterkey_id");
                Onmasterkey_idChanged();
            }
        }
        private global::System.Int32 _masterkey_id;
        partial void Onmasterkey_idChanging(global::System.Int32 value);
        partial void Onmasterkey_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, true, "password");
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsMacUsed
        {
            get
            {
                return _IsMacUsed;
            }
            set
            {
                OnIsMacUsedChanging(value);
                ReportPropertyChanging("IsMacUsed");
                _IsMacUsed = StructuralObject.SetValidValue(value, "IsMacUsed");
                ReportPropertyChanged("IsMacUsed");
                OnIsMacUsedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsMacUsed;
        partial void OnIsMacUsedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsMacUsedChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="TerminalTMKIssuerResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class TerminalTMKIssuerResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TerminalTMKIssuerResult object.
        /// </summary>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="masterkey_id">Initial value of the masterkey_id property.</param>
        /// <param name="masterkey_name">Initial value of the masterkey_name property.</param>
        public static TerminalTMKIssuerResult CreateTerminalTMKIssuerResult(global::System.Int32 issuer_id, global::System.String issuer_name, global::System.Int32 masterkey_id, global::System.String masterkey_name)
        {
            TerminalTMKIssuerResult terminalTMKIssuerResult = new TerminalTMKIssuerResult();
            terminalTMKIssuerResult.issuer_id = issuer_id;
            terminalTMKIssuerResult.issuer_name = issuer_name;
            terminalTMKIssuerResult.masterkey_id = masterkey_id;
            terminalTMKIssuerResult.masterkey_name = masterkey_name;
            return terminalTMKIssuerResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String masterkey
        {
            get
            {
                return _masterkey;
            }
            set
            {
                OnmasterkeyChanging(value);
                ReportPropertyChanging("masterkey");
                _masterkey = StructuralObject.SetValidValue(value, true, "masterkey");
                ReportPropertyChanged("masterkey");
                OnmasterkeyChanged();
            }
        }
        private global::System.String _masterkey;
        partial void OnmasterkeyChanging(global::System.String value);
        partial void OnmasterkeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 masterkey_id
        {
            get
            {
                return _masterkey_id;
            }
            set
            {
                Onmasterkey_idChanging(value);
                ReportPropertyChanging("masterkey_id");
                _masterkey_id = StructuralObject.SetValidValue(value, "masterkey_id");
                ReportPropertyChanged("masterkey_id");
                Onmasterkey_idChanged();
            }
        }
        private global::System.Int32 _masterkey_id;
        partial void Onmasterkey_idChanging(global::System.Int32 value);
        partial void Onmasterkey_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String masterkey_name
        {
            get
            {
                return _masterkey_name;
            }
            set
            {
                Onmasterkey_nameChanging(value);
                ReportPropertyChanging("masterkey_name");
                _masterkey_name = StructuralObject.SetValidValue(value, false, "masterkey_name");
                ReportPropertyChanged("masterkey_name");
                Onmasterkey_nameChanged();
            }
        }
        private global::System.String _masterkey_name;
        partial void Onmasterkey_nameChanging(global::System.String value);
        partial void Onmasterkey_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="TerminalTMKResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class TerminalTMKResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TerminalTMKResult object.
        /// </summary>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="masterkey_id">Initial value of the masterkey_id property.</param>
        /// <param name="masterkey_name">Initial value of the masterkey_name property.</param>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        public static TerminalTMKResult CreateTerminalTMKResult(global::System.Int32 issuer_id, global::System.String issuer_name, global::System.Int32 masterkey_id, global::System.String masterkey_name, global::System.Int32 branch_id)
        {
            TerminalTMKResult terminalTMKResult = new TerminalTMKResult();
            terminalTMKResult.issuer_id = issuer_id;
            terminalTMKResult.issuer_name = issuer_name;
            terminalTMKResult.masterkey_id = masterkey_id;
            terminalTMKResult.masterkey_name = masterkey_name;
            terminalTMKResult.branch_id = branch_id;
            return terminalTMKResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String masterkey
        {
            get
            {
                return _masterkey;
            }
            set
            {
                OnmasterkeyChanging(value);
                ReportPropertyChanging("masterkey");
                _masterkey = StructuralObject.SetValidValue(value, true, "masterkey");
                ReportPropertyChanged("masterkey");
                OnmasterkeyChanged();
            }
        }
        private global::System.String _masterkey;
        partial void OnmasterkeyChanging(global::System.String value);
        partial void OnmasterkeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 masterkey_id
        {
            get
            {
                return _masterkey_id;
            }
            set
            {
                Onmasterkey_idChanging(value);
                ReportPropertyChanging("masterkey_id");
                _masterkey_id = StructuralObject.SetValidValue(value, "masterkey_id");
                ReportPropertyChanged("masterkey_id");
                Onmasterkey_idChanged();
            }
        }
        private global::System.Int32 _masterkey_id;
        partial void Onmasterkey_idChanging(global::System.Int32 value);
        partial void Onmasterkey_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String masterkey_name
        {
            get
            {
                return _masterkey_name;
            }
            set
            {
                Onmasterkey_nameChanging(value);
                ReportPropertyChanging("masterkey_name");
                _masterkey_name = StructuralObject.SetValidValue(value, false, "masterkey_name");
                ReportPropertyChanged("masterkey_name");
                Onmasterkey_nameChanged();
            }
        }
        private global::System.String _masterkey_name;
        partial void Onmasterkey_nameChanging(global::System.String value);
        partial void Onmasterkey_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int32 _branch_id;
        partial void Onbranch_idChanging(global::System.Int32 value);
        partial void Onbranch_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="ThreedBatchResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ThreedBatchResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ThreedBatchResult object.
        /// </summary>
        /// <param name="tOTAL_ROWS">Initial value of the TOTAL_ROWS property.</param>
        /// <param name="tOTAL_PAGES">Initial value of the TOTAL_PAGES property.</param>
        /// <param name="threed_batch_id">Initial value of the threed_batch_id property.</param>
        /// <param name="threed_batch_statuses_id">Initial value of the threed_batch_statuses_id property.</param>
        /// <param name="no_cards">Initial value of the no_cards property.</param>
        /// <param name="batch_reference">Initial value of the batch_reference property.</param>
        /// <param name="batch_status">Initial value of the batch_status property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="status_note">Initial value of the status_note property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        public static ThreedBatchResult CreateThreedBatchResult(global::System.Int32 tOTAL_ROWS, global::System.Int32 tOTAL_PAGES, global::System.Int64 threed_batch_id, global::System.Int32 threed_batch_statuses_id, global::System.Int32 no_cards, global::System.String batch_reference, global::System.String batch_status, global::System.String issuer_name, global::System.String status_note, global::System.Int32 issuer_id)
        {
            ThreedBatchResult threedBatchResult = new ThreedBatchResult();
            threedBatchResult.TOTAL_ROWS = tOTAL_ROWS;
            threedBatchResult.TOTAL_PAGES = tOTAL_PAGES;
            threedBatchResult.threed_batch_id = threed_batch_id;
            threedBatchResult.threed_batch_statuses_id = threed_batch_statuses_id;
            threedBatchResult.no_cards = no_cards;
            threedBatchResult.batch_reference = batch_reference;
            threedBatchResult.batch_status = batch_status;
            threedBatchResult.issuer_name = issuer_name;
            threedBatchResult.status_note = status_note;
            threedBatchResult.issuer_id = issuer_id;
            return threedBatchResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private global::System.Int32 _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(global::System.Int32 value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private global::System.Int32 _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(global::System.Int32 value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 threed_batch_id
        {
            get
            {
                return _threed_batch_id;
            }
            set
            {
                Onthreed_batch_idChanging(value);
                ReportPropertyChanging("threed_batch_id");
                _threed_batch_id = StructuralObject.SetValidValue(value, "threed_batch_id");
                ReportPropertyChanged("threed_batch_id");
                Onthreed_batch_idChanged();
            }
        }
        private global::System.Int64 _threed_batch_id;
        partial void Onthreed_batch_idChanging(global::System.Int64 value);
        partial void Onthreed_batch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date_created
        {
            get
            {
                return _date_created;
            }
            set
            {
                Ondate_createdChanging(value);
                ReportPropertyChanging("date_created");
                _date_created = StructuralObject.SetValidValue(value, "date_created");
                ReportPropertyChanged("date_created");
                Ondate_createdChanged();
            }
        }
        private Nullable<global::System.DateTime> _date_created;
        partial void Ondate_createdChanging(Nullable<global::System.DateTime> value);
        partial void Ondate_createdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 threed_batch_statuses_id
        {
            get
            {
                return _threed_batch_statuses_id;
            }
            set
            {
                Onthreed_batch_statuses_idChanging(value);
                ReportPropertyChanging("threed_batch_statuses_id");
                _threed_batch_statuses_id = StructuralObject.SetValidValue(value, "threed_batch_statuses_id");
                ReportPropertyChanged("threed_batch_statuses_id");
                Onthreed_batch_statuses_idChanged();
            }
        }
        private global::System.Int32 _threed_batch_statuses_id;
        partial void Onthreed_batch_statuses_idChanging(global::System.Int32 value);
        partial void Onthreed_batch_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 no_cards
        {
            get
            {
                return _no_cards;
            }
            set
            {
                Onno_cardsChanging(value);
                ReportPropertyChanging("no_cards");
                _no_cards = StructuralObject.SetValidValue(value, "no_cards");
                ReportPropertyChanged("no_cards");
                Onno_cardsChanged();
            }
        }
        private global::System.Int32 _no_cards;
        partial void Onno_cardsChanging(global::System.Int32 value);
        partial void Onno_cardsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String batch_reference
        {
            get
            {
                return _batch_reference;
            }
            set
            {
                Onbatch_referenceChanging(value);
                ReportPropertyChanging("batch_reference");
                _batch_reference = StructuralObject.SetValidValue(value, false, "batch_reference");
                ReportPropertyChanged("batch_reference");
                Onbatch_referenceChanged();
            }
        }
        private global::System.String _batch_reference;
        partial void Onbatch_referenceChanging(global::System.String value);
        partial void Onbatch_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String batch_status
        {
            get
            {
                return _batch_status;
            }
            set
            {
                Onbatch_statusChanging(value);
                ReportPropertyChanging("batch_status");
                _batch_status = StructuralObject.SetValidValue(value, false, "batch_status");
                ReportPropertyChanged("batch_status");
                Onbatch_statusChanged();
            }
        }
        private global::System.String _batch_status;
        partial void Onbatch_statusChanging(global::System.String value);
        partial void Onbatch_statusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String status_note
        {
            get
            {
                return _status_note;
            }
            set
            {
                Onstatus_noteChanging(value);
                ReportPropertyChanging("status_note");
                _status_note = StructuralObject.SetValidValue(value, false, "status_note");
                ReportPropertyChanged("status_note");
                Onstatus_noteChanged();
            }
        }
        private global::System.String _status_note;
        partial void Onstatus_noteChanging(global::System.String value);
        partial void Onstatus_noteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="user_list_result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class user_list_result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new user_list_result object.
        /// </summary>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="user_status_text">Initial value of the user_status_text property.</param>
        /// <param name="online">Initial value of the online property.</param>
        /// <param name="aUTHENTICATION_TYPE">Initial value of the AUTHENTICATION_TYPE property.</param>
        public static user_list_result Createuser_list_result(global::System.Int64 user_id, global::System.String user_status_text, global::System.Boolean online, global::System.String aUTHENTICATION_TYPE)
        {
            user_list_result user_list_result = new user_list_result();
            user_list_result.user_id = user_id;
            user_list_result.user_status_text = user_status_text;
            user_list_result.online = online;
            user_list_result.AUTHENTICATION_TYPE = aUTHENTICATION_TYPE;
            return user_list_result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value, "user_id");
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int64 _user_id;
        partial void Onuser_idChanging(global::System.Int64 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, true, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, true, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String empoyee_id
        {
            get
            {
                return _empoyee_id;
            }
            set
            {
                Onempoyee_idChanging(value);
                ReportPropertyChanging("empoyee_id");
                _empoyee_id = StructuralObject.SetValidValue(value, true, "empoyee_id");
                ReportPropertyChanged("empoyee_id");
                Onempoyee_idChanged();
            }
        }
        private global::System.String _empoyee_id;
        partial void Onempoyee_idChanging(global::System.String value);
        partial void Onempoyee_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_status_text
        {
            get
            {
                return _user_status_text;
            }
            set
            {
                Onuser_status_textChanging(value);
                ReportPropertyChanging("user_status_text");
                _user_status_text = StructuralObject.SetValidValue(value, false, "user_status_text");
                ReportPropertyChanged("user_status_text");
                Onuser_status_textChanged();
            }
        }
        private global::System.String _user_status_text;
        partial void Onuser_status_textChanging(global::System.String value);
        partial void Onuser_status_textChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean online
        {
            get
            {
                return _online;
            }
            set
            {
                OnonlineChanging(value);
                ReportPropertyChanging("online");
                _online = StructuralObject.SetValidValue(value, "online");
                ReportPropertyChanged("online");
                OnonlineChanged();
            }
        }
        private global::System.Boolean _online;
        partial void OnonlineChanging(global::System.Boolean value);
        partial void OnonlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String workstation
        {
            get
            {
                return _workstation;
            }
            set
            {
                OnworkstationChanging(value);
                ReportPropertyChanging("workstation");
                _workstation = StructuralObject.SetValidValue(value, true, "workstation");
                ReportPropertyChanged("workstation");
                OnworkstationChanged();
            }
        }
        private global::System.String _workstation;
        partial void OnworkstationChanging(global::System.String value);
        partial void OnworkstationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AUTHENTICATION_TYPE
        {
            get
            {
                return _AUTHENTICATION_TYPE;
            }
            set
            {
                OnAUTHENTICATION_TYPEChanging(value);
                ReportPropertyChanging("AUTHENTICATION_TYPE");
                _AUTHENTICATION_TYPE = StructuralObject.SetValidValue(value, false, "AUTHENTICATION_TYPE");
                ReportPropertyChanged("AUTHENTICATION_TYPE");
                OnAUTHENTICATION_TYPEChanged();
            }
        }
        private global::System.String _AUTHENTICATION_TYPE;
        partial void OnAUTHENTICATION_TYPEChanging(global::System.String value);
        partial void OnAUTHENTICATION_TYPEChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="user_passwords")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class user_passwords : ComplexObject
    {
        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, true, "password");
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value, "date");
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _date;
        partial void OndateChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OndateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="useradminsettingslist")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class useradminsettingslist : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new useradminsettingslist object.
        /// </summary>
        /// <param name="user_admin_id">Initial value of the user_admin_id property.</param>
        public static useradminsettingslist Createuseradminsettingslist(global::System.Int32 user_admin_id)
        {
            useradminsettingslist useradminsettingslist = new useradminsettingslist();
            useradminsettingslist.user_admin_id = user_admin_id;
            return useradminsettingslist;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_admin_id
        {
            get
            {
                return _user_admin_id;
            }
            set
            {
                Onuser_admin_idChanging(value);
                ReportPropertyChanging("user_admin_id");
                _user_admin_id = StructuralObject.SetValidValue(value, "user_admin_id");
                ReportPropertyChanged("user_admin_id");
                Onuser_admin_idChanged();
            }
        }
        private global::System.Int32 _user_admin_id;
        partial void Onuser_admin_idChanging(global::System.Int32 value);
        partial void Onuser_admin_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PasswordValidPeriod
        {
            get
            {
                return _PasswordValidPeriod;
            }
            set
            {
                OnPasswordValidPeriodChanging(value);
                ReportPropertyChanging("PasswordValidPeriod");
                _PasswordValidPeriod = StructuralObject.SetValidValue(value, "PasswordValidPeriod");
                ReportPropertyChanged("PasswordValidPeriod");
                OnPasswordValidPeriodChanged();
            }
        }
        private Nullable<global::System.Int32> _PasswordValidPeriod;
        partial void OnPasswordValidPeriodChanging(Nullable<global::System.Int32> value);
        partial void OnPasswordValidPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PasswordMinLength
        {
            get
            {
                return _PasswordMinLength;
            }
            set
            {
                OnPasswordMinLengthChanging(value);
                ReportPropertyChanging("PasswordMinLength");
                _PasswordMinLength = StructuralObject.SetValidValue(value, "PasswordMinLength");
                ReportPropertyChanged("PasswordMinLength");
                OnPasswordMinLengthChanged();
            }
        }
        private Nullable<global::System.Int32> _PasswordMinLength;
        partial void OnPasswordMinLengthChanging(Nullable<global::System.Int32> value);
        partial void OnPasswordMinLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PasswordMaxLength
        {
            get
            {
                return _PasswordMaxLength;
            }
            set
            {
                OnPasswordMaxLengthChanging(value);
                ReportPropertyChanging("PasswordMaxLength");
                _PasswordMaxLength = StructuralObject.SetValidValue(value, "PasswordMaxLength");
                ReportPropertyChanged("PasswordMaxLength");
                OnPasswordMaxLengthChanged();
            }
        }
        private Nullable<global::System.Int32> _PasswordMaxLength;
        partial void OnPasswordMaxLengthChanging(Nullable<global::System.Int32> value);
        partial void OnPasswordMaxLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreviousPasswordsCount
        {
            get
            {
                return _PreviousPasswordsCount;
            }
            set
            {
                OnPreviousPasswordsCountChanging(value);
                ReportPropertyChanging("PreviousPasswordsCount");
                _PreviousPasswordsCount = StructuralObject.SetValidValue(value, "PreviousPasswordsCount");
                ReportPropertyChanged("PreviousPasswordsCount");
                OnPreviousPasswordsCountChanged();
            }
        }
        private Nullable<global::System.Int32> _PreviousPasswordsCount;
        partial void OnPreviousPasswordsCountChanging(Nullable<global::System.Int32> value);
        partial void OnPreviousPasswordsCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> maxInvalidPasswordAttempts
        {
            get
            {
                return _maxInvalidPasswordAttempts;
            }
            set
            {
                OnmaxInvalidPasswordAttemptsChanging(value);
                ReportPropertyChanging("maxInvalidPasswordAttempts");
                _maxInvalidPasswordAttempts = StructuralObject.SetValidValue(value, "maxInvalidPasswordAttempts");
                ReportPropertyChanged("maxInvalidPasswordAttempts");
                OnmaxInvalidPasswordAttemptsChanged();
            }
        }
        private Nullable<global::System.Int32> _maxInvalidPasswordAttempts;
        partial void OnmaxInvalidPasswordAttemptsChanging(Nullable<global::System.Int32> value);
        partial void OnmaxInvalidPasswordAttemptsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PasswordAttemptLockoutDuration
        {
            get
            {
                return _PasswordAttemptLockoutDuration;
            }
            set
            {
                OnPasswordAttemptLockoutDurationChanging(value);
                ReportPropertyChanging("PasswordAttemptLockoutDuration");
                _PasswordAttemptLockoutDuration = StructuralObject.SetValidValue(value, "PasswordAttemptLockoutDuration");
                ReportPropertyChanged("PasswordAttemptLockoutDuration");
                OnPasswordAttemptLockoutDurationChanged();
            }
        }
        private Nullable<global::System.Int32> _PasswordAttemptLockoutDuration;
        partial void OnPasswordAttemptLockoutDurationChanging(Nullable<global::System.Int32> value);
        partial void OnPasswordAttemptLockoutDurationChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="UserGroupAdminResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class UserGroupAdminResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserGroupAdminResult object.
        /// </summary>
        /// <param name="user_group_id">Initial value of the user_group_id property.</param>
        /// <param name="user_group_name">Initial value of the user_group_name property.</param>
        /// <param name="user_role_id">Initial value of the user_role_id property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="is_in_group">Initial value of the is_in_group property.</param>
        public static UserGroupAdminResult CreateUserGroupAdminResult(global::System.Int32 user_group_id, global::System.String user_group_name, global::System.Int32 user_role_id, global::System.Int32 issuer_id, global::System.Int32 is_in_group)
        {
            UserGroupAdminResult userGroupAdminResult = new UserGroupAdminResult();
            userGroupAdminResult.user_group_id = user_group_id;
            userGroupAdminResult.user_group_name = user_group_name;
            userGroupAdminResult.user_role_id = user_role_id;
            userGroupAdminResult.issuer_id = issuer_id;
            userGroupAdminResult.is_in_group = is_in_group;
            return userGroupAdminResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_group_id
        {
            get
            {
                return _user_group_id;
            }
            set
            {
                Onuser_group_idChanging(value);
                ReportPropertyChanging("user_group_id");
                _user_group_id = StructuralObject.SetValidValue(value, "user_group_id");
                ReportPropertyChanged("user_group_id");
                Onuser_group_idChanged();
            }
        }
        private global::System.Int32 _user_group_id;
        partial void Onuser_group_idChanging(global::System.Int32 value);
        partial void Onuser_group_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_group_name
        {
            get
            {
                return _user_group_name;
            }
            set
            {
                Onuser_group_nameChanging(value);
                ReportPropertyChanging("user_group_name");
                _user_group_name = StructuralObject.SetValidValue(value, false, "user_group_name");
                ReportPropertyChanged("user_group_name");
                Onuser_group_nameChanged();
            }
        }
        private global::System.String _user_group_name;
        partial void Onuser_group_nameChanging(global::System.String value);
        partial void Onuser_group_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_role_id
        {
            get
            {
                return _user_role_id;
            }
            set
            {
                Onuser_role_idChanging(value);
                ReportPropertyChanging("user_role_id");
                _user_role_id = StructuralObject.SetValidValue(value, "user_role_id");
                ReportPropertyChanged("user_role_id");
                Onuser_role_idChanged();
            }
        }
        private global::System.Int32 _user_role_id;
        partial void Onuser_role_idChanging(global::System.Int32 value);
        partial void Onuser_role_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 is_in_group
        {
            get
            {
                return _is_in_group;
            }
            set
            {
                Onis_in_groupChanging(value);
                ReportPropertyChanging("is_in_group");
                _is_in_group = StructuralObject.SetValidValue(value, "is_in_group");
                ReportPropertyChanged("is_in_group");
                Onis_in_groupChanged();
            }
        }
        private global::System.Int32 _is_in_group;
        partial void Onis_in_groupChanging(global::System.Int32 value);
        partial void Onis_in_groupChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="UserGroupResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class UserGroupResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserGroupResult object.
        /// </summary>
        /// <param name="user_group_id">Initial value of the user_group_id property.</param>
        /// <param name="user_role_id">Initial value of the user_role_id property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="can_create">Initial value of the can_create property.</param>
        /// <param name="can_read">Initial value of the can_read property.</param>
        /// <param name="can_update">Initial value of the can_update property.</param>
        /// <param name="can_delete">Initial value of the can_delete property.</param>
        /// <param name="all_branch_access">Initial value of the all_branch_access property.</param>
        /// <param name="user_group_name">Initial value of the user_group_name property.</param>
        /// <param name="user_role">Initial value of the user_role property.</param>
        /// <param name="mask_screen_pan">Initial value of the mask_screen_pan property.</param>
        /// <param name="mask_report_pan">Initial value of the mask_report_pan property.</param>
        public static UserGroupResult CreateUserGroupResult(global::System.Int32 user_group_id, global::System.Int32 user_role_id, global::System.Int32 issuer_id, global::System.Boolean can_create, global::System.Boolean can_read, global::System.Boolean can_update, global::System.Boolean can_delete, global::System.Boolean all_branch_access, global::System.String user_group_name, global::System.String user_role, global::System.Boolean mask_screen_pan, global::System.Boolean mask_report_pan)
        {
            UserGroupResult userGroupResult = new UserGroupResult();
            userGroupResult.user_group_id = user_group_id;
            userGroupResult.user_role_id = user_role_id;
            userGroupResult.issuer_id = issuer_id;
            userGroupResult.can_create = can_create;
            userGroupResult.can_read = can_read;
            userGroupResult.can_update = can_update;
            userGroupResult.can_delete = can_delete;
            userGroupResult.all_branch_access = all_branch_access;
            userGroupResult.user_group_name = user_group_name;
            userGroupResult.user_role = user_role;
            userGroupResult.mask_screen_pan = mask_screen_pan;
            userGroupResult.mask_report_pan = mask_report_pan;
            return userGroupResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_group_id
        {
            get
            {
                return _user_group_id;
            }
            set
            {
                Onuser_group_idChanging(value);
                ReportPropertyChanging("user_group_id");
                _user_group_id = StructuralObject.SetValidValue(value, "user_group_id");
                ReportPropertyChanged("user_group_id");
                Onuser_group_idChanged();
            }
        }
        private global::System.Int32 _user_group_id;
        partial void Onuser_group_idChanging(global::System.Int32 value);
        partial void Onuser_group_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_role_id
        {
            get
            {
                return _user_role_id;
            }
            set
            {
                Onuser_role_idChanging(value);
                ReportPropertyChanging("user_role_id");
                _user_role_id = StructuralObject.SetValidValue(value, "user_role_id");
                ReportPropertyChanged("user_role_id");
                Onuser_role_idChanged();
            }
        }
        private global::System.Int32 _user_role_id;
        partial void Onuser_role_idChanging(global::System.Int32 value);
        partial void Onuser_role_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean can_create
        {
            get
            {
                return _can_create;
            }
            set
            {
                Oncan_createChanging(value);
                ReportPropertyChanging("can_create");
                _can_create = StructuralObject.SetValidValue(value, "can_create");
                ReportPropertyChanged("can_create");
                Oncan_createChanged();
            }
        }
        private global::System.Boolean _can_create;
        partial void Oncan_createChanging(global::System.Boolean value);
        partial void Oncan_createChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean can_read
        {
            get
            {
                return _can_read;
            }
            set
            {
                Oncan_readChanging(value);
                ReportPropertyChanging("can_read");
                _can_read = StructuralObject.SetValidValue(value, "can_read");
                ReportPropertyChanged("can_read");
                Oncan_readChanged();
            }
        }
        private global::System.Boolean _can_read;
        partial void Oncan_readChanging(global::System.Boolean value);
        partial void Oncan_readChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean can_update
        {
            get
            {
                return _can_update;
            }
            set
            {
                Oncan_updateChanging(value);
                ReportPropertyChanging("can_update");
                _can_update = StructuralObject.SetValidValue(value, "can_update");
                ReportPropertyChanged("can_update");
                Oncan_updateChanged();
            }
        }
        private global::System.Boolean _can_update;
        partial void Oncan_updateChanging(global::System.Boolean value);
        partial void Oncan_updateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean can_delete
        {
            get
            {
                return _can_delete;
            }
            set
            {
                Oncan_deleteChanging(value);
                ReportPropertyChanging("can_delete");
                _can_delete = StructuralObject.SetValidValue(value, "can_delete");
                ReportPropertyChanged("can_delete");
                Oncan_deleteChanged();
            }
        }
        private global::System.Boolean _can_delete;
        partial void Oncan_deleteChanging(global::System.Boolean value);
        partial void Oncan_deleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean all_branch_access
        {
            get
            {
                return _all_branch_access;
            }
            set
            {
                Onall_branch_accessChanging(value);
                ReportPropertyChanging("all_branch_access");
                _all_branch_access = StructuralObject.SetValidValue(value, "all_branch_access");
                ReportPropertyChanged("all_branch_access");
                Onall_branch_accessChanged();
            }
        }
        private global::System.Boolean _all_branch_access;
        partial void Onall_branch_accessChanging(global::System.Boolean value);
        partial void Onall_branch_accessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_group_name
        {
            get
            {
                return _user_group_name;
            }
            set
            {
                Onuser_group_nameChanging(value);
                ReportPropertyChanging("user_group_name");
                _user_group_name = StructuralObject.SetValidValue(value, false, "user_group_name");
                ReportPropertyChanged("user_group_name");
                Onuser_group_nameChanged();
            }
        }
        private global::System.String _user_group_name;
        partial void Onuser_group_nameChanging(global::System.String value);
        partial void Onuser_group_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_role
        {
            get
            {
                return _user_role;
            }
            set
            {
                Onuser_roleChanging(value);
                ReportPropertyChanging("user_role");
                _user_role = StructuralObject.SetValidValue(value, false, "user_role");
                ReportPropertyChanged("user_role");
                Onuser_roleChanged();
            }
        }
        private global::System.String _user_role;
        partial void Onuser_roleChanging(global::System.String value);
        partial void Onuser_roleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean mask_screen_pan
        {
            get
            {
                return _mask_screen_pan;
            }
            set
            {
                Onmask_screen_panChanging(value);
                ReportPropertyChanging("mask_screen_pan");
                _mask_screen_pan = StructuralObject.SetValidValue(value, "mask_screen_pan");
                ReportPropertyChanged("mask_screen_pan");
                Onmask_screen_panChanged();
            }
        }
        private global::System.Boolean _mask_screen_pan;
        partial void Onmask_screen_panChanging(global::System.Boolean value);
        partial void Onmask_screen_panChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean mask_report_pan
        {
            get
            {
                return _mask_report_pan;
            }
            set
            {
                Onmask_report_panChanging(value);
                ReportPropertyChanging("mask_report_pan");
                _mask_report_pan = StructuralObject.SetValidValue(value, "mask_report_pan");
                ReportPropertyChanged("mask_report_pan");
                Onmask_report_panChanged();
            }
        }
        private global::System.Boolean _mask_report_pan;
        partial void Onmask_report_panChanging(global::System.Boolean value);
        partial void Onmask_report_panChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_get_auditdata_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_get_auditdata_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_get_auditdata_Result object.
        /// </summary>
        /// <param name="audit_id">Initial value of the audit_id property.</param>
        /// <param name="workstation_address">Initial value of the workstation_address property.</param>
        /// <param name="audit_action_name">Initial value of the audit_action_name property.</param>
        public static usp_get_auditdata_Result Createusp_get_auditdata_Result(global::System.Int64 audit_id, global::System.String workstation_address, global::System.String audit_action_name)
        {
            usp_get_auditdata_Result usp_get_auditdata_Result = new usp_get_auditdata_Result();
            usp_get_auditdata_Result.audit_id = audit_id;
            usp_get_auditdata_Result.workstation_address = workstation_address;
            usp_get_auditdata_Result.audit_action_name = audit_action_name;
            return usp_get_auditdata_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 audit_id
        {
            get
            {
                return _audit_id;
            }
            set
            {
                Onaudit_idChanging(value);
                ReportPropertyChanging("audit_id");
                _audit_id = StructuralObject.SetValidValue(value, "audit_id");
                ReportPropertyChanged("audit_id");
                Onaudit_idChanged();
            }
        }
        private global::System.Int64 _audit_id;
        partial void Onaudit_idChanging(global::System.Int64 value);
        partial void Onaudit_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String action_description
        {
            get
            {
                return _action_description;
            }
            set
            {
                Onaction_descriptionChanging(value);
                ReportPropertyChanging("action_description");
                _action_description = StructuralObject.SetValidValue(value, true, "action_description");
                ReportPropertyChanged("action_description");
                Onaction_descriptionChanged();
            }
        }
        private global::System.String _action_description;
        partial void Onaction_descriptionChanging(global::System.String value);
        partial void Onaction_descriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String audit_date
        {
            get
            {
                return _audit_date;
            }
            set
            {
                Onaudit_dateChanging(value);
                ReportPropertyChanging("audit_date");
                _audit_date = StructuralObject.SetValidValue(value, true, "audit_date");
                ReportPropertyChanged("audit_date");
                Onaudit_dateChanged();
            }
        }
        private global::System.String _audit_date;
        partial void Onaudit_dateChanging(global::System.String value);
        partial void Onaudit_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String audit_Time
        {
            get
            {
                return _audit_Time;
            }
            set
            {
                Onaudit_TimeChanging(value);
                ReportPropertyChanging("audit_Time");
                _audit_Time = StructuralObject.SetValidValue(value, true, "audit_Time");
                ReportPropertyChanged("audit_Time");
                Onaudit_TimeChanged();
            }
        }
        private global::System.String _audit_Time;
        partial void Onaudit_TimeChanging(global::System.String value);
        partial void Onaudit_TimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String workstation_address
        {
            get
            {
                return _workstation_address;
            }
            set
            {
                Onworkstation_addressChanging(value);
                ReportPropertyChanging("workstation_address");
                _workstation_address = StructuralObject.SetValidValue(value, false, "workstation_address");
                ReportPropertyChanged("workstation_address");
                Onworkstation_addressChanged();
            }
        }
        private global::System.String _workstation_address;
        partial void Onworkstation_addressChanging(global::System.String value);
        partial void Onworkstation_addressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String audit_action_name
        {
            get
            {
                return _audit_action_name;
            }
            set
            {
                Onaudit_action_nameChanging(value);
                ReportPropertyChanging("audit_action_name");
                _audit_action_name = StructuralObject.SetValidValue(value, false, "audit_action_name");
                ReportPropertyChanged("audit_action_name");
                Onaudit_action_nameChanged();
            }
        }
        private global::System.String _audit_action_name;
        partial void Onaudit_action_nameChanging(global::System.String value);
        partial void Onaudit_action_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String data_before
        {
            get
            {
                return _data_before;
            }
            set
            {
                Ondata_beforeChanging(value);
                ReportPropertyChanging("data_before");
                _data_before = StructuralObject.SetValidValue(value, true, "data_before");
                ReportPropertyChanged("data_before");
                Ondata_beforeChanged();
            }
        }
        private global::System.String _data_before;
        partial void Ondata_beforeChanging(global::System.String value);
        partial void Ondata_beforeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String data_after
        {
            get
            {
                return _data_after;
            }
            set
            {
                Ondata_afterChanging(value);
                ReportPropertyChanging("data_after");
                _data_after = StructuralObject.SetValidValue(value, true, "data_after");
                ReportPropertyChanged("data_after");
                Ondata_afterChanged();
            }
        }
        private global::System.String _data_after;
        partial void Ondata_afterChanging(global::System.String value);
        partial void Ondata_afterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private Nullable<global::System.Int32> _issuer_id;
        partial void Onissuer_idChanging(Nullable<global::System.Int32> value);
        partial void Onissuer_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_get_auth_configuration_list_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_get_auth_configuration_list_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_get_auth_configuration_list_Result object.
        /// </summary>
        /// <param name="authentication_configuration_id">Initial value of the authentication_configuration_id property.</param>
        /// <param name="authentication_configuration">Initial value of the authentication_configuration property.</param>
        public static usp_get_auth_configuration_list_Result Createusp_get_auth_configuration_list_Result(global::System.Int32 authentication_configuration_id, global::System.String authentication_configuration)
        {
            usp_get_auth_configuration_list_Result usp_get_auth_configuration_list_Result = new usp_get_auth_configuration_list_Result();
            usp_get_auth_configuration_list_Result.authentication_configuration_id = authentication_configuration_id;
            usp_get_auth_configuration_list_Result.authentication_configuration = authentication_configuration;
            return usp_get_auth_configuration_list_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 authentication_configuration_id
        {
            get
            {
                return _authentication_configuration_id;
            }
            set
            {
                Onauthentication_configuration_idChanging(value);
                ReportPropertyChanging("authentication_configuration_id");
                _authentication_configuration_id = StructuralObject.SetValidValue(value, "authentication_configuration_id");
                ReportPropertyChanged("authentication_configuration_id");
                Onauthentication_configuration_idChanged();
            }
        }
        private global::System.Int32 _authentication_configuration_id;
        partial void Onauthentication_configuration_idChanging(global::System.Int32 value);
        partial void Onauthentication_configuration_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String authentication_configuration
        {
            get
            {
                return _authentication_configuration;
            }
            set
            {
                Onauthentication_configurationChanging(value);
                ReportPropertyChanging("authentication_configuration");
                _authentication_configuration = StructuralObject.SetValidValue(value, false, "authentication_configuration");
                ReportPropertyChanged("authentication_configuration");
                Onauthentication_configurationChanged();
            }
        }
        private global::System.String _authentication_configuration;
        partial void Onauthentication_configurationChanging(global::System.String value);
        partial void Onauthentication_configurationChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_get_current_product_fee_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_get_current_product_fee_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_get_current_product_fee_Result object.
        /// </summary>
        /// <param name="fee_scheme_id">Initial value of the fee_scheme_id property.</param>
        /// <param name="fee_detail_id">Initial value of the fee_detail_id property.</param>
        /// <param name="fee_detail_name">Initial value of the fee_detail_name property.</param>
        /// <param name="effective_from">Initial value of the effective_from property.</param>
        /// <param name="fee_waiver_YN">Initial value of the fee_waiver_YN property.</param>
        /// <param name="fee_editable_YN">Initial value of the fee_editable_YN property.</param>
        /// <param name="deleted_yn">Initial value of the deleted_yn property.</param>
        /// <param name="fee_detail_id1">Initial value of the fee_detail_id1 property.</param>
        /// <param name="currency_id">Initial value of the currency_id property.</param>
        /// <param name="card_issue_reason_id">Initial value of the card_issue_reason_id property.</param>
        /// <param name="fee_charge">Initial value of the fee_charge property.</param>
        /// <param name="date_created">Initial value of the date_created property.</param>
        public static usp_get_current_product_fee_Result Createusp_get_current_product_fee_Result(global::System.Int32 fee_scheme_id, global::System.Int32 fee_detail_id, global::System.String fee_detail_name, global::System.DateTime effective_from, global::System.Boolean fee_waiver_YN, global::System.Boolean fee_editable_YN, global::System.Boolean deleted_yn, global::System.Int32 fee_detail_id1, global::System.Int32 currency_id, global::System.Int32 card_issue_reason_id, global::System.Decimal fee_charge, global::System.DateTime date_created)
        {
            usp_get_current_product_fee_Result usp_get_current_product_fee_Result = new usp_get_current_product_fee_Result();
            usp_get_current_product_fee_Result.fee_scheme_id = fee_scheme_id;
            usp_get_current_product_fee_Result.fee_detail_id = fee_detail_id;
            usp_get_current_product_fee_Result.fee_detail_name = fee_detail_name;
            usp_get_current_product_fee_Result.effective_from = effective_from;
            usp_get_current_product_fee_Result.fee_waiver_YN = fee_waiver_YN;
            usp_get_current_product_fee_Result.fee_editable_YN = fee_editable_YN;
            usp_get_current_product_fee_Result.deleted_yn = deleted_yn;
            usp_get_current_product_fee_Result.fee_detail_id1 = fee_detail_id1;
            usp_get_current_product_fee_Result.currency_id = currency_id;
            usp_get_current_product_fee_Result.card_issue_reason_id = card_issue_reason_id;
            usp_get_current_product_fee_Result.fee_charge = fee_charge;
            usp_get_current_product_fee_Result.date_created = date_created;
            return usp_get_current_product_fee_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fee_scheme_id
        {
            get
            {
                return _fee_scheme_id;
            }
            set
            {
                Onfee_scheme_idChanging(value);
                ReportPropertyChanging("fee_scheme_id");
                _fee_scheme_id = StructuralObject.SetValidValue(value, "fee_scheme_id");
                ReportPropertyChanged("fee_scheme_id");
                Onfee_scheme_idChanged();
            }
        }
        private global::System.Int32 _fee_scheme_id;
        partial void Onfee_scheme_idChanging(global::System.Int32 value);
        partial void Onfee_scheme_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fee_detail_id
        {
            get
            {
                return _fee_detail_id;
            }
            set
            {
                Onfee_detail_idChanging(value);
                ReportPropertyChanging("fee_detail_id");
                _fee_detail_id = StructuralObject.SetValidValue(value, "fee_detail_id");
                ReportPropertyChanged("fee_detail_id");
                Onfee_detail_idChanged();
            }
        }
        private global::System.Int32 _fee_detail_id;
        partial void Onfee_detail_idChanging(global::System.Int32 value);
        partial void Onfee_detail_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String fee_detail_name
        {
            get
            {
                return _fee_detail_name;
            }
            set
            {
                Onfee_detail_nameChanging(value);
                ReportPropertyChanging("fee_detail_name");
                _fee_detail_name = StructuralObject.SetValidValue(value, false, "fee_detail_name");
                ReportPropertyChanged("fee_detail_name");
                Onfee_detail_nameChanged();
            }
        }
        private global::System.String _fee_detail_name;
        partial void Onfee_detail_nameChanging(global::System.String value);
        partial void Onfee_detail_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime effective_from
        {
            get
            {
                return _effective_from;
            }
            set
            {
                Oneffective_fromChanging(value);
                ReportPropertyChanging("effective_from");
                _effective_from = StructuralObject.SetValidValue(value, "effective_from");
                ReportPropertyChanged("effective_from");
                Oneffective_fromChanged();
            }
        }
        private global::System.DateTime _effective_from;
        partial void Oneffective_fromChanging(global::System.DateTime value);
        partial void Oneffective_fromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean fee_waiver_YN
        {
            get
            {
                return _fee_waiver_YN;
            }
            set
            {
                Onfee_waiver_YNChanging(value);
                ReportPropertyChanging("fee_waiver_YN");
                _fee_waiver_YN = StructuralObject.SetValidValue(value, "fee_waiver_YN");
                ReportPropertyChanged("fee_waiver_YN");
                Onfee_waiver_YNChanged();
            }
        }
        private global::System.Boolean _fee_waiver_YN;
        partial void Onfee_waiver_YNChanging(global::System.Boolean value);
        partial void Onfee_waiver_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean fee_editable_YN
        {
            get
            {
                return _fee_editable_YN;
            }
            set
            {
                Onfee_editable_YNChanging(value);
                ReportPropertyChanging("fee_editable_YN");
                _fee_editable_YN = StructuralObject.SetValidValue(value, "fee_editable_YN");
                ReportPropertyChanged("fee_editable_YN");
                Onfee_editable_YNChanged();
            }
        }
        private global::System.Boolean _fee_editable_YN;
        partial void Onfee_editable_YNChanging(global::System.Boolean value);
        partial void Onfee_editable_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean deleted_yn
        {
            get
            {
                return _deleted_yn;
            }
            set
            {
                Ondeleted_ynChanging(value);
                ReportPropertyChanging("deleted_yn");
                _deleted_yn = StructuralObject.SetValidValue(value, "deleted_yn");
                ReportPropertyChanged("deleted_yn");
                Ondeleted_ynChanged();
            }
        }
        private global::System.Boolean _deleted_yn;
        partial void Ondeleted_ynChanging(global::System.Boolean value);
        partial void Ondeleted_ynChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> effective_to
        {
            get
            {
                return _effective_to;
            }
            set
            {
                Oneffective_toChanging(value);
                ReportPropertyChanging("effective_to");
                _effective_to = StructuralObject.SetValidValue(value, "effective_to");
                ReportPropertyChanged("effective_to");
                Oneffective_toChanged();
            }
        }
        private Nullable<global::System.DateTime> _effective_to;
        partial void Oneffective_toChanging(Nullable<global::System.DateTime> value);
        partial void Oneffective_toChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fee_detail_id1
        {
            get
            {
                return _fee_detail_id1;
            }
            set
            {
                Onfee_detail_id1Changing(value);
                ReportPropertyChanging("fee_detail_id1");
                _fee_detail_id1 = StructuralObject.SetValidValue(value, "fee_detail_id1");
                ReportPropertyChanged("fee_detail_id1");
                Onfee_detail_id1Changed();
            }
        }
        private global::System.Int32 _fee_detail_id1;
        partial void Onfee_detail_id1Changing(global::System.Int32 value);
        partial void Onfee_detail_id1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 currency_id
        {
            get
            {
                return _currency_id;
            }
            set
            {
                Oncurrency_idChanging(value);
                ReportPropertyChanging("currency_id");
                _currency_id = StructuralObject.SetValidValue(value, "currency_id");
                ReportPropertyChanged("currency_id");
                Oncurrency_idChanged();
            }
        }
        private global::System.Int32 _currency_id;
        partial void Oncurrency_idChanging(global::System.Int32 value);
        partial void Oncurrency_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_reason_id
        {
            get
            {
                return _card_issue_reason_id;
            }
            set
            {
                Oncard_issue_reason_idChanging(value);
                ReportPropertyChanging("card_issue_reason_id");
                _card_issue_reason_id = StructuralObject.SetValidValue(value, "card_issue_reason_id");
                ReportPropertyChanged("card_issue_reason_id");
                Oncard_issue_reason_idChanged();
            }
        }
        private global::System.Int32 _card_issue_reason_id;
        partial void Oncard_issue_reason_idChanging(global::System.Int32 value);
        partial void Oncard_issue_reason_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal fee_charge
        {
            get
            {
                return _fee_charge;
            }
            set
            {
                Onfee_chargeChanging(value);
                ReportPropertyChanging("fee_charge");
                _fee_charge = StructuralObject.SetValidValue(value, "fee_charge");
                ReportPropertyChanged("fee_charge");
                Onfee_chargeChanged();
            }
        }
        private global::System.Decimal _fee_charge;
        partial void Onfee_chargeChanging(global::System.Decimal value);
        partial void Onfee_chargeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date_created
        {
            get
            {
                return _date_created;
            }
            set
            {
                Ondate_createdChanging(value);
                ReportPropertyChanging("date_created");
                _date_created = StructuralObject.SetValidValue(value, "date_created");
                ReportPropertyChanged("date_created");
                Ondate_createdChanged();
            }
        }
        private global::System.DateTime _date_created;
        partial void Ondate_createdChanging(global::System.DateTime value);
        partial void Ondate_createdChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_get_customercardsearch_list_activation_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_get_customercardsearch_list_activation_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_get_customercardsearch_list_activation_Result object.
        /// </summary>
        /// <param name="product_name">Initial value of the product_name property.</param>
        /// <param name="card_id">Initial value of the card_id property.</param>
        public static usp_get_customercardsearch_list_activation_Result Createusp_get_customercardsearch_list_activation_Result(global::System.String product_name, global::System.Int64 card_id)
        {
            usp_get_customercardsearch_list_activation_Result usp_get_customercardsearch_list_activation_Result = new usp_get_customercardsearch_list_activation_Result();
            usp_get_customercardsearch_list_activation_Result.product_name = product_name;
            usp_get_customercardsearch_list_activation_Result.card_id = card_id;
            return usp_get_customercardsearch_list_activation_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_name
        {
            get
            {
                return _product_name;
            }
            set
            {
                Onproduct_nameChanging(value);
                ReportPropertyChanging("product_name");
                _product_name = StructuralObject.SetValidValue(value, false, "product_name");
                ReportPropertyChanged("product_name");
                Onproduct_nameChanged();
            }
        }
        private global::System.String _product_name;
        partial void Onproduct_nameChanging(global::System.String value);
        partial void Onproduct_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_reference_number
        {
            get
            {
                return _card_reference_number;
            }
            set
            {
                Oncard_reference_numberChanging(value);
                ReportPropertyChanging("card_reference_number");
                _card_reference_number = StructuralObject.SetValidValue(value, true, "card_reference_number");
                ReportPropertyChanged("card_reference_number");
                Oncard_reference_numberChanged();
            }
        }
        private global::System.String _card_reference_number;
        partial void Oncard_reference_numberChanging(global::System.String value);
        partial void Oncard_reference_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 card_id
        {
            get
            {
                return _card_id;
            }
            set
            {
                Oncard_idChanging(value);
                ReportPropertyChanging("card_id");
                _card_id = StructuralObject.SetValidValue(value, "card_id");
                ReportPropertyChanged("card_id");
                Oncard_idChanged();
            }
        }
        private global::System.Int64 _card_id;
        partial void Oncard_idChanging(global::System.Int64 value);
        partial void Oncard_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, true, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, true, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String account_number
        {
            get
            {
                return _account_number;
            }
            set
            {
                Onaccount_numberChanging(value);
                ReportPropertyChanging("account_number");
                _account_number = StructuralObject.SetValidValue(value, true, "account_number");
                ReportPropertyChanged("account_number");
                Onaccount_numberChanged();
            }
        }
        private global::System.String _account_number;
        partial void Onaccount_numberChanging(global::System.String value);
        partial void Onaccount_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> renewal_detail_id
        {
            get
            {
                return _renewal_detail_id;
            }
            set
            {
                Onrenewal_detail_idChanging(value);
                ReportPropertyChanging("renewal_detail_id");
                _renewal_detail_id = StructuralObject.SetValidValue(value, "renewal_detail_id");
                ReportPropertyChanged("renewal_detail_id");
                Onrenewal_detail_idChanged();
            }
        }
        private Nullable<global::System.Int64> _renewal_detail_id;
        partial void Onrenewal_detail_idChanging(Nullable<global::System.Int64> value);
        partial void Onrenewal_detail_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_get_customercardsearch_list_renewal_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_get_customercardsearch_list_renewal_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_get_customercardsearch_list_renewal_Result object.
        /// </summary>
        /// <param name="product_name">Initial value of the product_name property.</param>
        /// <param name="card_id">Initial value of the card_id property.</param>
        /// <param name="renewal_detail_id">Initial value of the renewal_detail_id property.</param>
        public static usp_get_customercardsearch_list_renewal_Result Createusp_get_customercardsearch_list_renewal_Result(global::System.String product_name, global::System.Int64 card_id, global::System.Int64 renewal_detail_id)
        {
            usp_get_customercardsearch_list_renewal_Result usp_get_customercardsearch_list_renewal_Result = new usp_get_customercardsearch_list_renewal_Result();
            usp_get_customercardsearch_list_renewal_Result.product_name = product_name;
            usp_get_customercardsearch_list_renewal_Result.card_id = card_id;
            usp_get_customercardsearch_list_renewal_Result.renewal_detail_id = renewal_detail_id;
            return usp_get_customercardsearch_list_renewal_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_name
        {
            get
            {
                return _product_name;
            }
            set
            {
                Onproduct_nameChanging(value);
                ReportPropertyChanging("product_name");
                _product_name = StructuralObject.SetValidValue(value, false, "product_name");
                ReportPropertyChanged("product_name");
                Onproduct_nameChanged();
            }
        }
        private global::System.String _product_name;
        partial void Onproduct_nameChanging(global::System.String value);
        partial void Onproduct_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_reference_number
        {
            get
            {
                return _card_reference_number;
            }
            set
            {
                Oncard_reference_numberChanging(value);
                ReportPropertyChanging("card_reference_number");
                _card_reference_number = StructuralObject.SetValidValue(value, true, "card_reference_number");
                ReportPropertyChanged("card_reference_number");
                Oncard_reference_numberChanged();
            }
        }
        private global::System.String _card_reference_number;
        partial void Oncard_reference_numberChanging(global::System.String value);
        partial void Oncard_reference_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 card_id
        {
            get
            {
                return _card_id;
            }
            set
            {
                Oncard_idChanging(value);
                ReportPropertyChanging("card_id");
                _card_id = StructuralObject.SetValidValue(value, "card_id");
                ReportPropertyChanged("card_id");
                Oncard_idChanged();
            }
        }
        private global::System.Int64 _card_id;
        partial void Oncard_idChanging(global::System.Int64 value);
        partial void Oncard_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, true, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, true, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String account_number
        {
            get
            {
                return _account_number;
            }
            set
            {
                Onaccount_numberChanging(value);
                ReportPropertyChanging("account_number");
                _account_number = StructuralObject.SetValidValue(value, true, "account_number");
                ReportPropertyChanged("account_number");
                Onaccount_numberChanged();
            }
        }
        private global::System.String _account_number;
        partial void Onaccount_numberChanging(global::System.String value);
        partial void Onaccount_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 renewal_detail_id
        {
            get
            {
                return _renewal_detail_id;
            }
            set
            {
                Onrenewal_detail_idChanging(value);
                ReportPropertyChanging("renewal_detail_id");
                _renewal_detail_id = StructuralObject.SetValidValue(value, "renewal_detail_id");
                ReportPropertyChanged("renewal_detail_id");
                Onrenewal_detail_idChanged();
            }
        }
        private global::System.Int64 _renewal_detail_id;
        partial void Onrenewal_detail_idChanging(global::System.Int64 value);
        partial void Onrenewal_detail_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_get_dist_batch_card_count_for_distribution_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_get_dist_batch_card_count_for_distribution_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_get_dist_batch_card_count_for_distribution_Result object.
        /// </summary>
        /// <param name="dist_batch_id">Initial value of the dist_batch_id property.</param>
        /// <param name="no_cards">Initial value of the no_cards property.</param>
        /// <param name="date_created">Initial value of the date_created property.</param>
        /// <param name="dist_batch_reference">Initial value of the dist_batch_reference property.</param>
        /// <param name="card_issue_method_id">Initial value of the card_issue_method_id property.</param>
        /// <param name="dist_batch_type_id">Initial value of the dist_batch_type_id property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="dist_batch_status_id">Initial value of the dist_batch_status_id property.</param>
        /// <param name="dist_batch_id1">Initial value of the dist_batch_id1 property.</param>
        /// <param name="dist_batch_statuses_id">Initial value of the dist_batch_statuses_id property.</param>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="status_date">Initial value of the status_date property.</param>
        /// <param name="dist_batch_id2">Initial value of the dist_batch_id2 property.</param>
        /// <param name="card_id">Initial value of the card_id property.</param>
        /// <param name="dist_card_status_id">Initial value of the dist_card_status_id property.</param>
        /// <param name="branch_card_status_id">Initial value of the branch_card_status_id property.</param>
        /// <param name="card_id1">Initial value of the card_id1 property.</param>
        /// <param name="card_priority_id">Initial value of the card_priority_id property.</param>
        /// <param name="product_id">Initial value of the product_id property.</param>
        /// <param name="card_issue_method_id1">Initial value of the card_issue_method_id1 property.</param>
        /// <param name="branch_id1">Initial value of the branch_id1 property.</param>
        /// <param name="branch_card_statuses_id">Initial value of the branch_card_statuses_id property.</param>
        /// <param name="status_date1">Initial value of the status_date1 property.</param>
        /// <param name="user_id1">Initial value of the user_id1 property.</param>
        public static usp_get_dist_batch_card_count_for_distribution_Result Createusp_get_dist_batch_card_count_for_distribution_Result(global::System.Int64 dist_batch_id, global::System.Int32 no_cards, global::System.DateTime date_created, global::System.String dist_batch_reference, global::System.Int32 card_issue_method_id, global::System.Int32 dist_batch_type_id, global::System.Int32 issuer_id, global::System.Int64 dist_batch_status_id, global::System.Int64 dist_batch_id1, global::System.Int32 dist_batch_statuses_id, global::System.Int64 user_id, global::System.DateTime status_date, global::System.Int64 dist_batch_id2, global::System.Int64 card_id, global::System.Int32 dist_card_status_id, global::System.Int64 branch_card_status_id, global::System.Int64 card_id1, global::System.Int32 card_priority_id, global::System.Int32 product_id, global::System.Int32 card_issue_method_id1, global::System.Int32 branch_id1, global::System.Int32 branch_card_statuses_id, global::System.DateTime status_date1, global::System.Int64 user_id1)
        {
            usp_get_dist_batch_card_count_for_distribution_Result usp_get_dist_batch_card_count_for_distribution_Result = new usp_get_dist_batch_card_count_for_distribution_Result();
            usp_get_dist_batch_card_count_for_distribution_Result.dist_batch_id = dist_batch_id;
            usp_get_dist_batch_card_count_for_distribution_Result.no_cards = no_cards;
            usp_get_dist_batch_card_count_for_distribution_Result.date_created = date_created;
            usp_get_dist_batch_card_count_for_distribution_Result.dist_batch_reference = dist_batch_reference;
            usp_get_dist_batch_card_count_for_distribution_Result.card_issue_method_id = card_issue_method_id;
            usp_get_dist_batch_card_count_for_distribution_Result.dist_batch_type_id = dist_batch_type_id;
            usp_get_dist_batch_card_count_for_distribution_Result.issuer_id = issuer_id;
            usp_get_dist_batch_card_count_for_distribution_Result.dist_batch_status_id = dist_batch_status_id;
            usp_get_dist_batch_card_count_for_distribution_Result.dist_batch_id1 = dist_batch_id1;
            usp_get_dist_batch_card_count_for_distribution_Result.dist_batch_statuses_id = dist_batch_statuses_id;
            usp_get_dist_batch_card_count_for_distribution_Result.user_id = user_id;
            usp_get_dist_batch_card_count_for_distribution_Result.status_date = status_date;
            usp_get_dist_batch_card_count_for_distribution_Result.dist_batch_id2 = dist_batch_id2;
            usp_get_dist_batch_card_count_for_distribution_Result.card_id = card_id;
            usp_get_dist_batch_card_count_for_distribution_Result.dist_card_status_id = dist_card_status_id;
            usp_get_dist_batch_card_count_for_distribution_Result.branch_card_status_id = branch_card_status_id;
            usp_get_dist_batch_card_count_for_distribution_Result.card_id1 = card_id1;
            usp_get_dist_batch_card_count_for_distribution_Result.card_priority_id = card_priority_id;
            usp_get_dist_batch_card_count_for_distribution_Result.product_id = product_id;
            usp_get_dist_batch_card_count_for_distribution_Result.card_issue_method_id1 = card_issue_method_id1;
            usp_get_dist_batch_card_count_for_distribution_Result.branch_id1 = branch_id1;
            usp_get_dist_batch_card_count_for_distribution_Result.branch_card_statuses_id = branch_card_statuses_id;
            usp_get_dist_batch_card_count_for_distribution_Result.status_date1 = status_date1;
            usp_get_dist_batch_card_count_for_distribution_Result.user_id1 = user_id1;
            return usp_get_dist_batch_card_count_for_distribution_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 dist_batch_id
        {
            get
            {
                return _dist_batch_id;
            }
            set
            {
                Ondist_batch_idChanging(value);
                ReportPropertyChanging("dist_batch_id");
                _dist_batch_id = StructuralObject.SetValidValue(value, "dist_batch_id");
                ReportPropertyChanged("dist_batch_id");
                Ondist_batch_idChanged();
            }
        }
        private global::System.Int64 _dist_batch_id;
        partial void Ondist_batch_idChanging(global::System.Int64 value);
        partial void Ondist_batch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private Nullable<global::System.Int32> _branch_id;
        partial void Onbranch_idChanging(Nullable<global::System.Int32> value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 no_cards
        {
            get
            {
                return _no_cards;
            }
            set
            {
                Onno_cardsChanging(value);
                ReportPropertyChanging("no_cards");
                _no_cards = StructuralObject.SetValidValue(value, "no_cards");
                ReportPropertyChanged("no_cards");
                Onno_cardsChanged();
            }
        }
        private global::System.Int32 _no_cards;
        partial void Onno_cardsChanging(global::System.Int32 value);
        partial void Onno_cardsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date_created
        {
            get
            {
                return _date_created;
            }
            set
            {
                Ondate_createdChanging(value);
                ReportPropertyChanging("date_created");
                _date_created = StructuralObject.SetValidValue(value, "date_created");
                ReportPropertyChanged("date_created");
                Ondate_createdChanged();
            }
        }
        private global::System.DateTime _date_created;
        partial void Ondate_createdChanging(global::System.DateTime value);
        partial void Ondate_createdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String dist_batch_reference
        {
            get
            {
                return _dist_batch_reference;
            }
            set
            {
                Ondist_batch_referenceChanging(value);
                ReportPropertyChanging("dist_batch_reference");
                _dist_batch_reference = StructuralObject.SetValidValue(value, false, "dist_batch_reference");
                ReportPropertyChanged("dist_batch_reference");
                Ondist_batch_referenceChanged();
            }
        }
        private global::System.String _dist_batch_reference;
        partial void Ondist_batch_referenceChanging(global::System.String value);
        partial void Ondist_batch_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_method_id
        {
            get
            {
                return _card_issue_method_id;
            }
            set
            {
                Oncard_issue_method_idChanging(value);
                ReportPropertyChanging("card_issue_method_id");
                _card_issue_method_id = StructuralObject.SetValidValue(value, "card_issue_method_id");
                ReportPropertyChanged("card_issue_method_id");
                Oncard_issue_method_idChanged();
            }
        }
        private global::System.Int32 _card_issue_method_id;
        partial void Oncard_issue_method_idChanging(global::System.Int32 value);
        partial void Oncard_issue_method_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dist_batch_type_id
        {
            get
            {
                return _dist_batch_type_id;
            }
            set
            {
                Ondist_batch_type_idChanging(value);
                ReportPropertyChanging("dist_batch_type_id");
                _dist_batch_type_id = StructuralObject.SetValidValue(value, "dist_batch_type_id");
                ReportPropertyChanged("dist_batch_type_id");
                Ondist_batch_type_idChanged();
            }
        }
        private global::System.Int32 _dist_batch_type_id;
        partial void Ondist_batch_type_idChanging(global::System.Int32 value);
        partial void Ondist_batch_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 dist_batch_status_id
        {
            get
            {
                return _dist_batch_status_id;
            }
            set
            {
                Ondist_batch_status_idChanging(value);
                ReportPropertyChanging("dist_batch_status_id");
                _dist_batch_status_id = StructuralObject.SetValidValue(value, "dist_batch_status_id");
                ReportPropertyChanged("dist_batch_status_id");
                Ondist_batch_status_idChanged();
            }
        }
        private global::System.Int64 _dist_batch_status_id;
        partial void Ondist_batch_status_idChanging(global::System.Int64 value);
        partial void Ondist_batch_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 dist_batch_id1
        {
            get
            {
                return _dist_batch_id1;
            }
            set
            {
                Ondist_batch_id1Changing(value);
                ReportPropertyChanging("dist_batch_id1");
                _dist_batch_id1 = StructuralObject.SetValidValue(value, "dist_batch_id1");
                ReportPropertyChanged("dist_batch_id1");
                Ondist_batch_id1Changed();
            }
        }
        private global::System.Int64 _dist_batch_id1;
        partial void Ondist_batch_id1Changing(global::System.Int64 value);
        partial void Ondist_batch_id1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dist_batch_statuses_id
        {
            get
            {
                return _dist_batch_statuses_id;
            }
            set
            {
                Ondist_batch_statuses_idChanging(value);
                ReportPropertyChanging("dist_batch_statuses_id");
                _dist_batch_statuses_id = StructuralObject.SetValidValue(value, "dist_batch_statuses_id");
                ReportPropertyChanged("dist_batch_statuses_id");
                Ondist_batch_statuses_idChanged();
            }
        }
        private global::System.Int32 _dist_batch_statuses_id;
        partial void Ondist_batch_statuses_idChanging(global::System.Int32 value);
        partial void Ondist_batch_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value, "user_id");
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int64 _user_id;
        partial void Onuser_idChanging(global::System.Int64 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime status_date
        {
            get
            {
                return _status_date;
            }
            set
            {
                Onstatus_dateChanging(value);
                ReportPropertyChanging("status_date");
                _status_date = StructuralObject.SetValidValue(value, "status_date");
                ReportPropertyChanged("status_date");
                Onstatus_dateChanged();
            }
        }
        private global::System.DateTime _status_date;
        partial void Onstatus_dateChanging(global::System.DateTime value);
        partial void Onstatus_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String status_notes
        {
            get
            {
                return _status_notes;
            }
            set
            {
                Onstatus_notesChanging(value);
                ReportPropertyChanging("status_notes");
                _status_notes = StructuralObject.SetValidValue(value, true, "status_notes");
                ReportPropertyChanged("status_notes");
                Onstatus_notesChanged();
            }
        }
        private global::System.String _status_notes;
        partial void Onstatus_notesChanging(global::System.String value);
        partial void Onstatus_notesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 dist_batch_id2
        {
            get
            {
                return _dist_batch_id2;
            }
            set
            {
                Ondist_batch_id2Changing(value);
                ReportPropertyChanging("dist_batch_id2");
                _dist_batch_id2 = StructuralObject.SetValidValue(value, "dist_batch_id2");
                ReportPropertyChanged("dist_batch_id2");
                Ondist_batch_id2Changed();
            }
        }
        private global::System.Int64 _dist_batch_id2;
        partial void Ondist_batch_id2Changing(global::System.Int64 value);
        partial void Ondist_batch_id2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 card_id
        {
            get
            {
                return _card_id;
            }
            set
            {
                Oncard_idChanging(value);
                ReportPropertyChanging("card_id");
                _card_id = StructuralObject.SetValidValue(value, "card_id");
                ReportPropertyChanged("card_id");
                Oncard_idChanged();
            }
        }
        private global::System.Int64 _card_id;
        partial void Oncard_idChanging(global::System.Int64 value);
        partial void Oncard_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dist_card_status_id
        {
            get
            {
                return _dist_card_status_id;
            }
            set
            {
                Ondist_card_status_idChanging(value);
                ReportPropertyChanging("dist_card_status_id");
                _dist_card_status_id = StructuralObject.SetValidValue(value, "dist_card_status_id");
                ReportPropertyChanged("dist_card_status_id");
                Ondist_card_status_idChanged();
            }
        }
        private global::System.Int32 _dist_card_status_id;
        partial void Ondist_card_status_idChanging(global::System.Int32 value);
        partial void Ondist_card_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 branch_card_status_id
        {
            get
            {
                return _branch_card_status_id;
            }
            set
            {
                Onbranch_card_status_idChanging(value);
                ReportPropertyChanging("branch_card_status_id");
                _branch_card_status_id = StructuralObject.SetValidValue(value, "branch_card_status_id");
                ReportPropertyChanged("branch_card_status_id");
                Onbranch_card_status_idChanged();
            }
        }
        private global::System.Int64 _branch_card_status_id;
        partial void Onbranch_card_status_idChanging(global::System.Int64 value);
        partial void Onbranch_card_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 card_id1
        {
            get
            {
                return _card_id1;
            }
            set
            {
                Oncard_id1Changing(value);
                ReportPropertyChanging("card_id1");
                _card_id1 = StructuralObject.SetValidValue(value, "card_id1");
                ReportPropertyChanged("card_id1");
                Oncard_id1Changed();
            }
        }
        private global::System.Int64 _card_id1;
        partial void Oncard_id1Changing(global::System.Int64 value);
        partial void Oncard_id1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_priority_id
        {
            get
            {
                return _card_priority_id;
            }
            set
            {
                Oncard_priority_idChanging(value);
                ReportPropertyChanging("card_priority_id");
                _card_priority_id = StructuralObject.SetValidValue(value, "card_priority_id");
                ReportPropertyChanged("card_priority_id");
                Oncard_priority_idChanged();
            }
        }
        private global::System.Int32 _card_priority_id;
        partial void Oncard_priority_idChanging(global::System.Int32 value);
        partial void Oncard_priority_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private global::System.Int32 _product_id;
        partial void Onproduct_idChanging(global::System.Int32 value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_method_id1
        {
            get
            {
                return _card_issue_method_id1;
            }
            set
            {
                Oncard_issue_method_id1Changing(value);
                ReportPropertyChanging("card_issue_method_id1");
                _card_issue_method_id1 = StructuralObject.SetValidValue(value, "card_issue_method_id1");
                ReportPropertyChanged("card_issue_method_id1");
                Oncard_issue_method_id1Changed();
            }
        }
        private global::System.Int32 _card_issue_method_id1;
        partial void Oncard_issue_method_id1Changing(global::System.Int32 value);
        partial void Oncard_issue_method_id1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_id1
        {
            get
            {
                return _branch_id1;
            }
            set
            {
                Onbranch_id1Changing(value);
                ReportPropertyChanging("branch_id1");
                _branch_id1 = StructuralObject.SetValidValue(value, "branch_id1");
                ReportPropertyChanged("branch_id1");
                Onbranch_id1Changed();
            }
        }
        private global::System.Int32 _branch_id1;
        partial void Onbranch_id1Changing(global::System.Int32 value);
        partial void Onbranch_id1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_card_statuses_id
        {
            get
            {
                return _branch_card_statuses_id;
            }
            set
            {
                Onbranch_card_statuses_idChanging(value);
                ReportPropertyChanging("branch_card_statuses_id");
                _branch_card_statuses_id = StructuralObject.SetValidValue(value, "branch_card_statuses_id");
                ReportPropertyChanged("branch_card_statuses_id");
                Onbranch_card_statuses_idChanged();
            }
        }
        private global::System.Int32 _branch_card_statuses_id;
        partial void Onbranch_card_statuses_idChanging(global::System.Int32 value);
        partial void Onbranch_card_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime status_date1
        {
            get
            {
                return _status_date1;
            }
            set
            {
                Onstatus_date1Changing(value);
                ReportPropertyChanging("status_date1");
                _status_date1 = StructuralObject.SetValidValue(value, "status_date1");
                ReportPropertyChanged("status_date1");
                Onstatus_date1Changed();
            }
        }
        private global::System.DateTime _status_date1;
        partial void Onstatus_date1Changing(global::System.DateTime value);
        partial void Onstatus_date1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 user_id1
        {
            get
            {
                return _user_id1;
            }
            set
            {
                Onuser_id1Changing(value);
                ReportPropertyChanging("user_id1");
                _user_id1 = StructuralObject.SetValidValue(value, "user_id1");
                ReportPropertyChanged("user_id1");
                Onuser_id1Changed();
            }
        }
        private global::System.Int64 _user_id1;
        partial void Onuser_id1Changing(global::System.Int64 value);
        partial void Onuser_id1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> operator_user_id
        {
            get
            {
                return _operator_user_id;
            }
            set
            {
                Onoperator_user_idChanging(value);
                ReportPropertyChanging("operator_user_id");
                _operator_user_id = StructuralObject.SetValidValue(value, "operator_user_id");
                ReportPropertyChanged("operator_user_id");
                Onoperator_user_idChanged();
            }
        }
        private Nullable<global::System.Int64> _operator_user_id;
        partial void Onoperator_user_idChanging(Nullable<global::System.Int64> value);
        partial void Onoperator_user_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> branch_card_code_id
        {
            get
            {
                return _branch_card_code_id;
            }
            set
            {
                Onbranch_card_code_idChanging(value);
                ReportPropertyChanging("branch_card_code_id");
                _branch_card_code_id = StructuralObject.SetValidValue(value, "branch_card_code_id");
                ReportPropertyChanged("branch_card_code_id");
                Onbranch_card_code_idChanged();
            }
        }
        private Nullable<global::System.Int32> _branch_card_code_id;
        partial void Onbranch_card_code_idChanging(Nullable<global::System.Int32> value);
        partial void Onbranch_card_code_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comments
        {
            get
            {
                return _comments;
            }
            set
            {
                OncommentsChanging(value);
                ReportPropertyChanging("comments");
                _comments = StructuralObject.SetValidValue(value, true, "comments");
                ReportPropertyChanged("comments");
                OncommentsChanged();
            }
        }
        private global::System.String _comments;
        partial void OncommentsChanging(global::System.String value);
        partial void OncommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Expr1
        {
            get
            {
                return _Expr1;
            }
            set
            {
                OnExpr1Changing(value);
                ReportPropertyChanging("Expr1");
                _Expr1 = StructuralObject.SetValidValue(value, "Expr1");
                ReportPropertyChanged("Expr1");
                OnExpr1Changed();
            }
        }
        private Nullable<global::System.Int32> _Expr1;
        partial void OnExpr1Changing(Nullable<global::System.Int32> value);
        partial void OnExpr1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> branch_card_code_type_id
        {
            get
            {
                return _branch_card_code_type_id;
            }
            set
            {
                Onbranch_card_code_type_idChanging(value);
                ReportPropertyChanging("branch_card_code_type_id");
                _branch_card_code_type_id = StructuralObject.SetValidValue(value, "branch_card_code_type_id");
                ReportPropertyChanged("branch_card_code_type_id");
                Onbranch_card_code_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _branch_card_code_type_id;
        partial void Onbranch_card_code_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onbranch_card_code_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branch_card_code_name
        {
            get
            {
                return _branch_card_code_name;
            }
            set
            {
                Onbranch_card_code_nameChanging(value);
                ReportPropertyChanging("branch_card_code_name");
                _branch_card_code_name = StructuralObject.SetValidValue(value, true, "branch_card_code_name");
                ReportPropertyChanged("branch_card_code_name");
                Onbranch_card_code_nameChanged();
            }
        }
        private global::System.String _branch_card_code_name;
        partial void Onbranch_card_code_nameChanging(global::System.String value);
        partial void Onbranch_card_code_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> branch_card_code_enabled
        {
            get
            {
                return _branch_card_code_enabled;
            }
            set
            {
                Onbranch_card_code_enabledChanging(value);
                ReportPropertyChanging("branch_card_code_enabled");
                _branch_card_code_enabled = StructuralObject.SetValidValue(value, "branch_card_code_enabled");
                ReportPropertyChanged("branch_card_code_enabled");
                Onbranch_card_code_enabledChanged();
            }
        }
        private Nullable<global::System.Boolean> _branch_card_code_enabled;
        partial void Onbranch_card_code_enabledChanging(Nullable<global::System.Boolean> value);
        partial void Onbranch_card_code_enabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> spoil_only
        {
            get
            {
                return _spoil_only;
            }
            set
            {
                Onspoil_onlyChanging(value);
                ReportPropertyChanging("spoil_only");
                _spoil_only = StructuralObject.SetValidValue(value, "spoil_only");
                ReportPropertyChanged("spoil_only");
                Onspoil_onlyChanged();
            }
        }
        private Nullable<global::System.Boolean> _spoil_only;
        partial void Onspoil_onlyChanging(Nullable<global::System.Boolean> value);
        partial void Onspoil_onlyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> is_exception
        {
            get
            {
                return _is_exception;
            }
            set
            {
                Onis_exceptionChanging(value);
                ReportPropertyChanging("is_exception");
                _is_exception = StructuralObject.SetValidValue(value, "is_exception");
                ReportPropertyChanged("is_exception");
                Onis_exceptionChanged();
            }
        }
        private Nullable<global::System.Boolean> _is_exception;
        partial void Onis_exceptionChanging(Nullable<global::System.Boolean> value);
        partial void Onis_exceptionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_get_dist_batch_flows_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_get_dist_batch_flows_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_get_dist_batch_flows_Result object.
        /// </summary>
        /// <param name="dist_batch_status_flow_id">Initial value of the dist_batch_status_flow_id property.</param>
        /// <param name="dist_batch_status_flow_name">Initial value of the dist_batch_status_flow_name property.</param>
        /// <param name="dist_batch_type_id">Initial value of the dist_batch_type_id property.</param>
        /// <param name="card_issue_method_id">Initial value of the card_issue_method_id property.</param>
        public static usp_get_dist_batch_flows_Result Createusp_get_dist_batch_flows_Result(global::System.Int32 dist_batch_status_flow_id, global::System.String dist_batch_status_flow_name, global::System.Int32 dist_batch_type_id, global::System.Int32 card_issue_method_id)
        {
            usp_get_dist_batch_flows_Result usp_get_dist_batch_flows_Result = new usp_get_dist_batch_flows_Result();
            usp_get_dist_batch_flows_Result.dist_batch_status_flow_id = dist_batch_status_flow_id;
            usp_get_dist_batch_flows_Result.dist_batch_status_flow_name = dist_batch_status_flow_name;
            usp_get_dist_batch_flows_Result.dist_batch_type_id = dist_batch_type_id;
            usp_get_dist_batch_flows_Result.card_issue_method_id = card_issue_method_id;
            return usp_get_dist_batch_flows_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dist_batch_status_flow_id
        {
            get
            {
                return _dist_batch_status_flow_id;
            }
            set
            {
                Ondist_batch_status_flow_idChanging(value);
                ReportPropertyChanging("dist_batch_status_flow_id");
                _dist_batch_status_flow_id = StructuralObject.SetValidValue(value, "dist_batch_status_flow_id");
                ReportPropertyChanged("dist_batch_status_flow_id");
                Ondist_batch_status_flow_idChanged();
            }
        }
        private global::System.Int32 _dist_batch_status_flow_id;
        partial void Ondist_batch_status_flow_idChanging(global::System.Int32 value);
        partial void Ondist_batch_status_flow_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String dist_batch_status_flow_name
        {
            get
            {
                return _dist_batch_status_flow_name;
            }
            set
            {
                Ondist_batch_status_flow_nameChanging(value);
                ReportPropertyChanging("dist_batch_status_flow_name");
                _dist_batch_status_flow_name = StructuralObject.SetValidValue(value, false, "dist_batch_status_flow_name");
                ReportPropertyChanged("dist_batch_status_flow_name");
                Ondist_batch_status_flow_nameChanged();
            }
        }
        private global::System.String _dist_batch_status_flow_name;
        partial void Ondist_batch_status_flow_nameChanging(global::System.String value);
        partial void Ondist_batch_status_flow_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dist_batch_type_id
        {
            get
            {
                return _dist_batch_type_id;
            }
            set
            {
                Ondist_batch_type_idChanging(value);
                ReportPropertyChanging("dist_batch_type_id");
                _dist_batch_type_id = StructuralObject.SetValidValue(value, "dist_batch_type_id");
                ReportPropertyChanged("dist_batch_type_id");
                Ondist_batch_type_idChanged();
            }
        }
        private global::System.Int32 _dist_batch_type_id;
        partial void Ondist_batch_type_idChanging(global::System.Int32 value);
        partial void Ondist_batch_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_method_id
        {
            get
            {
                return _card_issue_method_id;
            }
            set
            {
                Oncard_issue_method_idChanging(value);
                ReportPropertyChanging("card_issue_method_id");
                _card_issue_method_id = StructuralObject.SetValidValue(value, "card_issue_method_id");
                ReportPropertyChanged("card_issue_method_id");
                Oncard_issue_method_idChanged();
            }
        }
        private global::System.Int32 _card_issue_method_id;
        partial void Oncard_issue_method_idChanging(global::System.Int32 value);
        partial void Oncard_issue_method_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_get_export_batch_history_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_get_export_batch_history_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_get_export_batch_history_Result object.
        /// </summary>
        /// <param name="batch_reference">Initial value of the batch_reference property.</param>
        /// <param name="no_cards">Initial value of the no_cards property.</param>
        /// <param name="status_date">Initial value of the status_date property.</param>
        /// <param name="comments">Initial value of the comments property.</param>
        /// <param name="export_batch_status_name">Initial value of the export_batch_status_name property.</param>
        public static usp_get_export_batch_history_Result Createusp_get_export_batch_history_Result(global::System.String batch_reference, global::System.Int32 no_cards, global::System.DateTime status_date, global::System.String comments, global::System.String export_batch_status_name)
        {
            usp_get_export_batch_history_Result usp_get_export_batch_history_Result = new usp_get_export_batch_history_Result();
            usp_get_export_batch_history_Result.batch_reference = batch_reference;
            usp_get_export_batch_history_Result.no_cards = no_cards;
            usp_get_export_batch_history_Result.status_date = status_date;
            usp_get_export_batch_history_Result.comments = comments;
            usp_get_export_batch_history_Result.export_batch_status_name = export_batch_status_name;
            return usp_get_export_batch_history_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String batch_reference
        {
            get
            {
                return _batch_reference;
            }
            set
            {
                Onbatch_referenceChanging(value);
                ReportPropertyChanging("batch_reference");
                _batch_reference = StructuralObject.SetValidValue(value, false, "batch_reference");
                ReportPropertyChanged("batch_reference");
                Onbatch_referenceChanged();
            }
        }
        private global::System.String _batch_reference;
        partial void Onbatch_referenceChanging(global::System.String value);
        partial void Onbatch_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 no_cards
        {
            get
            {
                return _no_cards;
            }
            set
            {
                Onno_cardsChanging(value);
                ReportPropertyChanging("no_cards");
                _no_cards = StructuralObject.SetValidValue(value, "no_cards");
                ReportPropertyChanged("no_cards");
                Onno_cardsChanged();
            }
        }
        private global::System.Int32 _no_cards;
        partial void Onno_cardsChanging(global::System.Int32 value);
        partial void Onno_cardsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime status_date
        {
            get
            {
                return _status_date;
            }
            set
            {
                Onstatus_dateChanging(value);
                ReportPropertyChanging("status_date");
                _status_date = StructuralObject.SetValidValue(value, "status_date");
                ReportPropertyChanged("status_date");
                Onstatus_dateChanged();
            }
        }
        private global::System.DateTime _status_date;
        partial void Onstatus_dateChanging(global::System.DateTime value);
        partial void Onstatus_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String comments
        {
            get
            {
                return _comments;
            }
            set
            {
                OncommentsChanging(value);
                ReportPropertyChanging("comments");
                _comments = StructuralObject.SetValidValue(value, false, "comments");
                ReportPropertyChanged("comments");
                OncommentsChanged();
            }
        }
        private global::System.String _comments;
        partial void OncommentsChanging(global::System.String value);
        partial void OncommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String export_batch_status_name
        {
            get
            {
                return _export_batch_status_name;
            }
            set
            {
                Onexport_batch_status_nameChanging(value);
                ReportPropertyChanging("export_batch_status_name");
                _export_batch_status_name = StructuralObject.SetValidValue(value, false, "export_batch_status_name");
                ReportPropertyChanged("export_batch_status_name");
                Onexport_batch_status_nameChanged();
            }
        }
        private global::System.String _export_batch_status_name;
        partial void Onexport_batch_status_nameChanging(global::System.String value);
        partial void Onexport_batch_status_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, true, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, true, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_get_fileloaderlog_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_get_fileloaderlog_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_get_fileloaderlog_Result object.
        /// </summary>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="file_id">Initial value of the file_id property.</param>
        /// <param name="file_status">Initial value of the file_status property.</param>
        /// <param name="name_of_file">Initial value of the name_of_file property.</param>
        /// <param name="file_created_date">Initial value of the file_created_date property.</param>
        /// <param name="file_size">Initial value of the file_size property.</param>
        /// <param name="load_date">Initial value of the load_date property.</param>
        /// <param name="file_directory">Initial value of the file_directory property.</param>
        /// <param name="file_type">Initial value of the file_type property.</param>
        public static usp_get_fileloaderlog_Result Createusp_get_fileloaderlog_Result(global::System.Int32 issuer_id, global::System.Int64 file_id, global::System.String file_status, global::System.String name_of_file, global::System.DateTime file_created_date, global::System.Int32 file_size, global::System.DateTime load_date, global::System.String file_directory, global::System.String file_type)
        {
            usp_get_fileloaderlog_Result usp_get_fileloaderlog_Result = new usp_get_fileloaderlog_Result();
            usp_get_fileloaderlog_Result.issuer_id = issuer_id;
            usp_get_fileloaderlog_Result.file_id = file_id;
            usp_get_fileloaderlog_Result.file_status = file_status;
            usp_get_fileloaderlog_Result.name_of_file = name_of_file;
            usp_get_fileloaderlog_Result.file_created_date = file_created_date;
            usp_get_fileloaderlog_Result.file_size = file_size;
            usp_get_fileloaderlog_Result.load_date = load_date;
            usp_get_fileloaderlog_Result.file_directory = file_directory;
            usp_get_fileloaderlog_Result.file_type = file_type;
            return usp_get_fileloaderlog_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 file_id
        {
            get
            {
                return _file_id;
            }
            set
            {
                Onfile_idChanging(value);
                ReportPropertyChanging("file_id");
                _file_id = StructuralObject.SetValidValue(value, "file_id");
                ReportPropertyChanged("file_id");
                Onfile_idChanged();
            }
        }
        private global::System.Int64 _file_id;
        partial void Onfile_idChanging(global::System.Int64 value);
        partial void Onfile_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String file_status
        {
            get
            {
                return _file_status;
            }
            set
            {
                Onfile_statusChanging(value);
                ReportPropertyChanging("file_status");
                _file_status = StructuralObject.SetValidValue(value, false, "file_status");
                ReportPropertyChanged("file_status");
                Onfile_statusChanged();
            }
        }
        private global::System.String _file_status;
        partial void Onfile_statusChanging(global::System.String value);
        partial void Onfile_statusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> number_successful_records
        {
            get
            {
                return _number_successful_records;
            }
            set
            {
                Onnumber_successful_recordsChanging(value);
                ReportPropertyChanging("number_successful_records");
                _number_successful_records = StructuralObject.SetValidValue(value, "number_successful_records");
                ReportPropertyChanged("number_successful_records");
                Onnumber_successful_recordsChanged();
            }
        }
        private Nullable<global::System.Int32> _number_successful_records;
        partial void Onnumber_successful_recordsChanging(Nullable<global::System.Int32> value);
        partial void Onnumber_successful_recordsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> number_failed_records
        {
            get
            {
                return _number_failed_records;
            }
            set
            {
                Onnumber_failed_recordsChanging(value);
                ReportPropertyChanging("number_failed_records");
                _number_failed_records = StructuralObject.SetValidValue(value, "number_failed_records");
                ReportPropertyChanged("number_failed_records");
                Onnumber_failed_recordsChanged();
            }
        }
        private Nullable<global::System.Int32> _number_failed_records;
        partial void Onnumber_failed_recordsChanging(Nullable<global::System.Int32> value);
        partial void Onnumber_failed_recordsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String file_load_comments
        {
            get
            {
                return _file_load_comments;
            }
            set
            {
                Onfile_load_commentsChanging(value);
                ReportPropertyChanging("file_load_comments");
                _file_load_comments = StructuralObject.SetValidValue(value, true, "file_load_comments");
                ReportPropertyChanged("file_load_comments");
                Onfile_load_commentsChanged();
            }
        }
        private global::System.String _file_load_comments;
        partial void Onfile_load_commentsChanging(global::System.String value);
        partial void Onfile_load_commentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name_of_file
        {
            get
            {
                return _name_of_file;
            }
            set
            {
                Onname_of_fileChanging(value);
                ReportPropertyChanging("name_of_file");
                _name_of_file = StructuralObject.SetValidValue(value, false, "name_of_file");
                ReportPropertyChanged("name_of_file");
                Onname_of_fileChanged();
            }
        }
        private global::System.String _name_of_file;
        partial void Onname_of_fileChanging(global::System.String value);
        partial void Onname_of_fileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime file_created_date
        {
            get
            {
                return _file_created_date;
            }
            set
            {
                Onfile_created_dateChanging(value);
                ReportPropertyChanging("file_created_date");
                _file_created_date = StructuralObject.SetValidValue(value, "file_created_date");
                ReportPropertyChanged("file_created_date");
                Onfile_created_dateChanged();
            }
        }
        private global::System.DateTime _file_created_date;
        partial void Onfile_created_dateChanging(global::System.DateTime value);
        partial void Onfile_created_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 file_size
        {
            get
            {
                return _file_size;
            }
            set
            {
                Onfile_sizeChanging(value);
                ReportPropertyChanging("file_size");
                _file_size = StructuralObject.SetValidValue(value, "file_size");
                ReportPropertyChanged("file_size");
                Onfile_sizeChanged();
            }
        }
        private global::System.Int32 _file_size;
        partial void Onfile_sizeChanging(global::System.Int32 value);
        partial void Onfile_sizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime load_date
        {
            get
            {
                return _load_date;
            }
            set
            {
                Onload_dateChanging(value);
                ReportPropertyChanging("load_date");
                _load_date = StructuralObject.SetValidValue(value, "load_date");
                ReportPropertyChanged("load_date");
                Onload_dateChanged();
            }
        }
        private global::System.DateTime _load_date;
        partial void Onload_dateChanging(global::System.DateTime value);
        partial void Onload_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String file_directory
        {
            get
            {
                return _file_directory;
            }
            set
            {
                Onfile_directoryChanging(value);
                ReportPropertyChanging("file_directory");
                _file_directory = StructuralObject.SetValidValue(value, false, "file_directory");
                ReportPropertyChanged("file_directory");
                Onfile_directoryChanged();
            }
        }
        private global::System.String _file_directory;
        partial void Onfile_directoryChanging(global::System.String value);
        partial void Onfile_directoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String file_type
        {
            get
            {
                return _file_type;
            }
            set
            {
                Onfile_typeChanging(value);
                ReportPropertyChanging("file_type");
                _file_type = StructuralObject.SetValidValue(value, false, "file_type");
                ReportPropertyChanged("file_type");
                Onfile_typeChanged();
            }
        }
        private global::System.String _file_type;
        partial void Onfile_typeChanging(global::System.String value);
        partial void Onfile_typeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_get_fonts_ist_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_get_fonts_ist_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_get_fonts_ist_Result object.
        /// </summary>
        /// <param name="font_id">Initial value of the font_id property.</param>
        /// <param name="font_name">Initial value of the font_name property.</param>
        public static usp_get_fonts_ist_Result Createusp_get_fonts_ist_Result(global::System.Int32 font_id, global::System.String font_name)
        {
            usp_get_fonts_ist_Result usp_get_fonts_ist_Result = new usp_get_fonts_ist_Result();
            usp_get_fonts_ist_Result.font_id = font_id;
            usp_get_fonts_ist_Result.font_name = font_name;
            return usp_get_fonts_ist_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 font_id
        {
            get
            {
                return _font_id;
            }
            set
            {
                Onfont_idChanging(value);
                ReportPropertyChanging("font_id");
                _font_id = StructuralObject.SetValidValue(value, "font_id");
                ReportPropertyChanged("font_id");
                Onfont_idChanged();
            }
        }
        private global::System.Int32 _font_id;
        partial void Onfont_idChanging(global::System.Int32 value);
        partial void Onfont_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String font_name
        {
            get
            {
                return _font_name;
            }
            set
            {
                Onfont_nameChanging(value);
                ReportPropertyChanging("font_name");
                _font_name = StructuralObject.SetValidValue(value, false, "font_name");
                ReportPropertyChanged("font_name");
                Onfont_nameChanged();
            }
        }
        private global::System.String _font_name;
        partial void Onfont_nameChanging(global::System.String value);
        partial void Onfont_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String resource_path
        {
            get
            {
                return _resource_path;
            }
            set
            {
                Onresource_pathChanging(value);
                ReportPropertyChanging("resource_path");
                _resource_path = StructuralObject.SetValidValue(value, true, "resource_path");
                ReportPropertyChanged("resource_path");
                Onresource_pathChanged();
            }
        }
        private global::System.String _resource_path;
        partial void Onresource_pathChanging(global::System.String value);
        partial void Onresource_pathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DeletedYN
        {
            get
            {
                return _DeletedYN;
            }
            set
            {
                OnDeletedYNChanging(value);
                ReportPropertyChanging("DeletedYN");
                _DeletedYN = StructuralObject.SetValidValue(value, "DeletedYN");
                ReportPropertyChanged("DeletedYN");
                OnDeletedYNChanged();
            }
        }
        private Nullable<global::System.Boolean> _DeletedYN;
        partial void OnDeletedYNChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedYNChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_get_groups_roles_for_user_pending_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_get_groups_roles_for_user_pending_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_get_groups_roles_for_user_pending_Result object.
        /// </summary>
        /// <param name="user_group_id">Initial value of the user_group_id property.</param>
        /// <param name="user_group_name">Initial value of the user_group_name property.</param>
        /// <param name="user_role">Initial value of the user_role property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        public static usp_get_groups_roles_for_user_pending_Result Createusp_get_groups_roles_for_user_pending_Result(global::System.Int32 user_group_id, global::System.String user_group_name, global::System.String user_role, global::System.String issuer_code, global::System.String issuer_name)
        {
            usp_get_groups_roles_for_user_pending_Result usp_get_groups_roles_for_user_pending_Result = new usp_get_groups_roles_for_user_pending_Result();
            usp_get_groups_roles_for_user_pending_Result.user_group_id = user_group_id;
            usp_get_groups_roles_for_user_pending_Result.user_group_name = user_group_name;
            usp_get_groups_roles_for_user_pending_Result.user_role = user_role;
            usp_get_groups_roles_for_user_pending_Result.issuer_code = issuer_code;
            usp_get_groups_roles_for_user_pending_Result.issuer_name = issuer_name;
            return usp_get_groups_roles_for_user_pending_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_group_id
        {
            get
            {
                return _user_group_id;
            }
            set
            {
                Onuser_group_idChanging(value);
                ReportPropertyChanging("user_group_id");
                _user_group_id = StructuralObject.SetValidValue(value, "user_group_id");
                ReportPropertyChanged("user_group_id");
                Onuser_group_idChanged();
            }
        }
        private global::System.Int32 _user_group_id;
        partial void Onuser_group_idChanging(global::System.Int32 value);
        partial void Onuser_group_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_group_name
        {
            get
            {
                return _user_group_name;
            }
            set
            {
                Onuser_group_nameChanging(value);
                ReportPropertyChanging("user_group_name");
                _user_group_name = StructuralObject.SetValidValue(value, false, "user_group_name");
                ReportPropertyChanged("user_group_name");
                Onuser_group_nameChanged();
            }
        }
        private global::System.String _user_group_name;
        partial void Onuser_group_nameChanging(global::System.String value);
        partial void Onuser_group_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_role
        {
            get
            {
                return _user_role;
            }
            set
            {
                Onuser_roleChanging(value);
                ReportPropertyChanging("user_role");
                _user_role = StructuralObject.SetValidValue(value, false, "user_role");
                ReportPropertyChanged("user_role");
                Onuser_roleChanged();
            }
        }
        private global::System.String _user_role;
        partial void Onuser_roleChanging(global::System.String value);
        partial void Onuser_roleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_get_issuer_by_code_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_get_issuer_by_code_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_get_issuer_by_code_Result object.
        /// </summary>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="issuer_status_id">Initial value of the issuer_status_id property.</param>
        /// <param name="country_id">Initial value of the country_id property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="instant_card_issue_YN">Initial value of the instant_card_issue_YN property.</param>
        /// <param name="maker_checker_YN">Initial value of the maker_checker_YN property.</param>
        /// <param name="card_ref_preference">Initial value of the card_ref_preference property.</param>
        /// <param name="classic_card_issue_YN">Initial value of the classic_card_issue_YN property.</param>
        /// <param name="enable_instant_pin_YN">Initial value of the enable_instant_pin_YN property.</param>
        /// <param name="authorise_pin_issue_YN">Initial value of the authorise_pin_issue_YN property.</param>
        /// <param name="authorise_pin_reissue_YN">Initial value of the authorise_pin_reissue_YN property.</param>
        /// <param name="back_office_pin_auth_YN">Initial value of the back_office_pin_auth_YN property.</param>
        public static usp_get_issuer_by_code_Result Createusp_get_issuer_by_code_Result(global::System.Int32 issuer_id, global::System.Int32 issuer_status_id, global::System.Int32 country_id, global::System.String issuer_name, global::System.String issuer_code, global::System.Boolean instant_card_issue_YN, global::System.Boolean maker_checker_YN, global::System.Boolean card_ref_preference, global::System.Boolean classic_card_issue_YN, global::System.Boolean enable_instant_pin_YN, global::System.Boolean authorise_pin_issue_YN, global::System.Boolean authorise_pin_reissue_YN, global::System.Boolean back_office_pin_auth_YN)
        {
            usp_get_issuer_by_code_Result usp_get_issuer_by_code_Result = new usp_get_issuer_by_code_Result();
            usp_get_issuer_by_code_Result.issuer_id = issuer_id;
            usp_get_issuer_by_code_Result.issuer_status_id = issuer_status_id;
            usp_get_issuer_by_code_Result.country_id = country_id;
            usp_get_issuer_by_code_Result.issuer_name = issuer_name;
            usp_get_issuer_by_code_Result.issuer_code = issuer_code;
            usp_get_issuer_by_code_Result.instant_card_issue_YN = instant_card_issue_YN;
            usp_get_issuer_by_code_Result.maker_checker_YN = maker_checker_YN;
            usp_get_issuer_by_code_Result.card_ref_preference = card_ref_preference;
            usp_get_issuer_by_code_Result.classic_card_issue_YN = classic_card_issue_YN;
            usp_get_issuer_by_code_Result.enable_instant_pin_YN = enable_instant_pin_YN;
            usp_get_issuer_by_code_Result.authorise_pin_issue_YN = authorise_pin_issue_YN;
            usp_get_issuer_by_code_Result.authorise_pin_reissue_YN = authorise_pin_reissue_YN;
            usp_get_issuer_by_code_Result.back_office_pin_auth_YN = back_office_pin_auth_YN;
            return usp_get_issuer_by_code_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_status_id
        {
            get
            {
                return _issuer_status_id;
            }
            set
            {
                Onissuer_status_idChanging(value);
                ReportPropertyChanging("issuer_status_id");
                _issuer_status_id = StructuralObject.SetValidValue(value, "issuer_status_id");
                ReportPropertyChanged("issuer_status_id");
                Onissuer_status_idChanged();
            }
        }
        private global::System.Int32 _issuer_status_id;
        partial void Onissuer_status_idChanging(global::System.Int32 value);
        partial void Onissuer_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 country_id
        {
            get
            {
                return _country_id;
            }
            set
            {
                Oncountry_idChanging(value);
                ReportPropertyChanging("country_id");
                _country_id = StructuralObject.SetValidValue(value, "country_id");
                ReportPropertyChanged("country_id");
                Oncountry_idChanged();
            }
        }
        private global::System.Int32 _country_id;
        partial void Oncountry_idChanging(global::System.Int32 value);
        partial void Oncountry_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean instant_card_issue_YN
        {
            get
            {
                return _instant_card_issue_YN;
            }
            set
            {
                Oninstant_card_issue_YNChanging(value);
                ReportPropertyChanging("instant_card_issue_YN");
                _instant_card_issue_YN = StructuralObject.SetValidValue(value, "instant_card_issue_YN");
                ReportPropertyChanged("instant_card_issue_YN");
                Oninstant_card_issue_YNChanged();
            }
        }
        private global::System.Boolean _instant_card_issue_YN;
        partial void Oninstant_card_issue_YNChanging(global::System.Boolean value);
        partial void Oninstant_card_issue_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean maker_checker_YN
        {
            get
            {
                return _maker_checker_YN;
            }
            set
            {
                Onmaker_checker_YNChanging(value);
                ReportPropertyChanging("maker_checker_YN");
                _maker_checker_YN = StructuralObject.SetValidValue(value, "maker_checker_YN");
                ReportPropertyChanged("maker_checker_YN");
                Onmaker_checker_YNChanged();
            }
        }
        private global::System.Boolean _maker_checker_YN;
        partial void Onmaker_checker_YNChanging(global::System.Boolean value);
        partial void Onmaker_checker_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String license_file
        {
            get
            {
                return _license_file;
            }
            set
            {
                Onlicense_fileChanging(value);
                ReportPropertyChanging("license_file");
                _license_file = StructuralObject.SetValidValue(value, true, "license_file");
                ReportPropertyChanged("license_file");
                Onlicense_fileChanged();
            }
        }
        private global::System.String _license_file;
        partial void Onlicense_fileChanging(global::System.String value);
        partial void Onlicense_fileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String license_key
        {
            get
            {
                return _license_key;
            }
            set
            {
                Onlicense_keyChanging(value);
                ReportPropertyChanging("license_key");
                _license_key = StructuralObject.SetValidValue(value, true, "license_key");
                ReportPropertyChanged("license_key");
                Onlicense_keyChanged();
            }
        }
        private global::System.String _license_key;
        partial void Onlicense_keyChanging(global::System.String value);
        partial void Onlicense_keyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> language_id
        {
            get
            {
                return _language_id;
            }
            set
            {
                Onlanguage_idChanging(value);
                ReportPropertyChanging("language_id");
                _language_id = StructuralObject.SetValidValue(value, "language_id");
                ReportPropertyChanged("language_id");
                Onlanguage_idChanged();
            }
        }
        private Nullable<global::System.Int32> _language_id;
        partial void Onlanguage_idChanging(Nullable<global::System.Int32> value);
        partial void Onlanguage_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean card_ref_preference
        {
            get
            {
                return _card_ref_preference;
            }
            set
            {
                Oncard_ref_preferenceChanging(value);
                ReportPropertyChanging("card_ref_preference");
                _card_ref_preference = StructuralObject.SetValidValue(value, "card_ref_preference");
                ReportPropertyChanged("card_ref_preference");
                Oncard_ref_preferenceChanged();
            }
        }
        private global::System.Boolean _card_ref_preference;
        partial void Oncard_ref_preferenceChanging(global::System.Boolean value);
        partial void Oncard_ref_preferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean classic_card_issue_YN
        {
            get
            {
                return _classic_card_issue_YN;
            }
            set
            {
                Onclassic_card_issue_YNChanging(value);
                ReportPropertyChanging("classic_card_issue_YN");
                _classic_card_issue_YN = StructuralObject.SetValidValue(value, "classic_card_issue_YN");
                ReportPropertyChanged("classic_card_issue_YN");
                Onclassic_card_issue_YNChanged();
            }
        }
        private global::System.Boolean _classic_card_issue_YN;
        partial void Onclassic_card_issue_YNChanging(global::System.Boolean value);
        partial void Onclassic_card_issue_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean enable_instant_pin_YN
        {
            get
            {
                return _enable_instant_pin_YN;
            }
            set
            {
                Onenable_instant_pin_YNChanging(value);
                ReportPropertyChanging("enable_instant_pin_YN");
                _enable_instant_pin_YN = StructuralObject.SetValidValue(value, "enable_instant_pin_YN");
                ReportPropertyChanged("enable_instant_pin_YN");
                Onenable_instant_pin_YNChanged();
            }
        }
        private global::System.Boolean _enable_instant_pin_YN;
        partial void Onenable_instant_pin_YNChanging(global::System.Boolean value);
        partial void Onenable_instant_pin_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean authorise_pin_issue_YN
        {
            get
            {
                return _authorise_pin_issue_YN;
            }
            set
            {
                Onauthorise_pin_issue_YNChanging(value);
                ReportPropertyChanging("authorise_pin_issue_YN");
                _authorise_pin_issue_YN = StructuralObject.SetValidValue(value, "authorise_pin_issue_YN");
                ReportPropertyChanged("authorise_pin_issue_YN");
                Onauthorise_pin_issue_YNChanged();
            }
        }
        private global::System.Boolean _authorise_pin_issue_YN;
        partial void Onauthorise_pin_issue_YNChanging(global::System.Boolean value);
        partial void Onauthorise_pin_issue_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean authorise_pin_reissue_YN
        {
            get
            {
                return _authorise_pin_reissue_YN;
            }
            set
            {
                Onauthorise_pin_reissue_YNChanging(value);
                ReportPropertyChanging("authorise_pin_reissue_YN");
                _authorise_pin_reissue_YN = StructuralObject.SetValidValue(value, "authorise_pin_reissue_YN");
                ReportPropertyChanged("authorise_pin_reissue_YN");
                Onauthorise_pin_reissue_YNChanged();
            }
        }
        private global::System.Boolean _authorise_pin_reissue_YN;
        partial void Onauthorise_pin_reissue_YNChanging(global::System.Boolean value);
        partial void Onauthorise_pin_reissue_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean back_office_pin_auth_YN
        {
            get
            {
                return _back_office_pin_auth_YN;
            }
            set
            {
                Onback_office_pin_auth_YNChanging(value);
                ReportPropertyChanging("back_office_pin_auth_YN");
                _back_office_pin_auth_YN = StructuralObject.SetValidValue(value, "back_office_pin_auth_YN");
                ReportPropertyChanged("back_office_pin_auth_YN");
                Onback_office_pin_auth_YNChanged();
            }
        }
        private global::System.Boolean _back_office_pin_auth_YN;
        partial void Onback_office_pin_auth_YNChanging(global::System.Boolean value);
        partial void Onback_office_pin_auth_YNChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_get_issuer_interface_details_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_get_issuer_interface_details_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_get_issuer_interface_details_Result object.
        /// </summary>
        /// <param name="connection_parameter_id">Initial value of the connection_parameter_id property.</param>
        /// <param name="connection_name">Initial value of the connection_name property.</param>
        /// <param name="address">Initial value of the address property.</param>
        /// <param name="port">Initial value of the port property.</param>
        /// <param name="path">Initial value of the path property.</param>
        /// <param name="protocol">Initial value of the protocol property.</param>
        /// <param name="auth_type">Initial value of the auth_type property.</param>
        /// <param name="username">Initial value of the username property.</param>
        /// <param name="password">Initial value of the password property.</param>
        /// <param name="connection_parameter_type_id">Initial value of the connection_parameter_type_id property.</param>
        public static usp_get_issuer_interface_details_Result Createusp_get_issuer_interface_details_Result(global::System.Int32 connection_parameter_id, global::System.String connection_name, global::System.String address, global::System.Int32 port, global::System.String path, global::System.String protocol, global::System.Int32 auth_type, global::System.Byte[] username, global::System.Byte[] password, global::System.Int32 connection_parameter_type_id)
        {
            usp_get_issuer_interface_details_Result usp_get_issuer_interface_details_Result = new usp_get_issuer_interface_details_Result();
            usp_get_issuer_interface_details_Result.connection_parameter_id = connection_parameter_id;
            usp_get_issuer_interface_details_Result.connection_name = connection_name;
            usp_get_issuer_interface_details_Result.address = address;
            usp_get_issuer_interface_details_Result.port = port;
            usp_get_issuer_interface_details_Result.path = path;
            usp_get_issuer_interface_details_Result.protocol = protocol;
            usp_get_issuer_interface_details_Result.auth_type = auth_type;
            usp_get_issuer_interface_details_Result.username = username;
            usp_get_issuer_interface_details_Result.password = password;
            usp_get_issuer_interface_details_Result.connection_parameter_type_id = connection_parameter_type_id;
            return usp_get_issuer_interface_details_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 connection_parameter_id
        {
            get
            {
                return _connection_parameter_id;
            }
            set
            {
                Onconnection_parameter_idChanging(value);
                ReportPropertyChanging("connection_parameter_id");
                _connection_parameter_id = StructuralObject.SetValidValue(value, "connection_parameter_id");
                ReportPropertyChanged("connection_parameter_id");
                Onconnection_parameter_idChanged();
            }
        }
        private global::System.Int32 _connection_parameter_id;
        partial void Onconnection_parameter_idChanging(global::System.Int32 value);
        partial void Onconnection_parameter_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String connection_name
        {
            get
            {
                return _connection_name;
            }
            set
            {
                Onconnection_nameChanging(value);
                ReportPropertyChanging("connection_name");
                _connection_name = StructuralObject.SetValidValue(value, false, "connection_name");
                ReportPropertyChanged("connection_name");
                Onconnection_nameChanged();
            }
        }
        private global::System.String _connection_name;
        partial void Onconnection_nameChanging(global::System.String value);
        partial void Onconnection_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String address
        {
            get
            {
                return _address;
            }
            set
            {
                OnaddressChanging(value);
                ReportPropertyChanging("address");
                _address = StructuralObject.SetValidValue(value, false, "address");
                ReportPropertyChanged("address");
                OnaddressChanged();
            }
        }
        private global::System.String _address;
        partial void OnaddressChanging(global::System.String value);
        partial void OnaddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 port
        {
            get
            {
                return _port;
            }
            set
            {
                OnportChanging(value);
                ReportPropertyChanging("port");
                _port = StructuralObject.SetValidValue(value, "port");
                ReportPropertyChanged("port");
                OnportChanged();
            }
        }
        private global::System.Int32 _port;
        partial void OnportChanging(global::System.Int32 value);
        partial void OnportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String path
        {
            get
            {
                return _path;
            }
            set
            {
                OnpathChanging(value);
                ReportPropertyChanging("path");
                _path = StructuralObject.SetValidValue(value, false, "path");
                ReportPropertyChanged("path");
                OnpathChanged();
            }
        }
        private global::System.String _path;
        partial void OnpathChanging(global::System.String value);
        partial void OnpathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String protocol
        {
            get
            {
                return _protocol;
            }
            set
            {
                OnprotocolChanging(value);
                ReportPropertyChanging("protocol");
                _protocol = StructuralObject.SetValidValue(value, false, "protocol");
                ReportPropertyChanged("protocol");
                OnprotocolChanged();
            }
        }
        private global::System.String _protocol;
        partial void OnprotocolChanging(global::System.String value);
        partial void OnprotocolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 auth_type
        {
            get
            {
                return _auth_type;
            }
            set
            {
                Onauth_typeChanging(value);
                ReportPropertyChanging("auth_type");
                _auth_type = StructuralObject.SetValidValue(value, "auth_type");
                ReportPropertyChanged("auth_type");
                Onauth_typeChanged();
            }
        }
        private global::System.Int32 _auth_type;
        partial void Onauth_typeChanging(global::System.Int32 value);
        partial void Onauth_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] username
        {
            get
            {
                return StructuralObject.GetValidValue(_username);
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, false, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.Byte[] _username;
        partial void OnusernameChanging(global::System.Byte[] value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] password
        {
            get
            {
                return StructuralObject.GetValidValue(_password);
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false, "password");
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.Byte[] _password;
        partial void OnpasswordChanging(global::System.Byte[] value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 connection_parameter_type_id
        {
            get
            {
                return _connection_parameter_type_id;
            }
            set
            {
                Onconnection_parameter_type_idChanging(value);
                ReportPropertyChanging("connection_parameter_type_id");
                _connection_parameter_type_id = StructuralObject.SetValidValue(value, "connection_parameter_type_id");
                ReportPropertyChanged("connection_parameter_type_id");
                Onconnection_parameter_type_idChanged();
            }
        }
        private global::System.Int32 _connection_parameter_type_id;
        partial void Onconnection_parameter_type_idChanging(global::System.Int32 value);
        partial void Onconnection_parameter_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> header_length
        {
            get
            {
                return _header_length;
            }
            set
            {
                Onheader_lengthChanging(value);
                ReportPropertyChanging("header_length");
                _header_length = StructuralObject.SetValidValue(value, "header_length");
                ReportPropertyChanged("header_length");
                Onheader_lengthChanged();
            }
        }
        private Nullable<global::System.Int32> _header_length;
        partial void Onheader_lengthChanging(Nullable<global::System.Int32> value);
        partial void Onheader_lengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] identification
        {
            get
            {
                return StructuralObject.GetValidValue(_identification);
            }
            set
            {
                OnidentificationChanging(value);
                ReportPropertyChanging("identification");
                _identification = StructuralObject.SetValidValue(value, true, "identification");
                ReportPropertyChanged("identification");
                OnidentificationChanged();
            }
        }
        private global::System.Byte[] _identification;
        partial void OnidentificationChanging(global::System.Byte[] value);
        partial void OnidentificationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> timeout_milli
        {
            get
            {
                return _timeout_milli;
            }
            set
            {
                Ontimeout_milliChanging(value);
                ReportPropertyChanging("timeout_milli");
                _timeout_milli = StructuralObject.SetValidValue(value, "timeout_milli");
                ReportPropertyChanged("timeout_milli");
                Ontimeout_milliChanged();
            }
        }
        private Nullable<global::System.Int32> _timeout_milli;
        partial void Ontimeout_milliChanging(Nullable<global::System.Int32> value);
        partial void Ontimeout_milliChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> buffer_size
        {
            get
            {
                return _buffer_size;
            }
            set
            {
                Onbuffer_sizeChanging(value);
                ReportPropertyChanging("buffer_size");
                _buffer_size = StructuralObject.SetValidValue(value, "buffer_size");
                ReportPropertyChanged("buffer_size");
                Onbuffer_sizeChanged();
            }
        }
        private Nullable<global::System.Int32> _buffer_size;
        partial void Onbuffer_sizeChanging(Nullable<global::System.Int32> value);
        partial void Onbuffer_sizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String doc_type
        {
            get
            {
                return _doc_type;
            }
            set
            {
                Ondoc_typeChanging(value);
                ReportPropertyChanging("doc_type");
                _doc_type = StructuralObject.SetValidValue(value, true, "doc_type");
                ReportPropertyChanged("doc_type");
                Ondoc_typeChanged();
            }
        }
        private global::System.String _doc_type;
        partial void Ondoc_typeChanging(global::System.String value);
        partial void Ondoc_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name_of_file
        {
            get
            {
                return _name_of_file;
            }
            set
            {
                Onname_of_fileChanging(value);
                ReportPropertyChanging("name_of_file");
                _name_of_file = StructuralObject.SetValidValue(value, true, "name_of_file");
                ReportPropertyChanged("name_of_file");
                Onname_of_fileChanged();
            }
        }
        private global::System.String _name_of_file;
        partial void Onname_of_fileChanging(global::System.String value);
        partial void Onname_of_fileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> file_delete_YN
        {
            get
            {
                return _file_delete_YN;
            }
            set
            {
                Onfile_delete_YNChanging(value);
                ReportPropertyChanging("file_delete_YN");
                _file_delete_YN = StructuralObject.SetValidValue(value, "file_delete_YN");
                ReportPropertyChanged("file_delete_YN");
                Onfile_delete_YNChanged();
            }
        }
        private Nullable<global::System.Boolean> _file_delete_YN;
        partial void Onfile_delete_YNChanging(Nullable<global::System.Boolean> value);
        partial void Onfile_delete_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> duplicate_file_check_YN
        {
            get
            {
                return _duplicate_file_check_YN;
            }
            set
            {
                Onduplicate_file_check_YNChanging(value);
                ReportPropertyChanging("duplicate_file_check_YN");
                _duplicate_file_check_YN = StructuralObject.SetValidValue(value, "duplicate_file_check_YN");
                ReportPropertyChanged("duplicate_file_check_YN");
                Onduplicate_file_check_YNChanged();
            }
        }
        private Nullable<global::System.Boolean> _duplicate_file_check_YN;
        partial void Onduplicate_file_check_YNChanging(Nullable<global::System.Boolean> value);
        partial void Onduplicate_file_check_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> file_encryption_type_id
        {
            get
            {
                return _file_encryption_type_id;
            }
            set
            {
                Onfile_encryption_type_idChanging(value);
                ReportPropertyChanging("file_encryption_type_id");
                _file_encryption_type_id = StructuralObject.SetValidValue(value, "file_encryption_type_id");
                ReportPropertyChanged("file_encryption_type_id");
                Onfile_encryption_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _file_encryption_type_id;
        partial void Onfile_encryption_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onfile_encryption_type_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_get_parameters_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_get_parameters_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_get_parameters_Result object.
        /// </summary>
        /// <param name="connection_parameter_id">Initial value of the connection_parameter_id property.</param>
        /// <param name="connection_name">Initial value of the connection_name property.</param>
        /// <param name="address">Initial value of the address property.</param>
        /// <param name="port">Initial value of the port property.</param>
        /// <param name="path">Initial value of the path property.</param>
        /// <param name="protocol">Initial value of the protocol property.</param>
        /// <param name="auth_type">Initial value of the auth_type property.</param>
        /// <param name="connection_parameter_type_id">Initial value of the connection_parameter_type_id property.</param>
        public static usp_get_parameters_Result Createusp_get_parameters_Result(global::System.Int32 connection_parameter_id, global::System.String connection_name, global::System.String address, global::System.Int32 port, global::System.String path, global::System.String protocol, global::System.Int32 auth_type, global::System.Int32 connection_parameter_type_id)
        {
            usp_get_parameters_Result usp_get_parameters_Result = new usp_get_parameters_Result();
            usp_get_parameters_Result.connection_parameter_id = connection_parameter_id;
            usp_get_parameters_Result.connection_name = connection_name;
            usp_get_parameters_Result.address = address;
            usp_get_parameters_Result.port = port;
            usp_get_parameters_Result.path = path;
            usp_get_parameters_Result.protocol = protocol;
            usp_get_parameters_Result.auth_type = auth_type;
            usp_get_parameters_Result.connection_parameter_type_id = connection_parameter_type_id;
            return usp_get_parameters_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 connection_parameter_id
        {
            get
            {
                return _connection_parameter_id;
            }
            set
            {
                Onconnection_parameter_idChanging(value);
                ReportPropertyChanging("connection_parameter_id");
                _connection_parameter_id = StructuralObject.SetValidValue(value, "connection_parameter_id");
                ReportPropertyChanged("connection_parameter_id");
                Onconnection_parameter_idChanged();
            }
        }
        private global::System.Int32 _connection_parameter_id;
        partial void Onconnection_parameter_idChanging(global::System.Int32 value);
        partial void Onconnection_parameter_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String connection_name
        {
            get
            {
                return _connection_name;
            }
            set
            {
                Onconnection_nameChanging(value);
                ReportPropertyChanging("connection_name");
                _connection_name = StructuralObject.SetValidValue(value, false, "connection_name");
                ReportPropertyChanged("connection_name");
                Onconnection_nameChanged();
            }
        }
        private global::System.String _connection_name;
        partial void Onconnection_nameChanging(global::System.String value);
        partial void Onconnection_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String address
        {
            get
            {
                return _address;
            }
            set
            {
                OnaddressChanging(value);
                ReportPropertyChanging("address");
                _address = StructuralObject.SetValidValue(value, false, "address");
                ReportPropertyChanged("address");
                OnaddressChanged();
            }
        }
        private global::System.String _address;
        partial void OnaddressChanging(global::System.String value);
        partial void OnaddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 port
        {
            get
            {
                return _port;
            }
            set
            {
                OnportChanging(value);
                ReportPropertyChanging("port");
                _port = StructuralObject.SetValidValue(value, "port");
                ReportPropertyChanged("port");
                OnportChanged();
            }
        }
        private global::System.Int32 _port;
        partial void OnportChanging(global::System.Int32 value);
        partial void OnportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String path
        {
            get
            {
                return _path;
            }
            set
            {
                OnpathChanging(value);
                ReportPropertyChanging("path");
                _path = StructuralObject.SetValidValue(value, false, "path");
                ReportPropertyChanged("path");
                OnpathChanged();
            }
        }
        private global::System.String _path;
        partial void OnpathChanging(global::System.String value);
        partial void OnpathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String protocol
        {
            get
            {
                return _protocol;
            }
            set
            {
                OnprotocolChanging(value);
                ReportPropertyChanging("protocol");
                _protocol = StructuralObject.SetValidValue(value, false, "protocol");
                ReportPropertyChanged("protocol");
                OnprotocolChanged();
            }
        }
        private global::System.String _protocol;
        partial void OnprotocolChanging(global::System.String value);
        partial void OnprotocolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 auth_type
        {
            get
            {
                return _auth_type;
            }
            set
            {
                Onauth_typeChanging(value);
                ReportPropertyChanging("auth_type");
                _auth_type = StructuralObject.SetValidValue(value, "auth_type");
                ReportPropertyChanged("auth_type");
                Onauth_typeChanged();
            }
        }
        private global::System.Int32 _auth_type;
        partial void Onauth_typeChanging(global::System.Int32 value);
        partial void Onauth_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> header_length
        {
            get
            {
                return _header_length;
            }
            set
            {
                Onheader_lengthChanging(value);
                ReportPropertyChanging("header_length");
                _header_length = StructuralObject.SetValidValue(value, "header_length");
                ReportPropertyChanged("header_length");
                Onheader_lengthChanged();
            }
        }
        private Nullable<global::System.Int32> _header_length;
        partial void Onheader_lengthChanging(Nullable<global::System.Int32> value);
        partial void Onheader_lengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String identification
        {
            get
            {
                return _identification;
            }
            set
            {
                OnidentificationChanging(value);
                ReportPropertyChanging("identification");
                _identification = StructuralObject.SetValidValue(value, true, "identification");
                ReportPropertyChanged("identification");
                OnidentificationChanged();
            }
        }
        private global::System.String _identification;
        partial void OnidentificationChanging(global::System.String value);
        partial void OnidentificationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, true, "password");
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 connection_parameter_type_id
        {
            get
            {
                return _connection_parameter_type_id;
            }
            set
            {
                Onconnection_parameter_type_idChanging(value);
                ReportPropertyChanging("connection_parameter_type_id");
                _connection_parameter_type_id = StructuralObject.SetValidValue(value, "connection_parameter_type_id");
                ReportPropertyChanged("connection_parameter_type_id");
                Onconnection_parameter_type_idChanged();
            }
        }
        private global::System.Int32 _connection_parameter_type_id;
        partial void Onconnection_parameter_type_idChanging(global::System.Int32 value);
        partial void Onconnection_parameter_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> timeout_milli
        {
            get
            {
                return _timeout_milli;
            }
            set
            {
                Ontimeout_milliChanging(value);
                ReportPropertyChanging("timeout_milli");
                _timeout_milli = StructuralObject.SetValidValue(value, "timeout_milli");
                ReportPropertyChanged("timeout_milli");
                Ontimeout_milliChanged();
            }
        }
        private Nullable<global::System.Int32> _timeout_milli;
        partial void Ontimeout_milliChanging(Nullable<global::System.Int32> value);
        partial void Ontimeout_milliChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> buffer_size
        {
            get
            {
                return _buffer_size;
            }
            set
            {
                Onbuffer_sizeChanging(value);
                ReportPropertyChanging("buffer_size");
                _buffer_size = StructuralObject.SetValidValue(value, "buffer_size");
                ReportPropertyChanged("buffer_size");
                Onbuffer_sizeChanged();
            }
        }
        private Nullable<global::System.Int32> _buffer_size;
        partial void Onbuffer_sizeChanging(Nullable<global::System.Int32> value);
        partial void Onbuffer_sizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String doc_type
        {
            get
            {
                return _doc_type;
            }
            set
            {
                Ondoc_typeChanging(value);
                ReportPropertyChanging("doc_type");
                _doc_type = StructuralObject.SetValidValue(value, true, "doc_type");
                ReportPropertyChanged("doc_type");
                Ondoc_typeChanged();
            }
        }
        private global::System.String _doc_type;
        partial void Ondoc_typeChanging(global::System.String value);
        partial void Ondoc_typeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_get_product_accounting_list_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_get_product_accounting_list_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_get_product_accounting_list_Result object.
        /// </summary>
        /// <param name="fee_accounting_id">Initial value of the fee_accounting_id property.</param>
        /// <param name="fee_accounting_name">Initial value of the fee_accounting_name property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="fee_revenue_account_no">Initial value of the fee_revenue_account_no property.</param>
        /// <param name="fee_revenue_account_type_id">Initial value of the fee_revenue_account_type_id property.</param>
        /// <param name="fee_revenue_narration_en">Initial value of the fee_revenue_narration_en property.</param>
        /// <param name="fee_revenue_narration_fr">Initial value of the fee_revenue_narration_fr property.</param>
        /// <param name="fee_revenue_narration_pt">Initial value of the fee_revenue_narration_pt property.</param>
        /// <param name="fee_revenue_narration_es">Initial value of the fee_revenue_narration_es property.</param>
        /// <param name="vat_account_no">Initial value of the vat_account_no property.</param>
        /// <param name="vat_account_type_id">Initial value of the vat_account_type_id property.</param>
        /// <param name="vat_narration_en">Initial value of the vat_narration_en property.</param>
        /// <param name="vat_narration_fr">Initial value of the vat_narration_fr property.</param>
        /// <param name="vat_narration_pt">Initial value of the vat_narration_pt property.</param>
        /// <param name="vat_narration_es">Initial value of the vat_narration_es property.</param>
        public static usp_get_product_accounting_list_Result Createusp_get_product_accounting_list_Result(global::System.Int32 fee_accounting_id, global::System.String fee_accounting_name, global::System.Int32 issuer_id, global::System.Byte[] fee_revenue_account_no, global::System.Int32 fee_revenue_account_type_id, global::System.String fee_revenue_narration_en, global::System.String fee_revenue_narration_fr, global::System.String fee_revenue_narration_pt, global::System.String fee_revenue_narration_es, global::System.Byte[] vat_account_no, global::System.Int32 vat_account_type_id, global::System.String vat_narration_en, global::System.String vat_narration_fr, global::System.String vat_narration_pt, global::System.String vat_narration_es)
        {
            usp_get_product_accounting_list_Result usp_get_product_accounting_list_Result = new usp_get_product_accounting_list_Result();
            usp_get_product_accounting_list_Result.fee_accounting_id = fee_accounting_id;
            usp_get_product_accounting_list_Result.fee_accounting_name = fee_accounting_name;
            usp_get_product_accounting_list_Result.issuer_id = issuer_id;
            usp_get_product_accounting_list_Result.fee_revenue_account_no = fee_revenue_account_no;
            usp_get_product_accounting_list_Result.fee_revenue_account_type_id = fee_revenue_account_type_id;
            usp_get_product_accounting_list_Result.fee_revenue_narration_en = fee_revenue_narration_en;
            usp_get_product_accounting_list_Result.fee_revenue_narration_fr = fee_revenue_narration_fr;
            usp_get_product_accounting_list_Result.fee_revenue_narration_pt = fee_revenue_narration_pt;
            usp_get_product_accounting_list_Result.fee_revenue_narration_es = fee_revenue_narration_es;
            usp_get_product_accounting_list_Result.vat_account_no = vat_account_no;
            usp_get_product_accounting_list_Result.vat_account_type_id = vat_account_type_id;
            usp_get_product_accounting_list_Result.vat_narration_en = vat_narration_en;
            usp_get_product_accounting_list_Result.vat_narration_fr = vat_narration_fr;
            usp_get_product_accounting_list_Result.vat_narration_pt = vat_narration_pt;
            usp_get_product_accounting_list_Result.vat_narration_es = vat_narration_es;
            return usp_get_product_accounting_list_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fee_accounting_id
        {
            get
            {
                return _fee_accounting_id;
            }
            set
            {
                Onfee_accounting_idChanging(value);
                ReportPropertyChanging("fee_accounting_id");
                _fee_accounting_id = StructuralObject.SetValidValue(value, "fee_accounting_id");
                ReportPropertyChanged("fee_accounting_id");
                Onfee_accounting_idChanged();
            }
        }
        private global::System.Int32 _fee_accounting_id;
        partial void Onfee_accounting_idChanging(global::System.Int32 value);
        partial void Onfee_accounting_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String fee_accounting_name
        {
            get
            {
                return _fee_accounting_name;
            }
            set
            {
                Onfee_accounting_nameChanging(value);
                ReportPropertyChanging("fee_accounting_name");
                _fee_accounting_name = StructuralObject.SetValidValue(value, false, "fee_accounting_name");
                ReportPropertyChanged("fee_accounting_name");
                Onfee_accounting_nameChanged();
            }
        }
        private global::System.String _fee_accounting_name;
        partial void Onfee_accounting_nameChanging(global::System.String value);
        partial void Onfee_accounting_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] fee_revenue_account_no
        {
            get
            {
                return StructuralObject.GetValidValue(_fee_revenue_account_no);
            }
            set
            {
                Onfee_revenue_account_noChanging(value);
                ReportPropertyChanging("fee_revenue_account_no");
                _fee_revenue_account_no = StructuralObject.SetValidValue(value, false, "fee_revenue_account_no");
                ReportPropertyChanged("fee_revenue_account_no");
                Onfee_revenue_account_noChanged();
            }
        }
        private global::System.Byte[] _fee_revenue_account_no;
        partial void Onfee_revenue_account_noChanging(global::System.Byte[] value);
        partial void Onfee_revenue_account_noChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fee_revenue_account_type_id
        {
            get
            {
                return _fee_revenue_account_type_id;
            }
            set
            {
                Onfee_revenue_account_type_idChanging(value);
                ReportPropertyChanging("fee_revenue_account_type_id");
                _fee_revenue_account_type_id = StructuralObject.SetValidValue(value, "fee_revenue_account_type_id");
                ReportPropertyChanged("fee_revenue_account_type_id");
                Onfee_revenue_account_type_idChanged();
            }
        }
        private global::System.Int32 _fee_revenue_account_type_id;
        partial void Onfee_revenue_account_type_idChanging(global::System.Int32 value);
        partial void Onfee_revenue_account_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_branch_code
        {
            get
            {
                return _fee_revenue_branch_code;
            }
            set
            {
                Onfee_revenue_branch_codeChanging(value);
                ReportPropertyChanging("fee_revenue_branch_code");
                _fee_revenue_branch_code = StructuralObject.SetValidValue(value, true, "fee_revenue_branch_code");
                ReportPropertyChanged("fee_revenue_branch_code");
                Onfee_revenue_branch_codeChanged();
            }
        }
        private global::System.String _fee_revenue_branch_code;
        partial void Onfee_revenue_branch_codeChanging(global::System.String value);
        partial void Onfee_revenue_branch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_narration_en
        {
            get
            {
                return _fee_revenue_narration_en;
            }
            set
            {
                Onfee_revenue_narration_enChanging(value);
                ReportPropertyChanging("fee_revenue_narration_en");
                _fee_revenue_narration_en = StructuralObject.SetValidValue(value, false, "fee_revenue_narration_en");
                ReportPropertyChanged("fee_revenue_narration_en");
                Onfee_revenue_narration_enChanged();
            }
        }
        private global::System.String _fee_revenue_narration_en;
        partial void Onfee_revenue_narration_enChanging(global::System.String value);
        partial void Onfee_revenue_narration_enChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_narration_fr
        {
            get
            {
                return _fee_revenue_narration_fr;
            }
            set
            {
                Onfee_revenue_narration_frChanging(value);
                ReportPropertyChanging("fee_revenue_narration_fr");
                _fee_revenue_narration_fr = StructuralObject.SetValidValue(value, false, "fee_revenue_narration_fr");
                ReportPropertyChanged("fee_revenue_narration_fr");
                Onfee_revenue_narration_frChanged();
            }
        }
        private global::System.String _fee_revenue_narration_fr;
        partial void Onfee_revenue_narration_frChanging(global::System.String value);
        partial void Onfee_revenue_narration_frChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_narration_pt
        {
            get
            {
                return _fee_revenue_narration_pt;
            }
            set
            {
                Onfee_revenue_narration_ptChanging(value);
                ReportPropertyChanging("fee_revenue_narration_pt");
                _fee_revenue_narration_pt = StructuralObject.SetValidValue(value, false, "fee_revenue_narration_pt");
                ReportPropertyChanged("fee_revenue_narration_pt");
                Onfee_revenue_narration_ptChanged();
            }
        }
        private global::System.String _fee_revenue_narration_pt;
        partial void Onfee_revenue_narration_ptChanging(global::System.String value);
        partial void Onfee_revenue_narration_ptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_narration_es
        {
            get
            {
                return _fee_revenue_narration_es;
            }
            set
            {
                Onfee_revenue_narration_esChanging(value);
                ReportPropertyChanging("fee_revenue_narration_es");
                _fee_revenue_narration_es = StructuralObject.SetValidValue(value, false, "fee_revenue_narration_es");
                ReportPropertyChanged("fee_revenue_narration_es");
                Onfee_revenue_narration_esChanged();
            }
        }
        private global::System.String _fee_revenue_narration_es;
        partial void Onfee_revenue_narration_esChanging(global::System.String value);
        partial void Onfee_revenue_narration_esChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] vat_account_no
        {
            get
            {
                return StructuralObject.GetValidValue(_vat_account_no);
            }
            set
            {
                Onvat_account_noChanging(value);
                ReportPropertyChanging("vat_account_no");
                _vat_account_no = StructuralObject.SetValidValue(value, false, "vat_account_no");
                ReportPropertyChanged("vat_account_no");
                Onvat_account_noChanged();
            }
        }
        private global::System.Byte[] _vat_account_no;
        partial void Onvat_account_noChanging(global::System.Byte[] value);
        partial void Onvat_account_noChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 vat_account_type_id
        {
            get
            {
                return _vat_account_type_id;
            }
            set
            {
                Onvat_account_type_idChanging(value);
                ReportPropertyChanging("vat_account_type_id");
                _vat_account_type_id = StructuralObject.SetValidValue(value, "vat_account_type_id");
                ReportPropertyChanged("vat_account_type_id");
                Onvat_account_type_idChanged();
            }
        }
        private global::System.Int32 _vat_account_type_id;
        partial void Onvat_account_type_idChanging(global::System.Int32 value);
        partial void Onvat_account_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String vat_account_branch_code
        {
            get
            {
                return _vat_account_branch_code;
            }
            set
            {
                Onvat_account_branch_codeChanging(value);
                ReportPropertyChanging("vat_account_branch_code");
                _vat_account_branch_code = StructuralObject.SetValidValue(value, true, "vat_account_branch_code");
                ReportPropertyChanged("vat_account_branch_code");
                Onvat_account_branch_codeChanged();
            }
        }
        private global::System.String _vat_account_branch_code;
        partial void Onvat_account_branch_codeChanging(global::System.String value);
        partial void Onvat_account_branch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String vat_narration_en
        {
            get
            {
                return _vat_narration_en;
            }
            set
            {
                Onvat_narration_enChanging(value);
                ReportPropertyChanging("vat_narration_en");
                _vat_narration_en = StructuralObject.SetValidValue(value, false, "vat_narration_en");
                ReportPropertyChanged("vat_narration_en");
                Onvat_narration_enChanged();
            }
        }
        private global::System.String _vat_narration_en;
        partial void Onvat_narration_enChanging(global::System.String value);
        partial void Onvat_narration_enChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String vat_narration_fr
        {
            get
            {
                return _vat_narration_fr;
            }
            set
            {
                Onvat_narration_frChanging(value);
                ReportPropertyChanging("vat_narration_fr");
                _vat_narration_fr = StructuralObject.SetValidValue(value, false, "vat_narration_fr");
                ReportPropertyChanged("vat_narration_fr");
                Onvat_narration_frChanged();
            }
        }
        private global::System.String _vat_narration_fr;
        partial void Onvat_narration_frChanging(global::System.String value);
        partial void Onvat_narration_frChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String vat_narration_pt
        {
            get
            {
                return _vat_narration_pt;
            }
            set
            {
                Onvat_narration_ptChanging(value);
                ReportPropertyChanging("vat_narration_pt");
                _vat_narration_pt = StructuralObject.SetValidValue(value, false, "vat_narration_pt");
                ReportPropertyChanged("vat_narration_pt");
                Onvat_narration_ptChanged();
            }
        }
        private global::System.String _vat_narration_pt;
        partial void Onvat_narration_ptChanging(global::System.String value);
        partial void Onvat_narration_ptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String vat_narration_es
        {
            get
            {
                return _vat_narration_es;
            }
            set
            {
                Onvat_narration_esChanging(value);
                ReportPropertyChanging("vat_narration_es");
                _vat_narration_es = StructuralObject.SetValidValue(value, false, "vat_narration_es");
                ReportPropertyChanged("vat_narration_es");
                Onvat_narration_esChanged();
            }
        }
        private global::System.String _vat_narration_es;
        partial void Onvat_narration_esChanging(global::System.String value);
        partial void Onvat_narration_esChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_get_product_print_fields_value_byrequest_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_get_product_print_fields_value_byrequest_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_get_product_print_fields_value_byrequest_Result object.
        /// </summary>
        /// <param name="product_field_id">Initial value of the product_field_id property.</param>
        /// <param name="product_id">Initial value of the product_id property.</param>
        /// <param name="field_name">Initial value of the field_name property.</param>
        /// <param name="print_field_type_id">Initial value of the print_field_type_id property.</param>
        /// <param name="editable">Initial value of the editable property.</param>
        /// <param name="deleted">Initial value of the deleted property.</param>
        /// <param name="max_length">Initial value of the max_length property.</param>
        public static usp_get_product_print_fields_value_byrequest_Result Createusp_get_product_print_fields_value_byrequest_Result(global::System.Int32 product_field_id, global::System.Int32 product_id, global::System.String field_name, global::System.Int32 print_field_type_id, global::System.Boolean editable, global::System.Boolean deleted, global::System.Int32 max_length)
        {
            usp_get_product_print_fields_value_byrequest_Result usp_get_product_print_fields_value_byrequest_Result = new usp_get_product_print_fields_value_byrequest_Result();
            usp_get_product_print_fields_value_byrequest_Result.product_field_id = product_field_id;
            usp_get_product_print_fields_value_byrequest_Result.product_id = product_id;
            usp_get_product_print_fields_value_byrequest_Result.field_name = field_name;
            usp_get_product_print_fields_value_byrequest_Result.print_field_type_id = print_field_type_id;
            usp_get_product_print_fields_value_byrequest_Result.editable = editable;
            usp_get_product_print_fields_value_byrequest_Result.deleted = deleted;
            usp_get_product_print_fields_value_byrequest_Result.max_length = max_length;
            return usp_get_product_print_fields_value_byrequest_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_field_id
        {
            get
            {
                return _product_field_id;
            }
            set
            {
                Onproduct_field_idChanging(value);
                ReportPropertyChanging("product_field_id");
                _product_field_id = StructuralObject.SetValidValue(value, "product_field_id");
                ReportPropertyChanged("product_field_id");
                Onproduct_field_idChanged();
            }
        }
        private global::System.Int32 _product_field_id;
        partial void Onproduct_field_idChanging(global::System.Int32 value);
        partial void Onproduct_field_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private global::System.Int32 _product_id;
        partial void Onproduct_idChanging(global::System.Int32 value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String field_name
        {
            get
            {
                return _field_name;
            }
            set
            {
                Onfield_nameChanging(value);
                ReportPropertyChanging("field_name");
                _field_name = StructuralObject.SetValidValue(value, false, "field_name");
                ReportPropertyChanged("field_name");
                Onfield_nameChanged();
            }
        }
        private global::System.String _field_name;
        partial void Onfield_nameChanging(global::System.String value);
        partial void Onfield_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 print_field_type_id
        {
            get
            {
                return _print_field_type_id;
            }
            set
            {
                Onprint_field_type_idChanging(value);
                ReportPropertyChanging("print_field_type_id");
                _print_field_type_id = StructuralObject.SetValidValue(value, "print_field_type_id");
                ReportPropertyChanged("print_field_type_id");
                Onprint_field_type_idChanged();
            }
        }
        private global::System.Int32 _print_field_type_id;
        partial void Onprint_field_type_idChanging(global::System.Int32 value);
        partial void Onprint_field_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> X
        {
            get
            {
                return _X;
            }
            set
            {
                OnXChanging(value);
                ReportPropertyChanging("X");
                _X = StructuralObject.SetValidValue(value, "X");
                ReportPropertyChanged("X");
                OnXChanged();
            }
        }
        private Nullable<global::System.Decimal> _X;
        partial void OnXChanging(Nullable<global::System.Decimal> value);
        partial void OnXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Y
        {
            get
            {
                return _Y;
            }
            set
            {
                OnYChanging(value);
                ReportPropertyChanging("Y");
                _Y = StructuralObject.SetValidValue(value, "Y");
                ReportPropertyChanged("Y");
                OnYChanged();
            }
        }
        private Nullable<global::System.Decimal> _Y;
        partial void OnYChanging(Nullable<global::System.Decimal> value);
        partial void OnYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> width
        {
            get
            {
                return _width;
            }
            set
            {
                OnwidthChanging(value);
                ReportPropertyChanging("width");
                _width = StructuralObject.SetValidValue(value, "width");
                ReportPropertyChanged("width");
                OnwidthChanged();
            }
        }
        private Nullable<global::System.Decimal> _width;
        partial void OnwidthChanging(Nullable<global::System.Decimal> value);
        partial void OnwidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> height
        {
            get
            {
                return _height;
            }
            set
            {
                OnheightChanging(value);
                ReportPropertyChanging("height");
                _height = StructuralObject.SetValidValue(value, "height");
                ReportPropertyChanged("height");
                OnheightChanged();
            }
        }
        private Nullable<global::System.Decimal> _height;
        partial void OnheightChanging(Nullable<global::System.Decimal> value);
        partial void OnheightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String font
        {
            get
            {
                return _font;
            }
            set
            {
                OnfontChanging(value);
                ReportPropertyChanging("font");
                _font = StructuralObject.SetValidValue(value, true, "font");
                ReportPropertyChanged("font");
                OnfontChanged();
            }
        }
        private global::System.String _font;
        partial void OnfontChanging(global::System.String value);
        partial void OnfontChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> font_size
        {
            get
            {
                return _font_size;
            }
            set
            {
                Onfont_sizeChanging(value);
                ReportPropertyChanging("font_size");
                _font_size = StructuralObject.SetValidValue(value, "font_size");
                ReportPropertyChanged("font_size");
                Onfont_sizeChanged();
            }
        }
        private Nullable<global::System.Int32> _font_size;
        partial void Onfont_sizeChanging(Nullable<global::System.Int32> value);
        partial void Onfont_sizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String mapped_name
        {
            get
            {
                return _mapped_name;
            }
            set
            {
                Onmapped_nameChanging(value);
                ReportPropertyChanging("mapped_name");
                _mapped_name = StructuralObject.SetValidValue(value, true, "mapped_name");
                ReportPropertyChanged("mapped_name");
                Onmapped_nameChanged();
            }
        }
        private global::System.String _mapped_name;
        partial void Onmapped_nameChanging(global::System.String value);
        partial void Onmapped_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean editable
        {
            get
            {
                return _editable;
            }
            set
            {
                OneditableChanging(value);
                ReportPropertyChanging("editable");
                _editable = StructuralObject.SetValidValue(value, "editable");
                ReportPropertyChanged("editable");
                OneditableChanged();
            }
        }
        private global::System.Boolean _editable;
        partial void OneditableChanging(global::System.Boolean value);
        partial void OneditableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean deleted
        {
            get
            {
                return _deleted;
            }
            set
            {
                OndeletedChanging(value);
                ReportPropertyChanging("deleted");
                _deleted = StructuralObject.SetValidValue(value, "deleted");
                ReportPropertyChanged("deleted");
                OndeletedChanged();
            }
        }
        private global::System.Boolean _deleted;
        partial void OndeletedChanging(global::System.Boolean value);
        partial void OndeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String label
        {
            get
            {
                return _label;
            }
            set
            {
                OnlabelChanging(value);
                ReportPropertyChanging("label");
                _label = StructuralObject.SetValidValue(value, true, "label");
                ReportPropertyChanged("label");
                OnlabelChanged();
            }
        }
        private global::System.String _label;
        partial void OnlabelChanging(global::System.String value);
        partial void OnlabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 max_length
        {
            get
            {
                return _max_length;
            }
            set
            {
                Onmax_lengthChanging(value);
                ReportPropertyChanging("max_length");
                _max_length = StructuralObject.SetValidValue(value, "max_length");
                ReportPropertyChanged("max_length");
                Onmax_lengthChanged();
            }
        }
        private global::System.Int32 _max_length;
        partial void Onmax_lengthChanging(global::System.Int32 value);
        partial void Onmax_lengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] value
        {
            get
            {
                return StructuralObject.GetValidValue(_value);
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, true, "value");
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.Byte[] _value;
        partial void OnvalueChanging(global::System.Byte[] value);
        partial void OnvalueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String print_field_name
        {
            get
            {
                return _print_field_name;
            }
            set
            {
                Onprint_field_nameChanging(value);
                ReportPropertyChanging("print_field_name");
                _print_field_name = StructuralObject.SetValidValue(value, true, "print_field_name");
                ReportPropertyChanged("print_field_name");
                Onprint_field_nameChanged();
            }
        }
        private global::System.String _print_field_name;
        partial void Onprint_field_nameChanging(global::System.String value);
        partial void Onprint_field_nameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_get_product_print_fields_value_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_get_product_print_fields_value_Result : ComplexObject
    {
        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> product_field_id
        {
            get
            {
                return _product_field_id;
            }
            set
            {
                Onproduct_field_idChanging(value);
                ReportPropertyChanging("product_field_id");
                _product_field_id = StructuralObject.SetValidValue(value, "product_field_id");
                ReportPropertyChanged("product_field_id");
                Onproduct_field_idChanged();
            }
        }
        private Nullable<global::System.Int32> _product_field_id;
        partial void Onproduct_field_idChanging(Nullable<global::System.Int32> value);
        partial void Onproduct_field_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private Nullable<global::System.Int32> _product_id;
        partial void Onproduct_idChanging(Nullable<global::System.Int32> value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String field_name
        {
            get
            {
                return _field_name;
            }
            set
            {
                Onfield_nameChanging(value);
                ReportPropertyChanging("field_name");
                _field_name = StructuralObject.SetValidValue(value, true, "field_name");
                ReportPropertyChanged("field_name");
                Onfield_nameChanged();
            }
        }
        private global::System.String _field_name;
        partial void Onfield_nameChanging(global::System.String value);
        partial void Onfield_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> print_field_type_id
        {
            get
            {
                return _print_field_type_id;
            }
            set
            {
                Onprint_field_type_idChanging(value);
                ReportPropertyChanging("print_field_type_id");
                _print_field_type_id = StructuralObject.SetValidValue(value, "print_field_type_id");
                ReportPropertyChanged("print_field_type_id");
                Onprint_field_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _print_field_type_id;
        partial void Onprint_field_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onprint_field_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> X
        {
            get
            {
                return _X;
            }
            set
            {
                OnXChanging(value);
                ReportPropertyChanging("X");
                _X = StructuralObject.SetValidValue(value, "X");
                ReportPropertyChanged("X");
                OnXChanged();
            }
        }
        private Nullable<global::System.Decimal> _X;
        partial void OnXChanging(Nullable<global::System.Decimal> value);
        partial void OnXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Y
        {
            get
            {
                return _Y;
            }
            set
            {
                OnYChanging(value);
                ReportPropertyChanging("Y");
                _Y = StructuralObject.SetValidValue(value, "Y");
                ReportPropertyChanged("Y");
                OnYChanged();
            }
        }
        private Nullable<global::System.Decimal> _Y;
        partial void OnYChanging(Nullable<global::System.Decimal> value);
        partial void OnYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> width
        {
            get
            {
                return _width;
            }
            set
            {
                OnwidthChanging(value);
                ReportPropertyChanging("width");
                _width = StructuralObject.SetValidValue(value, "width");
                ReportPropertyChanged("width");
                OnwidthChanged();
            }
        }
        private Nullable<global::System.Decimal> _width;
        partial void OnwidthChanging(Nullable<global::System.Decimal> value);
        partial void OnwidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> height
        {
            get
            {
                return _height;
            }
            set
            {
                OnheightChanging(value);
                ReportPropertyChanging("height");
                _height = StructuralObject.SetValidValue(value, "height");
                ReportPropertyChanged("height");
                OnheightChanged();
            }
        }
        private Nullable<global::System.Decimal> _height;
        partial void OnheightChanging(Nullable<global::System.Decimal> value);
        partial void OnheightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String font
        {
            get
            {
                return _font;
            }
            set
            {
                OnfontChanging(value);
                ReportPropertyChanging("font");
                _font = StructuralObject.SetValidValue(value, true, "font");
                ReportPropertyChanged("font");
                OnfontChanged();
            }
        }
        private global::System.String _font;
        partial void OnfontChanging(global::System.String value);
        partial void OnfontChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> font_size
        {
            get
            {
                return _font_size;
            }
            set
            {
                Onfont_sizeChanging(value);
                ReportPropertyChanging("font_size");
                _font_size = StructuralObject.SetValidValue(value, "font_size");
                ReportPropertyChanged("font_size");
                Onfont_sizeChanged();
            }
        }
        private Nullable<global::System.Int32> _font_size;
        partial void Onfont_sizeChanging(Nullable<global::System.Int32> value);
        partial void Onfont_sizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String mapped_name
        {
            get
            {
                return _mapped_name;
            }
            set
            {
                Onmapped_nameChanging(value);
                ReportPropertyChanging("mapped_name");
                _mapped_name = StructuralObject.SetValidValue(value, true, "mapped_name");
                ReportPropertyChanged("mapped_name");
                Onmapped_nameChanged();
            }
        }
        private global::System.String _mapped_name;
        partial void Onmapped_nameChanging(global::System.String value);
        partial void Onmapped_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> editable
        {
            get
            {
                return _editable;
            }
            set
            {
                OneditableChanging(value);
                ReportPropertyChanging("editable");
                _editable = StructuralObject.SetValidValue(value, "editable");
                ReportPropertyChanged("editable");
                OneditableChanged();
            }
        }
        private Nullable<global::System.Boolean> _editable;
        partial void OneditableChanging(Nullable<global::System.Boolean> value);
        partial void OneditableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> deleted
        {
            get
            {
                return _deleted;
            }
            set
            {
                OndeletedChanging(value);
                ReportPropertyChanging("deleted");
                _deleted = StructuralObject.SetValidValue(value, "deleted");
                ReportPropertyChanged("deleted");
                OndeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _deleted;
        partial void OndeletedChanging(Nullable<global::System.Boolean> value);
        partial void OndeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] value
        {
            get
            {
                return StructuralObject.GetValidValue(_value);
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, true, "value");
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.Byte[] _value;
        partial void OnvalueChanging(global::System.Byte[] value);
        partial void OnvalueChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_get_user_groups_pending_admin_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_get_user_groups_pending_admin_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_get_user_groups_pending_admin_Result object.
        /// </summary>
        /// <param name="user_group_id">Initial value of the user_group_id property.</param>
        /// <param name="user_group_name">Initial value of the user_group_name property.</param>
        /// <param name="user_role_id">Initial value of the user_role_id property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="is_in_group">Initial value of the is_in_group property.</param>
        public static usp_get_user_groups_pending_admin_Result Createusp_get_user_groups_pending_admin_Result(global::System.Int32 user_group_id, global::System.String user_group_name, global::System.Int32 user_role_id, global::System.Int32 issuer_id, global::System.Int32 is_in_group)
        {
            usp_get_user_groups_pending_admin_Result usp_get_user_groups_pending_admin_Result = new usp_get_user_groups_pending_admin_Result();
            usp_get_user_groups_pending_admin_Result.user_group_id = user_group_id;
            usp_get_user_groups_pending_admin_Result.user_group_name = user_group_name;
            usp_get_user_groups_pending_admin_Result.user_role_id = user_role_id;
            usp_get_user_groups_pending_admin_Result.issuer_id = issuer_id;
            usp_get_user_groups_pending_admin_Result.is_in_group = is_in_group;
            return usp_get_user_groups_pending_admin_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_group_id
        {
            get
            {
                return _user_group_id;
            }
            set
            {
                Onuser_group_idChanging(value);
                ReportPropertyChanging("user_group_id");
                _user_group_id = StructuralObject.SetValidValue(value, "user_group_id");
                ReportPropertyChanged("user_group_id");
                Onuser_group_idChanged();
            }
        }
        private global::System.Int32 _user_group_id;
        partial void Onuser_group_idChanging(global::System.Int32 value);
        partial void Onuser_group_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_group_name
        {
            get
            {
                return _user_group_name;
            }
            set
            {
                Onuser_group_nameChanging(value);
                ReportPropertyChanging("user_group_name");
                _user_group_name = StructuralObject.SetValidValue(value, false, "user_group_name");
                ReportPropertyChanged("user_group_name");
                Onuser_group_nameChanged();
            }
        }
        private global::System.String _user_group_name;
        partial void Onuser_group_nameChanging(global::System.String value);
        partial void Onuser_group_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_role_id
        {
            get
            {
                return _user_role_id;
            }
            set
            {
                Onuser_role_idChanging(value);
                ReportPropertyChanging("user_role_id");
                _user_role_id = StructuralObject.SetValidValue(value, "user_role_id");
                ReportPropertyChanged("user_role_id");
                Onuser_role_idChanged();
            }
        }
        private global::System.Int32 _user_role_id;
        partial void Onuser_role_idChanging(global::System.Int32 value);
        partial void Onuser_role_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 is_in_group
        {
            get
            {
                return _is_in_group;
            }
            set
            {
                Onis_in_groupChanging(value);
                ReportPropertyChanging("is_in_group");
                _is_in_group = StructuralObject.SetValidValue(value, "is_in_group");
                ReportPropertyChanged("is_in_group");
                Onis_in_groupChanged();
            }
        }
        private global::System.Int32 _is_in_group;
        partial void Onis_in_groupChanging(global::System.Int32 value);
        partial void Onis_in_groupChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_get_user_pending_by_user_id_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_get_user_pending_by_user_id_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_get_user_pending_by_user_id_Result object.
        /// </summary>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="user_email">Initial value of the user_email property.</param>
        /// <param name="user_status_id">Initial value of the user_status_id property.</param>
        /// <param name="online">Initial value of the online property.</param>
        public static usp_get_user_pending_by_user_id_Result Createusp_get_user_pending_by_user_id_Result(global::System.Int64 user_id, global::System.String user_email, global::System.Int32 user_status_id, global::System.Boolean online)
        {
            usp_get_user_pending_by_user_id_Result usp_get_user_pending_by_user_id_Result = new usp_get_user_pending_by_user_id_Result();
            usp_get_user_pending_by_user_id_Result.user_id = user_id;
            usp_get_user_pending_by_user_id_Result.user_email = user_email;
            usp_get_user_pending_by_user_id_Result.user_status_id = user_status_id;
            usp_get_user_pending_by_user_id_Result.online = online;
            return usp_get_user_pending_by_user_id_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value, "user_id");
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int64 _user_id;
        partial void Onuser_idChanging(global::System.Int64 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, true, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, true, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String empoyee_id
        {
            get
            {
                return _empoyee_id;
            }
            set
            {
                Onempoyee_idChanging(value);
                ReportPropertyChanging("empoyee_id");
                _empoyee_id = StructuralObject.SetValidValue(value, true, "empoyee_id");
                ReportPropertyChanged("empoyee_id");
                Onempoyee_idChanged();
            }
        }
        private global::System.String _empoyee_id;
        partial void Onempoyee_idChanging(global::System.String value);
        partial void Onempoyee_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_email
        {
            get
            {
                return _user_email;
            }
            set
            {
                Onuser_emailChanging(value);
                ReportPropertyChanging("user_email");
                _user_email = StructuralObject.SetValidValue(value, false, "user_email");
                ReportPropertyChanged("user_email");
                Onuser_emailChanged();
            }
        }
        private global::System.String _user_email;
        partial void Onuser_emailChanging(global::System.String value);
        partial void Onuser_emailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_status_id
        {
            get
            {
                return _user_status_id;
            }
            set
            {
                Onuser_status_idChanging(value);
                ReportPropertyChanging("user_status_id");
                _user_status_id = StructuralObject.SetValidValue(value, "user_status_id");
                ReportPropertyChanged("user_status_id");
                Onuser_status_idChanged();
            }
        }
        private global::System.Int32 _user_status_id;
        partial void Onuser_status_idChanging(global::System.Int32 value);
        partial void Onuser_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> connection_parameter_id
        {
            get
            {
                return _connection_parameter_id;
            }
            set
            {
                Onconnection_parameter_idChanging(value);
                ReportPropertyChanging("connection_parameter_id");
                _connection_parameter_id = StructuralObject.SetValidValue(value, "connection_parameter_id");
                ReportPropertyChanged("connection_parameter_id");
                Onconnection_parameter_idChanged();
            }
        }
        private Nullable<global::System.Int32> _connection_parameter_id;
        partial void Onconnection_parameter_idChanging(Nullable<global::System.Int32> value);
        partial void Onconnection_parameter_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> language_id
        {
            get
            {
                return _language_id;
            }
            set
            {
                Onlanguage_idChanging(value);
                ReportPropertyChanging("language_id");
                _language_id = StructuralObject.SetValidValue(value, "language_id");
                ReportPropertyChanged("language_id");
                Onlanguage_idChanged();
            }
        }
        private Nullable<global::System.Int32> _language_id;
        partial void Onlanguage_idChanging(Nullable<global::System.Int32> value);
        partial void Onlanguage_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean online
        {
            get
            {
                return _online;
            }
            set
            {
                OnonlineChanging(value);
                ReportPropertyChanging("online");
                _online = StructuralObject.SetValidValue(value, "online");
                ReportPropertyChanged("online");
                OnonlineChanged();
            }
        }
        private global::System.Boolean _online;
        partial void OnonlineChanging(global::System.Boolean value);
        partial void OnonlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String workstation
        {
            get
            {
                return _workstation;
            }
            set
            {
                OnworkstationChanging(value);
                ReportPropertyChanging("workstation");
                _workstation = StructuralObject.SetValidValue(value, true, "workstation");
                ReportPropertyChanged("workstation");
                OnworkstationChanged();
            }
        }
        private global::System.String _workstation;
        partial void OnworkstationChanging(global::System.String value);
        partial void OnworkstationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> last_password_changed_date
        {
            get
            {
                return _last_password_changed_date;
            }
            set
            {
                Onlast_password_changed_dateChanging(value);
                ReportPropertyChanging("last_password_changed_date");
                _last_password_changed_date = StructuralObject.SetValidValue(value, "last_password_changed_date");
                ReportPropertyChanged("last_password_changed_date");
                Onlast_password_changed_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _last_password_changed_date;
        partial void Onlast_password_changed_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onlast_password_changed_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> number_of_incorrect_logins
        {
            get
            {
                return _number_of_incorrect_logins;
            }
            set
            {
                Onnumber_of_incorrect_loginsChanging(value);
                ReportPropertyChanging("number_of_incorrect_logins");
                _number_of_incorrect_logins = StructuralObject.SetValidValue(value, "number_of_incorrect_logins");
                ReportPropertyChanged("number_of_incorrect_logins");
                Onnumber_of_incorrect_loginsChanged();
            }
        }
        private Nullable<global::System.Int32> _number_of_incorrect_logins;
        partial void Onnumber_of_incorrect_loginsChanging(Nullable<global::System.Int32> value);
        partial void Onnumber_of_incorrect_loginsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> last_login_attempt
        {
            get
            {
                return _last_login_attempt;
            }
            set
            {
                Onlast_login_attemptChanging(value);
                ReportPropertyChanging("last_login_attempt");
                _last_login_attempt = StructuralObject.SetValidValue(value, "last_login_attempt");
                ReportPropertyChanged("last_login_attempt");
                Onlast_login_attemptChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _last_login_attempt;
        partial void Onlast_login_attemptChanging(Nullable<global::System.DateTimeOffset> value);
        partial void Onlast_login_attemptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String external_interface_id
        {
            get
            {
                return _external_interface_id;
            }
            set
            {
                Onexternal_interface_idChanging(value);
                ReportPropertyChanging("external_interface_id");
                _external_interface_id = StructuralObject.SetValidValue(value, true, "external_interface_id");
                ReportPropertyChanged("external_interface_id");
                Onexternal_interface_idChanged();
            }
        }
        private global::System.String _external_interface_id;
        partial void Onexternal_interface_idChanging(global::System.String value);
        partial void Onexternal_interface_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String time_zone_Id
        {
            get
            {
                return _time_zone_Id;
            }
            set
            {
                Ontime_zone_IdChanging(value);
                ReportPropertyChanging("time_zone_Id");
                _time_zone_Id = StructuralObject.SetValidValue(value, true, "time_zone_Id");
                ReportPropertyChanged("time_zone_Id");
                Ontime_zone_IdChanged();
            }
        }
        private global::System.String _time_zone_Id;
        partial void Ontime_zone_IdChanging(global::System.String value);
        partial void Ontime_zone_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String time_zone_utcoffset
        {
            get
            {
                return _time_zone_utcoffset;
            }
            set
            {
                Ontime_zone_utcoffsetChanging(value);
                ReportPropertyChanging("time_zone_utcoffset");
                _time_zone_utcoffset = StructuralObject.SetValidValue(value, true, "time_zone_utcoffset");
                ReportPropertyChanged("time_zone_utcoffset");
                Ontime_zone_utcoffsetChanged();
            }
        }
        private global::System.String _time_zone_utcoffset;
        partial void Ontime_zone_utcoffsetChanging(global::System.String value);
        partial void Ontime_zone_utcoffsetChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_get_user_pending_list_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_get_user_pending_list_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_get_user_pending_list_Result object.
        /// </summary>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="user_status_text">Initial value of the user_status_text property.</param>
        /// <param name="online">Initial value of the online property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="aUTHENTICATION_TYPE">Initial value of the AUTHENTICATION_TYPE property.</param>
        public static usp_get_user_pending_list_Result Createusp_get_user_pending_list_Result(global::System.Int64 user_id, global::System.String user_status_text, global::System.Boolean online, global::System.Int32 issuer_id, global::System.String aUTHENTICATION_TYPE)
        {
            usp_get_user_pending_list_Result usp_get_user_pending_list_Result = new usp_get_user_pending_list_Result();
            usp_get_user_pending_list_Result.user_id = user_id;
            usp_get_user_pending_list_Result.user_status_text = user_status_text;
            usp_get_user_pending_list_Result.online = online;
            usp_get_user_pending_list_Result.issuer_id = issuer_id;
            usp_get_user_pending_list_Result.AUTHENTICATION_TYPE = aUTHENTICATION_TYPE;
            return usp_get_user_pending_list_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value, "user_id");
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int64 _user_id;
        partial void Onuser_idChanging(global::System.Int64 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, true, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, true, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String empoyee_id
        {
            get
            {
                return _empoyee_id;
            }
            set
            {
                Onempoyee_idChanging(value);
                ReportPropertyChanging("empoyee_id");
                _empoyee_id = StructuralObject.SetValidValue(value, true, "empoyee_id");
                ReportPropertyChanged("empoyee_id");
                Onempoyee_idChanged();
            }
        }
        private global::System.String _empoyee_id;
        partial void Onempoyee_idChanging(global::System.String value);
        partial void Onempoyee_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_status_text
        {
            get
            {
                return _user_status_text;
            }
            set
            {
                Onuser_status_textChanging(value);
                ReportPropertyChanging("user_status_text");
                _user_status_text = StructuralObject.SetValidValue(value, false, "user_status_text");
                ReportPropertyChanged("user_status_text");
                Onuser_status_textChanged();
            }
        }
        private global::System.String _user_status_text;
        partial void Onuser_status_textChanging(global::System.String value);
        partial void Onuser_status_textChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean online
        {
            get
            {
                return _online;
            }
            set
            {
                OnonlineChanging(value);
                ReportPropertyChanging("online");
                _online = StructuralObject.SetValidValue(value, "online");
                ReportPropertyChanged("online");
                OnonlineChanged();
            }
        }
        private global::System.Boolean _online;
        partial void OnonlineChanging(global::System.Boolean value);
        partial void OnonlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String workstation
        {
            get
            {
                return _workstation;
            }
            set
            {
                OnworkstationChanging(value);
                ReportPropertyChanging("workstation");
                _workstation = StructuralObject.SetValidValue(value, true, "workstation");
                ReportPropertyChanged("workstation");
                OnworkstationChanged();
            }
        }
        private global::System.String _workstation;
        partial void OnworkstationChanging(global::System.String value);
        partial void OnworkstationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AUTHENTICATION_TYPE
        {
            get
            {
                return _AUTHENTICATION_TYPE;
            }
            set
            {
                OnAUTHENTICATION_TYPEChanging(value);
                ReportPropertyChanging("AUTHENTICATION_TYPE");
                _AUTHENTICATION_TYPE = StructuralObject.SetValidValue(value, false, "AUTHENTICATION_TYPE");
                ReportPropertyChanged("AUTHENTICATION_TYPE");
                OnAUTHENTICATION_TYPEChanged();
            }
        }
        private global::System.String _AUTHENTICATION_TYPE;
        partial void OnAUTHENTICATION_TYPEChanging(global::System.String value);
        partial void OnAUTHENTICATION_TYPEChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_integration_get_default_values_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_integration_get_default_values_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_integration_get_default_values_Result object.
        /// </summary>
        /// <param name="integration_id">Initial value of the integration_id property.</param>
        /// <param name="integration_object_id">Initial value of the integration_object_id property.</param>
        /// <param name="integration_field_id">Initial value of the integration_field_id property.</param>
        /// <param name="integration_field_name">Initial value of the integration_field_name property.</param>
        public static usp_integration_get_default_values_Result Createusp_integration_get_default_values_Result(global::System.Int32 integration_id, global::System.Int32 integration_object_id, global::System.Int32 integration_field_id, global::System.String integration_field_name)
        {
            usp_integration_get_default_values_Result usp_integration_get_default_values_Result = new usp_integration_get_default_values_Result();
            usp_integration_get_default_values_Result.integration_id = integration_id;
            usp_integration_get_default_values_Result.integration_object_id = integration_object_id;
            usp_integration_get_default_values_Result.integration_field_id = integration_field_id;
            usp_integration_get_default_values_Result.integration_field_name = integration_field_name;
            return usp_integration_get_default_values_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 integration_id
        {
            get
            {
                return _integration_id;
            }
            set
            {
                Onintegration_idChanging(value);
                ReportPropertyChanging("integration_id");
                _integration_id = StructuralObject.SetValidValue(value, "integration_id");
                ReportPropertyChanged("integration_id");
                Onintegration_idChanged();
            }
        }
        private global::System.Int32 _integration_id;
        partial void Onintegration_idChanging(global::System.Int32 value);
        partial void Onintegration_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 integration_object_id
        {
            get
            {
                return _integration_object_id;
            }
            set
            {
                Onintegration_object_idChanging(value);
                ReportPropertyChanging("integration_object_id");
                _integration_object_id = StructuralObject.SetValidValue(value, "integration_object_id");
                ReportPropertyChanged("integration_object_id");
                Onintegration_object_idChanged();
            }
        }
        private global::System.Int32 _integration_object_id;
        partial void Onintegration_object_idChanging(global::System.Int32 value);
        partial void Onintegration_object_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 integration_field_id
        {
            get
            {
                return _integration_field_id;
            }
            set
            {
                Onintegration_field_idChanging(value);
                ReportPropertyChanging("integration_field_id");
                _integration_field_id = StructuralObject.SetValidValue(value, "integration_field_id");
                ReportPropertyChanged("integration_field_id");
                Onintegration_field_idChanged();
            }
        }
        private global::System.Int32 _integration_field_id;
        partial void Onintegration_field_idChanging(global::System.Int32 value);
        partial void Onintegration_field_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String integration_field_name
        {
            get
            {
                return _integration_field_name;
            }
            set
            {
                Onintegration_field_nameChanging(value);
                ReportPropertyChanging("integration_field_name");
                _integration_field_name = StructuralObject.SetValidValue(value, false, "integration_field_name");
                ReportPropertyChanged("integration_field_name");
                Onintegration_field_nameChanged();
            }
        }
        private global::System.String _integration_field_name;
        partial void Onintegration_field_nameChanging(global::System.String value);
        partial void Onintegration_field_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String integration_field_default_value
        {
            get
            {
                return _integration_field_default_value;
            }
            set
            {
                Onintegration_field_default_valueChanging(value);
                ReportPropertyChanging("integration_field_default_value");
                _integration_field_default_value = StructuralObject.SetValidValue(value, true, "integration_field_default_value");
                ReportPropertyChanged("integration_field_default_value");
                Onintegration_field_default_valueChanged();
            }
        }
        private global::System.String _integration_field_default_value;
        partial void Onintegration_field_default_valueChanging(global::System.String value);
        partial void Onintegration_field_default_valueChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_integration_get_response_fields_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_integration_get_response_fields_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_integration_get_response_fields_Result object.
        /// </summary>
        /// <param name="integration_id">Initial value of the integration_id property.</param>
        /// <param name="integration_object_id">Initial value of the integration_object_id property.</param>
        /// <param name="integration_field_id">Initial value of the integration_field_id property.</param>
        /// <param name="integration_field_name">Initial value of the integration_field_name property.</param>
        /// <param name="accept_all_responses">Initial value of the accept_all_responses property.</param>
        public static usp_integration_get_response_fields_Result Createusp_integration_get_response_fields_Result(global::System.Int32 integration_id, global::System.Int32 integration_object_id, global::System.Int32 integration_field_id, global::System.String integration_field_name, global::System.Boolean accept_all_responses)
        {
            usp_integration_get_response_fields_Result usp_integration_get_response_fields_Result = new usp_integration_get_response_fields_Result();
            usp_integration_get_response_fields_Result.integration_id = integration_id;
            usp_integration_get_response_fields_Result.integration_object_id = integration_object_id;
            usp_integration_get_response_fields_Result.integration_field_id = integration_field_id;
            usp_integration_get_response_fields_Result.integration_field_name = integration_field_name;
            usp_integration_get_response_fields_Result.accept_all_responses = accept_all_responses;
            return usp_integration_get_response_fields_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 integration_id
        {
            get
            {
                return _integration_id;
            }
            set
            {
                Onintegration_idChanging(value);
                ReportPropertyChanging("integration_id");
                _integration_id = StructuralObject.SetValidValue(value, "integration_id");
                ReportPropertyChanged("integration_id");
                Onintegration_idChanged();
            }
        }
        private global::System.Int32 _integration_id;
        partial void Onintegration_idChanging(global::System.Int32 value);
        partial void Onintegration_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 integration_object_id
        {
            get
            {
                return _integration_object_id;
            }
            set
            {
                Onintegration_object_idChanging(value);
                ReportPropertyChanging("integration_object_id");
                _integration_object_id = StructuralObject.SetValidValue(value, "integration_object_id");
                ReportPropertyChanged("integration_object_id");
                Onintegration_object_idChanged();
            }
        }
        private global::System.Int32 _integration_object_id;
        partial void Onintegration_object_idChanging(global::System.Int32 value);
        partial void Onintegration_object_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 integration_field_id
        {
            get
            {
                return _integration_field_id;
            }
            set
            {
                Onintegration_field_idChanging(value);
                ReportPropertyChanging("integration_field_id");
                _integration_field_id = StructuralObject.SetValidValue(value, "integration_field_id");
                ReportPropertyChanged("integration_field_id");
                Onintegration_field_idChanged();
            }
        }
        private global::System.Int32 _integration_field_id;
        partial void Onintegration_field_idChanging(global::System.Int32 value);
        partial void Onintegration_field_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String integration_field_name
        {
            get
            {
                return _integration_field_name;
            }
            set
            {
                Onintegration_field_nameChanging(value);
                ReportPropertyChanging("integration_field_name");
                _integration_field_name = StructuralObject.SetValidValue(value, false, "integration_field_name");
                ReportPropertyChanged("integration_field_name");
                Onintegration_field_nameChanged();
            }
        }
        private global::System.String _integration_field_name;
        partial void Onintegration_field_nameChanging(global::System.String value);
        partial void Onintegration_field_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean accept_all_responses
        {
            get
            {
                return _accept_all_responses;
            }
            set
            {
                Onaccept_all_responsesChanging(value);
                ReportPropertyChanging("accept_all_responses");
                _accept_all_responses = StructuralObject.SetValidValue(value, "accept_all_responses");
                ReportPropertyChanged("accept_all_responses");
                Onaccept_all_responsesChanged();
            }
        }
        private global::System.Boolean _accept_all_responses;
        partial void Onaccept_all_responsesChanging(global::System.Boolean value);
        partial void Onaccept_all_responsesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] integration_field_default_value
        {
            get
            {
                return StructuralObject.GetValidValue(_integration_field_default_value);
            }
            set
            {
                Onintegration_field_default_valueChanging(value);
                ReportPropertyChanging("integration_field_default_value");
                _integration_field_default_value = StructuralObject.SetValidValue(value, true, "integration_field_default_value");
                ReportPropertyChanged("integration_field_default_value");
                Onintegration_field_default_valueChanged();
            }
        }
        private global::System.Byte[] _integration_field_default_value;
        partial void Onintegration_field_default_valueChanging(global::System.Byte[] value);
        partial void Onintegration_field_default_valueChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_lang_lookup_branch_types_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_lang_lookup_branch_types_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_lang_lookup_branch_types_Result object.
        /// </summary>
        /// <param name="lookup_id">Initial value of the lookup_id property.</param>
        public static usp_lang_lookup_branch_types_Result Createusp_lang_lookup_branch_types_Result(global::System.Int32 lookup_id)
        {
            usp_lang_lookup_branch_types_Result usp_lang_lookup_branch_types_Result = new usp_lang_lookup_branch_types_Result();
            usp_lang_lookup_branch_types_Result.lookup_id = lookup_id;
            return usp_lang_lookup_branch_types_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 lookup_id
        {
            get
            {
                return _lookup_id;
            }
            set
            {
                Onlookup_idChanging(value);
                ReportPropertyChanging("lookup_id");
                _lookup_id = StructuralObject.SetValidValue(value, "lookup_id");
                ReportPropertyChanged("lookup_id");
                Onlookup_idChanged();
            }
        }
        private global::System.Int32 _lookup_id;
        partial void Onlookup_idChanging(global::System.Int32 value);
        partial void Onlookup_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String language_text
        {
            get
            {
                return _language_text;
            }
            set
            {
                Onlanguage_textChanging(value);
                ReportPropertyChanging("language_text");
                _language_text = StructuralObject.SetValidValue(value, true, "language_text");
                ReportPropertyChanged("language_text");
                Onlanguage_textChanged();
            }
        }
        private global::System.String _language_text;
        partial void Onlanguage_textChanging(global::System.String value);
        partial void Onlanguage_textChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_lang_lookup_hybrid_request_statues_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_lang_lookup_hybrid_request_statues_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_lang_lookup_hybrid_request_statues_Result object.
        /// </summary>
        /// <param name="lookup_id">Initial value of the lookup_id property.</param>
        public static usp_lang_lookup_hybrid_request_statues_Result Createusp_lang_lookup_hybrid_request_statues_Result(global::System.Int32 lookup_id)
        {
            usp_lang_lookup_hybrid_request_statues_Result usp_lang_lookup_hybrid_request_statues_Result = new usp_lang_lookup_hybrid_request_statues_Result();
            usp_lang_lookup_hybrid_request_statues_Result.lookup_id = lookup_id;
            return usp_lang_lookup_hybrid_request_statues_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 lookup_id
        {
            get
            {
                return _lookup_id;
            }
            set
            {
                Onlookup_idChanging(value);
                ReportPropertyChanging("lookup_id");
                _lookup_id = StructuralObject.SetValidValue(value, "lookup_id");
                ReportPropertyChanged("lookup_id");
                Onlookup_idChanged();
            }
        }
        private global::System.Int32 _lookup_id;
        partial void Onlookup_idChanging(global::System.Int32 value);
        partial void Onlookup_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String language_text
        {
            get
            {
                return _language_text;
            }
            set
            {
                Onlanguage_textChanging(value);
                ReportPropertyChanging("language_text");
                _language_text = StructuralObject.SetValidValue(value, true, "language_text");
                ReportPropertyChanged("language_text");
                Onlanguage_textChanged();
            }
        }
        private global::System.String _language_text;
        partial void Onlanguage_textChanging(global::System.String value);
        partial void Onlanguage_textChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_lang_lookup_Threed_batch_statues_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_lang_lookup_Threed_batch_statues_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_lang_lookup_Threed_batch_statues_Result object.
        /// </summary>
        /// <param name="lookup_id">Initial value of the lookup_id property.</param>
        /// <param name="language_text">Initial value of the language_text property.</param>
        public static usp_lang_lookup_Threed_batch_statues_Result Createusp_lang_lookup_Threed_batch_statues_Result(global::System.Int64 lookup_id, global::System.String language_text)
        {
            usp_lang_lookup_Threed_batch_statues_Result usp_lang_lookup_Threed_batch_statues_Result = new usp_lang_lookup_Threed_batch_statues_Result();
            usp_lang_lookup_Threed_batch_statues_Result.lookup_id = lookup_id;
            usp_lang_lookup_Threed_batch_statues_Result.language_text = language_text;
            return usp_lang_lookup_Threed_batch_statues_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 lookup_id
        {
            get
            {
                return _lookup_id;
            }
            set
            {
                Onlookup_idChanging(value);
                ReportPropertyChanging("lookup_id");
                _lookup_id = StructuralObject.SetValidValue(value, "lookup_id");
                ReportPropertyChanged("lookup_id");
                Onlookup_idChanged();
            }
        }
        private global::System.Int64 _lookup_id;
        partial void Onlookup_idChanging(global::System.Int64 value);
        partial void Onlookup_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String language_text
        {
            get
            {
                return _language_text;
            }
            set
            {
                Onlanguage_textChanging(value);
                ReportPropertyChanging("language_text");
                _language_text = StructuralObject.SetValidValue(value, false, "language_text");
                ReportPropertyChanged("language_text");
                Onlanguage_textChanged();
            }
        }
        private global::System.String _language_text;
        partial void Onlanguage_textChanging(global::System.String value);
        partial void Onlanguage_textChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_pin_reissue_cancel_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_pin_reissue_cancel_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_pin_reissue_cancel_Result object.
        /// </summary>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        /// <param name="product_id">Initial value of the product_id property.</param>
        /// <param name="pan">Initial value of the pan property.</param>
        /// <param name="operator_user_id">Initial value of the operator_user_id property.</param>
        /// <param name="failed">Initial value of the failed property.</param>
        /// <param name="notes">Initial value of the notes property.</param>
        /// <param name="pin_reissue_id">Initial value of the pin_reissue_id property.</param>
        /// <param name="pin_reissue_statuses_id">Initial value of the pin_reissue_statuses_id property.</param>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="pin_reissue_statuses_name">Initial value of the pin_reissue_statuses_name property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        /// <param name="product_code">Initial value of the product_code property.</param>
        /// <param name="product_name">Initial value of the product_name property.</param>
        /// <param name="authorise_pin_reissue_YN">Initial value of the authorise_pin_reissue_YN property.</param>
        /// <param name="tOTAL_ROWS">Initial value of the TOTAL_ROWS property.</param>
        /// <param name="tOTAL_PAGES">Initial value of the TOTAL_PAGES property.</param>
        public static usp_pin_reissue_cancel_Result Createusp_pin_reissue_cancel_Result(global::System.Int32 issuer_id, global::System.Int32 branch_id, global::System.Int32 product_id, global::System.Byte[] pan, global::System.Int64 operator_user_id, global::System.Boolean failed, global::System.String notes, global::System.Int64 pin_reissue_id, global::System.Int32 pin_reissue_statuses_id, global::System.Int64 user_id, global::System.String pin_reissue_statuses_name, global::System.String issuer_name, global::System.String issuer_code, global::System.String branch_code, global::System.String branch_name, global::System.String product_code, global::System.String product_name, global::System.Boolean authorise_pin_reissue_YN, global::System.Int32 tOTAL_ROWS, global::System.Int32 tOTAL_PAGES)
        {
            usp_pin_reissue_cancel_Result usp_pin_reissue_cancel_Result = new usp_pin_reissue_cancel_Result();
            usp_pin_reissue_cancel_Result.issuer_id = issuer_id;
            usp_pin_reissue_cancel_Result.branch_id = branch_id;
            usp_pin_reissue_cancel_Result.product_id = product_id;
            usp_pin_reissue_cancel_Result.pan = pan;
            usp_pin_reissue_cancel_Result.operator_user_id = operator_user_id;
            usp_pin_reissue_cancel_Result.failed = failed;
            usp_pin_reissue_cancel_Result.notes = notes;
            usp_pin_reissue_cancel_Result.pin_reissue_id = pin_reissue_id;
            usp_pin_reissue_cancel_Result.pin_reissue_statuses_id = pin_reissue_statuses_id;
            usp_pin_reissue_cancel_Result.user_id = user_id;
            usp_pin_reissue_cancel_Result.pin_reissue_statuses_name = pin_reissue_statuses_name;
            usp_pin_reissue_cancel_Result.issuer_name = issuer_name;
            usp_pin_reissue_cancel_Result.issuer_code = issuer_code;
            usp_pin_reissue_cancel_Result.branch_code = branch_code;
            usp_pin_reissue_cancel_Result.branch_name = branch_name;
            usp_pin_reissue_cancel_Result.product_code = product_code;
            usp_pin_reissue_cancel_Result.product_name = product_name;
            usp_pin_reissue_cancel_Result.authorise_pin_reissue_YN = authorise_pin_reissue_YN;
            usp_pin_reissue_cancel_Result.TOTAL_ROWS = tOTAL_ROWS;
            usp_pin_reissue_cancel_Result.TOTAL_PAGES = tOTAL_PAGES;
            return usp_pin_reissue_cancel_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int32 _branch_id;
        partial void Onbranch_idChanging(global::System.Int32 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private global::System.Int32 _product_id;
        partial void Onproduct_idChanging(global::System.Int32 value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] pan
        {
            get
            {
                return StructuralObject.GetValidValue(_pan);
            }
            set
            {
                OnpanChanging(value);
                ReportPropertyChanging("pan");
                _pan = StructuralObject.SetValidValue(value, false, "pan");
                ReportPropertyChanged("pan");
                OnpanChanged();
            }
        }
        private global::System.Byte[] _pan;
        partial void OnpanChanging(global::System.Byte[] value);
        partial void OnpanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> reissue_date
        {
            get
            {
                return _reissue_date;
            }
            set
            {
                Onreissue_dateChanging(value);
                ReportPropertyChanging("reissue_date");
                _reissue_date = StructuralObject.SetValidValue(value, "reissue_date");
                ReportPropertyChanged("reissue_date");
                Onreissue_dateChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _reissue_date;
        partial void Onreissue_dateChanging(Nullable<global::System.DateTimeOffset> value);
        partial void Onreissue_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 operator_user_id
        {
            get
            {
                return _operator_user_id;
            }
            set
            {
                Onoperator_user_idChanging(value);
                ReportPropertyChanging("operator_user_id");
                _operator_user_id = StructuralObject.SetValidValue(value, "operator_user_id");
                ReportPropertyChanged("operator_user_id");
                Onoperator_user_idChanged();
            }
        }
        private global::System.Int64 _operator_user_id;
        partial void Onoperator_user_idChanging(global::System.Int64 value);
        partial void Onoperator_user_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> authorise_user_id
        {
            get
            {
                return _authorise_user_id;
            }
            set
            {
                Onauthorise_user_idChanging(value);
                ReportPropertyChanging("authorise_user_id");
                _authorise_user_id = StructuralObject.SetValidValue(value, "authorise_user_id");
                ReportPropertyChanged("authorise_user_id");
                Onauthorise_user_idChanged();
            }
        }
        private Nullable<global::System.Int64> _authorise_user_id;
        partial void Onauthorise_user_idChanging(Nullable<global::System.Int64> value);
        partial void Onauthorise_user_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean failed
        {
            get
            {
                return _failed;
            }
            set
            {
                OnfailedChanging(value);
                ReportPropertyChanging("failed");
                _failed = StructuralObject.SetValidValue(value, "failed");
                ReportPropertyChanged("failed");
                OnfailedChanged();
            }
        }
        private global::System.Boolean _failed;
        partial void OnfailedChanging(global::System.Boolean value);
        partial void OnfailedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String notes
        {
            get
            {
                return _notes;
            }
            set
            {
                OnnotesChanging(value);
                ReportPropertyChanging("notes");
                _notes = StructuralObject.SetValidValue(value, false, "notes");
                ReportPropertyChanged("notes");
                OnnotesChanged();
            }
        }
        private global::System.String _notes;
        partial void OnnotesChanging(global::System.String value);
        partial void OnnotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 pin_reissue_id
        {
            get
            {
                return _pin_reissue_id;
            }
            set
            {
                Onpin_reissue_idChanging(value);
                ReportPropertyChanging("pin_reissue_id");
                _pin_reissue_id = StructuralObject.SetValidValue(value, "pin_reissue_id");
                ReportPropertyChanged("pin_reissue_id");
                Onpin_reissue_idChanged();
            }
        }
        private global::System.Int64 _pin_reissue_id;
        partial void Onpin_reissue_idChanging(global::System.Int64 value);
        partial void Onpin_reissue_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] primary_index_number
        {
            get
            {
                return StructuralObject.GetValidValue(_primary_index_number);
            }
            set
            {
                Onprimary_index_numberChanging(value);
                ReportPropertyChanging("primary_index_number");
                _primary_index_number = StructuralObject.SetValidValue(value, true, "primary_index_number");
                ReportPropertyChanged("primary_index_number");
                Onprimary_index_numberChanged();
            }
        }
        private global::System.Byte[] _primary_index_number;
        partial void Onprimary_index_numberChanging(global::System.Byte[] value);
        partial void Onprimary_index_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> request_expiry
        {
            get
            {
                return _request_expiry;
            }
            set
            {
                Onrequest_expiryChanging(value);
                ReportPropertyChanging("request_expiry");
                _request_expiry = StructuralObject.SetValidValue(value, "request_expiry");
                ReportPropertyChanged("request_expiry");
                Onrequest_expiryChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _request_expiry;
        partial void Onrequest_expiryChanging(Nullable<global::System.DateTimeOffset> value);
        partial void Onrequest_expiryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pin_reissue_statuses_id
        {
            get
            {
                return _pin_reissue_statuses_id;
            }
            set
            {
                Onpin_reissue_statuses_idChanging(value);
                ReportPropertyChanging("pin_reissue_statuses_id");
                _pin_reissue_statuses_id = StructuralObject.SetValidValue(value, "pin_reissue_statuses_id");
                ReportPropertyChanged("pin_reissue_statuses_id");
                Onpin_reissue_statuses_idChanged();
            }
        }
        private global::System.Int32 _pin_reissue_statuses_id;
        partial void Onpin_reissue_statuses_idChanging(global::System.Int32 value);
        partial void Onpin_reissue_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> status_date
        {
            get
            {
                return _status_date;
            }
            set
            {
                Onstatus_dateChanging(value);
                ReportPropertyChanging("status_date");
                _status_date = StructuralObject.SetValidValue(value, "status_date");
                ReportPropertyChanged("status_date");
                Onstatus_dateChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _status_date;
        partial void Onstatus_dateChanging(Nullable<global::System.DateTimeOffset> value);
        partial void Onstatus_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value, "user_id");
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int64 _user_id;
        partial void Onuser_idChanging(global::System.Int64 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comments
        {
            get
            {
                return _comments;
            }
            set
            {
                OncommentsChanging(value);
                ReportPropertyChanging("comments");
                _comments = StructuralObject.SetValidValue(value, true, "comments");
                ReportPropertyChanged("comments");
                OncommentsChanged();
            }
        }
        private global::System.String _comments;
        partial void OncommentsChanging(global::System.String value);
        partial void OncommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pin_reissue_statuses_name
        {
            get
            {
                return _pin_reissue_statuses_name;
            }
            set
            {
                Onpin_reissue_statuses_nameChanging(value);
                ReportPropertyChanging("pin_reissue_statuses_name");
                _pin_reissue_statuses_name = StructuralObject.SetValidValue(value, false, "pin_reissue_statuses_name");
                ReportPropertyChanged("pin_reissue_statuses_name");
                Onpin_reissue_statuses_nameChanged();
            }
        }
        private global::System.String _pin_reissue_statuses_name;
        partial void Onpin_reissue_statuses_nameChanging(global::System.String value);
        partial void Onpin_reissue_statuses_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String operator_usename
        {
            get
            {
                return _operator_usename;
            }
            set
            {
                Onoperator_usenameChanging(value);
                ReportPropertyChanging("operator_usename");
                _operator_usename = StructuralObject.SetValidValue(value, true, "operator_usename");
                ReportPropertyChanged("operator_usename");
                Onoperator_usenameChanged();
            }
        }
        private global::System.String _operator_usename;
        partial void Onoperator_usenameChanging(global::System.String value);
        partial void Onoperator_usenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String authorise_username
        {
            get
            {
                return _authorise_username;
            }
            set
            {
                Onauthorise_usernameChanging(value);
                ReportPropertyChanging("authorise_username");
                _authorise_username = StructuralObject.SetValidValue(value, true, "authorise_username");
                ReportPropertyChanged("authorise_username");
                Onauthorise_usernameChanged();
            }
        }
        private global::System.String _authorise_username;
        partial void Onauthorise_usernameChanging(global::System.String value);
        partial void Onauthorise_usernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_code
        {
            get
            {
                return _product_code;
            }
            set
            {
                Onproduct_codeChanging(value);
                ReportPropertyChanging("product_code");
                _product_code = StructuralObject.SetValidValue(value, false, "product_code");
                ReportPropertyChanged("product_code");
                Onproduct_codeChanged();
            }
        }
        private global::System.String _product_code;
        partial void Onproduct_codeChanging(global::System.String value);
        partial void Onproduct_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_name
        {
            get
            {
                return _product_name;
            }
            set
            {
                Onproduct_nameChanging(value);
                ReportPropertyChanging("product_name");
                _product_name = StructuralObject.SetValidValue(value, false, "product_name");
                ReportPropertyChanged("product_name");
                Onproduct_nameChanged();
            }
        }
        private global::System.String _product_name;
        partial void Onproduct_nameChanging(global::System.String value);
        partial void Onproduct_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean authorise_pin_reissue_YN
        {
            get
            {
                return _authorise_pin_reissue_YN;
            }
            set
            {
                Onauthorise_pin_reissue_YNChanging(value);
                ReportPropertyChanging("authorise_pin_reissue_YN");
                _authorise_pin_reissue_YN = StructuralObject.SetValidValue(value, "authorise_pin_reissue_YN");
                ReportPropertyChanged("authorise_pin_reissue_YN");
                Onauthorise_pin_reissue_YNChanged();
            }
        }
        private global::System.Boolean _authorise_pin_reissue_YN;
        partial void Onauthorise_pin_reissue_YNChanging(global::System.Boolean value);
        partial void Onauthorise_pin_reissue_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_time_zone
        {
            get
            {
                return _user_time_zone;
            }
            set
            {
                Onuser_time_zoneChanging(value);
                ReportPropertyChanging("user_time_zone");
                _user_time_zone = StructuralObject.SetValidValue(value, true, "user_time_zone");
                ReportPropertyChanged("user_time_zone");
                Onuser_time_zoneChanged();
            }
        }
        private global::System.String _user_time_zone;
        partial void Onuser_time_zoneChanging(global::System.String value);
        partial void Onuser_time_zoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private global::System.Int32 _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(global::System.Int32 value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private global::System.Int32 _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(global::System.Int32 value);
        partial void OnTOTAL_PAGESChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_print_batch_status_change_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_print_batch_status_change_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_print_batch_status_change_Result object.
        /// </summary>
        /// <param name="tOTAL_ROWS">Initial value of the TOTAL_ROWS property.</param>
        /// <param name="tOTAL_PAGES">Initial value of the TOTAL_PAGES property.</param>
        /// <param name="print_batch_id">Initial value of the print_batch_id property.</param>
        /// <param name="no_cards">Initial value of the no_cards property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="card_issue_method_name">Initial value of the card_issue_method_name property.</param>
        /// <param name="card_issue_method_id">Initial value of the card_issue_method_id property.</param>
        public static usp_print_batch_status_change_Result Createusp_print_batch_status_change_Result(global::System.Int32 tOTAL_ROWS, global::System.Int32 tOTAL_PAGES, global::System.Int32 print_batch_id, global::System.Int32 no_cards, global::System.Int32 issuer_id, global::System.String issuer_name, global::System.String issuer_code, global::System.String card_issue_method_name, global::System.Int32 card_issue_method_id)
        {
            usp_print_batch_status_change_Result usp_print_batch_status_change_Result = new usp_print_batch_status_change_Result();
            usp_print_batch_status_change_Result.TOTAL_ROWS = tOTAL_ROWS;
            usp_print_batch_status_change_Result.TOTAL_PAGES = tOTAL_PAGES;
            usp_print_batch_status_change_Result.print_batch_id = print_batch_id;
            usp_print_batch_status_change_Result.no_cards = no_cards;
            usp_print_batch_status_change_Result.issuer_id = issuer_id;
            usp_print_batch_status_change_Result.issuer_name = issuer_name;
            usp_print_batch_status_change_Result.issuer_code = issuer_code;
            usp_print_batch_status_change_Result.card_issue_method_name = card_issue_method_name;
            usp_print_batch_status_change_Result.card_issue_method_id = card_issue_method_id;
            return usp_print_batch_status_change_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ROW_NO
        {
            get
            {
                return _ROW_NO;
            }
            set
            {
                OnROW_NOChanging(value);
                ReportPropertyChanging("ROW_NO");
                _ROW_NO = StructuralObject.SetValidValue(value, "ROW_NO");
                ReportPropertyChanged("ROW_NO");
                OnROW_NOChanged();
            }
        }
        private Nullable<global::System.Int64> _ROW_NO;
        partial void OnROW_NOChanging(Nullable<global::System.Int64> value);
        partial void OnROW_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TOTAL_ROWS
        {
            get
            {
                return _TOTAL_ROWS;
            }
            set
            {
                OnTOTAL_ROWSChanging(value);
                ReportPropertyChanging("TOTAL_ROWS");
                _TOTAL_ROWS = StructuralObject.SetValidValue(value, "TOTAL_ROWS");
                ReportPropertyChanged("TOTAL_ROWS");
                OnTOTAL_ROWSChanged();
            }
        }
        private global::System.Int32 _TOTAL_ROWS;
        partial void OnTOTAL_ROWSChanging(global::System.Int32 value);
        partial void OnTOTAL_ROWSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TOTAL_PAGES
        {
            get
            {
                return _TOTAL_PAGES;
            }
            set
            {
                OnTOTAL_PAGESChanging(value);
                ReportPropertyChanging("TOTAL_PAGES");
                _TOTAL_PAGES = StructuralObject.SetValidValue(value, "TOTAL_PAGES");
                ReportPropertyChanged("TOTAL_PAGES");
                OnTOTAL_PAGESChanged();
            }
        }
        private global::System.Int32 _TOTAL_PAGES;
        partial void OnTOTAL_PAGESChanging(global::System.Int32 value);
        partial void OnTOTAL_PAGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 print_batch_id
        {
            get
            {
                return _print_batch_id;
            }
            set
            {
                Onprint_batch_idChanging(value);
                ReportPropertyChanging("print_batch_id");
                _print_batch_id = StructuralObject.SetValidValue(value, "print_batch_id");
                ReportPropertyChanged("print_batch_id");
                Onprint_batch_idChanged();
            }
        }
        private global::System.Int32 _print_batch_id;
        partial void Onprint_batch_idChanging(global::System.Int32 value);
        partial void Onprint_batch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date_created
        {
            get
            {
                return _date_created;
            }
            set
            {
                Ondate_createdChanging(value);
                ReportPropertyChanging("date_created");
                _date_created = StructuralObject.SetValidValue(value, "date_created");
                ReportPropertyChanged("date_created");
                Ondate_createdChanged();
            }
        }
        private Nullable<global::System.DateTime> _date_created;
        partial void Ondate_createdChanging(Nullable<global::System.DateTime> value);
        partial void Ondate_createdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String print_batch_reference
        {
            get
            {
                return _print_batch_reference;
            }
            set
            {
                Onprint_batch_referenceChanging(value);
                ReportPropertyChanging("print_batch_reference");
                _print_batch_reference = StructuralObject.SetValidValue(value, true, "print_batch_reference");
                ReportPropertyChanged("print_batch_reference");
                Onprint_batch_referenceChanged();
            }
        }
        private global::System.String _print_batch_reference;
        partial void Onprint_batch_referenceChanging(global::System.String value);
        partial void Onprint_batch_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 no_cards
        {
            get
            {
                return _no_cards;
            }
            set
            {
                Onno_cardsChanging(value);
                ReportPropertyChanging("no_cards");
                _no_cards = StructuralObject.SetValidValue(value, "no_cards");
                ReportPropertyChanged("no_cards");
                Onno_cardsChanged();
            }
        }
        private global::System.Int32 _no_cards;
        partial void Onno_cardsChanging(global::System.Int32 value);
        partial void Onno_cardsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> print_batch_statuses_id
        {
            get
            {
                return _print_batch_statuses_id;
            }
            set
            {
                Onprint_batch_statuses_idChanging(value);
                ReportPropertyChanging("print_batch_statuses_id");
                _print_batch_statuses_id = StructuralObject.SetValidValue(value, "print_batch_statuses_id");
                ReportPropertyChanged("print_batch_statuses_id");
                Onprint_batch_statuses_idChanged();
            }
        }
        private Nullable<global::System.Int32> _print_batch_statuses_id;
        partial void Onprint_batch_statuses_idChanging(Nullable<global::System.Int32> value);
        partial void Onprint_batch_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String status_notes
        {
            get
            {
                return _status_notes;
            }
            set
            {
                Onstatus_notesChanging(value);
                ReportPropertyChanging("status_notes");
                _status_notes = StructuralObject.SetValidValue(value, true, "status_notes");
                ReportPropertyChanged("status_notes");
                Onstatus_notesChanged();
            }
        }
        private global::System.String _status_notes;
        partial void Onstatus_notesChanging(global::System.String value);
        partial void Onstatus_notesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String print_batch_status_name
        {
            get
            {
                return _print_batch_status_name;
            }
            set
            {
                Onprint_batch_status_nameChanging(value);
                ReportPropertyChanging("print_batch_status_name");
                _print_batch_status_name = StructuralObject.SetValidValue(value, true, "print_batch_status_name");
                ReportPropertyChanged("print_batch_status_name");
                Onprint_batch_status_nameChanged();
            }
        }
        private global::System.String _print_batch_status_name;
        partial void Onprint_batch_status_nameChanging(global::System.String value);
        partial void Onprint_batch_status_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String card_issue_method_name
        {
            get
            {
                return _card_issue_method_name;
            }
            set
            {
                Oncard_issue_method_nameChanging(value);
                ReportPropertyChanging("card_issue_method_name");
                _card_issue_method_name = StructuralObject.SetValidValue(value, false, "card_issue_method_name");
                ReportPropertyChanged("card_issue_method_name");
                Oncard_issue_method_nameChanged();
            }
        }
        private global::System.String _card_issue_method_name;
        partial void Oncard_issue_method_nameChanging(global::System.String value);
        partial void Oncard_issue_method_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_method_id
        {
            get
            {
                return _card_issue_method_id;
            }
            set
            {
                Oncard_issue_method_idChanging(value);
                ReportPropertyChanging("card_issue_method_id");
                _card_issue_method_id = StructuralObject.SetValidValue(value, "card_issue_method_id");
                ReportPropertyChanged("card_issue_method_id");
                Oncard_issue_method_idChanged();
            }
        }
        private global::System.Int32 _card_issue_method_id;
        partial void Oncard_issue_method_idChanging(global::System.Int32 value);
        partial void Oncard_issue_method_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, true, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, true, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_remote_get_pending_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_remote_get_pending_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_remote_get_pending_Result object.
        /// </summary>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        /// <param name="card_id">Initial value of the card_id property.</param>
        /// <param name="card_sequence">Initial value of the card_sequence property.</param>
        /// <param name="product_id">Initial value of the product_id property.</param>
        /// <param name="account_type_id">Initial value of the account_type_id property.</param>
        /// <param name="currency_id">Initial value of the currency_id property.</param>
        /// <param name="customer_type_id">Initial value of the customer_type_id property.</param>
        /// <param name="date_issued">Initial value of the date_issued property.</param>
        /// <param name="resident_id">Initial value of the resident_id property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        /// <param name="product_code">Initial value of the product_code property.</param>
        /// <param name="product_name">Initial value of the product_name property.</param>
        /// <param name="product_bin_code">Initial value of the product_bin_code property.</param>
        /// <param name="src1_id">Initial value of the src1_id property.</param>
        /// <param name="src2_id">Initial value of the src2_id property.</param>
        /// <param name="src3_id">Initial value of the src3_id property.</param>
        /// <param name="pan_length">Initial value of the pan_length property.</param>
        /// <param name="card_priority_id">Initial value of the card_priority_id property.</param>
        /// <param name="card_issue_reason_id">Initial value of the card_issue_reason_id property.</param>
        /// <param name="product_id1">Initial value of the product_id1 property.</param>
        /// <param name="currency_code">Initial value of the currency_code property.</param>
        /// <param name="iso_4217_numeric_code">Initial value of the iso_4217_numeric_code property.</param>
        /// <param name="country_name">Initial value of the country_name property.</param>
        /// <param name="country_code">Initial value of the country_code property.</param>
        public static usp_remote_get_pending_Result Createusp_remote_get_pending_Result(global::System.Int32 branch_id, global::System.Int64 card_id, global::System.Int32 card_sequence, global::System.Int32 product_id, global::System.Int32 account_type_id, global::System.Int32 currency_id, global::System.Int32 customer_type_id, global::System.DateTimeOffset date_issued, global::System.Int32 resident_id, global::System.Int32 issuer_id, global::System.String issuer_code, global::System.String issuer_name, global::System.String branch_code, global::System.String branch_name, global::System.String product_code, global::System.String product_name, global::System.String product_bin_code, global::System.Int32 src1_id, global::System.Int32 src2_id, global::System.Int32 src3_id, global::System.Int16 pan_length, global::System.Int32 card_priority_id, global::System.Int32 card_issue_reason_id, global::System.Int32 product_id1, global::System.String currency_code, global::System.String iso_4217_numeric_code, global::System.String country_name, global::System.String country_code)
        {
            usp_remote_get_pending_Result usp_remote_get_pending_Result = new usp_remote_get_pending_Result();
            usp_remote_get_pending_Result.branch_id = branch_id;
            usp_remote_get_pending_Result.card_id = card_id;
            usp_remote_get_pending_Result.card_sequence = card_sequence;
            usp_remote_get_pending_Result.product_id = product_id;
            usp_remote_get_pending_Result.account_type_id = account_type_id;
            usp_remote_get_pending_Result.currency_id = currency_id;
            usp_remote_get_pending_Result.customer_type_id = customer_type_id;
            usp_remote_get_pending_Result.date_issued = date_issued;
            usp_remote_get_pending_Result.resident_id = resident_id;
            usp_remote_get_pending_Result.issuer_id = issuer_id;
            usp_remote_get_pending_Result.issuer_code = issuer_code;
            usp_remote_get_pending_Result.issuer_name = issuer_name;
            usp_remote_get_pending_Result.branch_code = branch_code;
            usp_remote_get_pending_Result.branch_name = branch_name;
            usp_remote_get_pending_Result.product_code = product_code;
            usp_remote_get_pending_Result.product_name = product_name;
            usp_remote_get_pending_Result.product_bin_code = product_bin_code;
            usp_remote_get_pending_Result.src1_id = src1_id;
            usp_remote_get_pending_Result.src2_id = src2_id;
            usp_remote_get_pending_Result.src3_id = src3_id;
            usp_remote_get_pending_Result.pan_length = pan_length;
            usp_remote_get_pending_Result.card_priority_id = card_priority_id;
            usp_remote_get_pending_Result.card_issue_reason_id = card_issue_reason_id;
            usp_remote_get_pending_Result.product_id1 = product_id1;
            usp_remote_get_pending_Result.currency_code = currency_code;
            usp_remote_get_pending_Result.iso_4217_numeric_code = iso_4217_numeric_code;
            usp_remote_get_pending_Result.country_name = country_name;
            usp_remote_get_pending_Result.country_code = country_code;
            return usp_remote_get_pending_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_reference_number
        {
            get
            {
                return _card_reference_number;
            }
            set
            {
                Oncard_reference_numberChanging(value);
                ReportPropertyChanging("card_reference_number");
                _card_reference_number = StructuralObject.SetValidValue(value, true, "card_reference_number");
                ReportPropertyChanged("card_reference_number");
                Oncard_reference_numberChanged();
            }
        }
        private global::System.String _card_reference_number;
        partial void Oncard_reference_numberChanging(global::System.String value);
        partial void Oncard_reference_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int32 _branch_id;
        partial void Onbranch_idChanging(global::System.Int32 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 card_id
        {
            get
            {
                return _card_id;
            }
            set
            {
                Oncard_idChanging(value);
                ReportPropertyChanging("card_id");
                _card_id = StructuralObject.SetValidValue(value, "card_id");
                ReportPropertyChanged("card_id");
                Oncard_idChanged();
            }
        }
        private global::System.Int64 _card_id;
        partial void Oncard_idChanging(global::System.Int64 value);
        partial void Oncard_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_request_reference
        {
            get
            {
                return _card_request_reference;
            }
            set
            {
                Oncard_request_referenceChanging(value);
                ReportPropertyChanging("card_request_reference");
                _card_request_reference = StructuralObject.SetValidValue(value, true, "card_request_reference");
                ReportPropertyChanged("card_request_reference");
                Oncard_request_referenceChanged();
            }
        }
        private global::System.String _card_request_reference;
        partial void Oncard_request_referenceChanging(global::System.String value);
        partial void Oncard_request_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_sequence
        {
            get
            {
                return _card_sequence;
            }
            set
            {
                Oncard_sequenceChanging(value);
                ReportPropertyChanging("card_sequence");
                _card_sequence = StructuralObject.SetValidValue(value, "card_sequence");
                ReportPropertyChanged("card_sequence");
                Oncard_sequenceChanged();
            }
        }
        private global::System.Int32 _card_sequence;
        partial void Oncard_sequenceChanging(global::System.Int32 value);
        partial void Oncard_sequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private global::System.Int32 _product_id;
        partial void Onproduct_idChanging(global::System.Int32 value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> card_activation_date
        {
            get
            {
                return _card_activation_date;
            }
            set
            {
                Oncard_activation_dateChanging(value);
                ReportPropertyChanging("card_activation_date");
                _card_activation_date = StructuralObject.SetValidValue(value, "card_activation_date");
                ReportPropertyChanged("card_activation_date");
                Oncard_activation_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _card_activation_date;
        partial void Oncard_activation_dateChanging(Nullable<global::System.DateTime> value);
        partial void Oncard_activation_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> card_expiry_date
        {
            get
            {
                return _card_expiry_date;
            }
            set
            {
                Oncard_expiry_dateChanging(value);
                ReportPropertyChanging("card_expiry_date");
                _card_expiry_date = StructuralObject.SetValidValue(value, "card_expiry_date");
                ReportPropertyChanged("card_expiry_date");
                Oncard_expiry_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _card_expiry_date;
        partial void Oncard_expiry_dateChanging(Nullable<global::System.DateTime> value);
        partial void Oncard_expiry_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> card_production_date
        {
            get
            {
                return _card_production_date;
            }
            set
            {
                Oncard_production_dateChanging(value);
                ReportPropertyChanging("card_production_date");
                _card_production_date = StructuralObject.SetValidValue(value, "card_production_date");
                ReportPropertyChanged("card_production_date");
                Oncard_production_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _card_production_date;
        partial void Oncard_production_dateChanging(Nullable<global::System.DateTime> value);
        partial void Oncard_production_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String pvv
        {
            get
            {
                return _pvv;
            }
            set
            {
                OnpvvChanging(value);
                ReportPropertyChanging("pvv");
                _pvv = StructuralObject.SetValidValue(value, true, "pvv");
                ReportPropertyChanged("pvv");
                OnpvvChanged();
            }
        }
        private global::System.String _pvv;
        partial void OnpvvChanging(global::System.String value);
        partial void OnpvvChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 account_type_id
        {
            get
            {
                return _account_type_id;
            }
            set
            {
                Onaccount_type_idChanging(value);
                ReportPropertyChanging("account_type_id");
                _account_type_id = StructuralObject.SetValidValue(value, "account_type_id");
                ReportPropertyChanged("account_type_id");
                Onaccount_type_idChanged();
            }
        }
        private global::System.Int32 _account_type_id;
        partial void Onaccount_type_idChanging(global::System.Int32 value);
        partial void Onaccount_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cms_id
        {
            get
            {
                return _cms_id;
            }
            set
            {
                Oncms_idChanging(value);
                ReportPropertyChanging("cms_id");
                _cms_id = StructuralObject.SetValidValue(value, true, "cms_id");
                ReportPropertyChanged("cms_id");
                Oncms_idChanged();
            }
        }
        private global::System.String _cms_id;
        partial void Oncms_idChanging(global::System.String value);
        partial void Oncms_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contract_number
        {
            get
            {
                return _contract_number;
            }
            set
            {
                Oncontract_numberChanging(value);
                ReportPropertyChanging("contract_number");
                _contract_number = StructuralObject.SetValidValue(value, true, "contract_number");
                ReportPropertyChanged("contract_number");
                Oncontract_numberChanged();
            }
        }
        private global::System.String _contract_number;
        partial void Oncontract_numberChanging(global::System.String value);
        partial void Oncontract_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 currency_id
        {
            get
            {
                return _currency_id;
            }
            set
            {
                Oncurrency_idChanging(value);
                ReportPropertyChanging("currency_id");
                _currency_id = StructuralObject.SetValidValue(value, "currency_id");
                ReportPropertyChanged("currency_id");
                Oncurrency_idChanged();
            }
        }
        private global::System.Int32 _currency_id;
        partial void Oncurrency_idChanging(global::System.Int32 value);
        partial void Oncurrency_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_account_number
        {
            get
            {
                return _customer_account_number;
            }
            set
            {
                Oncustomer_account_numberChanging(value);
                ReportPropertyChanging("customer_account_number");
                _customer_account_number = StructuralObject.SetValidValue(value, true, "customer_account_number");
                ReportPropertyChanged("customer_account_number");
                Oncustomer_account_numberChanged();
            }
        }
        private global::System.String _customer_account_number;
        partial void Oncustomer_account_numberChanging(global::System.String value);
        partial void Oncustomer_account_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_first_name
        {
            get
            {
                return _customer_first_name;
            }
            set
            {
                Oncustomer_first_nameChanging(value);
                ReportPropertyChanging("customer_first_name");
                _customer_first_name = StructuralObject.SetValidValue(value, true, "customer_first_name");
                ReportPropertyChanged("customer_first_name");
                Oncustomer_first_nameChanged();
            }
        }
        private global::System.String _customer_first_name;
        partial void Oncustomer_first_nameChanging(global::System.String value);
        partial void Oncustomer_first_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_last_name
        {
            get
            {
                return _customer_last_name;
            }
            set
            {
                Oncustomer_last_nameChanging(value);
                ReportPropertyChanging("customer_last_name");
                _customer_last_name = StructuralObject.SetValidValue(value, true, "customer_last_name");
                ReportPropertyChanged("customer_last_name");
                Oncustomer_last_nameChanged();
            }
        }
        private global::System.String _customer_last_name;
        partial void Oncustomer_last_nameChanging(global::System.String value);
        partial void Oncustomer_last_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_middle_name
        {
            get
            {
                return _customer_middle_name;
            }
            set
            {
                Oncustomer_middle_nameChanging(value);
                ReportPropertyChanging("customer_middle_name");
                _customer_middle_name = StructuralObject.SetValidValue(value, true, "customer_middle_name");
                ReportPropertyChanged("customer_middle_name");
                Oncustomer_middle_nameChanged();
            }
        }
        private global::System.String _customer_middle_name;
        partial void Oncustomer_middle_nameChanging(global::System.String value);
        partial void Oncustomer_middle_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name_on_card
        {
            get
            {
                return _name_on_card;
            }
            set
            {
                Onname_on_cardChanging(value);
                ReportPropertyChanging("name_on_card");
                _name_on_card = StructuralObject.SetValidValue(value, true, "name_on_card");
                ReportPropertyChanged("name_on_card");
                Onname_on_cardChanged();
            }
        }
        private global::System.String _name_on_card;
        partial void Onname_on_cardChanging(global::System.String value);
        partial void Onname_on_cardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Id_number
        {
            get
            {
                return _Id_number;
            }
            set
            {
                OnId_numberChanging(value);
                ReportPropertyChanging("Id_number");
                _Id_number = StructuralObject.SetValidValue(value, true, "Id_number");
                ReportPropertyChanged("Id_number");
                OnId_numberChanged();
            }
        }
        private global::System.String _Id_number;
        partial void OnId_numberChanging(global::System.String value);
        partial void OnId_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contact_number
        {
            get
            {
                return _contact_number;
            }
            set
            {
                Oncontact_numberChanging(value);
                ReportPropertyChanging("contact_number");
                _contact_number = StructuralObject.SetValidValue(value, true, "contact_number");
                ReportPropertyChanged("contact_number");
                Oncontact_numberChanged();
            }
        }
        private global::System.String _contact_number;
        partial void Oncontact_numberChanging(global::System.String value);
        partial void Oncontact_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                OnCustomerIdChanging(value);
                ReportPropertyChanging("CustomerId");
                _CustomerId = StructuralObject.SetValidValue(value, true, "CustomerId");
                ReportPropertyChanged("CustomerId");
                OnCustomerIdChanged();
            }
        }
        private global::System.String _CustomerId;
        partial void OnCustomerIdChanging(global::System.String value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> customer_title_id
        {
            get
            {
                return _customer_title_id;
            }
            set
            {
                Oncustomer_title_idChanging(value);
                ReportPropertyChanging("customer_title_id");
                _customer_title_id = StructuralObject.SetValidValue(value, "customer_title_id");
                ReportPropertyChanged("customer_title_id");
                Oncustomer_title_idChanged();
            }
        }
        private Nullable<global::System.Int32> _customer_title_id;
        partial void Oncustomer_title_idChanging(Nullable<global::System.Int32> value);
        partial void Oncustomer_title_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 customer_type_id
        {
            get
            {
                return _customer_type_id;
            }
            set
            {
                Oncustomer_type_idChanging(value);
                ReportPropertyChanging("customer_type_id");
                _customer_type_id = StructuralObject.SetValidValue(value, "customer_type_id");
                ReportPropertyChanged("customer_type_id");
                Oncustomer_type_idChanged();
            }
        }
        private global::System.Int32 _customer_type_id;
        partial void Oncustomer_type_idChanging(global::System.Int32 value);
        partial void Oncustomer_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset date_issued
        {
            get
            {
                return _date_issued;
            }
            set
            {
                Ondate_issuedChanging(value);
                ReportPropertyChanging("date_issued");
                _date_issued = StructuralObject.SetValidValue(value, "date_issued");
                ReportPropertyChanged("date_issued");
                Ondate_issuedChanged();
            }
        }
        private global::System.DateTimeOffset _date_issued;
        partial void Ondate_issuedChanging(global::System.DateTimeOffset value);
        partial void Ondate_issuedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 resident_id
        {
            get
            {
                return _resident_id;
            }
            set
            {
                Onresident_idChanging(value);
                ReportPropertyChanging("resident_id");
                _resident_id = StructuralObject.SetValidValue(value, "resident_id");
                ReportPropertyChanged("resident_id");
                Onresident_idChanged();
            }
        }
        private global::System.Int32 _resident_id;
        partial void Onresident_idChanging(global::System.Int32 value);
        partial void Onresident_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_code
        {
            get
            {
                return _product_code;
            }
            set
            {
                Onproduct_codeChanging(value);
                ReportPropertyChanging("product_code");
                _product_code = StructuralObject.SetValidValue(value, false, "product_code");
                ReportPropertyChanged("product_code");
                Onproduct_codeChanged();
            }
        }
        private global::System.String _product_code;
        partial void Onproduct_codeChanging(global::System.String value);
        partial void Onproduct_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String sub_product_code
        {
            get
            {
                return _sub_product_code;
            }
            set
            {
                Onsub_product_codeChanging(value);
                ReportPropertyChanging("sub_product_code");
                _sub_product_code = StructuralObject.SetValidValue(value, true, "sub_product_code");
                ReportPropertyChanged("sub_product_code");
                Onsub_product_codeChanged();
            }
        }
        private global::System.String _sub_product_code;
        partial void Onsub_product_codeChanging(global::System.String value);
        partial void Onsub_product_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_name
        {
            get
            {
                return _product_name;
            }
            set
            {
                Onproduct_nameChanging(value);
                ReportPropertyChanging("product_name");
                _product_name = StructuralObject.SetValidValue(value, false, "product_name");
                ReportPropertyChanged("product_name");
                Onproduct_nameChanged();
            }
        }
        private global::System.String _product_name;
        partial void Onproduct_nameChanging(global::System.String value);
        partial void Onproduct_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_bin_code
        {
            get
            {
                return _product_bin_code;
            }
            set
            {
                Onproduct_bin_codeChanging(value);
                ReportPropertyChanging("product_bin_code");
                _product_bin_code = StructuralObject.SetValidValue(value, false, "product_bin_code");
                ReportPropertyChanged("product_bin_code");
                Onproduct_bin_codeChanged();
            }
        }
        private global::System.String _product_bin_code;
        partial void Onproduct_bin_codeChanging(global::System.String value);
        partial void Onproduct_bin_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 src1_id
        {
            get
            {
                return _src1_id;
            }
            set
            {
                Onsrc1_idChanging(value);
                ReportPropertyChanging("src1_id");
                _src1_id = StructuralObject.SetValidValue(value, "src1_id");
                ReportPropertyChanged("src1_id");
                Onsrc1_idChanged();
            }
        }
        private global::System.Int32 _src1_id;
        partial void Onsrc1_idChanging(global::System.Int32 value);
        partial void Onsrc1_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 src2_id
        {
            get
            {
                return _src2_id;
            }
            set
            {
                Onsrc2_idChanging(value);
                ReportPropertyChanging("src2_id");
                _src2_id = StructuralObject.SetValidValue(value, "src2_id");
                ReportPropertyChanged("src2_id");
                Onsrc2_idChanged();
            }
        }
        private global::System.Int32 _src2_id;
        partial void Onsrc2_idChanging(global::System.Int32 value);
        partial void Onsrc2_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 src3_id
        {
            get
            {
                return _src3_id;
            }
            set
            {
                Onsrc3_idChanging(value);
                ReportPropertyChanging("src3_id");
                _src3_id = StructuralObject.SetValidValue(value, "src3_id");
                ReportPropertyChanged("src3_id");
                Onsrc3_idChanged();
            }
        }
        private global::System.Int32 _src3_id;
        partial void Onsrc3_idChanging(global::System.Int32 value);
        partial void Onsrc3_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 pan_length
        {
            get
            {
                return _pan_length;
            }
            set
            {
                Onpan_lengthChanging(value);
                ReportPropertyChanging("pan_length");
                _pan_length = StructuralObject.SetValidValue(value, "pan_length");
                ReportPropertyChanged("pan_length");
                Onpan_lengthChanged();
            }
        }
        private global::System.Int16 _pan_length;
        partial void Onpan_lengthChanging(global::System.Int16 value);
        partial void Onpan_lengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PVKI
        {
            get
            {
                return _PVKI;
            }
            set
            {
                OnPVKIChanging(value);
                ReportPropertyChanging("PVKI");
                _PVKI = StructuralObject.SetValidValue(value, "PVKI");
                ReportPropertyChanged("PVKI");
                OnPVKIChanged();
            }
        }
        private Nullable<global::System.Int32> _PVKI;
        partial void OnPVKIChanging(Nullable<global::System.Int32> value);
        partial void OnPVKIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PVK
        {
            get
            {
                return _PVK;
            }
            set
            {
                OnPVKChanging(value);
                ReportPropertyChanging("PVK");
                _PVK = StructuralObject.SetValidValue(value, true, "PVK");
                ReportPropertyChanged("PVK");
                OnPVKChanged();
            }
        }
        private global::System.String _PVK;
        partial void OnPVKChanging(global::System.String value);
        partial void OnPVKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CVKA
        {
            get
            {
                return _CVKA;
            }
            set
            {
                OnCVKAChanging(value);
                ReportPropertyChanging("CVKA");
                _CVKA = StructuralObject.SetValidValue(value, true, "CVKA");
                ReportPropertyChanged("CVKA");
                OnCVKAChanged();
            }
        }
        private global::System.String _CVKA;
        partial void OnCVKAChanging(global::System.String value);
        partial void OnCVKAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CVKB
        {
            get
            {
                return _CVKB;
            }
            set
            {
                OnCVKBChanging(value);
                ReportPropertyChanging("CVKB");
                _CVKB = StructuralObject.SetValidValue(value, true, "CVKB");
                ReportPropertyChanged("CVKB");
                OnCVKBChanged();
            }
        }
        private global::System.String _CVKB;
        partial void OnCVKBChanging(global::System.String value);
        partial void OnCVKBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> expiry_months
        {
            get
            {
                return _expiry_months;
            }
            set
            {
                Onexpiry_monthsChanging(value);
                ReportPropertyChanging("expiry_months");
                _expiry_months = StructuralObject.SetValidValue(value, "expiry_months");
                ReportPropertyChanged("expiry_months");
                Onexpiry_monthsChanged();
            }
        }
        private Nullable<global::System.Int32> _expiry_months;
        partial void Onexpiry_monthsChanging(Nullable<global::System.Int32> value);
        partial void Onexpiry_monthsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_priority_id
        {
            get
            {
                return _card_priority_id;
            }
            set
            {
                Oncard_priority_idChanging(value);
                ReportPropertyChanging("card_priority_id");
                _card_priority_id = StructuralObject.SetValidValue(value, "card_priority_id");
                ReportPropertyChanged("card_priority_id");
                Oncard_priority_idChanged();
            }
        }
        private global::System.Int32 _card_priority_id;
        partial void Oncard_priority_idChanging(global::System.Int32 value);
        partial void Oncard_priority_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_reason_id
        {
            get
            {
                return _card_issue_reason_id;
            }
            set
            {
                Oncard_issue_reason_idChanging(value);
                ReportPropertyChanging("card_issue_reason_id");
                _card_issue_reason_id = StructuralObject.SetValidValue(value, "card_issue_reason_id");
                ReportPropertyChanged("card_issue_reason_id");
                Oncard_issue_reason_idChanged();
            }
        }
        private global::System.Int32 _card_issue_reason_id;
        partial void Oncard_issue_reason_idChanging(global::System.Int32 value);
        partial void Oncard_issue_reason_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_id1
        {
            get
            {
                return _product_id1;
            }
            set
            {
                Onproduct_id1Changing(value);
                ReportPropertyChanging("product_id1");
                _product_id1 = StructuralObject.SetValidValue(value, "product_id1");
                ReportPropertyChanged("product_id1");
                Onproduct_id1Changed();
            }
        }
        private global::System.Int32 _product_id1;
        partial void Onproduct_id1Changing(global::System.Int32 value);
        partial void Onproduct_id1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String currency_code
        {
            get
            {
                return _currency_code;
            }
            set
            {
                Oncurrency_codeChanging(value);
                ReportPropertyChanging("currency_code");
                _currency_code = StructuralObject.SetValidValue(value, false, "currency_code");
                ReportPropertyChanged("currency_code");
                Oncurrency_codeChanged();
            }
        }
        private global::System.String _currency_code;
        partial void Oncurrency_codeChanging(global::System.String value);
        partial void Oncurrency_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String iso_4217_numeric_code
        {
            get
            {
                return _iso_4217_numeric_code;
            }
            set
            {
                Oniso_4217_numeric_codeChanging(value);
                ReportPropertyChanging("iso_4217_numeric_code");
                _iso_4217_numeric_code = StructuralObject.SetValidValue(value, false, "iso_4217_numeric_code");
                ReportPropertyChanged("iso_4217_numeric_code");
                Oniso_4217_numeric_codeChanged();
            }
        }
        private global::System.String _iso_4217_numeric_code;
        partial void Oniso_4217_numeric_codeChanging(global::System.String value);
        partial void Oniso_4217_numeric_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String country_name
        {
            get
            {
                return _country_name;
            }
            set
            {
                Oncountry_nameChanging(value);
                ReportPropertyChanging("country_name");
                _country_name = StructuralObject.SetValidValue(value, false, "country_name");
                ReportPropertyChanged("country_name");
                Oncountry_nameChanged();
            }
        }
        private global::System.String _country_name;
        partial void Oncountry_nameChanging(global::System.String value);
        partial void Oncountry_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String country_code
        {
            get
            {
                return _country_code;
            }
            set
            {
                Oncountry_codeChanging(value);
                ReportPropertyChanging("country_code");
                _country_code = StructuralObject.SetValidValue(value, false, "country_code");
                ReportPropertyChanged("country_code");
                Oncountry_codeChanged();
            }
        }
        private global::System.String _country_code;
        partial void Oncountry_codeChanging(global::System.String value);
        partial void Oncountry_codeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="usp_search_request_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_search_request_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_search_request_Result object.
        /// </summary>
        /// <param name="request_id">Initial value of the request_id property.</param>
        /// <param name="card_priority_name">Initial value of the card_priority_name property.</param>
        /// <param name="card_issue_method_id">Initial value of the card_issue_method_id property.</param>
        /// <param name="card_issue_method_name">Initial value of the card_issue_method_name property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="instant_card_issue_YN">Initial value of the instant_card_issue_YN property.</param>
        /// <param name="maker_checker_YN">Initial value of the maker_checker_YN property.</param>
        /// <param name="enable_instant_pin_YN_issuer">Initial value of the enable_instant_pin_YN_issuer property.</param>
        /// <param name="back_office_pin_auth_YN">Initial value of the back_office_pin_auth_YN property.</param>
        /// <param name="authorise_pin_issue_YN">Initial value of the authorise_pin_issue_YN property.</param>
        /// <param name="card_ref_preference">Initial value of the card_ref_preference property.</param>
        /// <param name="country_id">Initial value of the country_id property.</param>
        /// <param name="country_code">Initial value of the country_code property.</param>
        /// <param name="country_name">Initial value of the country_name property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        /// <param name="product_name">Initial value of the product_name property.</param>
        /// <param name="product_code">Initial value of the product_code property.</param>
        /// <param name="product_bin_code">Initial value of the product_bin_code property.</param>
        /// <param name="font_name">Initial value of the font_name property.</param>
        /// <param name="enable_instant_pin_YN">Initial value of the enable_instant_pin_YN property.</param>
        /// <param name="pin_mailer_printing_YN">Initial value of the pin_mailer_printing_YN property.</param>
        /// <param name="pin_mailer_reprint_YN">Initial value of the pin_mailer_reprint_YN property.</param>
        /// <param name="charge_fee_to_issuing_branch_YN">Initial value of the charge_fee_to_issuing_branch_YN property.</param>
        /// <param name="print_issue_card_YN">Initial value of the print_issue_card_YN property.</param>
        /// <param name="allow_manual_uploaded_YN">Initial value of the allow_manual_uploaded_YN property.</param>
        /// <param name="allow_reupload_YN">Initial value of the allow_reupload_YN property.</param>
        /// <param name="delivery_branch_code">Initial value of the delivery_branch_code property.</param>
        /// <param name="delivery_branch_name">Initial value of the delivery_branch_name property.</param>
        public static usp_search_request_Result Createusp_search_request_Result(global::System.Int64 request_id, global::System.String card_priority_name, global::System.Int32 card_issue_method_id, global::System.String card_issue_method_name, global::System.String issuer_name, global::System.String issuer_code, global::System.Int32 issuer_id, global::System.Boolean instant_card_issue_YN, global::System.Boolean maker_checker_YN, global::System.Boolean enable_instant_pin_YN_issuer, global::System.Boolean back_office_pin_auth_YN, global::System.Boolean authorise_pin_issue_YN, global::System.Boolean card_ref_preference, global::System.Int32 country_id, global::System.String country_code, global::System.String country_name, global::System.String branch_name, global::System.String branch_code, global::System.Int32 branch_id, global::System.String product_name, global::System.String product_code, global::System.String product_bin_code, global::System.String font_name, global::System.Boolean enable_instant_pin_YN, global::System.Boolean pin_mailer_printing_YN, global::System.Boolean pin_mailer_reprint_YN, global::System.Boolean charge_fee_to_issuing_branch_YN, global::System.Boolean print_issue_card_YN, global::System.Boolean allow_manual_uploaded_YN, global::System.Boolean allow_reupload_YN, global::System.String delivery_branch_code, global::System.String delivery_branch_name)
        {
            usp_search_request_Result usp_search_request_Result = new usp_search_request_Result();
            usp_search_request_Result.request_id = request_id;
            usp_search_request_Result.card_priority_name = card_priority_name;
            usp_search_request_Result.card_issue_method_id = card_issue_method_id;
            usp_search_request_Result.card_issue_method_name = card_issue_method_name;
            usp_search_request_Result.issuer_name = issuer_name;
            usp_search_request_Result.issuer_code = issuer_code;
            usp_search_request_Result.issuer_id = issuer_id;
            usp_search_request_Result.instant_card_issue_YN = instant_card_issue_YN;
            usp_search_request_Result.maker_checker_YN = maker_checker_YN;
            usp_search_request_Result.enable_instant_pin_YN_issuer = enable_instant_pin_YN_issuer;
            usp_search_request_Result.back_office_pin_auth_YN = back_office_pin_auth_YN;
            usp_search_request_Result.authorise_pin_issue_YN = authorise_pin_issue_YN;
            usp_search_request_Result.card_ref_preference = card_ref_preference;
            usp_search_request_Result.country_id = country_id;
            usp_search_request_Result.country_code = country_code;
            usp_search_request_Result.country_name = country_name;
            usp_search_request_Result.branch_name = branch_name;
            usp_search_request_Result.branch_code = branch_code;
            usp_search_request_Result.branch_id = branch_id;
            usp_search_request_Result.product_name = product_name;
            usp_search_request_Result.product_code = product_code;
            usp_search_request_Result.product_bin_code = product_bin_code;
            usp_search_request_Result.font_name = font_name;
            usp_search_request_Result.enable_instant_pin_YN = enable_instant_pin_YN;
            usp_search_request_Result.pin_mailer_printing_YN = pin_mailer_printing_YN;
            usp_search_request_Result.pin_mailer_reprint_YN = pin_mailer_reprint_YN;
            usp_search_request_Result.charge_fee_to_issuing_branch_YN = charge_fee_to_issuing_branch_YN;
            usp_search_request_Result.print_issue_card_YN = print_issue_card_YN;
            usp_search_request_Result.allow_manual_uploaded_YN = allow_manual_uploaded_YN;
            usp_search_request_Result.allow_reupload_YN = allow_reupload_YN;
            usp_search_request_Result.delivery_branch_code = delivery_branch_code;
            usp_search_request_Result.delivery_branch_name = delivery_branch_name;
            return usp_search_request_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 request_id
        {
            get
            {
                return _request_id;
            }
            set
            {
                Onrequest_idChanging(value);
                ReportPropertyChanging("request_id");
                _request_id = StructuralObject.SetValidValue(value, "request_id");
                ReportPropertyChanged("request_id");
                Onrequest_idChanged();
            }
        }
        private global::System.Int64 _request_id;
        partial void Onrequest_idChanging(global::System.Int64 value);
        partial void Onrequest_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String request_reference
        {
            get
            {
                return _request_reference;
            }
            set
            {
                Onrequest_referenceChanging(value);
                ReportPropertyChanging("request_reference");
                _request_reference = StructuralObject.SetValidValue(value, true, "request_reference");
                ReportPropertyChanged("request_reference");
                Onrequest_referenceChanged();
            }
        }
        private global::System.String _request_reference;
        partial void Onrequest_referenceChanging(global::System.String value);
        partial void Onrequest_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> card_priority_id
        {
            get
            {
                return _card_priority_id;
            }
            set
            {
                Oncard_priority_idChanging(value);
                ReportPropertyChanging("card_priority_id");
                _card_priority_id = StructuralObject.SetValidValue(value, "card_priority_id");
                ReportPropertyChanged("card_priority_id");
                Oncard_priority_idChanged();
            }
        }
        private Nullable<global::System.Int32> _card_priority_id;
        partial void Oncard_priority_idChanging(Nullable<global::System.Int32> value);
        partial void Oncard_priority_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String card_priority_name
        {
            get
            {
                return _card_priority_name;
            }
            set
            {
                Oncard_priority_nameChanging(value);
                ReportPropertyChanging("card_priority_name");
                _card_priority_name = StructuralObject.SetValidValue(value, false, "card_priority_name");
                ReportPropertyChanged("card_priority_name");
                Oncard_priority_nameChanged();
            }
        }
        private global::System.String _card_priority_name;
        partial void Oncard_priority_nameChanging(global::System.String value);
        partial void Oncard_priority_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_method_id
        {
            get
            {
                return _card_issue_method_id;
            }
            set
            {
                Oncard_issue_method_idChanging(value);
                ReportPropertyChanging("card_issue_method_id");
                _card_issue_method_id = StructuralObject.SetValidValue(value, "card_issue_method_id");
                ReportPropertyChanged("card_issue_method_id");
                Oncard_issue_method_idChanged();
            }
        }
        private global::System.Int32 _card_issue_method_id;
        partial void Oncard_issue_method_idChanging(global::System.Int32 value);
        partial void Oncard_issue_method_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String card_issue_method_name
        {
            get
            {
                return _card_issue_method_name;
            }
            set
            {
                Oncard_issue_method_nameChanging(value);
                ReportPropertyChanging("card_issue_method_name");
                _card_issue_method_name = StructuralObject.SetValidValue(value, false, "card_issue_method_name");
                ReportPropertyChanged("card_issue_method_name");
                Oncard_issue_method_nameChanged();
            }
        }
        private global::System.String _card_issue_method_name;
        partial void Oncard_issue_method_nameChanging(global::System.String value);
        partial void Oncard_issue_method_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> fee_charged
        {
            get
            {
                return _fee_charged;
            }
            set
            {
                Onfee_chargedChanging(value);
                ReportPropertyChanging("fee_charged");
                _fee_charged = StructuralObject.SetValidValue(value, "fee_charged");
                ReportPropertyChanged("fee_charged");
                Onfee_chargedChanged();
            }
        }
        private Nullable<global::System.Decimal> _fee_charged;
        partial void Onfee_chargedChanging(Nullable<global::System.Decimal> value);
        partial void Onfee_chargedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> vat
        {
            get
            {
                return _vat;
            }
            set
            {
                OnvatChanging(value);
                ReportPropertyChanging("vat");
                _vat = StructuralObject.SetValidValue(value, "vat");
                ReportPropertyChanged("vat");
                OnvatChanged();
            }
        }
        private Nullable<global::System.Decimal> _vat;
        partial void OnvatChanging(Nullable<global::System.Decimal> value);
        partial void OnvatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> vat_charged
        {
            get
            {
                return _vat_charged;
            }
            set
            {
                Onvat_chargedChanging(value);
                ReportPropertyChanging("vat_charged");
                _vat_charged = StructuralObject.SetValidValue(value, "vat_charged");
                ReportPropertyChanged("vat_charged");
                Onvat_chargedChanged();
            }
        }
        private Nullable<global::System.Decimal> _vat_charged;
        partial void Onvat_chargedChanging(Nullable<global::System.Decimal> value);
        partial void Onvat_chargedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> total_charged
        {
            get
            {
                return _total_charged;
            }
            set
            {
                Ontotal_chargedChanging(value);
                ReportPropertyChanging("total_charged");
                _total_charged = StructuralObject.SetValidValue(value, "total_charged");
                ReportPropertyChanged("total_charged");
                Ontotal_chargedChanged();
            }
        }
        private Nullable<global::System.Decimal> _total_charged;
        partial void Ontotal_chargedChanging(Nullable<global::System.Decimal> value);
        partial void Ontotal_chargedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> fee_waiver_YN
        {
            get
            {
                return _fee_waiver_YN;
            }
            set
            {
                Onfee_waiver_YNChanging(value);
                ReportPropertyChanging("fee_waiver_YN");
                _fee_waiver_YN = StructuralObject.SetValidValue(value, "fee_waiver_YN");
                ReportPropertyChanged("fee_waiver_YN");
                Onfee_waiver_YNChanged();
            }
        }
        private Nullable<global::System.Boolean> _fee_waiver_YN;
        partial void Onfee_waiver_YNChanging(Nullable<global::System.Boolean> value);
        partial void Onfee_waiver_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> fee_editable_YN
        {
            get
            {
                return _fee_editable_YN;
            }
            set
            {
                Onfee_editable_YNChanging(value);
                ReportPropertyChanging("fee_editable_YN");
                _fee_editable_YN = StructuralObject.SetValidValue(value, "fee_editable_YN");
                ReportPropertyChanged("fee_editable_YN");
                Onfee_editable_YNChanged();
            }
        }
        private Nullable<global::System.Boolean> _fee_editable_YN;
        partial void Onfee_editable_YNChanging(Nullable<global::System.Boolean> value);
        partial void Onfee_editable_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> fee_overridden_YN
        {
            get
            {
                return _fee_overridden_YN;
            }
            set
            {
                Onfee_overridden_YNChanging(value);
                ReportPropertyChanging("fee_overridden_YN");
                _fee_overridden_YN = StructuralObject.SetValidValue(value, "fee_overridden_YN");
                ReportPropertyChanged("fee_overridden_YN");
                Onfee_overridden_YNChanged();
            }
        }
        private Nullable<global::System.Boolean> _fee_overridden_YN;
        partial void Onfee_overridden_YNChanging(Nullable<global::System.Boolean> value);
        partial void Onfee_overridden_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_reference_number
        {
            get
            {
                return _fee_reference_number;
            }
            set
            {
                Onfee_reference_numberChanging(value);
                ReportPropertyChanging("fee_reference_number");
                _fee_reference_number = StructuralObject.SetValidValue(value, true, "fee_reference_number");
                ReportPropertyChanged("fee_reference_number");
                Onfee_reference_numberChanged();
            }
        }
        private global::System.String _fee_reference_number;
        partial void Onfee_reference_numberChanging(global::System.String value);
        partial void Onfee_reference_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_reversal_ref_number
        {
            get
            {
                return _fee_reversal_ref_number;
            }
            set
            {
                Onfee_reversal_ref_numberChanging(value);
                ReportPropertyChanging("fee_reversal_ref_number");
                _fee_reversal_ref_number = StructuralObject.SetValidValue(value, true, "fee_reversal_ref_number");
                ReportPropertyChanged("fee_reversal_ref_number");
                Onfee_reversal_ref_numberChanged();
            }
        }
        private global::System.String _fee_reversal_ref_number;
        partial void Onfee_reversal_ref_numberChanging(global::System.String value);
        partial void Onfee_reversal_ref_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> pin_selected
        {
            get
            {
                return _pin_selected;
            }
            set
            {
                Onpin_selectedChanging(value);
                ReportPropertyChanging("pin_selected");
                _pin_selected = StructuralObject.SetValidValue(value, "pin_selected");
                ReportPropertyChanged("pin_selected");
                Onpin_selectedChanged();
            }
        }
        private Nullable<global::System.Boolean> _pin_selected;
        partial void Onpin_selectedChanging(Nullable<global::System.Boolean> value);
        partial void Onpin_selectedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private Nullable<global::System.Int32> _product_id;
        partial void Onproduct_idChanging(Nullable<global::System.Int32> value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean instant_card_issue_YN
        {
            get
            {
                return _instant_card_issue_YN;
            }
            set
            {
                Oninstant_card_issue_YNChanging(value);
                ReportPropertyChanging("instant_card_issue_YN");
                _instant_card_issue_YN = StructuralObject.SetValidValue(value, "instant_card_issue_YN");
                ReportPropertyChanged("instant_card_issue_YN");
                Oninstant_card_issue_YNChanged();
            }
        }
        private global::System.Boolean _instant_card_issue_YN;
        partial void Oninstant_card_issue_YNChanging(global::System.Boolean value);
        partial void Oninstant_card_issue_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean maker_checker_YN
        {
            get
            {
                return _maker_checker_YN;
            }
            set
            {
                Onmaker_checker_YNChanging(value);
                ReportPropertyChanging("maker_checker_YN");
                _maker_checker_YN = StructuralObject.SetValidValue(value, "maker_checker_YN");
                ReportPropertyChanged("maker_checker_YN");
                Onmaker_checker_YNChanged();
            }
        }
        private global::System.Boolean _maker_checker_YN;
        partial void Onmaker_checker_YNChanging(global::System.Boolean value);
        partial void Onmaker_checker_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean enable_instant_pin_YN_issuer
        {
            get
            {
                return _enable_instant_pin_YN_issuer;
            }
            set
            {
                Onenable_instant_pin_YN_issuerChanging(value);
                ReportPropertyChanging("enable_instant_pin_YN_issuer");
                _enable_instant_pin_YN_issuer = StructuralObject.SetValidValue(value, "enable_instant_pin_YN_issuer");
                ReportPropertyChanged("enable_instant_pin_YN_issuer");
                Onenable_instant_pin_YN_issuerChanged();
            }
        }
        private global::System.Boolean _enable_instant_pin_YN_issuer;
        partial void Onenable_instant_pin_YN_issuerChanging(global::System.Boolean value);
        partial void Onenable_instant_pin_YN_issuerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean back_office_pin_auth_YN
        {
            get
            {
                return _back_office_pin_auth_YN;
            }
            set
            {
                Onback_office_pin_auth_YNChanging(value);
                ReportPropertyChanging("back_office_pin_auth_YN");
                _back_office_pin_auth_YN = StructuralObject.SetValidValue(value, "back_office_pin_auth_YN");
                ReportPropertyChanged("back_office_pin_auth_YN");
                Onback_office_pin_auth_YNChanged();
            }
        }
        private global::System.Boolean _back_office_pin_auth_YN;
        partial void Onback_office_pin_auth_YNChanging(global::System.Boolean value);
        partial void Onback_office_pin_auth_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean authorise_pin_issue_YN
        {
            get
            {
                return _authorise_pin_issue_YN;
            }
            set
            {
                Onauthorise_pin_issue_YNChanging(value);
                ReportPropertyChanging("authorise_pin_issue_YN");
                _authorise_pin_issue_YN = StructuralObject.SetValidValue(value, "authorise_pin_issue_YN");
                ReportPropertyChanged("authorise_pin_issue_YN");
                Onauthorise_pin_issue_YNChanged();
            }
        }
        private global::System.Boolean _authorise_pin_issue_YN;
        partial void Onauthorise_pin_issue_YNChanging(global::System.Boolean value);
        partial void Onauthorise_pin_issue_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean card_ref_preference
        {
            get
            {
                return _card_ref_preference;
            }
            set
            {
                Oncard_ref_preferenceChanging(value);
                ReportPropertyChanging("card_ref_preference");
                _card_ref_preference = StructuralObject.SetValidValue(value, "card_ref_preference");
                ReportPropertyChanged("card_ref_preference");
                Oncard_ref_preferenceChanged();
            }
        }
        private global::System.Boolean _card_ref_preference;
        partial void Oncard_ref_preferenceChanging(global::System.Boolean value);
        partial void Oncard_ref_preferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> language_id
        {
            get
            {
                return _language_id;
            }
            set
            {
                Onlanguage_idChanging(value);
                ReportPropertyChanging("language_id");
                _language_id = StructuralObject.SetValidValue(value, "language_id");
                ReportPropertyChanged("language_id");
                Onlanguage_idChanged();
            }
        }
        private Nullable<global::System.Int32> _language_id;
        partial void Onlanguage_idChanging(Nullable<global::System.Int32> value);
        partial void Onlanguage_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 country_id
        {
            get
            {
                return _country_id;
            }
            set
            {
                Oncountry_idChanging(value);
                ReportPropertyChanging("country_id");
                _country_id = StructuralObject.SetValidValue(value, "country_id");
                ReportPropertyChanged("country_id");
                Oncountry_idChanged();
            }
        }
        private global::System.Int32 _country_id;
        partial void Oncountry_idChanging(global::System.Int32 value);
        partial void Oncountry_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String country_code
        {
            get
            {
                return _country_code;
            }
            set
            {
                Oncountry_codeChanging(value);
                ReportPropertyChanging("country_code");
                _country_code = StructuralObject.SetValidValue(value, false, "country_code");
                ReportPropertyChanged("country_code");
                Oncountry_codeChanged();
            }
        }
        private global::System.String _country_code;
        partial void Oncountry_codeChanging(global::System.String value);
        partial void Oncountry_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String country_name
        {
            get
            {
                return _country_name;
            }
            set
            {
                Oncountry_nameChanging(value);
                ReportPropertyChanging("country_name");
                _country_name = StructuralObject.SetValidValue(value, false, "country_name");
                ReportPropertyChanged("country_name");
                Oncountry_nameChanged();
            }
        }
        private global::System.String _country_name;
        partial void Oncountry_nameChanging(global::System.String value);
        partial void Oncountry_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String country_capital_city
        {
            get
            {
                return _country_capital_city;
            }
            set
            {
                Oncountry_capital_cityChanging(value);
                ReportPropertyChanging("country_capital_city");
                _country_capital_city = StructuralObject.SetValidValue(value, true, "country_capital_city");
                ReportPropertyChanged("country_capital_city");
                Oncountry_capital_cityChanged();
            }
        }
        private global::System.String _country_capital_city;
        partial void Oncountry_capital_cityChanging(global::System.String value);
        partial void Oncountry_capital_cityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int32 _branch_id;
        partial void Onbranch_idChanging(global::System.Int32 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_name
        {
            get
            {
                return _product_name;
            }
            set
            {
                Onproduct_nameChanging(value);
                ReportPropertyChanging("product_name");
                _product_name = StructuralObject.SetValidValue(value, false, "product_name");
                ReportPropertyChanged("product_name");
                Onproduct_nameChanged();
            }
        }
        private global::System.String _product_name;
        partial void Onproduct_nameChanging(global::System.String value);
        partial void Onproduct_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_code
        {
            get
            {
                return _product_code;
            }
            set
            {
                Onproduct_codeChanging(value);
                ReportPropertyChanging("product_code");
                _product_code = StructuralObject.SetValidValue(value, false, "product_code");
                ReportPropertyChanged("product_code");
                Onproduct_codeChanged();
            }
        }
        private global::System.String _product_code;
        partial void Onproduct_codeChanging(global::System.String value);
        partial void Onproduct_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_bin_code
        {
            get
            {
                return _product_bin_code;
            }
            set
            {
                Onproduct_bin_codeChanging(value);
                ReportPropertyChanging("product_bin_code");
                _product_bin_code = StructuralObject.SetValidValue(value, false, "product_bin_code");
                ReportPropertyChanged("product_bin_code");
                Onproduct_bin_codeChanged();
            }
        }
        private global::System.String _product_bin_code;
        partial void Onproduct_bin_codeChanging(global::System.String value);
        partial void Onproduct_bin_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String sub_product_code
        {
            get
            {
                return _sub_product_code;
            }
            set
            {
                Onsub_product_codeChanging(value);
                ReportPropertyChanging("sub_product_code");
                _sub_product_code = StructuralObject.SetValidValue(value, true, "sub_product_code");
                ReportPropertyChanged("sub_product_code");
                Onsub_product_codeChanged();
            }
        }
        private global::System.String _sub_product_code;
        partial void Onsub_product_codeChanging(global::System.String value);
        partial void Onsub_product_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Name_on_card_font_size
        {
            get
            {
                return _Name_on_card_font_size;
            }
            set
            {
                OnName_on_card_font_sizeChanging(value);
                ReportPropertyChanging("Name_on_card_font_size");
                _Name_on_card_font_size = StructuralObject.SetValidValue(value, "Name_on_card_font_size");
                ReportPropertyChanged("Name_on_card_font_size");
                OnName_on_card_font_sizeChanged();
            }
        }
        private Nullable<global::System.Int32> _Name_on_card_font_size;
        partial void OnName_on_card_font_sizeChanging(Nullable<global::System.Int32> value);
        partial void OnName_on_card_font_sizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> name_on_card_left
        {
            get
            {
                return _name_on_card_left;
            }
            set
            {
                Onname_on_card_leftChanging(value);
                ReportPropertyChanging("name_on_card_left");
                _name_on_card_left = StructuralObject.SetValidValue(value, "name_on_card_left");
                ReportPropertyChanged("name_on_card_left");
                Onname_on_card_leftChanged();
            }
        }
        private Nullable<global::System.Decimal> _name_on_card_left;
        partial void Onname_on_card_leftChanging(Nullable<global::System.Decimal> value);
        partial void Onname_on_card_leftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> name_on_card_top
        {
            get
            {
                return _name_on_card_top;
            }
            set
            {
                Onname_on_card_topChanging(value);
                ReportPropertyChanging("name_on_card_top");
                _name_on_card_top = StructuralObject.SetValidValue(value, "name_on_card_top");
                ReportPropertyChanged("name_on_card_top");
                Onname_on_card_topChanged();
            }
        }
        private Nullable<global::System.Decimal> _name_on_card_top;
        partial void Onname_on_card_topChanging(Nullable<global::System.Decimal> value);
        partial void Onname_on_card_topChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String font_name
        {
            get
            {
                return _font_name;
            }
            set
            {
                Onfont_nameChanging(value);
                ReportPropertyChanging("font_name");
                _font_name = StructuralObject.SetValidValue(value, false, "font_name");
                ReportPropertyChanged("font_name");
                Onfont_nameChanged();
            }
        }
        private global::System.String _font_name;
        partial void Onfont_nameChanging(global::System.String value);
        partial void Onfont_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean enable_instant_pin_YN
        {
            get
            {
                return _enable_instant_pin_YN;
            }
            set
            {
                Onenable_instant_pin_YNChanging(value);
                ReportPropertyChanging("enable_instant_pin_YN");
                _enable_instant_pin_YN = StructuralObject.SetValidValue(value, "enable_instant_pin_YN");
                ReportPropertyChanged("enable_instant_pin_YN");
                Onenable_instant_pin_YNChanged();
            }
        }
        private global::System.Boolean _enable_instant_pin_YN;
        partial void Onenable_instant_pin_YNChanging(global::System.Boolean value);
        partial void Onenable_instant_pin_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean pin_mailer_printing_YN
        {
            get
            {
                return _pin_mailer_printing_YN;
            }
            set
            {
                Onpin_mailer_printing_YNChanging(value);
                ReportPropertyChanging("pin_mailer_printing_YN");
                _pin_mailer_printing_YN = StructuralObject.SetValidValue(value, "pin_mailer_printing_YN");
                ReportPropertyChanged("pin_mailer_printing_YN");
                Onpin_mailer_printing_YNChanged();
            }
        }
        private global::System.Boolean _pin_mailer_printing_YN;
        partial void Onpin_mailer_printing_YNChanging(global::System.Boolean value);
        partial void Onpin_mailer_printing_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean pin_mailer_reprint_YN
        {
            get
            {
                return _pin_mailer_reprint_YN;
            }
            set
            {
                Onpin_mailer_reprint_YNChanging(value);
                ReportPropertyChanging("pin_mailer_reprint_YN");
                _pin_mailer_reprint_YN = StructuralObject.SetValidValue(value, "pin_mailer_reprint_YN");
                ReportPropertyChanged("pin_mailer_reprint_YN");
                Onpin_mailer_reprint_YNChanged();
            }
        }
        private global::System.Boolean _pin_mailer_reprint_YN;
        partial void Onpin_mailer_reprint_YNChanging(global::System.Boolean value);
        partial void Onpin_mailer_reprint_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean charge_fee_to_issuing_branch_YN
        {
            get
            {
                return _charge_fee_to_issuing_branch_YN;
            }
            set
            {
                Oncharge_fee_to_issuing_branch_YNChanging(value);
                ReportPropertyChanging("charge_fee_to_issuing_branch_YN");
                _charge_fee_to_issuing_branch_YN = StructuralObject.SetValidValue(value, "charge_fee_to_issuing_branch_YN");
                ReportPropertyChanged("charge_fee_to_issuing_branch_YN");
                Oncharge_fee_to_issuing_branch_YNChanged();
            }
        }
        private global::System.Boolean _charge_fee_to_issuing_branch_YN;
        partial void Oncharge_fee_to_issuing_branch_YNChanging(global::System.Boolean value);
        partial void Oncharge_fee_to_issuing_branch_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean print_issue_card_YN
        {
            get
            {
                return _print_issue_card_YN;
            }
            set
            {
                Onprint_issue_card_YNChanging(value);
                ReportPropertyChanging("print_issue_card_YN");
                _print_issue_card_YN = StructuralObject.SetValidValue(value, "print_issue_card_YN");
                ReportPropertyChanged("print_issue_card_YN");
                Onprint_issue_card_YNChanged();
            }
        }
        private global::System.Boolean _print_issue_card_YN;
        partial void Onprint_issue_card_YNChanging(global::System.Boolean value);
        partial void Onprint_issue_card_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean allow_manual_uploaded_YN
        {
            get
            {
                return _allow_manual_uploaded_YN;
            }
            set
            {
                Onallow_manual_uploaded_YNChanging(value);
                ReportPropertyChanging("allow_manual_uploaded_YN");
                _allow_manual_uploaded_YN = StructuralObject.SetValidValue(value, "allow_manual_uploaded_YN");
                ReportPropertyChanged("allow_manual_uploaded_YN");
                Onallow_manual_uploaded_YNChanged();
            }
        }
        private global::System.Boolean _allow_manual_uploaded_YN;
        partial void Onallow_manual_uploaded_YNChanging(global::System.Boolean value);
        partial void Onallow_manual_uploaded_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean allow_reupload_YN
        {
            get
            {
                return _allow_reupload_YN;
            }
            set
            {
                Onallow_reupload_YNChanging(value);
                ReportPropertyChanging("allow_reupload_YN");
                _allow_reupload_YN = StructuralObject.SetValidValue(value, "allow_reupload_YN");
                ReportPropertyChanged("allow_reupload_YN");
                Onallow_reupload_YNChanged();
            }
        }
        private global::System.Boolean _allow_reupload_YN;
        partial void Onallow_reupload_YNChanging(global::System.Boolean value);
        partial void Onallow_reupload_YNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> hybrid_request_statuses_id
        {
            get
            {
                return _hybrid_request_statuses_id;
            }
            set
            {
                Onhybrid_request_statuses_idChanging(value);
                ReportPropertyChanging("hybrid_request_statuses_id");
                _hybrid_request_statuses_id = StructuralObject.SetValidValue(value, "hybrid_request_statuses_id");
                ReportPropertyChanged("hybrid_request_statuses_id");
                Onhybrid_request_statuses_idChanged();
            }
        }
        private Nullable<global::System.Int32> _hybrid_request_statuses_id;
        partial void Onhybrid_request_statuses_idChanging(Nullable<global::System.Int32> value);
        partial void Onhybrid_request_statuses_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> status_date
        {
            get
            {
                return _status_date;
            }
            set
            {
                Onstatus_dateChanging(value);
                ReportPropertyChanging("status_date");
                _status_date = StructuralObject.SetValidValue(value, "status_date");
                ReportPropertyChanged("status_date");
                Onstatus_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _status_date;
        partial void Onstatus_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onstatus_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branch_card_statuses_name
        {
            get
            {
                return _branch_card_statuses_name;
            }
            set
            {
                Onbranch_card_statuses_nameChanging(value);
                ReportPropertyChanging("branch_card_statuses_name");
                _branch_card_statuses_name = StructuralObject.SetValidValue(value, true, "branch_card_statuses_name");
                ReportPropertyChanged("branch_card_statuses_name");
                Onbranch_card_statuses_nameChanged();
            }
        }
        private global::System.String _branch_card_statuses_name;
        partial void Onbranch_card_statuses_nameChanging(global::System.String value);
        partial void Onbranch_card_statuses_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> domicile_branch_id
        {
            get
            {
                return _domicile_branch_id;
            }
            set
            {
                Ondomicile_branch_idChanging(value);
                ReportPropertyChanging("domicile_branch_id");
                _domicile_branch_id = StructuralObject.SetValidValue(value, "domicile_branch_id");
                ReportPropertyChanged("domicile_branch_id");
                Ondomicile_branch_idChanged();
            }
        }
        private Nullable<global::System.Int32> _domicile_branch_id;
        partial void Ondomicile_branch_idChanging(Nullable<global::System.Int32> value);
        partial void Ondomicile_branch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String domicile_branch_code
        {
            get
            {
                return _domicile_branch_code;
            }
            set
            {
                Ondomicile_branch_codeChanging(value);
                ReportPropertyChanging("domicile_branch_code");
                _domicile_branch_code = StructuralObject.SetValidValue(value, true, "domicile_branch_code");
                ReportPropertyChanged("domicile_branch_code");
                Ondomicile_branch_codeChanged();
            }
        }
        private global::System.String _domicile_branch_code;
        partial void Ondomicile_branch_codeChanging(global::System.String value);
        partial void Ondomicile_branch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String domicile_branch_name
        {
            get
            {
                return _domicile_branch_name;
            }
            set
            {
                Ondomicile_branch_nameChanging(value);
                ReportPropertyChanging("domicile_branch_name");
                _domicile_branch_name = StructuralObject.SetValidValue(value, true, "domicile_branch_name");
                ReportPropertyChanged("domicile_branch_name");
                Ondomicile_branch_nameChanged();
            }
        }
        private global::System.String _domicile_branch_name;
        partial void Ondomicile_branch_nameChanging(global::System.String value);
        partial void Ondomicile_branch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String delivery_branch_code
        {
            get
            {
                return _delivery_branch_code;
            }
            set
            {
                Ondelivery_branch_codeChanging(value);
                ReportPropertyChanging("delivery_branch_code");
                _delivery_branch_code = StructuralObject.SetValidValue(value, false, "delivery_branch_code");
                ReportPropertyChanged("delivery_branch_code");
                Ondelivery_branch_codeChanged();
            }
        }
        private global::System.String _delivery_branch_code;
        partial void Ondelivery_branch_codeChanging(global::System.String value);
        partial void Ondelivery_branch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String delivery_branch_name
        {
            get
            {
                return _delivery_branch_name;
            }
            set
            {
                Ondelivery_branch_nameChanging(value);
                ReportPropertyChanging("delivery_branch_name");
                _delivery_branch_name = StructuralObject.SetValidValue(value, false, "delivery_branch_name");
                ReportPropertyChanged("delivery_branch_name");
                Ondelivery_branch_nameChanged();
            }
        }
        private global::System.String _delivery_branch_name;
        partial void Ondelivery_branch_nameChanging(global::System.String value);
        partial void Ondelivery_branch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> customer_account_id
        {
            get
            {
                return _customer_account_id;
            }
            set
            {
                Oncustomer_account_idChanging(value);
                ReportPropertyChanging("customer_account_id");
                _customer_account_id = StructuralObject.SetValidValue(value, "customer_account_id");
                ReportPropertyChanged("customer_account_id");
                Oncustomer_account_idChanged();
            }
        }
        private Nullable<global::System.Int64> _customer_account_id;
        partial void Oncustomer_account_idChanging(Nullable<global::System.Int64> value);
        partial void Oncustomer_account_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_account_number
        {
            get
            {
                return _customer_account_number;
            }
            set
            {
                Oncustomer_account_numberChanging(value);
                ReportPropertyChanging("customer_account_number");
                _customer_account_number = StructuralObject.SetValidValue(value, true, "customer_account_number");
                ReportPropertyChanged("customer_account_number");
                Oncustomer_account_numberChanged();
            }
        }
        private global::System.String _customer_account_number;
        partial void Oncustomer_account_numberChanging(global::System.String value);
        partial void Oncustomer_account_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> card_issue_reason_id
        {
            get
            {
                return _card_issue_reason_id;
            }
            set
            {
                Oncard_issue_reason_idChanging(value);
                ReportPropertyChanging("card_issue_reason_id");
                _card_issue_reason_id = StructuralObject.SetValidValue(value, "card_issue_reason_id");
                ReportPropertyChanged("card_issue_reason_id");
                Oncard_issue_reason_idChanged();
            }
        }
        private Nullable<global::System.Int32> _card_issue_reason_id;
        partial void Oncard_issue_reason_idChanging(Nullable<global::System.Int32> value);
        partial void Oncard_issue_reason_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> account_type_id
        {
            get
            {
                return _account_type_id;
            }
            set
            {
                Onaccount_type_idChanging(value);
                ReportPropertyChanging("account_type_id");
                _account_type_id = StructuralObject.SetValidValue(value, "account_type_id");
                ReportPropertyChanged("account_type_id");
                Onaccount_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _account_type_id;
        partial void Onaccount_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onaccount_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_account_type_name
        {
            get
            {
                return _customer_account_type_name;
            }
            set
            {
                Oncustomer_account_type_nameChanging(value);
                ReportPropertyChanging("customer_account_type_name");
                _customer_account_type_name = StructuralObject.SetValidValue(value, true, "customer_account_type_name");
                ReportPropertyChanged("customer_account_type_name");
                Oncustomer_account_type_nameChanged();
            }
        }
        private global::System.String _customer_account_type_name;
        partial void Oncustomer_account_type_nameChanging(global::System.String value);
        partial void Oncustomer_account_type_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_first_name
        {
            get
            {
                return _customer_first_name;
            }
            set
            {
                Oncustomer_first_nameChanging(value);
                ReportPropertyChanging("customer_first_name");
                _customer_first_name = StructuralObject.SetValidValue(value, true, "customer_first_name");
                ReportPropertyChanged("customer_first_name");
                Oncustomer_first_nameChanged();
            }
        }
        private global::System.String _customer_first_name;
        partial void Oncustomer_first_nameChanging(global::System.String value);
        partial void Oncustomer_first_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_middle_name
        {
            get
            {
                return _customer_middle_name;
            }
            set
            {
                Oncustomer_middle_nameChanging(value);
                ReportPropertyChanging("customer_middle_name");
                _customer_middle_name = StructuralObject.SetValidValue(value, true, "customer_middle_name");
                ReportPropertyChanged("customer_middle_name");
                Oncustomer_middle_nameChanged();
            }
        }
        private global::System.String _customer_middle_name;
        partial void Oncustomer_middle_nameChanging(global::System.String value);
        partial void Oncustomer_middle_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_last_name
        {
            get
            {
                return _customer_last_name;
            }
            set
            {
                Oncustomer_last_nameChanging(value);
                ReportPropertyChanging("customer_last_name");
                _customer_last_name = StructuralObject.SetValidValue(value, true, "customer_last_name");
                ReportPropertyChanged("customer_last_name");
                Oncustomer_last_nameChanged();
            }
        }
        private global::System.String _customer_last_name;
        partial void Oncustomer_last_nameChanging(global::System.String value);
        partial void Oncustomer_last_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> customer_title_id
        {
            get
            {
                return _customer_title_id;
            }
            set
            {
                Oncustomer_title_idChanging(value);
                ReportPropertyChanging("customer_title_id");
                _customer_title_id = StructuralObject.SetValidValue(value, "customer_title_id");
                ReportPropertyChanged("customer_title_id");
                Oncustomer_title_idChanged();
            }
        }
        private Nullable<global::System.Int32> _customer_title_id;
        partial void Oncustomer_title_idChanging(Nullable<global::System.Int32> value);
        partial void Oncustomer_title_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_title_name
        {
            get
            {
                return _customer_title_name;
            }
            set
            {
                Oncustomer_title_nameChanging(value);
                ReportPropertyChanging("customer_title_name");
                _customer_title_name = StructuralObject.SetValidValue(value, true, "customer_title_name");
                ReportPropertyChanged("customer_title_name");
                Oncustomer_title_nameChanged();
            }
        }
        private global::System.String _customer_title_name;
        partial void Oncustomer_title_nameChanging(global::System.String value);
        partial void Oncustomer_title_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date_issued
        {
            get
            {
                return _date_issued;
            }
            set
            {
                Ondate_issuedChanging(value);
                ReportPropertyChanging("date_issued");
                _date_issued = StructuralObject.SetValidValue(value, "date_issued");
                ReportPropertyChanged("date_issued");
                Ondate_issuedChanged();
            }
        }
        private Nullable<global::System.DateTime> _date_issued;
        partial void Ondate_issuedChanging(Nullable<global::System.DateTime> value);
        partial void Ondate_issuedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name_on_card
        {
            get
            {
                return _name_on_card;
            }
            set
            {
                Onname_on_cardChanging(value);
                ReportPropertyChanging("name_on_card");
                _name_on_card = StructuralObject.SetValidValue(value, true, "name_on_card");
                ReportPropertyChanged("name_on_card");
                Onname_on_cardChanged();
            }
        }
        private global::System.String _name_on_card;
        partial void Onname_on_cardChanging(global::System.String value);
        partial void Onname_on_cardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value, "user_id");
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private Nullable<global::System.Int64> _user_id;
        partial void Onuser_idChanging(Nullable<global::System.Int64> value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_first_name
        {
            get
            {
                return _user_first_name;
            }
            set
            {
                Onuser_first_nameChanging(value);
                ReportPropertyChanging("user_first_name");
                _user_first_name = StructuralObject.SetValidValue(value, true, "user_first_name");
                ReportPropertyChanged("user_first_name");
                Onuser_first_nameChanged();
            }
        }
        private global::System.String _user_first_name;
        partial void Onuser_first_nameChanging(global::System.String value);
        partial void Onuser_first_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_last_name
        {
            get
            {
                return _user_last_name;
            }
            set
            {
                Onuser_last_nameChanging(value);
                ReportPropertyChanging("user_last_name");
                _user_last_name = StructuralObject.SetValidValue(value, true, "user_last_name");
                ReportPropertyChanged("user_last_name");
                Onuser_last_nameChanged();
            }
        }
        private global::System.String _user_last_name;
        partial void Onuser_last_nameChanging(global::System.String value);
        partial void Onuser_last_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cms_id
        {
            get
            {
                return _cms_id;
            }
            set
            {
                Oncms_idChanging(value);
                ReportPropertyChanging("cms_id");
                _cms_id = StructuralObject.SetValidValue(value, true, "cms_id");
                ReportPropertyChanged("cms_id");
                Oncms_idChanged();
            }
        }
        private global::System.String _cms_id;
        partial void Oncms_idChanging(global::System.String value);
        partial void Oncms_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                OnCustomerIdChanging(value);
                ReportPropertyChanging("CustomerId");
                _CustomerId = StructuralObject.SetValidValue(value, true, "CustomerId");
                ReportPropertyChanged("CustomerId");
                OnCustomerIdChanged();
            }
        }
        private global::System.String _CustomerId;
        partial void OnCustomerIdChanging(global::System.String value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> currency_id
        {
            get
            {
                return _currency_id;
            }
            set
            {
                Oncurrency_idChanging(value);
                ReportPropertyChanging("currency_id");
                _currency_id = StructuralObject.SetValidValue(value, "currency_id");
                ReportPropertyChanged("currency_id");
                Oncurrency_idChanged();
            }
        }
        private Nullable<global::System.Int32> _currency_id;
        partial void Oncurrency_idChanging(Nullable<global::System.Int32> value);
        partial void Oncurrency_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String currency_code
        {
            get
            {
                return _currency_code;
            }
            set
            {
                Oncurrency_codeChanging(value);
                ReportPropertyChanging("currency_code");
                _currency_code = StructuralObject.SetValidValue(value, true, "currency_code");
                ReportPropertyChanged("currency_code");
                Oncurrency_codeChanged();
            }
        }
        private global::System.String _currency_code;
        partial void Oncurrency_codeChanging(global::System.String value);
        partial void Oncurrency_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String iso_4217_numeric_code
        {
            get
            {
                return _iso_4217_numeric_code;
            }
            set
            {
                Oniso_4217_numeric_codeChanging(value);
                ReportPropertyChanging("iso_4217_numeric_code");
                _iso_4217_numeric_code = StructuralObject.SetValidValue(value, true, "iso_4217_numeric_code");
                ReportPropertyChanged("iso_4217_numeric_code");
                Oniso_4217_numeric_codeChanged();
            }
        }
        private global::System.String _iso_4217_numeric_code;
        partial void Oniso_4217_numeric_codeChanging(global::System.String value);
        partial void Oniso_4217_numeric_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> is_base_currency
        {
            get
            {
                return _is_base_currency;
            }
            set
            {
                Onis_base_currencyChanging(value);
                ReportPropertyChanging("is_base_currency");
                _is_base_currency = StructuralObject.SetValidValue(value, "is_base_currency");
                ReportPropertyChanged("is_base_currency");
                Onis_base_currencyChanged();
            }
        }
        private Nullable<global::System.Boolean> _is_base_currency;
        partial void Onis_base_currencyChanging(Nullable<global::System.Boolean> value);
        partial void Onis_base_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usr_field_name_1
        {
            get
            {
                return _usr_field_name_1;
            }
            set
            {
                Onusr_field_name_1Changing(value);
                ReportPropertyChanging("usr_field_name_1");
                _usr_field_name_1 = StructuralObject.SetValidValue(value, true, "usr_field_name_1");
                ReportPropertyChanged("usr_field_name_1");
                Onusr_field_name_1Changed();
            }
        }
        private global::System.String _usr_field_name_1;
        partial void Onusr_field_name_1Changing(global::System.String value);
        partial void Onusr_field_name_1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usr_field_val_1
        {
            get
            {
                return _usr_field_val_1;
            }
            set
            {
                Onusr_field_val_1Changing(value);
                ReportPropertyChanging("usr_field_val_1");
                _usr_field_val_1 = StructuralObject.SetValidValue(value, true, "usr_field_val_1");
                ReportPropertyChanged("usr_field_val_1");
                Onusr_field_val_1Changed();
            }
        }
        private global::System.String _usr_field_val_1;
        partial void Onusr_field_val_1Changing(global::System.String value);
        partial void Onusr_field_val_1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usr_field_name_2
        {
            get
            {
                return _usr_field_name_2;
            }
            set
            {
                Onusr_field_name_2Changing(value);
                ReportPropertyChanging("usr_field_name_2");
                _usr_field_name_2 = StructuralObject.SetValidValue(value, true, "usr_field_name_2");
                ReportPropertyChanged("usr_field_name_2");
                Onusr_field_name_2Changed();
            }
        }
        private global::System.String _usr_field_name_2;
        partial void Onusr_field_name_2Changing(global::System.String value);
        partial void Onusr_field_name_2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usr_field_val_2
        {
            get
            {
                return _usr_field_val_2;
            }
            set
            {
                Onusr_field_val_2Changing(value);
                ReportPropertyChanging("usr_field_val_2");
                _usr_field_val_2 = StructuralObject.SetValidValue(value, true, "usr_field_val_2");
                ReportPropertyChanged("usr_field_val_2");
                Onusr_field_val_2Changed();
            }
        }
        private global::System.String _usr_field_val_2;
        partial void Onusr_field_val_2Changing(global::System.String value);
        partial void Onusr_field_val_2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> resident_id
        {
            get
            {
                return _resident_id;
            }
            set
            {
                Onresident_idChanging(value);
                ReportPropertyChanging("resident_id");
                _resident_id = StructuralObject.SetValidValue(value, "resident_id");
                ReportPropertyChanged("resident_id");
                Onresident_idChanged();
            }
        }
        private Nullable<global::System.Int32> _resident_id;
        partial void Onresident_idChanging(Nullable<global::System.Int32> value);
        partial void Onresident_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_residency_name
        {
            get
            {
                return _customer_residency_name;
            }
            set
            {
                Oncustomer_residency_nameChanging(value);
                ReportPropertyChanging("customer_residency_name");
                _customer_residency_name = StructuralObject.SetValidValue(value, true, "customer_residency_name");
                ReportPropertyChanged("customer_residency_name");
                Oncustomer_residency_nameChanged();
            }
        }
        private global::System.String _customer_residency_name;
        partial void Oncustomer_residency_nameChanging(global::System.String value);
        partial void Oncustomer_residency_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> customer_type_id
        {
            get
            {
                return _customer_type_id;
            }
            set
            {
                Oncustomer_type_idChanging(value);
                ReportPropertyChanging("customer_type_id");
                _customer_type_id = StructuralObject.SetValidValue(value, "customer_type_id");
                ReportPropertyChanged("customer_type_id");
                Oncustomer_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _customer_type_id;
        partial void Oncustomer_type_idChanging(Nullable<global::System.Int32> value);
        partial void Oncustomer_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_type_name
        {
            get
            {
                return _customer_type_name;
            }
            set
            {
                Oncustomer_type_nameChanging(value);
                ReportPropertyChanging("customer_type_name");
                _customer_type_name = StructuralObject.SetValidValue(value, true, "customer_type_name");
                ReportPropertyChanged("customer_type_name");
                Oncustomer_type_nameChanged();
            }
        }
        private global::System.String _customer_type_name;
        partial void Oncustomer_type_nameChanging(global::System.String value);
        partial void Oncustomer_type_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contract_number
        {
            get
            {
                return _contract_number;
            }
            set
            {
                Oncontract_numberChanging(value);
                ReportPropertyChanging("contract_number");
                _contract_number = StructuralObject.SetValidValue(value, true, "contract_number");
                ReportPropertyChanged("contract_number");
                Oncontract_numberChanged();
            }
        }
        private global::System.String _contract_number;
        partial void Oncontract_numberChanging(global::System.String value);
        partial void Oncontract_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String id_number
        {
            get
            {
                return _id_number;
            }
            set
            {
                Onid_numberChanging(value);
                ReportPropertyChanging("id_number");
                _id_number = StructuralObject.SetValidValue(value, true, "id_number");
                ReportPropertyChanged("id_number");
                Onid_numberChanged();
            }
        }
        private global::System.String _id_number;
        partial void Onid_numberChanging(global::System.String value);
        partial void Onid_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contact_number
        {
            get
            {
                return _contact_number;
            }
            set
            {
                Oncontact_numberChanging(value);
                ReportPropertyChanging("contact_number");
                _contact_number = StructuralObject.SetValidValue(value, true, "contact_number");
                ReportPropertyChanged("contact_number");
                Oncontact_numberChanged();
            }
        }
        private global::System.String _contact_number;
        partial void Oncontact_numberChanging(global::System.String value);
        partial void Oncontact_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_account_no
        {
            get
            {
                return _fee_revenue_account_no;
            }
            set
            {
                Onfee_revenue_account_noChanging(value);
                ReportPropertyChanging("fee_revenue_account_no");
                _fee_revenue_account_no = StructuralObject.SetValidValue(value, true, "fee_revenue_account_no");
                ReportPropertyChanged("fee_revenue_account_no");
                Onfee_revenue_account_noChanged();
            }
        }
        private global::System.String _fee_revenue_account_no;
        partial void Onfee_revenue_account_noChanging(global::System.String value);
        partial void Onfee_revenue_account_noChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> fee_revenue_account_type_id
        {
            get
            {
                return _fee_revenue_account_type_id;
            }
            set
            {
                Onfee_revenue_account_type_idChanging(value);
                ReportPropertyChanging("fee_revenue_account_type_id");
                _fee_revenue_account_type_id = StructuralObject.SetValidValue(value, "fee_revenue_account_type_id");
                ReportPropertyChanged("fee_revenue_account_type_id");
                Onfee_revenue_account_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _fee_revenue_account_type_id;
        partial void Onfee_revenue_account_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onfee_revenue_account_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_branch_code
        {
            get
            {
                return _fee_revenue_branch_code;
            }
            set
            {
                Onfee_revenue_branch_codeChanging(value);
                ReportPropertyChanging("fee_revenue_branch_code");
                _fee_revenue_branch_code = StructuralObject.SetValidValue(value, true, "fee_revenue_branch_code");
                ReportPropertyChanged("fee_revenue_branch_code");
                Onfee_revenue_branch_codeChanged();
            }
        }
        private global::System.String _fee_revenue_branch_code;
        partial void Onfee_revenue_branch_codeChanging(global::System.String value);
        partial void Onfee_revenue_branch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_narration_en
        {
            get
            {
                return _fee_revenue_narration_en;
            }
            set
            {
                Onfee_revenue_narration_enChanging(value);
                ReportPropertyChanging("fee_revenue_narration_en");
                _fee_revenue_narration_en = StructuralObject.SetValidValue(value, true, "fee_revenue_narration_en");
                ReportPropertyChanged("fee_revenue_narration_en");
                Onfee_revenue_narration_enChanged();
            }
        }
        private global::System.String _fee_revenue_narration_en;
        partial void Onfee_revenue_narration_enChanging(global::System.String value);
        partial void Onfee_revenue_narration_enChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_narration_fr
        {
            get
            {
                return _fee_revenue_narration_fr;
            }
            set
            {
                Onfee_revenue_narration_frChanging(value);
                ReportPropertyChanging("fee_revenue_narration_fr");
                _fee_revenue_narration_fr = StructuralObject.SetValidValue(value, true, "fee_revenue_narration_fr");
                ReportPropertyChanged("fee_revenue_narration_fr");
                Onfee_revenue_narration_frChanged();
            }
        }
        private global::System.String _fee_revenue_narration_fr;
        partial void Onfee_revenue_narration_frChanging(global::System.String value);
        partial void Onfee_revenue_narration_frChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_narration_pt
        {
            get
            {
                return _fee_revenue_narration_pt;
            }
            set
            {
                Onfee_revenue_narration_ptChanging(value);
                ReportPropertyChanging("fee_revenue_narration_pt");
                _fee_revenue_narration_pt = StructuralObject.SetValidValue(value, true, "fee_revenue_narration_pt");
                ReportPropertyChanged("fee_revenue_narration_pt");
                Onfee_revenue_narration_ptChanged();
            }
        }
        private global::System.String _fee_revenue_narration_pt;
        partial void Onfee_revenue_narration_ptChanging(global::System.String value);
        partial void Onfee_revenue_narration_ptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fee_revenue_narration_es
        {
            get
            {
                return _fee_revenue_narration_es;
            }
            set
            {
                Onfee_revenue_narration_esChanging(value);
                ReportPropertyChanging("fee_revenue_narration_es");
                _fee_revenue_narration_es = StructuralObject.SetValidValue(value, true, "fee_revenue_narration_es");
                ReportPropertyChanged("fee_revenue_narration_es");
                Onfee_revenue_narration_esChanged();
            }
        }
        private global::System.String _fee_revenue_narration_es;
        partial void Onfee_revenue_narration_esChanging(global::System.String value);
        partial void Onfee_revenue_narration_esChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String vat_account_no
        {
            get
            {
                return _vat_account_no;
            }
            set
            {
                Onvat_account_noChanging(value);
                ReportPropertyChanging("vat_account_no");
                _vat_account_no = StructuralObject.SetValidValue(value, true, "vat_account_no");
                ReportPropertyChanged("vat_account_no");
                Onvat_account_noChanged();
            }
        }
        private global::System.String _vat_account_no;
        partial void Onvat_account_noChanging(global::System.String value);
        partial void Onvat_account_noChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> vat_account_type_id
        {
            get
            {
                return _vat_account_type_id;
            }
            set
            {
                Onvat_account_type_idChanging(value);
                ReportPropertyChanging("vat_account_type_id");
                _vat_account_type_id = StructuralObject.SetValidValue(value, "vat_account_type_id");
                ReportPropertyChanged("vat_account_type_id");
                Onvat_account_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _vat_account_type_id;
        partial void Onvat_account_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onvat_account_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String vat_account_branch_code
        {
            get
            {
                return _vat_account_branch_code;
            }
            set
            {
                Onvat_account_branch_codeChanging(value);
                ReportPropertyChanging("vat_account_branch_code");
                _vat_account_branch_code = StructuralObject.SetValidValue(value, true, "vat_account_branch_code");
                ReportPropertyChanged("vat_account_branch_code");
                Onvat_account_branch_codeChanged();
            }
        }
        private global::System.String _vat_account_branch_code;
        partial void Onvat_account_branch_codeChanging(global::System.String value);
        partial void Onvat_account_branch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String vat_narration_en
        {
            get
            {
                return _vat_narration_en;
            }
            set
            {
                Onvat_narration_enChanging(value);
                ReportPropertyChanging("vat_narration_en");
                _vat_narration_en = StructuralObject.SetValidValue(value, true, "vat_narration_en");
                ReportPropertyChanged("vat_narration_en");
                Onvat_narration_enChanged();
            }
        }
        private global::System.String _vat_narration_en;
        partial void Onvat_narration_enChanging(global::System.String value);
        partial void Onvat_narration_enChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String vat_narration_fr
        {
            get
            {
                return _vat_narration_fr;
            }
            set
            {
                Onvat_narration_frChanging(value);
                ReportPropertyChanging("vat_narration_fr");
                _vat_narration_fr = StructuralObject.SetValidValue(value, true, "vat_narration_fr");
                ReportPropertyChanged("vat_narration_fr");
                Onvat_narration_frChanged();
            }
        }
        private global::System.String _vat_narration_fr;
        partial void Onvat_narration_frChanging(global::System.String value);
        partial void Onvat_narration_frChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String vat_narration_pt
        {
            get
            {
                return _vat_narration_pt;
            }
            set
            {
                Onvat_narration_ptChanging(value);
                ReportPropertyChanging("vat_narration_pt");
                _vat_narration_pt = StructuralObject.SetValidValue(value, true, "vat_narration_pt");
                ReportPropertyChanged("vat_narration_pt");
                Onvat_narration_ptChanged();
            }
        }
        private global::System.String _vat_narration_pt;
        partial void Onvat_narration_ptChanging(global::System.String value);
        partial void Onvat_narration_ptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String vat_narration_es
        {
            get
            {
                return _vat_narration_es;
            }
            set
            {
                Onvat_narration_esChanging(value);
                ReportPropertyChanging("vat_narration_es");
                _vat_narration_es = StructuralObject.SetValidValue(value, true, "vat_narration_es");
                ReportPropertyChanged("vat_narration_es");
                Onvat_narration_esChanged();
            }
        }
        private global::System.String _vat_narration_es;
        partial void Onvat_narration_esChanging(global::System.String value);
        partial void Onvat_narration_esChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="uusp_get_cardrequests_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class uusp_get_cardrequests_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new uusp_get_cardrequests_Result object.
        /// </summary>
        /// <param name="product_name">Initial value of the product_name property.</param>
        /// <param name="card_priority_name">Initial value of the card_priority_name property.</param>
        public static uusp_get_cardrequests_Result Createuusp_get_cardrequests_Result(global::System.String product_name, global::System.String card_priority_name)
        {
            uusp_get_cardrequests_Result uusp_get_cardrequests_Result = new uusp_get_cardrequests_Result();
            uusp_get_cardrequests_Result.product_name = product_name;
            uusp_get_cardrequests_Result.card_priority_name = card_priority_name;
            return uusp_get_cardrequests_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String product_name
        {
            get
            {
                return _product_name;
            }
            set
            {
                Onproduct_nameChanging(value);
                ReportPropertyChanging("product_name");
                _product_name = StructuralObject.SetValidValue(value, false, "product_name");
                ReportPropertyChanged("product_name");
                Onproduct_nameChanged();
            }
        }
        private global::System.String _product_name;
        partial void Onproduct_nameChanging(global::System.String value);
        partial void Onproduct_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String card_priority_name
        {
            get
            {
                return _card_priority_name;
            }
            set
            {
                Oncard_priority_nameChanging(value);
                ReportPropertyChanging("card_priority_name");
                _card_priority_name = StructuralObject.SetValidValue(value, false, "card_priority_name");
                ReportPropertyChanged("card_priority_name");
                Oncard_priority_nameChanged();
            }
        }
        private global::System.String _card_priority_name;
        partial void Oncard_priority_nameChanging(global::System.String value);
        partial void Oncard_priority_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cardscount
        {
            get
            {
                return _cardscount;
            }
            set
            {
                OncardscountChanging(value);
                ReportPropertyChanging("cardscount");
                _cardscount = StructuralObject.SetValidValue(value, "cardscount");
                ReportPropertyChanged("cardscount");
                OncardscountChanged();
            }
        }
        private Nullable<global::System.Int32> _cardscount;
        partial void OncardscountChanging(Nullable<global::System.Int32> value);
        partial void OncardscountChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="workstationkeys_result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class workstationkeys_result : ComplexObject
    {
        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String key
        {
            get
            {
                return _key;
            }
            set
            {
                OnkeyChanging(value);
                ReportPropertyChanging("key");
                _key = StructuralObject.SetValidValue(value, true, "key");
                ReportPropertyChanged("key");
                OnkeyChanged();
            }
        }
        private global::System.String _key;
        partial void OnkeyChanging(global::System.String value);
        partial void OnkeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String aData
        {
            get
            {
                return _aData;
            }
            set
            {
                OnaDataChanging(value);
                ReportPropertyChanging("aData");
                _aData = StructuralObject.SetValidValue(value, true, "aData");
                ReportPropertyChanged("aData");
                OnaDataChanged();
            }
        }
        private global::System.String _aData;
        partial void OnaDataChanging(global::System.String value);
        partial void OnaDataChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_databaseModel", Name="ZoneKeyResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ZoneKeyResult : ComplexObject
    {
        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String zone
        {
            get
            {
                return _zone;
            }
            set
            {
                OnzoneChanging(value);
                ReportPropertyChanging("zone");
                _zone = StructuralObject.SetValidValue(value, true, "zone");
                ReportPropertyChanged("zone");
                OnzoneChanged();
            }
        }
        private global::System.String _zone;
        partial void OnzoneChanging(global::System.String value);
        partial void OnzoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String final
        {
            get
            {
                return _final;
            }
            set
            {
                OnfinalChanging(value);
                ReportPropertyChanging("final");
                _final = StructuralObject.SetValidValue(value, true, "final");
                ReportPropertyChanged("final");
                OnfinalChanged();
            }
        }
        private global::System.String _final;
        partial void OnfinalChanging(global::System.String value);
        partial void OnfinalChanged();

        #endregion

    }

    #endregion

}
