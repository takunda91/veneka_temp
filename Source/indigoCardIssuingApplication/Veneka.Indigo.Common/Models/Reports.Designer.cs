//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace Veneka.Indigo.Common.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class indigo_database_ReportsEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new indigo_database_ReportsEntities object using the connection string found in the 'indigo_database_ReportsEntities' section of the application configuration file.
        /// </summary>
        public indigo_database_ReportsEntities() : base("name=indigo_database_ReportsEntities", "indigo_database_ReportsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new indigo_database_ReportsEntities object.
        /// </summary>
        public indigo_database_ReportsEntities(string connectionString) : base(connectionString, "indigo_database_ReportsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new indigo_database_ReportsEntities object.
        /// </summary>
        public indigo_database_ReportsEntities(EntityConnection connection) : base(connection, "indigo_database_ReportsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="user_group_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="user_role_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<auditreport_usergroup_Result> usp_get_brachesperusergroup_auditreport(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> user_group_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> user_role_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_group_idParameter;
            if (user_group_id.HasValue)
            {
                user_group_idParameter = new ObjectParameter("user_group_id", user_group_id);
            }
            else
            {
                user_group_idParameter = new ObjectParameter("user_group_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_role_idParameter;
            if (user_role_id.HasValue)
            {
                user_role_idParameter = new ObjectParameter("user_role_id", user_role_id);
            }
            else
            {
                user_role_idParameter = new ObjectParameter("user_role_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<auditreport_usergroup_Result>("usp_get_brachesperusergroup_auditreport", issuer_idParameter, user_group_idParameter, branch_idParameter, user_role_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="date_from">No Metadata Documentation available.</param>
        /// <param name="date_to">No Metadata Documentation available.</param>
        public ObjectResult<BranchOrderReportResult> usp_branch_order_report(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.DateTime> date_from, Nullable<global::System.DateTime> date_to)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter date_fromParameter;
            if (date_from.HasValue)
            {
                date_fromParameter = new ObjectParameter("date_from", date_from);
            }
            else
            {
                date_fromParameter = new ObjectParameter("date_from", typeof(global::System.DateTime));
            }
    
            ObjectParameter date_toParameter;
            if (date_to.HasValue)
            {
                date_toParameter = new ObjectParameter("date_to", date_to);
            }
            else
            {
                date_toParameter = new ObjectParameter("date_to", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<BranchOrderReportResult>("usp_branch_order_report", issuer_idParameter, branch_idParameter, date_fromParameter, date_toParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="date_from">No Metadata Documentation available.</param>
        /// <param name="date_to">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<CardDispatchReportResult> usp_card_dispatch_report(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.DateTime> date_from, Nullable<global::System.DateTime> date_to, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter date_fromParameter;
            if (date_from.HasValue)
            {
                date_fromParameter = new ObjectParameter("date_from", date_from);
            }
            else
            {
                date_fromParameter = new ObjectParameter("date_from", typeof(global::System.DateTime));
            }
    
            ObjectParameter date_toParameter;
            if (date_to.HasValue)
            {
                date_toParameter = new ObjectParameter("date_to", date_to);
            }
            else
            {
                date_toParameter = new ObjectParameter("date_to", typeof(global::System.DateTime));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<CardDispatchReportResult>("usp_card_dispatch_report", issuer_idParameter, branch_idParameter, date_fromParameter, date_toParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="date_from">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<CardExpiryReportResult> usp_card_expiry_report(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.DateTime> date_from, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter date_fromParameter;
            if (date_from.HasValue)
            {
                date_fromParameter = new ObjectParameter("date_from", date_from);
            }
            else
            {
                date_fromParameter = new ObjectParameter("date_from", typeof(global::System.DateTime));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<CardExpiryReportResult>("usp_card_expiry_report", issuer_idParameter, branch_idParameter, date_fromParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="date_from">No Metadata Documentation available.</param>
        /// <param name="date_to">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<CardProductionReportResult> usp_card_production_report(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.DateTime> date_from, Nullable<global::System.DateTime> date_to, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter date_fromParameter;
            if (date_from.HasValue)
            {
                date_fromParameter = new ObjectParameter("date_from", date_from);
            }
            else
            {
                date_fromParameter = new ObjectParameter("date_from", typeof(global::System.DateTime));
            }
    
            ObjectParameter date_toParameter;
            if (date_to.HasValue)
            {
                date_toParameter = new ObjectParameter("date_to", date_to);
            }
            else
            {
                date_toParameter = new ObjectParameter("date_to", typeof(global::System.DateTime));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<CardProductionReportResult>("usp_card_production_report", issuer_idParameter, branch_idParameter, date_fromParameter, date_toParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<branchcardstock_report_Result> usp_get_branchcardstock_report(Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<branchcardstock_report_Result>("usp_get_branchcardstock_report", branch_idParameter, issuer_idParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<invetorysummaryreport_Result> usp_get_cardinventorysummaryreport(Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<invetorysummaryreport_Result>("usp_get_cardinventorysummaryreport", branch_idParameter, issuer_idParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<branchcardstock_report_Result> usp_get_centercardstock_report(Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<branchcardstock_report_Result>("usp_get_centercardstock_report", branch_idParameter, issuer_idParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="fromdate">No Metadata Documentation available.</param>
        /// <param name="todate">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<feerevenue_report_Result> usp_get_feerevenue_report(Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> language_id, Nullable<global::System.DateTime> fromdate, Nullable<global::System.DateTime> todate, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter fromdateParameter;
            if (fromdate.HasValue)
            {
                fromdateParameter = new ObjectParameter("fromdate", fromdate);
            }
            else
            {
                fromdateParameter = new ObjectParameter("fromdate", typeof(global::System.DateTime));
            }
    
            ObjectParameter todateParameter;
            if (todate.HasValue)
            {
                todateParameter = new ObjectParameter("todate", todate);
            }
            else
            {
                todateParameter = new ObjectParameter("todate", typeof(global::System.DateTime));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<feerevenue_report_Result>("usp_get_feerevenue_report", branch_idParameter, issuer_idParameter, language_idParameter, fromdateParameter, todateParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<invetorysummaryreport_Result> usp_get_invetorysummaryreport(Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<invetorysummaryreport_Result>("usp_get_invetorysummaryreport", branch_idParameter, issuer_idParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="fromdate">No Metadata Documentation available.</param>
        /// <param name="todate">No Metadata Documentation available.</param>
        public ObjectResult<issuecardsummaryreport_Result> usp_get_issuecardsummaryreport(Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> language_id, Nullable<global::System.DateTime> fromdate, Nullable<global::System.DateTime> todate)
        {
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter fromdateParameter;
            if (fromdate.HasValue)
            {
                fromdateParameter = new ObjectParameter("fromdate", fromdate);
            }
            else
            {
                fromdateParameter = new ObjectParameter("fromdate", typeof(global::System.DateTime));
            }
    
            ObjectParameter todateParameter;
            if (todate.HasValue)
            {
                todateParameter = new ObjectParameter("todate", todate);
            }
            else
            {
                todateParameter = new ObjectParameter("todate", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<issuecardsummaryreport_Result>("usp_get_issuecardsummaryreport", branch_idParameter, issuer_idParameter, language_idParameter, fromdateParameter, todateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="isuerid">No Metadata Documentation available.</param>
        /// <param name="fromdate">No Metadata Documentation available.</param>
        /// <param name="todate">No Metadata Documentation available.</param>
        /// <param name="userid">No Metadata Documentation available.</param>
        /// <param name="branchid">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<issuedcardsreport_Result> usp_get_issuedcardsreport(Nullable<global::System.Int32> isuerid, Nullable<global::System.DateTime> fromdate, Nullable<global::System.DateTime> todate, Nullable<global::System.Int32> userid, Nullable<global::System.Int32> branchid, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter isueridParameter;
            if (isuerid.HasValue)
            {
                isueridParameter = new ObjectParameter("isuerid", isuerid);
            }
            else
            {
                isueridParameter = new ObjectParameter("isuerid", typeof(global::System.Int32));
            }
    
            ObjectParameter fromdateParameter;
            if (fromdate.HasValue)
            {
                fromdateParameter = new ObjectParameter("fromdate", fromdate);
            }
            else
            {
                fromdateParameter = new ObjectParameter("fromdate", typeof(global::System.DateTime));
            }
    
            ObjectParameter todateParameter;
            if (todate.HasValue)
            {
                todateParameter = new ObjectParameter("todate", todate);
            }
            else
            {
                todateParameter = new ObjectParameter("todate", typeof(global::System.DateTime));
            }
    
            ObjectParameter useridParameter;
            if (userid.HasValue)
            {
                useridParameter = new ObjectParameter("userid", userid);
            }
            else
            {
                useridParameter = new ObjectParameter("userid", typeof(global::System.Int32));
            }
    
            ObjectParameter branchidParameter;
            if (branchid.HasValue)
            {
                branchidParameter = new ObjectParameter("branchid", branchid);
            }
            else
            {
                branchidParameter = new ObjectParameter("branchid", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<issuedcardsreport_Result>("usp_get_issuedcardsreport", isueridParameter, fromdateParameter, todateParameter, useridParameter, branchidParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="isuerid">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="userid">No Metadata Documentation available.</param>
        /// <param name="branchid">No Metadata Documentation available.</param>
        /// <param name="fromdate">No Metadata Documentation available.</param>
        /// <param name="todate">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<spolicardsreport_Result> usp_get_spoilcardsreport(Nullable<global::System.Int32> isuerid, Nullable<global::System.Int32> language_id, Nullable<global::System.Int32> userid, Nullable<global::System.Int32> branchid, Nullable<global::System.DateTime> fromdate, Nullable<global::System.DateTime> todate, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter isueridParameter;
            if (isuerid.HasValue)
            {
                isueridParameter = new ObjectParameter("isuerid", isuerid);
            }
            else
            {
                isueridParameter = new ObjectParameter("isuerid", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter useridParameter;
            if (userid.HasValue)
            {
                useridParameter = new ObjectParameter("userid", userid);
            }
            else
            {
                useridParameter = new ObjectParameter("userid", typeof(global::System.Int32));
            }
    
            ObjectParameter branchidParameter;
            if (branchid.HasValue)
            {
                branchidParameter = new ObjectParameter("branchid", branchid);
            }
            else
            {
                branchidParameter = new ObjectParameter("branchid", typeof(global::System.Int32));
            }
    
            ObjectParameter fromdateParameter;
            if (fromdate.HasValue)
            {
                fromdateParameter = new ObjectParameter("fromdate", fromdate);
            }
            else
            {
                fromdateParameter = new ObjectParameter("fromdate", typeof(global::System.DateTime));
            }
    
            ObjectParameter todateParameter;
            if (todate.HasValue)
            {
                todateParameter = new ObjectParameter("todate", todate);
            }
            else
            {
                todateParameter = new ObjectParameter("todate", typeof(global::System.DateTime));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<spolicardsreport_Result>("usp_get_spoilcardsreport", isueridParameter, language_idParameter, useridParameter, branchidParameter, fromdateParameter, todateParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="fromdate">No Metadata Documentation available.</param>
        /// <param name="todate">No Metadata Documentation available.</param>
        public ObjectResult<Spoilcardsummaryreport_Result> usp_get_Spoilcardsummaryreport(Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> language_id, Nullable<global::System.DateTime> fromdate, Nullable<global::System.DateTime> todate)
        {
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter fromdateParameter;
            if (fromdate.HasValue)
            {
                fromdateParameter = new ObjectParameter("fromdate", fromdate);
            }
            else
            {
                fromdateParameter = new ObjectParameter("fromdate", typeof(global::System.DateTime));
            }
    
            ObjectParameter todateParameter;
            if (todate.HasValue)
            {
                todateParameter = new ObjectParameter("todate", todate);
            }
            else
            {
                todateParameter = new ObjectParameter("todate", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<Spoilcardsummaryreport_Result>("usp_get_Spoilcardsummaryreport", branch_idParameter, issuer_idParameter, language_idParameter, fromdateParameter, todateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="user_group_id">No Metadata Documentation available.</param>
        /// <param name="user_role_id">No Metadata Documentation available.</param>
        /// <param name="user_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<auditreport_usergroup_Result> usp_get_userbyroles_auditreport(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> user_group_id, Nullable<global::System.Int32> user_role_id, Nullable<global::System.Int32> user_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_group_idParameter;
            if (user_group_id.HasValue)
            {
                user_group_idParameter = new ObjectParameter("user_group_id", user_group_id);
            }
            else
            {
                user_group_idParameter = new ObjectParameter("user_group_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_role_idParameter;
            if (user_role_id.HasValue)
            {
                user_role_idParameter = new ObjectParameter("user_role_id", user_role_id);
            }
            else
            {
                user_role_idParameter = new ObjectParameter("user_role_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<auditreport_usergroup_Result>("usp_get_userbyroles_auditreport", issuer_idParameter, user_group_idParameter, user_role_idParameter, user_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="user_group_id">No Metadata Documentation available.</param>
        /// <param name="user_role_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<auditreport_usergroup_Result> usp_get_usergroup_auditreport(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> user_group_id, Nullable<global::System.Int32> user_role_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_group_idParameter;
            if (user_group_id.HasValue)
            {
                user_group_idParameter = new ObjectParameter("user_group_id", user_group_id);
            }
            else
            {
                user_group_idParameter = new ObjectParameter("user_group_id", typeof(global::System.Int32));
            }
    
            ObjectParameter user_role_idParameter;
            if (user_role_id.HasValue)
            {
                user_role_idParameter = new ObjectParameter("user_role_id", user_role_id);
            }
            else
            {
                user_role_idParameter = new ObjectParameter("user_role_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<auditreport_usergroup_Result>("usp_get_usergroup_auditreport", issuer_idParameter, user_group_idParameter, user_role_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="date_from">No Metadata Documentation available.</param>
        /// <param name="date_to">No Metadata Documentation available.</param>
        public ObjectResult<PinMailerReportResult> usp_pin_mailer_report(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.DateTime> date_from, Nullable<global::System.DateTime> date_to)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter date_fromParameter;
            if (date_from.HasValue)
            {
                date_fromParameter = new ObjectParameter("date_from", date_from);
            }
            else
            {
                date_fromParameter = new ObjectParameter("date_from", typeof(global::System.DateTime));
            }
    
            ObjectParameter date_toParameter;
            if (date_to.HasValue)
            {
                date_toParameter = new ObjectParameter("date_to", date_to);
            }
            else
            {
                date_toParameter = new ObjectParameter("date_to", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<PinMailerReportResult>("usp_pin_mailer_report", issuer_idParameter, branch_idParameter, date_fromParameter, date_toParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="rEPORT_DATE">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<burnrate_report_Result> usp_get_burnrate_report(Nullable<global::System.Int32> branch_id, Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> language_id, Nullable<global::System.DateTime> rEPORT_DATE, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter rEPORT_DATEParameter;
            if (rEPORT_DATE.HasValue)
            {
                rEPORT_DATEParameter = new ObjectParameter("REPORT_DATE", rEPORT_DATE);
            }
            else
            {
                rEPORT_DATEParameter = new ObjectParameter("REPORT_DATE", typeof(global::System.DateTime));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<burnrate_report_Result>("usp_get_burnrate_report", branch_idParameter, issuer_idParameter, language_idParameter, rEPORT_DATEParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="isuerid">No Metadata Documentation available.</param>
        /// <param name="fromdate">No Metadata Documentation available.</param>
        /// <param name="todate">No Metadata Documentation available.</param>
        /// <param name="userid">No Metadata Documentation available.</param>
        /// <param name="branchid">No Metadata Documentation available.</param>
        /// <param name="language_id">No Metadata Documentation available.</param>
        /// <param name="audit_user_id">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<PINReissueReportResult> usp_get_pinreissue_report(Nullable<global::System.Int32> isuerid, Nullable<global::System.DateTime> fromdate, Nullable<global::System.DateTime> todate, Nullable<global::System.Int32> userid, Nullable<global::System.Int32> branchid, Nullable<global::System.Int32> language_id, Nullable<global::System.Int64> audit_user_id, global::System.String audit_workstation)
        {
            ObjectParameter isueridParameter;
            if (isuerid.HasValue)
            {
                isueridParameter = new ObjectParameter("isuerid", isuerid);
            }
            else
            {
                isueridParameter = new ObjectParameter("isuerid", typeof(global::System.Int32));
            }
    
            ObjectParameter fromdateParameter;
            if (fromdate.HasValue)
            {
                fromdateParameter = new ObjectParameter("fromdate", fromdate);
            }
            else
            {
                fromdateParameter = new ObjectParameter("fromdate", typeof(global::System.DateTime));
            }
    
            ObjectParameter todateParameter;
            if (todate.HasValue)
            {
                todateParameter = new ObjectParameter("todate", todate);
            }
            else
            {
                todateParameter = new ObjectParameter("todate", typeof(global::System.DateTime));
            }
    
            ObjectParameter useridParameter;
            if (userid.HasValue)
            {
                useridParameter = new ObjectParameter("userid", userid);
            }
            else
            {
                useridParameter = new ObjectParameter("userid", typeof(global::System.Int32));
            }
    
            ObjectParameter branchidParameter;
            if (branchid.HasValue)
            {
                branchidParameter = new ObjectParameter("branchid", branchid);
            }
            else
            {
                branchidParameter = new ObjectParameter("branchid", typeof(global::System.Int32));
            }
    
            ObjectParameter language_idParameter;
            if (language_id.HasValue)
            {
                language_idParameter = new ObjectParameter("language_id", language_id);
            }
            else
            {
                language_idParameter = new ObjectParameter("language_id", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_user_idParameter;
            if (audit_user_id.HasValue)
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", audit_user_id);
            }
            else
            {
                audit_user_idParameter = new ObjectParameter("audit_user_id", typeof(global::System.Int64));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PINReissueReportResult>("usp_get_pinreissue_report", isueridParameter, fromdateParameter, todateParameter, useridParameter, branchidParameter, language_idParameter, audit_user_idParameter, audit_workstationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="branch_id">No Metadata Documentation available.</param>
        /// <param name="date_from">No Metadata Documentation available.</param>
        /// <param name="date_to">No Metadata Documentation available.</param>
        /// <param name="audit_userid">No Metadata Documentation available.</param>
        /// <param name="audit_workstation">No Metadata Documentation available.</param>
        public ObjectResult<PinMailerReprintReportResult> usp_pin_mailer_reprint_report(Nullable<global::System.Int32> issuer_id, Nullable<global::System.Int32> branch_id, Nullable<global::System.DateTime> date_from, Nullable<global::System.DateTime> date_to, Nullable<global::System.Int32> audit_userid, global::System.String audit_workstation)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id.HasValue)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.Int32));
            }
    
            ObjectParameter branch_idParameter;
            if (branch_id.HasValue)
            {
                branch_idParameter = new ObjectParameter("branch_id", branch_id);
            }
            else
            {
                branch_idParameter = new ObjectParameter("branch_id", typeof(global::System.Int32));
            }
    
            ObjectParameter date_fromParameter;
            if (date_from.HasValue)
            {
                date_fromParameter = new ObjectParameter("date_from", date_from);
            }
            else
            {
                date_fromParameter = new ObjectParameter("date_from", typeof(global::System.DateTime));
            }
    
            ObjectParameter date_toParameter;
            if (date_to.HasValue)
            {
                date_toParameter = new ObjectParameter("date_to", date_to);
            }
            else
            {
                date_toParameter = new ObjectParameter("date_to", typeof(global::System.DateTime));
            }
    
            ObjectParameter audit_useridParameter;
            if (audit_userid.HasValue)
            {
                audit_useridParameter = new ObjectParameter("audit_userid", audit_userid);
            }
            else
            {
                audit_useridParameter = new ObjectParameter("audit_userid", typeof(global::System.Int32));
            }
    
            ObjectParameter audit_workstationParameter;
            if (audit_workstation != null)
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", audit_workstation);
            }
            else
            {
                audit_workstationParameter = new ObjectParameter("audit_workstation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PinMailerReprintReportResult>("usp_pin_mailer_reprint_report", issuer_idParameter, branch_idParameter, date_fromParameter, date_toParameter, audit_useridParameter, audit_workstationParameter);
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_database_ReportsModel", Name="auditreport_usergroup_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class auditreport_usergroup_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new auditreport_usergroup_Result object.
        /// </summary>
        /// <param name="user_group_name">Initial value of the user_group_name property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="mask_screen_pan">Initial value of the mask_screen_pan property.</param>
        /// <param name="mask_report_pan">Initial value of the mask_report_pan property.</param>
        /// <param name="can_read">Initial value of the can_read property.</param>
        /// <param name="can_update">Initial value of the can_update property.</param>
        /// <param name="can_delete">Initial value of the can_delete property.</param>
        /// <param name="all_branch_access">Initial value of the all_branch_access property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        /// <param name="user_role">Initial value of the user_role property.</param>
        /// <param name="can_create">Initial value of the can_create property.</param>
        public static auditreport_usergroup_Result Createauditreport_usergroup_Result(global::System.String user_group_name, global::System.String issuer_name, global::System.Boolean mask_screen_pan, global::System.Boolean mask_report_pan, global::System.Boolean can_read, global::System.Boolean can_update, global::System.Boolean can_delete, global::System.Boolean all_branch_access, global::System.String branch_name, global::System.String user_role, global::System.Boolean can_create)
        {
            auditreport_usergroup_Result auditreport_usergroup_Result = new auditreport_usergroup_Result();
            auditreport_usergroup_Result.user_group_name = user_group_name;
            auditreport_usergroup_Result.issuer_name = issuer_name;
            auditreport_usergroup_Result.mask_screen_pan = mask_screen_pan;
            auditreport_usergroup_Result.mask_report_pan = mask_report_pan;
            auditreport_usergroup_Result.can_read = can_read;
            auditreport_usergroup_Result.can_update = can_update;
            auditreport_usergroup_Result.can_delete = can_delete;
            auditreport_usergroup_Result.all_branch_access = all_branch_access;
            auditreport_usergroup_Result.branch_name = branch_name;
            auditreport_usergroup_Result.user_role = user_role;
            auditreport_usergroup_Result.can_create = can_create;
            return auditreport_usergroup_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_group_name
        {
            get
            {
                return _user_group_name;
            }
            set
            {
                Onuser_group_nameChanging(value);
                ReportPropertyChanging("user_group_name");
                _user_group_name = StructuralObject.SetValidValue(value, false, "user_group_name");
                ReportPropertyChanged("user_group_name");
                Onuser_group_nameChanged();
            }
        }
        private global::System.String _user_group_name;
        partial void Onuser_group_nameChanging(global::System.String value);
        partial void Onuser_group_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean mask_screen_pan
        {
            get
            {
                return _mask_screen_pan;
            }
            set
            {
                Onmask_screen_panChanging(value);
                ReportPropertyChanging("mask_screen_pan");
                _mask_screen_pan = StructuralObject.SetValidValue(value, "mask_screen_pan");
                ReportPropertyChanged("mask_screen_pan");
                Onmask_screen_panChanged();
            }
        }
        private global::System.Boolean _mask_screen_pan;
        partial void Onmask_screen_panChanging(global::System.Boolean value);
        partial void Onmask_screen_panChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean mask_report_pan
        {
            get
            {
                return _mask_report_pan;
            }
            set
            {
                Onmask_report_panChanging(value);
                ReportPropertyChanging("mask_report_pan");
                _mask_report_pan = StructuralObject.SetValidValue(value, "mask_report_pan");
                ReportPropertyChanged("mask_report_pan");
                Onmask_report_panChanged();
            }
        }
        private global::System.Boolean _mask_report_pan;
        partial void Onmask_report_panChanging(global::System.Boolean value);
        partial void Onmask_report_panChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean can_read
        {
            get
            {
                return _can_read;
            }
            set
            {
                Oncan_readChanging(value);
                ReportPropertyChanging("can_read");
                _can_read = StructuralObject.SetValidValue(value, "can_read");
                ReportPropertyChanged("can_read");
                Oncan_readChanged();
            }
        }
        private global::System.Boolean _can_read;
        partial void Oncan_readChanging(global::System.Boolean value);
        partial void Oncan_readChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean can_update
        {
            get
            {
                return _can_update;
            }
            set
            {
                Oncan_updateChanging(value);
                ReportPropertyChanging("can_update");
                _can_update = StructuralObject.SetValidValue(value, "can_update");
                ReportPropertyChanged("can_update");
                Oncan_updateChanged();
            }
        }
        private global::System.Boolean _can_update;
        partial void Oncan_updateChanging(global::System.Boolean value);
        partial void Oncan_updateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean can_delete
        {
            get
            {
                return _can_delete;
            }
            set
            {
                Oncan_deleteChanging(value);
                ReportPropertyChanging("can_delete");
                _can_delete = StructuralObject.SetValidValue(value, "can_delete");
                ReportPropertyChanged("can_delete");
                Oncan_deleteChanged();
            }
        }
        private global::System.Boolean _can_delete;
        partial void Oncan_deleteChanging(global::System.Boolean value);
        partial void Oncan_deleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean all_branch_access
        {
            get
            {
                return _all_branch_access;
            }
            set
            {
                Onall_branch_accessChanging(value);
                ReportPropertyChanging("all_branch_access");
                _all_branch_access = StructuralObject.SetValidValue(value, "all_branch_access");
                ReportPropertyChanged("all_branch_access");
                Onall_branch_accessChanged();
            }
        }
        private global::System.Boolean _all_branch_access;
        partial void Onall_branch_accessChanging(global::System.Boolean value);
        partial void Onall_branch_accessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_role
        {
            get
            {
                return _user_role;
            }
            set
            {
                Onuser_roleChanging(value);
                ReportPropertyChanging("user_role");
                _user_role = StructuralObject.SetValidValue(value, false, "user_role");
                ReportPropertyChanged("user_role");
                Onuser_roleChanged();
            }
        }
        private global::System.String _user_role;
        partial void Onuser_roleChanging(global::System.String value);
        partial void Onuser_roleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean can_create
        {
            get
            {
                return _can_create;
            }
            set
            {
                Oncan_createChanging(value);
                ReportPropertyChanging("can_create");
                _can_create = StructuralObject.SetValidValue(value, "can_create");
                ReportPropertyChanged("can_create");
                Oncan_createChanged();
            }
        }
        private global::System.Boolean _can_create;
        partial void Oncan_createChanging(global::System.Boolean value);
        partial void Oncan_createChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_database_ReportsModel", Name="branchcardstock_report_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class branchcardstock_report_Result : ComplexObject
    {
        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, true, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private Nullable<global::System.Int32> _branch_id;
        partial void Onbranch_idChanging(Nullable<global::System.Int32> value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_request_reference
        {
            get
            {
                return _card_request_reference;
            }
            set
            {
                Oncard_request_referenceChanging(value);
                ReportPropertyChanging("card_request_reference");
                _card_request_reference = StructuralObject.SetValidValue(value, true, "card_request_reference");
                ReportPropertyChanged("card_request_reference");
                Oncard_request_referenceChanged();
            }
        }
        private global::System.String _card_request_reference;
        partial void Oncard_request_referenceChanging(global::System.String value);
        partial void Oncard_request_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> card_expiry_date
        {
            get
            {
                return _card_expiry_date;
            }
            set
            {
                Oncard_expiry_dateChanging(value);
                ReportPropertyChanging("card_expiry_date");
                _card_expiry_date = StructuralObject.SetValidValue(value, "card_expiry_date");
                ReportPropertyChanged("card_expiry_date");
                Oncard_expiry_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _card_expiry_date;
        partial void Oncard_expiry_dateChanging(Nullable<global::System.DateTime> value);
        partial void Oncard_expiry_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> card_production_date
        {
            get
            {
                return _card_production_date;
            }
            set
            {
                Oncard_production_dateChanging(value);
                ReportPropertyChanging("card_production_date");
                _card_production_date = StructuralObject.SetValidValue(value, "card_production_date");
                ReportPropertyChanged("card_production_date");
                Oncard_production_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _card_production_date;
        partial void Oncard_production_dateChanging(Nullable<global::System.DateTime> value);
        partial void Oncard_production_dateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_database_ReportsModel", Name="BranchOrderReportResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class BranchOrderReportResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BranchOrderReportResult object.
        /// </summary>
        /// <param name="dist_batch_reference">Initial value of the dist_batch_reference property.</param>
        /// <param name="date_created">Initial value of the date_created property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        public static BranchOrderReportResult CreateBranchOrderReportResult(global::System.String dist_batch_reference, global::System.DateTime date_created, global::System.String issuer_name, global::System.String issuer_code, global::System.String branch_name, global::System.String branch_code)
        {
            BranchOrderReportResult branchOrderReportResult = new BranchOrderReportResult();
            branchOrderReportResult.dist_batch_reference = dist_batch_reference;
            branchOrderReportResult.date_created = date_created;
            branchOrderReportResult.issuer_name = issuer_name;
            branchOrderReportResult.issuer_code = issuer_code;
            branchOrderReportResult.branch_name = branch_name;
            branchOrderReportResult.branch_code = branch_code;
            return branchOrderReportResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_first_name
        {
            get
            {
                return _customer_first_name;
            }
            set
            {
                Oncustomer_first_nameChanging(value);
                ReportPropertyChanging("customer_first_name");
                _customer_first_name = StructuralObject.SetValidValue(value, true, "customer_first_name");
                ReportPropertyChanged("customer_first_name");
                Oncustomer_first_nameChanged();
            }
        }
        private global::System.String _customer_first_name;
        partial void Oncustomer_first_nameChanging(global::System.String value);
        partial void Oncustomer_first_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_middle_name
        {
            get
            {
                return _customer_middle_name;
            }
            set
            {
                Oncustomer_middle_nameChanging(value);
                ReportPropertyChanging("customer_middle_name");
                _customer_middle_name = StructuralObject.SetValidValue(value, true, "customer_middle_name");
                ReportPropertyChanged("customer_middle_name");
                Oncustomer_middle_nameChanged();
            }
        }
        private global::System.String _customer_middle_name;
        partial void Oncustomer_middle_nameChanging(global::System.String value);
        partial void Oncustomer_middle_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_last_name
        {
            get
            {
                return _customer_last_name;
            }
            set
            {
                Oncustomer_last_nameChanging(value);
                ReportPropertyChanging("customer_last_name");
                _customer_last_name = StructuralObject.SetValidValue(value, true, "customer_last_name");
                ReportPropertyChanged("customer_last_name");
                Oncustomer_last_nameChanged();
            }
        }
        private global::System.String _customer_last_name;
        partial void Oncustomer_last_nameChanging(global::System.String value);
        partial void Oncustomer_last_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_account_number
        {
            get
            {
                return _customer_account_number;
            }
            set
            {
                Oncustomer_account_numberChanging(value);
                ReportPropertyChanging("customer_account_number");
                _customer_account_number = StructuralObject.SetValidValue(value, true, "customer_account_number");
                ReportPropertyChanged("customer_account_number");
                Oncustomer_account_numberChanged();
            }
        }
        private global::System.String _customer_account_number;
        partial void Oncustomer_account_numberChanging(global::System.String value);
        partial void Oncustomer_account_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name_on_card
        {
            get
            {
                return _name_on_card;
            }
            set
            {
                Onname_on_cardChanging(value);
                ReportPropertyChanging("name_on_card");
                _name_on_card = StructuralObject.SetValidValue(value, true, "name_on_card");
                ReportPropertyChanged("name_on_card");
                Onname_on_cardChanged();
            }
        }
        private global::System.String _name_on_card;
        partial void Onname_on_cardChanging(global::System.String value);
        partial void Onname_on_cardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contact_number
        {
            get
            {
                return _contact_number;
            }
            set
            {
                Oncontact_numberChanging(value);
                ReportPropertyChanging("contact_number");
                _contact_number = StructuralObject.SetValidValue(value, true, "contact_number");
                ReportPropertyChanged("contact_number");
                Oncontact_numberChanged();
            }
        }
        private global::System.String _contact_number;
        partial void Oncontact_numberChanging(global::System.String value);
        partial void Oncontact_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String dist_batch_reference
        {
            get
            {
                return _dist_batch_reference;
            }
            set
            {
                Ondist_batch_referenceChanging(value);
                ReportPropertyChanging("dist_batch_reference");
                _dist_batch_reference = StructuralObject.SetValidValue(value, false, "dist_batch_reference");
                ReportPropertyChanged("dist_batch_reference");
                Ondist_batch_referenceChanged();
            }
        }
        private global::System.String _dist_batch_reference;
        partial void Ondist_batch_referenceChanging(global::System.String value);
        partial void Ondist_batch_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date_created
        {
            get
            {
                return _date_created;
            }
            set
            {
                Ondate_createdChanging(value);
                ReportPropertyChanging("date_created");
                _date_created = StructuralObject.SetValidValue(value, "date_created");
                ReportPropertyChanged("date_created");
                Ondate_createdChanged();
            }
        }
        private global::System.DateTime _date_created;
        partial void Ondate_createdChanging(global::System.DateTime value);
        partial void Ondate_createdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_database_ReportsModel", Name="burnrate_report_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class burnrate_report_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new burnrate_report_Result object.
        /// </summary>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        public static burnrate_report_Result Createburnrate_report_Result(global::System.Int32 branch_id, global::System.String branch_code)
        {
            burnrate_report_Result burnrate_report_Result = new burnrate_report_Result();
            burnrate_report_Result.branch_id = branch_id;
            burnrate_report_Result.branch_code = branch_code;
            return burnrate_report_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int32 _branch_id;
        partial void Onbranch_idChanging(global::System.Int32 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> C180_d
        {
            get
            {
                return _C180_d;
            }
            set
            {
                OnC180_dChanging(value);
                ReportPropertyChanging("C180_d");
                _C180_d = StructuralObject.SetValidValue(value, "C180_d");
                ReportPropertyChanged("C180_d");
                OnC180_dChanged();
            }
        }
        private Nullable<global::System.Int32> _C180_d;
        partial void OnC180_dChanging(Nullable<global::System.Int32> value);
        partial void OnC180_dChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> C90_d
        {
            get
            {
                return _C90_d;
            }
            set
            {
                OnC90_dChanging(value);
                ReportPropertyChanging("C90_d");
                _C90_d = StructuralObject.SetValidValue(value, "C90_d");
                ReportPropertyChanged("C90_d");
                OnC90_dChanged();
            }
        }
        private Nullable<global::System.Int32> _C90_d;
        partial void OnC90_dChanging(Nullable<global::System.Int32> value);
        partial void OnC90_dChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Week_1
        {
            get
            {
                return _Week_1;
            }
            set
            {
                OnWeek_1Changing(value);
                ReportPropertyChanging("Week_1");
                _Week_1 = StructuralObject.SetValidValue(value, "Week_1");
                ReportPropertyChanged("Week_1");
                OnWeek_1Changed();
            }
        }
        private Nullable<global::System.Int32> _Week_1;
        partial void OnWeek_1Changing(Nullable<global::System.Int32> value);
        partial void OnWeek_1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Week_2
        {
            get
            {
                return _Week_2;
            }
            set
            {
                OnWeek_2Changing(value);
                ReportPropertyChanging("Week_2");
                _Week_2 = StructuralObject.SetValidValue(value, "Week_2");
                ReportPropertyChanged("Week_2");
                OnWeek_2Changed();
            }
        }
        private Nullable<global::System.Int32> _Week_2;
        partial void OnWeek_2Changing(Nullable<global::System.Int32> value);
        partial void OnWeek_2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Week_3
        {
            get
            {
                return _Week_3;
            }
            set
            {
                OnWeek_3Changing(value);
                ReportPropertyChanging("Week_3");
                _Week_3 = StructuralObject.SetValidValue(value, "Week_3");
                ReportPropertyChanged("Week_3");
                OnWeek_3Changed();
            }
        }
        private Nullable<global::System.Int32> _Week_3;
        partial void OnWeek_3Changing(Nullable<global::System.Int32> value);
        partial void OnWeek_3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Week_4
        {
            get
            {
                return _Week_4;
            }
            set
            {
                OnWeek_4Changing(value);
                ReportPropertyChanging("Week_4");
                _Week_4 = StructuralObject.SetValidValue(value, "Week_4");
                ReportPropertyChanged("Week_4");
                OnWeek_4Changed();
            }
        }
        private Nullable<global::System.Int32> _Week_4;
        partial void OnWeek_4Changing(Nullable<global::System.Int32> value);
        partial void OnWeek_4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Current_Card_Stock
        {
            get
            {
                return _Current_Card_Stock;
            }
            set
            {
                OnCurrent_Card_StockChanging(value);
                ReportPropertyChanging("Current_Card_Stock");
                _Current_Card_Stock = StructuralObject.SetValidValue(value, "Current_Card_Stock");
                ReportPropertyChanged("Current_Card_Stock");
                OnCurrent_Card_StockChanged();
            }
        }
        private Nullable<global::System.Int32> _Current_Card_Stock;
        partial void OnCurrent_Card_StockChanging(Nullable<global::System.Int32> value);
        partial void OnCurrent_Card_StockChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Weeks_remaining
        {
            get
            {
                return _Weeks_remaining;
            }
            set
            {
                OnWeeks_remainingChanging(value);
                ReportPropertyChanging("Weeks_remaining");
                _Weeks_remaining = StructuralObject.SetValidValue(value, "Weeks_remaining");
                ReportPropertyChanged("Weeks_remaining");
                OnWeeks_remainingChanged();
            }
        }
        private Nullable<global::System.Int32> _Weeks_remaining;
        partial void OnWeeks_remainingChanging(Nullable<global::System.Int32> value);
        partial void OnWeeks_remainingChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_database_ReportsModel", Name="CardDispatchReportResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class CardDispatchReportResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CardDispatchReportResult object.
        /// </summary>
        /// <param name="dist_batch_reference">Initial value of the dist_batch_reference property.</param>
        /// <param name="date_created">Initial value of the date_created property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        public static CardDispatchReportResult CreateCardDispatchReportResult(global::System.String dist_batch_reference, global::System.DateTime date_created, global::System.String issuer_name, global::System.String issuer_code, global::System.String branch_name, global::System.String branch_code)
        {
            CardDispatchReportResult cardDispatchReportResult = new CardDispatchReportResult();
            cardDispatchReportResult.dist_batch_reference = dist_batch_reference;
            cardDispatchReportResult.date_created = date_created;
            cardDispatchReportResult.issuer_name = issuer_name;
            cardDispatchReportResult.issuer_code = issuer_code;
            cardDispatchReportResult.branch_name = branch_name;
            cardDispatchReportResult.branch_code = branch_code;
            return cardDispatchReportResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_first_name
        {
            get
            {
                return _customer_first_name;
            }
            set
            {
                Oncustomer_first_nameChanging(value);
                ReportPropertyChanging("customer_first_name");
                _customer_first_name = StructuralObject.SetValidValue(value, true, "customer_first_name");
                ReportPropertyChanged("customer_first_name");
                Oncustomer_first_nameChanged();
            }
        }
        private global::System.String _customer_first_name;
        partial void Oncustomer_first_nameChanging(global::System.String value);
        partial void Oncustomer_first_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_middle_name
        {
            get
            {
                return _customer_middle_name;
            }
            set
            {
                Oncustomer_middle_nameChanging(value);
                ReportPropertyChanging("customer_middle_name");
                _customer_middle_name = StructuralObject.SetValidValue(value, true, "customer_middle_name");
                ReportPropertyChanged("customer_middle_name");
                Oncustomer_middle_nameChanged();
            }
        }
        private global::System.String _customer_middle_name;
        partial void Oncustomer_middle_nameChanging(global::System.String value);
        partial void Oncustomer_middle_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_last_name
        {
            get
            {
                return _customer_last_name;
            }
            set
            {
                Oncustomer_last_nameChanging(value);
                ReportPropertyChanging("customer_last_name");
                _customer_last_name = StructuralObject.SetValidValue(value, true, "customer_last_name");
                ReportPropertyChanged("customer_last_name");
                Oncustomer_last_nameChanged();
            }
        }
        private global::System.String _customer_last_name;
        partial void Oncustomer_last_nameChanging(global::System.String value);
        partial void Oncustomer_last_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_account_number
        {
            get
            {
                return _customer_account_number;
            }
            set
            {
                Oncustomer_account_numberChanging(value);
                ReportPropertyChanging("customer_account_number");
                _customer_account_number = StructuralObject.SetValidValue(value, true, "customer_account_number");
                ReportPropertyChanged("customer_account_number");
                Oncustomer_account_numberChanged();
            }
        }
        private global::System.String _customer_account_number;
        partial void Oncustomer_account_numberChanging(global::System.String value);
        partial void Oncustomer_account_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name_on_card
        {
            get
            {
                return _name_on_card;
            }
            set
            {
                Onname_on_cardChanging(value);
                ReportPropertyChanging("name_on_card");
                _name_on_card = StructuralObject.SetValidValue(value, true, "name_on_card");
                ReportPropertyChanged("name_on_card");
                Onname_on_cardChanged();
            }
        }
        private global::System.String _name_on_card;
        partial void Onname_on_cardChanging(global::System.String value);
        partial void Onname_on_cardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_reference_number
        {
            get
            {
                return _card_reference_number;
            }
            set
            {
                Oncard_reference_numberChanging(value);
                ReportPropertyChanging("card_reference_number");
                _card_reference_number = StructuralObject.SetValidValue(value, true, "card_reference_number");
                ReportPropertyChanged("card_reference_number");
                Oncard_reference_numberChanged();
            }
        }
        private global::System.String _card_reference_number;
        partial void Oncard_reference_numberChanging(global::System.String value);
        partial void Oncard_reference_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String dist_batch_reference
        {
            get
            {
                return _dist_batch_reference;
            }
            set
            {
                Ondist_batch_referenceChanging(value);
                ReportPropertyChanging("dist_batch_reference");
                _dist_batch_reference = StructuralObject.SetValidValue(value, false, "dist_batch_reference");
                ReportPropertyChanged("dist_batch_reference");
                Ondist_batch_referenceChanged();
            }
        }
        private global::System.String _dist_batch_reference;
        partial void Ondist_batch_referenceChanging(global::System.String value);
        partial void Ondist_batch_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date_created
        {
            get
            {
                return _date_created;
            }
            set
            {
                Ondate_createdChanging(value);
                ReportPropertyChanging("date_created");
                _date_created = StructuralObject.SetValidValue(value, "date_created");
                ReportPropertyChanged("date_created");
                Ondate_createdChanged();
            }
        }
        private global::System.DateTime _date_created;
        partial void Ondate_createdChanging(global::System.DateTime value);
        partial void Ondate_createdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_database_ReportsModel", Name="CardExpiryReportResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class CardExpiryReportResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CardExpiryReportResult object.
        /// </summary>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        public static CardExpiryReportResult CreateCardExpiryReportResult(global::System.String issuer_name, global::System.String issuer_code, global::System.String branch_name, global::System.String branch_code)
        {
            CardExpiryReportResult cardExpiryReportResult = new CardExpiryReportResult();
            cardExpiryReportResult.issuer_name = issuer_name;
            cardExpiryReportResult.issuer_code = issuer_code;
            cardExpiryReportResult.branch_name = branch_name;
            cardExpiryReportResult.branch_code = branch_code;
            return cardExpiryReportResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_reference_number
        {
            get
            {
                return _card_reference_number;
            }
            set
            {
                Oncard_reference_numberChanging(value);
                ReportPropertyChanging("card_reference_number");
                _card_reference_number = StructuralObject.SetValidValue(value, true, "card_reference_number");
                ReportPropertyChanged("card_reference_number");
                Oncard_reference_numberChanged();
            }
        }
        private global::System.String _card_reference_number;
        partial void Oncard_reference_numberChanging(global::System.String value);
        partial void Oncard_reference_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> card_expiry_date
        {
            get
            {
                return _card_expiry_date;
            }
            set
            {
                Oncard_expiry_dateChanging(value);
                ReportPropertyChanging("card_expiry_date");
                _card_expiry_date = StructuralObject.SetValidValue(value, "card_expiry_date");
                ReportPropertyChanged("card_expiry_date");
                Oncard_expiry_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _card_expiry_date;
        partial void Oncard_expiry_dateChanging(Nullable<global::System.DateTime> value);
        partial void Oncard_expiry_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_database_ReportsModel", Name="CardProductionReportResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class CardProductionReportResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CardProductionReportResult object.
        /// </summary>
        /// <param name="dist_batch_reference">Initial value of the dist_batch_reference property.</param>
        /// <param name="date_created">Initial value of the date_created property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        public static CardProductionReportResult CreateCardProductionReportResult(global::System.String dist_batch_reference, global::System.DateTime date_created, global::System.String issuer_name, global::System.String issuer_code, global::System.String branch_name, global::System.String branch_code)
        {
            CardProductionReportResult cardProductionReportResult = new CardProductionReportResult();
            cardProductionReportResult.dist_batch_reference = dist_batch_reference;
            cardProductionReportResult.date_created = date_created;
            cardProductionReportResult.issuer_name = issuer_name;
            cardProductionReportResult.issuer_code = issuer_code;
            cardProductionReportResult.branch_name = branch_name;
            cardProductionReportResult.branch_code = branch_code;
            return cardProductionReportResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_first_name
        {
            get
            {
                return _customer_first_name;
            }
            set
            {
                Oncustomer_first_nameChanging(value);
                ReportPropertyChanging("customer_first_name");
                _customer_first_name = StructuralObject.SetValidValue(value, true, "customer_first_name");
                ReportPropertyChanged("customer_first_name");
                Oncustomer_first_nameChanged();
            }
        }
        private global::System.String _customer_first_name;
        partial void Oncustomer_first_nameChanging(global::System.String value);
        partial void Oncustomer_first_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_middle_name
        {
            get
            {
                return _customer_middle_name;
            }
            set
            {
                Oncustomer_middle_nameChanging(value);
                ReportPropertyChanging("customer_middle_name");
                _customer_middle_name = StructuralObject.SetValidValue(value, true, "customer_middle_name");
                ReportPropertyChanged("customer_middle_name");
                Oncustomer_middle_nameChanged();
            }
        }
        private global::System.String _customer_middle_name;
        partial void Oncustomer_middle_nameChanging(global::System.String value);
        partial void Oncustomer_middle_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_last_name
        {
            get
            {
                return _customer_last_name;
            }
            set
            {
                Oncustomer_last_nameChanging(value);
                ReportPropertyChanging("customer_last_name");
                _customer_last_name = StructuralObject.SetValidValue(value, true, "customer_last_name");
                ReportPropertyChanged("customer_last_name");
                Oncustomer_last_nameChanged();
            }
        }
        private global::System.String _customer_last_name;
        partial void Oncustomer_last_nameChanging(global::System.String value);
        partial void Oncustomer_last_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_account_number
        {
            get
            {
                return _customer_account_number;
            }
            set
            {
                Oncustomer_account_numberChanging(value);
                ReportPropertyChanging("customer_account_number");
                _customer_account_number = StructuralObject.SetValidValue(value, true, "customer_account_number");
                ReportPropertyChanged("customer_account_number");
                Oncustomer_account_numberChanged();
            }
        }
        private global::System.String _customer_account_number;
        partial void Oncustomer_account_numberChanging(global::System.String value);
        partial void Oncustomer_account_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name_on_card
        {
            get
            {
                return _name_on_card;
            }
            set
            {
                Onname_on_cardChanging(value);
                ReportPropertyChanging("name_on_card");
                _name_on_card = StructuralObject.SetValidValue(value, true, "name_on_card");
                ReportPropertyChanged("name_on_card");
                Onname_on_cardChanged();
            }
        }
        private global::System.String _name_on_card;
        partial void Onname_on_cardChanging(global::System.String value);
        partial void Onname_on_cardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_reference_number
        {
            get
            {
                return _card_reference_number;
            }
            set
            {
                Oncard_reference_numberChanging(value);
                ReportPropertyChanging("card_reference_number");
                _card_reference_number = StructuralObject.SetValidValue(value, true, "card_reference_number");
                ReportPropertyChanged("card_reference_number");
                Oncard_reference_numberChanged();
            }
        }
        private global::System.String _card_reference_number;
        partial void Oncard_reference_numberChanging(global::System.String value);
        partial void Oncard_reference_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String dist_batch_reference
        {
            get
            {
                return _dist_batch_reference;
            }
            set
            {
                Ondist_batch_referenceChanging(value);
                ReportPropertyChanging("dist_batch_reference");
                _dist_batch_reference = StructuralObject.SetValidValue(value, false, "dist_batch_reference");
                ReportPropertyChanged("dist_batch_reference");
                Ondist_batch_referenceChanged();
            }
        }
        private global::System.String _dist_batch_reference;
        partial void Ondist_batch_referenceChanging(global::System.String value);
        partial void Ondist_batch_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date_created
        {
            get
            {
                return _date_created;
            }
            set
            {
                Ondate_createdChanging(value);
                ReportPropertyChanging("date_created");
                _date_created = StructuralObject.SetValidValue(value, "date_created");
                ReportPropertyChanged("date_created");
                Ondate_createdChanged();
            }
        }
        private global::System.DateTime _date_created;
        partial void Ondate_createdChanging(global::System.DateTime value);
        partial void Ondate_createdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_database_ReportsModel", Name="feerevenue_report_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class feerevenue_report_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new feerevenue_report_Result object.
        /// </summary>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        public static feerevenue_report_Result Createfeerevenue_report_Result(global::System.Int32 branch_id, global::System.String branch_code)
        {
            feerevenue_report_Result feerevenue_report_Result = new feerevenue_report_Result();
            feerevenue_report_Result.branch_id = branch_id;
            feerevenue_report_Result.branch_code = branch_code;
            return feerevenue_report_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int32 _branch_id;
        partial void Onbranch_idChanging(global::System.Int32 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> zero_no_fee
        {
            get
            {
                return _zero_no_fee;
            }
            set
            {
                Onzero_no_feeChanging(value);
                ReportPropertyChanging("zero_no_fee");
                _zero_no_fee = StructuralObject.SetValidValue(value, "zero_no_fee");
                ReportPropertyChanged("zero_no_fee");
                Onzero_no_feeChanged();
            }
        }
        private Nullable<global::System.Int32> _zero_no_fee;
        partial void Onzero_no_feeChanging(Nullable<global::System.Int32> value);
        partial void Onzero_no_feeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> amended_fee
        {
            get
            {
                return _amended_fee;
            }
            set
            {
                Onamended_feeChanging(value);
                ReportPropertyChanging("amended_fee");
                _amended_fee = StructuralObject.SetValidValue(value, "amended_fee");
                ReportPropertyChanged("amended_fee");
                Onamended_feeChanged();
            }
        }
        private Nullable<global::System.Int32> _amended_fee;
        partial void Onamended_feeChanging(Nullable<global::System.Int32> value);
        partial void Onamended_feeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> full_fee
        {
            get
            {
                return _full_fee;
            }
            set
            {
                Onfull_feeChanging(value);
                ReportPropertyChanging("full_fee");
                _full_fee = StructuralObject.SetValidValue(value, "full_fee");
                ReportPropertyChanged("full_fee");
                Onfull_feeChanged();
            }
        }
        private Nullable<global::System.Int32> _full_fee;
        partial void Onfull_feeChanging(Nullable<global::System.Int32> value);
        partial void Onfull_feeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> fee_charged
        {
            get
            {
                return _fee_charged;
            }
            set
            {
                Onfee_chargedChanging(value);
                ReportPropertyChanging("fee_charged");
                _fee_charged = StructuralObject.SetValidValue(value, "fee_charged");
                ReportPropertyChanged("fee_charged");
                Onfee_chargedChanged();
            }
        }
        private Nullable<global::System.Decimal> _fee_charged;
        partial void Onfee_chargedChanging(Nullable<global::System.Decimal> value);
        partial void Onfee_chargedChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_database_ReportsModel", Name="invetorysummaryreport_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class invetorysummaryreport_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new invetorysummaryreport_Result object.
        /// </summary>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="statuses_name">Initial value of the statuses_name property.</param>
        /// <param name="statuses_id">Initial value of the statuses_id property.</param>
        public static invetorysummaryreport_Result Createinvetorysummaryreport_Result(global::System.Int32 issuer_id, global::System.String branch_code, global::System.Int32 branch_id, global::System.String issuer_name, global::System.String statuses_name, global::System.Int32 statuses_id)
        {
            invetorysummaryreport_Result invetorysummaryreport_Result = new invetorysummaryreport_Result();
            invetorysummaryreport_Result.issuer_id = issuer_id;
            invetorysummaryreport_Result.branch_code = branch_code;
            invetorysummaryreport_Result.branch_id = branch_id;
            invetorysummaryreport_Result.issuer_name = issuer_name;
            invetorysummaryreport_Result.statuses_name = statuses_name;
            invetorysummaryreport_Result.statuses_id = statuses_id;
            return invetorysummaryreport_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int32 _branch_id;
        partial void Onbranch_idChanging(global::System.Int32 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CardCount
        {
            get
            {
                return _CardCount;
            }
            set
            {
                OnCardCountChanging(value);
                ReportPropertyChanging("CardCount");
                _CardCount = StructuralObject.SetValidValue(value, "CardCount");
                ReportPropertyChanged("CardCount");
                OnCardCountChanged();
            }
        }
        private Nullable<global::System.Int32> _CardCount;
        partial void OnCardCountChanging(Nullable<global::System.Int32> value);
        partial void OnCardCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String statuses_name
        {
            get
            {
                return _statuses_name;
            }
            set
            {
                Onstatuses_nameChanging(value);
                ReportPropertyChanging("statuses_name");
                _statuses_name = StructuralObject.SetValidValue(value, false, "statuses_name");
                ReportPropertyChanged("statuses_name");
                Onstatuses_nameChanged();
            }
        }
        private global::System.String _statuses_name;
        partial void Onstatuses_nameChanging(global::System.String value);
        partial void Onstatuses_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 statuses_id
        {
            get
            {
                return _statuses_id;
            }
            set
            {
                Onstatuses_idChanging(value);
                ReportPropertyChanging("statuses_id");
                _statuses_id = StructuralObject.SetValidValue(value, "statuses_id");
                ReportPropertyChanged("statuses_id");
                Onstatuses_idChanged();
            }
        }
        private global::System.Int32 _statuses_id;
        partial void Onstatuses_idChanging(global::System.Int32 value);
        partial void Onstatuses_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_database_ReportsModel", Name="issuecardsummaryreport_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class issuecardsummaryreport_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new issuecardsummaryreport_Result object.
        /// </summary>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        /// <param name="card_issue_reason_id">Initial value of the card_issue_reason_id property.</param>
        /// <param name="card_issuer_reason_name">Initial value of the card_issuer_reason_name property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        public static issuecardsummaryreport_Result Createissuecardsummaryreport_Result(global::System.Int32 issuer_id, global::System.String branch_code, global::System.Int32 branch_id, global::System.Int32 card_issue_reason_id, global::System.String card_issuer_reason_name, global::System.String issuer_name)
        {
            issuecardsummaryreport_Result issuecardsummaryreport_Result = new issuecardsummaryreport_Result();
            issuecardsummaryreport_Result.issuer_id = issuer_id;
            issuecardsummaryreport_Result.branch_code = branch_code;
            issuecardsummaryreport_Result.branch_id = branch_id;
            issuecardsummaryreport_Result.card_issue_reason_id = card_issue_reason_id;
            issuecardsummaryreport_Result.card_issuer_reason_name = card_issuer_reason_name;
            issuecardsummaryreport_Result.issuer_name = issuer_name;
            return issuecardsummaryreport_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int32 _branch_id;
        partial void Onbranch_idChanging(global::System.Int32 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_issue_reason_id
        {
            get
            {
                return _card_issue_reason_id;
            }
            set
            {
                Oncard_issue_reason_idChanging(value);
                ReportPropertyChanging("card_issue_reason_id");
                _card_issue_reason_id = StructuralObject.SetValidValue(value, "card_issue_reason_id");
                ReportPropertyChanged("card_issue_reason_id");
                Oncard_issue_reason_idChanged();
            }
        }
        private global::System.Int32 _card_issue_reason_id;
        partial void Oncard_issue_reason_idChanging(global::System.Int32 value);
        partial void Oncard_issue_reason_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String card_issuer_reason_name
        {
            get
            {
                return _card_issuer_reason_name;
            }
            set
            {
                Oncard_issuer_reason_nameChanging(value);
                ReportPropertyChanging("card_issuer_reason_name");
                _card_issuer_reason_name = StructuralObject.SetValidValue(value, false, "card_issuer_reason_name");
                ReportPropertyChanged("card_issuer_reason_name");
                Oncard_issuer_reason_nameChanged();
            }
        }
        private global::System.String _card_issuer_reason_name;
        partial void Oncard_issuer_reason_nameChanging(global::System.String value);
        partial void Oncard_issuer_reason_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CardCount
        {
            get
            {
                return _CardCount;
            }
            set
            {
                OnCardCountChanging(value);
                ReportPropertyChanging("CardCount");
                _CardCount = StructuralObject.SetValidValue(value, "CardCount");
                ReportPropertyChanged("CardCount");
                OnCardCountChanged();
            }
        }
        private Nullable<global::System.Int32> _CardCount;
        partial void OnCardCountChanging(Nullable<global::System.Int32> value);
        partial void OnCardCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_database_ReportsModel", Name="issuedcardsreport_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class issuedcardsreport_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new issuedcardsreport_Result object.
        /// </summary>
        /// <param name="branchCode">Initial value of the BranchCode property.</param>
        /// <param name="original_operator_user_id">Initial value of the original_operator_user_id property.</param>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="cardStatus">Initial value of the CardStatus property.</param>
        /// <param name="issuedDate">Initial value of the IssuedDate property.</param>
        /// <param name="scenario">Initial value of the Scenario property.</param>
        public static issuedcardsreport_Result Createissuedcardsreport_Result(global::System.String branchCode, global::System.Int64 original_operator_user_id, global::System.Int64 user_id, global::System.String cardStatus, global::System.DateTime issuedDate, global::System.String scenario)
        {
            issuedcardsreport_Result issuedcardsreport_Result = new issuedcardsreport_Result();
            issuedcardsreport_Result.BranchCode = branchCode;
            issuedcardsreport_Result.original_operator_user_id = original_operator_user_id;
            issuedcardsreport_Result.user_id = user_id;
            issuedcardsreport_Result.CardStatus = cardStatus;
            issuedcardsreport_Result.IssuedDate = issuedDate;
            issuedcardsreport_Result.Scenario = scenario;
            return issuedcardsreport_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BranchCode
        {
            get
            {
                return _BranchCode;
            }
            set
            {
                OnBranchCodeChanging(value);
                ReportPropertyChanging("BranchCode");
                _BranchCode = StructuralObject.SetValidValue(value, false, "BranchCode");
                ReportPropertyChanged("BranchCode");
                OnBranchCodeChanged();
            }
        }
        private global::System.String _BranchCode;
        partial void OnBranchCodeChanging(global::System.String value);
        partial void OnBranchCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IssuedBy
        {
            get
            {
                return _IssuedBy;
            }
            set
            {
                OnIssuedByChanging(value);
                ReportPropertyChanging("IssuedBy");
                _IssuedBy = StructuralObject.SetValidValue(value, true, "IssuedBy");
                ReportPropertyChanged("IssuedBy");
                OnIssuedByChanged();
            }
        }
        private global::System.String _IssuedBy;
        partial void OnIssuedByChanging(global::System.String value);
        partial void OnIssuedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerNames
        {
            get
            {
                return _CustomerNames;
            }
            set
            {
                OnCustomerNamesChanging(value);
                ReportPropertyChanging("CustomerNames");
                _CustomerNames = StructuralObject.SetValidValue(value, true, "CustomerNames");
                ReportPropertyChanged("CustomerNames");
                OnCustomerNamesChanged();
            }
        }
        private global::System.String _CustomerNames;
        partial void OnCustomerNamesChanging(global::System.String value);
        partial void OnCustomerNamesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customeraccountNumber
        {
            get
            {
                return _customeraccountNumber;
            }
            set
            {
                OncustomeraccountNumberChanging(value);
                ReportPropertyChanging("customeraccountNumber");
                _customeraccountNumber = StructuralObject.SetValidValue(value, true, "customeraccountNumber");
                ReportPropertyChanged("customeraccountNumber");
                OncustomeraccountNumberChanged();
            }
        }
        private global::System.String _customeraccountNumber;
        partial void OncustomeraccountNumberChanging(global::System.String value);
        partial void OncustomeraccountNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 original_operator_user_id
        {
            get
            {
                return _original_operator_user_id;
            }
            set
            {
                Onoriginal_operator_user_idChanging(value);
                ReportPropertyChanging("original_operator_user_id");
                _original_operator_user_id = StructuralObject.SetValidValue(value, "original_operator_user_id");
                ReportPropertyChanged("original_operator_user_id");
                Onoriginal_operator_user_idChanged();
            }
        }
        private global::System.Int64 _original_operator_user_id;
        partial void Onoriginal_operator_user_idChanging(global::System.Int64 value);
        partial void Onoriginal_operator_user_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value, "user_id");
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int64 _user_id;
        partial void Onuser_idChanging(global::System.Int64 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_reference_number
        {
            get
            {
                return _card_reference_number;
            }
            set
            {
                Oncard_reference_numberChanging(value);
                ReportPropertyChanging("card_reference_number");
                _card_reference_number = StructuralObject.SetValidValue(value, true, "card_reference_number");
                ReportPropertyChanged("card_reference_number");
                Oncard_reference_numberChanged();
            }
        }
        private global::System.String _card_reference_number;
        partial void Oncard_reference_numberChanging(global::System.String value);
        partial void Oncard_reference_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CardStatus
        {
            get
            {
                return _CardStatus;
            }
            set
            {
                OnCardStatusChanging(value);
                ReportPropertyChanging("CardStatus");
                _CardStatus = StructuralObject.SetValidValue(value, false, "CardStatus");
                ReportPropertyChanged("CardStatus");
                OnCardStatusChanged();
            }
        }
        private global::System.String _CardStatus;
        partial void OnCardStatusChanging(global::System.String value);
        partial void OnCardStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IssuedDate
        {
            get
            {
                return _IssuedDate;
            }
            set
            {
                OnIssuedDateChanging(value);
                ReportPropertyChanging("IssuedDate");
                _IssuedDate = StructuralObject.SetValidValue(value, "IssuedDate");
                ReportPropertyChanged("IssuedDate");
                OnIssuedDateChanged();
            }
        }
        private global::System.DateTime _IssuedDate;
        partial void OnIssuedDateChanging(global::System.DateTime value);
        partial void OnIssuedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String APPROVER_USER
        {
            get
            {
                return _APPROVER_USER;
            }
            set
            {
                OnAPPROVER_USERChanging(value);
                ReportPropertyChanging("APPROVER_USER");
                _APPROVER_USER = StructuralObject.SetValidValue(value, true, "APPROVER_USER");
                ReportPropertyChanged("APPROVER_USER");
                OnAPPROVER_USERChanged();
            }
        }
        private global::System.String _APPROVER_USER;
        partial void OnAPPROVER_USERChanging(global::System.String value);
        partial void OnAPPROVER_USERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Scenario
        {
            get
            {
                return _Scenario;
            }
            set
            {
                OnScenarioChanging(value);
                ReportPropertyChanging("Scenario");
                _Scenario = StructuralObject.SetValidValue(value, false, "Scenario");
                ReportPropertyChanged("Scenario");
                OnScenarioChanged();
            }
        }
        private global::System.String _Scenario;
        partial void OnScenarioChanging(global::System.String value);
        partial void OnScenarioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> fee_Charged
        {
            get
            {
                return _fee_Charged;
            }
            set
            {
                Onfee_ChargedChanging(value);
                ReportPropertyChanging("fee_Charged");
                _fee_Charged = StructuralObject.SetValidValue(value, "fee_Charged");
                ReportPropertyChanged("fee_Charged");
                Onfee_ChargedChanged();
            }
        }
        private Nullable<global::System.Decimal> _fee_Charged;
        partial void Onfee_ChargedChanging(Nullable<global::System.Decimal> value);
        partial void Onfee_ChargedChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_database_ReportsModel", Name="PinMailerReportResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class PinMailerReportResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PinMailerReportResult object.
        /// </summary>
        /// <param name="pin_batch_reference">Initial value of the pin_batch_reference property.</param>
        /// <param name="date_created">Initial value of the date_created property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        public static PinMailerReportResult CreatePinMailerReportResult(global::System.String pin_batch_reference, global::System.DateTime date_created, global::System.String issuer_name, global::System.String issuer_code, global::System.String branch_name, global::System.String branch_code)
        {
            PinMailerReportResult pinMailerReportResult = new PinMailerReportResult();
            pinMailerReportResult.pin_batch_reference = pin_batch_reference;
            pinMailerReportResult.date_created = date_created;
            pinMailerReportResult.issuer_name = issuer_name;
            pinMailerReportResult.issuer_code = issuer_code;
            pinMailerReportResult.branch_name = branch_name;
            pinMailerReportResult.branch_code = branch_code;
            return pinMailerReportResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_account_number
        {
            get
            {
                return _customer_account_number;
            }
            set
            {
                Oncustomer_account_numberChanging(value);
                ReportPropertyChanging("customer_account_number");
                _customer_account_number = StructuralObject.SetValidValue(value, true, "customer_account_number");
                ReportPropertyChanged("customer_account_number");
                Oncustomer_account_numberChanged();
            }
        }
        private global::System.String _customer_account_number;
        partial void Oncustomer_account_numberChanging(global::System.String value);
        partial void Oncustomer_account_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pin_batch_reference
        {
            get
            {
                return _pin_batch_reference;
            }
            set
            {
                Onpin_batch_referenceChanging(value);
                ReportPropertyChanging("pin_batch_reference");
                _pin_batch_reference = StructuralObject.SetValidValue(value, false, "pin_batch_reference");
                ReportPropertyChanged("pin_batch_reference");
                Onpin_batch_referenceChanged();
            }
        }
        private global::System.String _pin_batch_reference;
        partial void Onpin_batch_referenceChanging(global::System.String value);
        partial void Onpin_batch_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date_created
        {
            get
            {
                return _date_created;
            }
            set
            {
                Ondate_createdChanging(value);
                ReportPropertyChanging("date_created");
                _date_created = StructuralObject.SetValidValue(value, "date_created");
                ReportPropertyChanged("date_created");
                Ondate_createdChanged();
            }
        }
        private global::System.DateTime _date_created;
        partial void Ondate_createdChanging(global::System.DateTime value);
        partial void Ondate_createdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_database_ReportsModel", Name="PinMailerReprintReportResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class PinMailerReprintReportResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PinMailerReprintReportResult object.
        /// </summary>
        /// <param name="pin_batch_reference">Initial value of the pin_batch_reference property.</param>
        /// <param name="date_created">Initial value of the date_created property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="issuer_code">Initial value of the issuer_code property.</param>
        /// <param name="branch_name">Initial value of the branch_name property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        public static PinMailerReprintReportResult CreatePinMailerReprintReportResult(global::System.String pin_batch_reference, global::System.DateTime date_created, global::System.String issuer_name, global::System.String issuer_code, global::System.String branch_name, global::System.String branch_code)
        {
            PinMailerReprintReportResult pinMailerReprintReportResult = new PinMailerReprintReportResult();
            pinMailerReprintReportResult.pin_batch_reference = pin_batch_reference;
            pinMailerReprintReportResult.date_created = date_created;
            pinMailerReprintReportResult.issuer_name = issuer_name;
            pinMailerReprintReportResult.issuer_code = issuer_code;
            pinMailerReprintReportResult.branch_name = branch_name;
            pinMailerReprintReportResult.branch_code = branch_code;
            return pinMailerReprintReportResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_account_number
        {
            get
            {
                return _customer_account_number;
            }
            set
            {
                Oncustomer_account_numberChanging(value);
                ReportPropertyChanging("customer_account_number");
                _customer_account_number = StructuralObject.SetValidValue(value, true, "customer_account_number");
                ReportPropertyChanged("customer_account_number");
                Oncustomer_account_numberChanged();
            }
        }
        private global::System.String _customer_account_number;
        partial void Oncustomer_account_numberChanging(global::System.String value);
        partial void Oncustomer_account_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pin_batch_reference
        {
            get
            {
                return _pin_batch_reference;
            }
            set
            {
                Onpin_batch_referenceChanging(value);
                ReportPropertyChanging("pin_batch_reference");
                _pin_batch_reference = StructuralObject.SetValidValue(value, false, "pin_batch_reference");
                ReportPropertyChanged("pin_batch_reference");
                Onpin_batch_referenceChanged();
            }
        }
        private global::System.String _pin_batch_reference;
        partial void Onpin_batch_referenceChanging(global::System.String value);
        partial void Onpin_batch_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date_created
        {
            get
            {
                return _date_created;
            }
            set
            {
                Ondate_createdChanging(value);
                ReportPropertyChanging("date_created");
                _date_created = StructuralObject.SetValidValue(value, "date_created");
                ReportPropertyChanged("date_created");
                Ondate_createdChanged();
            }
        }
        private global::System.DateTime _date_created;
        partial void Ondate_createdChanging(global::System.DateTime value);
        partial void Ondate_createdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_code
        {
            get
            {
                return _issuer_code;
            }
            set
            {
                Onissuer_codeChanging(value);
                ReportPropertyChanging("issuer_code");
                _issuer_code = StructuralObject.SetValidValue(value, false, "issuer_code");
                ReportPropertyChanged("issuer_code");
                Onissuer_codeChanged();
            }
        }
        private global::System.String _issuer_code;
        partial void Onissuer_codeChanging(global::System.String value);
        partial void Onissuer_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_name
        {
            get
            {
                return _branch_name;
            }
            set
            {
                Onbranch_nameChanging(value);
                ReportPropertyChanging("branch_name");
                _branch_name = StructuralObject.SetValidValue(value, false, "branch_name");
                ReportPropertyChanged("branch_name");
                Onbranch_nameChanged();
            }
        }
        private global::System.String _branch_name;
        partial void Onbranch_nameChanging(global::System.String value);
        partial void Onbranch_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer_name
        {
            get
            {
                return _customer_name;
            }
            set
            {
                Oncustomer_nameChanging(value);
                ReportPropertyChanging("customer_name");
                _customer_name = StructuralObject.SetValidValue(value, true, "customer_name");
                ReportPropertyChanged("customer_name");
                Oncustomer_nameChanged();
            }
        }
        private global::System.String _customer_name;
        partial void Oncustomer_nameChanging(global::System.String value);
        partial void Oncustomer_nameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_database_ReportsModel", Name="PINReissueReportResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class PINReissueReportResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PINReissueReportResult object.
        /// </summary>
        /// <param name="branchcode">Initial value of the branchcode property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        /// <param name="pan">Initial value of the pan property.</param>
        /// <param name="reason">Initial value of the Reason property.</param>
        /// <param name="reIssuedDate">Initial value of the ReIssuedDate property.</param>
        public static PINReissueReportResult CreatePINReissueReportResult(global::System.String branchcode, global::System.String issuer_name, global::System.Byte[] pan, global::System.String reason, global::System.DateTime reIssuedDate)
        {
            PINReissueReportResult pINReissueReportResult = new PINReissueReportResult();
            pINReissueReportResult.branchcode = branchcode;
            pINReissueReportResult.issuer_name = issuer_name;
            pINReissueReportResult.pan = pan;
            pINReissueReportResult.Reason = reason;
            pINReissueReportResult.ReIssuedDate = reIssuedDate;
            return pINReissueReportResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branchcode
        {
            get
            {
                return _branchcode;
            }
            set
            {
                OnbranchcodeChanging(value);
                ReportPropertyChanging("branchcode");
                _branchcode = StructuralObject.SetValidValue(value, false, "branchcode");
                ReportPropertyChanged("branchcode");
                OnbranchcodeChanged();
            }
        }
        private global::System.String _branchcode;
        partial void OnbranchcodeChanging(global::System.String value);
        partial void OnbranchcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] pan
        {
            get
            {
                return StructuralObject.GetValidValue(_pan);
            }
            set
            {
                OnpanChanging(value);
                ReportPropertyChanging("pan");
                _pan = StructuralObject.SetValidValue(value, false, "pan");
                ReportPropertyChanged("pan");
                OnpanChanged();
            }
        }
        private global::System.Byte[] _pan;
        partial void OnpanChanging(global::System.Byte[] value);
        partial void OnpanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cardnumber
        {
            get
            {
                return _cardnumber;
            }
            set
            {
                OncardnumberChanging(value);
                ReportPropertyChanging("cardnumber");
                _cardnumber = StructuralObject.SetValidValue(value, true, "cardnumber");
                ReportPropertyChanged("cardnumber");
                OncardnumberChanged();
            }
        }
        private global::System.String _cardnumber;
        partial void OncardnumberChanging(global::System.String value);
        partial void OncardnumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                OnReasonChanging(value);
                ReportPropertyChanging("Reason");
                _Reason = StructuralObject.SetValidValue(value, false, "Reason");
                ReportPropertyChanged("Reason");
                OnReasonChanged();
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IssuedBy
        {
            get
            {
                return _IssuedBy;
            }
            set
            {
                OnIssuedByChanging(value);
                ReportPropertyChanging("IssuedBy");
                _IssuedBy = StructuralObject.SetValidValue(value, true, "IssuedBy");
                ReportPropertyChanged("IssuedBy");
                OnIssuedByChanged();
            }
        }
        private global::System.String _IssuedBy;
        partial void OnIssuedByChanging(global::System.String value);
        partial void OnIssuedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String APPROVER_USER
        {
            get
            {
                return _APPROVER_USER;
            }
            set
            {
                OnAPPROVER_USERChanging(value);
                ReportPropertyChanging("APPROVER_USER");
                _APPROVER_USER = StructuralObject.SetValidValue(value, true, "APPROVER_USER");
                ReportPropertyChanged("APPROVER_USER");
                OnAPPROVER_USERChanged();
            }
        }
        private global::System.String _APPROVER_USER;
        partial void OnAPPROVER_USERChanging(global::System.String value);
        partial void OnAPPROVER_USERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReIssuedDate
        {
            get
            {
                return _ReIssuedDate;
            }
            set
            {
                OnReIssuedDateChanging(value);
                ReportPropertyChanging("ReIssuedDate");
                _ReIssuedDate = StructuralObject.SetValidValue(value, "ReIssuedDate");
                ReportPropertyChanged("ReIssuedDate");
                OnReIssuedDateChanged();
            }
        }
        private global::System.DateTime _ReIssuedDate;
        partial void OnReIssuedDateChanging(global::System.DateTime value);
        partial void OnReIssuedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> approveddate
        {
            get
            {
                return _approveddate;
            }
            set
            {
                OnapproveddateChanging(value);
                ReportPropertyChanging("approveddate");
                _approveddate = StructuralObject.SetValidValue(value, "approveddate");
                ReportPropertyChanged("approveddate");
                OnapproveddateChanged();
            }
        }
        private Nullable<global::System.DateTime> _approveddate;
        partial void OnapproveddateChanging(Nullable<global::System.DateTime> value);
        partial void OnapproveddateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_database_ReportsModel", Name="Spoilcardsummaryreport_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Spoilcardsummaryreport_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Spoilcardsummaryreport_Result object.
        /// </summary>
        /// <param name="issuer_id">Initial value of the issuer_id property.</param>
        /// <param name="branch_code">Initial value of the branch_code property.</param>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        /// <param name="branch_card_code_id">Initial value of the branch_card_code_id property.</param>
        /// <param name="issuer_name">Initial value of the issuer_name property.</param>
        public static Spoilcardsummaryreport_Result CreateSpoilcardsummaryreport_Result(global::System.Int32 issuer_id, global::System.String branch_code, global::System.Int32 branch_id, global::System.Int32 branch_card_code_id, global::System.String issuer_name)
        {
            Spoilcardsummaryreport_Result spoilcardsummaryreport_Result = new Spoilcardsummaryreport_Result();
            spoilcardsummaryreport_Result.issuer_id = issuer_id;
            spoilcardsummaryreport_Result.branch_code = branch_code;
            spoilcardsummaryreport_Result.branch_id = branch_id;
            spoilcardsummaryreport_Result.branch_card_code_id = branch_card_code_id;
            spoilcardsummaryreport_Result.issuer_name = issuer_name;
            return spoilcardsummaryreport_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, "issuer_id");
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.Int32 _issuer_id;
        partial void Onissuer_idChanging(global::System.Int32 value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_code
        {
            get
            {
                return _branch_code;
            }
            set
            {
                Onbranch_codeChanging(value);
                ReportPropertyChanging("branch_code");
                _branch_code = StructuralObject.SetValidValue(value, false, "branch_code");
                ReportPropertyChanged("branch_code");
                Onbranch_codeChanged();
            }
        }
        private global::System.String _branch_code;
        partial void Onbranch_codeChanging(global::System.String value);
        partial void Onbranch_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value, "branch_id");
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int32 _branch_id;
        partial void Onbranch_idChanging(global::System.Int32 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 branch_card_code_id
        {
            get
            {
                return _branch_card_code_id;
            }
            set
            {
                Onbranch_card_code_idChanging(value);
                ReportPropertyChanging("branch_card_code_id");
                _branch_card_code_id = StructuralObject.SetValidValue(value, "branch_card_code_id");
                ReportPropertyChanged("branch_card_code_id");
                Onbranch_card_code_idChanged();
            }
        }
        private global::System.Int32 _branch_card_code_id;
        partial void Onbranch_card_code_idChanging(global::System.Int32 value);
        partial void Onbranch_card_code_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Spoil_reason_name
        {
            get
            {
                return _Spoil_reason_name;
            }
            set
            {
                OnSpoil_reason_nameChanging(value);
                ReportPropertyChanging("Spoil_reason_name");
                _Spoil_reason_name = StructuralObject.SetValidValue(value, true, "Spoil_reason_name");
                ReportPropertyChanged("Spoil_reason_name");
                OnSpoil_reason_nameChanged();
            }
        }
        private global::System.String _Spoil_reason_name;
        partial void OnSpoil_reason_nameChanging(global::System.String value);
        partial void OnSpoil_reason_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CardCount
        {
            get
            {
                return _CardCount;
            }
            set
            {
                OnCardCountChanging(value);
                ReportPropertyChanging("CardCount");
                _CardCount = StructuralObject.SetValidValue(value, "CardCount");
                ReportPropertyChanged("CardCount");
                OnCardCountChanged();
            }
        }
        private Nullable<global::System.Int32> _CardCount;
        partial void OnCardCountChanging(Nullable<global::System.Int32> value);
        partial void OnCardCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, false, "issuer_name");
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="indigo_database_ReportsModel", Name="spolicardsreport_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class spolicardsreport_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new spolicardsreport_Result object.
        /// </summary>
        /// <param name="branchCode">Initial value of the BranchCode property.</param>
        /// <param name="issuedBy">Initial value of the IssuedBy property.</param>
        /// <param name="cardStatus">Initial value of the CardStatus property.</param>
        /// <param name="issuedDate">Initial value of the IssuedDate property.</param>
        public static spolicardsreport_Result Createspolicardsreport_Result(global::System.String branchCode, global::System.String issuedBy, global::System.String cardStatus, global::System.DateTime issuedDate)
        {
            spolicardsreport_Result spolicardsreport_Result = new spolicardsreport_Result();
            spolicardsreport_Result.BranchCode = branchCode;
            spolicardsreport_Result.IssuedBy = issuedBy;
            spolicardsreport_Result.CardStatus = cardStatus;
            spolicardsreport_Result.IssuedDate = issuedDate;
            return spolicardsreport_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BranchCode
        {
            get
            {
                return _BranchCode;
            }
            set
            {
                OnBranchCodeChanging(value);
                ReportPropertyChanging("BranchCode");
                _BranchCode = StructuralObject.SetValidValue(value, false, "BranchCode");
                ReportPropertyChanged("BranchCode");
                OnBranchCodeChanged();
            }
        }
        private global::System.String _BranchCode;
        partial void OnBranchCodeChanging(global::System.String value);
        partial void OnBranchCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SpoliedBy
        {
            get
            {
                return _SpoliedBy;
            }
            set
            {
                OnSpoliedByChanging(value);
                ReportPropertyChanging("SpoliedBy");
                _SpoliedBy = StructuralObject.SetValidValue(value, true, "SpoliedBy");
                ReportPropertyChanged("SpoliedBy");
                OnSpoliedByChanged();
            }
        }
        private global::System.String _SpoliedBy;
        partial void OnSpoliedByChanging(global::System.String value);
        partial void OnSpoliedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IssuedBy
        {
            get
            {
                return _IssuedBy;
            }
            set
            {
                OnIssuedByChanging(value);
                ReportPropertyChanging("IssuedBy");
                _IssuedBy = StructuralObject.SetValidValue(value, false, "IssuedBy");
                ReportPropertyChanged("IssuedBy");
                OnIssuedByChanged();
            }
        }
        private global::System.String _IssuedBy;
        partial void OnIssuedByChanging(global::System.String value);
        partial void OnIssuedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerNames
        {
            get
            {
                return _CustomerNames;
            }
            set
            {
                OnCustomerNamesChanging(value);
                ReportPropertyChanging("CustomerNames");
                _CustomerNames = StructuralObject.SetValidValue(value, true, "CustomerNames");
                ReportPropertyChanged("CustomerNames");
                OnCustomerNamesChanged();
            }
        }
        private global::System.String _CustomerNames;
        partial void OnCustomerNamesChanging(global::System.String value);
        partial void OnCustomerNamesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customeraccountNumber
        {
            get
            {
                return _customeraccountNumber;
            }
            set
            {
                OncustomeraccountNumberChanging(value);
                ReportPropertyChanging("customeraccountNumber");
                _customeraccountNumber = StructuralObject.SetValidValue(value, true, "customeraccountNumber");
                ReportPropertyChanged("customeraccountNumber");
                OncustomeraccountNumberChanged();
            }
        }
        private global::System.String _customeraccountNumber;
        partial void OncustomeraccountNumberChanging(global::System.String value);
        partial void OncustomeraccountNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cardnumber
        {
            get
            {
                return _cardnumber;
            }
            set
            {
                OncardnumberChanging(value);
                ReportPropertyChanging("cardnumber");
                _cardnumber = StructuralObject.SetValidValue(value, true, "cardnumber");
                ReportPropertyChanged("cardnumber");
                OncardnumberChanged();
            }
        }
        private global::System.String _cardnumber;
        partial void OncardnumberChanging(global::System.String value);
        partial void OncardnumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cardreferencnumber
        {
            get
            {
                return _cardreferencnumber;
            }
            set
            {
                OncardreferencnumberChanging(value);
                ReportPropertyChanging("cardreferencnumber");
                _cardreferencnumber = StructuralObject.SetValidValue(value, true, "cardreferencnumber");
                ReportPropertyChanged("cardreferencnumber");
                OncardreferencnumberChanged();
            }
        }
        private global::System.String _cardreferencnumber;
        partial void OncardreferencnumberChanging(global::System.String value);
        partial void OncardreferencnumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CardStatus
        {
            get
            {
                return _CardStatus;
            }
            set
            {
                OnCardStatusChanging(value);
                ReportPropertyChanging("CardStatus");
                _CardStatus = StructuralObject.SetValidValue(value, false, "CardStatus");
                ReportPropertyChanged("CardStatus");
                OnCardStatusChanged();
            }
        }
        private global::System.String _CardStatus;
        partial void OnCardStatusChanging(global::System.String value);
        partial void OnCardStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IssuedDate
        {
            get
            {
                return _IssuedDate;
            }
            set
            {
                OnIssuedDateChanging(value);
                ReportPropertyChanging("IssuedDate");
                _IssuedDate = StructuralObject.SetValidValue(value, "IssuedDate");
                ReportPropertyChanged("IssuedDate");
                OnIssuedDateChanged();
            }
        }
        private global::System.DateTime _IssuedDate;
        partial void OnIssuedDateChanging(global::System.DateTime value);
        partial void OnIssuedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                OnReasonChanging(value);
                ReportPropertyChanging("Reason");
                _Reason = StructuralObject.SetValidValue(value, true, "Reason");
                ReportPropertyChanged("Reason");
                OnReasonChanged();
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();

        #endregion

    }

    #endregion

}
