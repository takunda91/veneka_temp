<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnCreateResource.Text" xml:space="preserve">
    <value>Créer</value>
  </data>
  <data name="btnPreviewResource.Text" xml:space="preserve">
    <value>Aperçu de la carte</value>
  </data>
  <data name="btnUpdateResource.Text" xml:space="preserve">
    <value>Mettre à jour</value>
  </data>
  <data name="ConfirmDeleteSuccess" xml:space="preserve">
    <value>Carte suprrimée avec succès.</value>
  </data>
  <data name="ConfirmMessage" xml:space="preserve">
    <value>Veuillez vérifier les détails et ensuite cliquer sur 'Confirmer' pour effectuer les changements</value>
  </data>
  <data name="lblErrorMessageResource.Text" xml:space="preserve">
    <value />
  </data>
  <data name="lblfontdropdownResource.Text" xml:space="preserve">
    <value>Choix de Police</value>
  </data>
  <data name="lblfontsizeResource.Text" xml:space="preserve">
    <value>Taille des carctères</value>
  </data>
  <data name="lblInfoMessageResource.Text" xml:space="preserve">
    <value />
  </data>
  <data name="lblIssuerResource.Text" xml:space="preserve">
    <value>Emetteur</value>
  </data>
  <data name="lblnameoncardleftResource.Text" xml:space="preserve">
    <value>Gauche</value>
  </data>
  <data name="lblnameoncardtopResource.Text" xml:space="preserve">
    <value>Haut</value>
  </data>
  <data name="lblproductbinResource.Text" xml:space="preserve">
    <value>BIN du produit</value>
  </data>
  <data name="lblProductCodeResource.Text" xml:space="preserve">
    <value>Code du produit</value>
  </data>
  <data name="lblProductnameResource.Text" xml:space="preserve">
    <value>Nom du produit</value>
  </data>
  <data name="lblProductscreenheadingResource.Text" xml:space="preserve">
    <value>Ecran du produit</value>
  </data>
  <data name="PageResource.Title" xml:space="preserve">
    <value>Ecran du produit</value>
  </data>
  <data name="revnameonleftResource.ErrorMessage" xml:space="preserve">
    <value>Le numéro est obligatire.</value>
  </data>
  <data name="revnameonleftResource.Text" xml:space="preserve">
    <value />
  </data>
  <data name="revproductbinResource.ErrorMessage" xml:space="preserve">
    <value>La longueur doit être de 6 á 9 caratères.</value>
  </data>
  <data name="revproductbinResource.Text" xml:space="preserve">
    <value />
  </data>
  <data name="rfvfondropdownResource.ErrorMessage" xml:space="preserve">
    <value>Famille de la police est obligatoire.</value>
  </data>
  <data name="rfvfondropdownResource.Text" xml:space="preserve">
    <value />
  </data>
  <data name="rfvIssuervalidator.ErrorMessage" xml:space="preserve">
    <value>Nom de l'émetteur est obligatoire.</value>
  </data>
  <data name="rfvnameoncardleft.ErrorMessage" xml:space="preserve">
    <value>Nom sur la carte gauche requis.</value>
  </data>
  <data name="rfvnameontopResource.ErrorMessage" xml:space="preserve">
    <value>Nom sur la carte Top requis.</value>
  </data>
  <data name="rfvproductbinResource.ErrorMessage" xml:space="preserve">
    <value>BIN du produit est obligatoire</value>
  </data>
  <data name="rfvproductbinResource.Text" xml:space="preserve">
    <value />
  </data>
  <data name="rfvProductcodeResource.ErrorMessage" xml:space="preserve">
    <value>Code du produit est oblgatoire.</value>
  </data>
  <data name="rfvProductcodeResource.Text" xml:space="preserve">
    <value />
  </data>
  <data name="rfvProductnameResource.ErrorMessage" xml:space="preserve">
    <value>Nom du produit est oblgatoire.</value>
  </data>
  <data name="rfvProductnameResource.Text" xml:space="preserve">
    <value />
  </data>
  <data name="rgfontsizeResource.ErrorMessage" xml:space="preserve">
    <value>La valeur doit être entre 8 et 18 caractères.</value>
  </data>
  <data name="rgnameoncardleftResource.ErrorMessage" xml:space="preserve">
    <value>La valeur doit être entre 20 et 120 caractères.</value>
  </data>
  <data name="rgnameoncardtopResource.ErrorMessage" xml:space="preserve">
    <value>La valeur doit être entre 20 et 120 caractères.</value>
  </data>
  <data name="rgnameoncardtopResource.Text" xml:space="preserve">
    <value />
  </data>
  <data name="ConfirmDeleteMessage" xml:space="preserve">
    <value>Etes vous sûr de vouloir supprimer cette carte?</value>
  </data>
  <data name="pnlViewResource.GroupingText" xml:space="preserve">
    <value>Coordination de l'impression du nom</value>
  </data>
  <data name="lblCurrencyResource.Text" xml:space="preserve">
    <value>Devise</value>
  </data>
</root>